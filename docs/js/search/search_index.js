var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AddNewHistoryItem.html",[0,0.013,1,2.787]],["body/classes/AddNewHistoryItem.html",[0,0.024,1,3.741,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.455,12,2.249,13,0.245,14,0.474,15,2.721,16,3.57,17,0.766,18,5.71,19,0.613,20,0.005,21,0.51,22,0.572,23,3.881,24,0.393,25,0.588,26,3.962,27,0.274,28,0.495,29,1.813,30,3.036,31,3.036,32,3.036,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.34,41,1.198,42,3.07,43,2.39,44,0.761,45,3.34,46,2.655,47,3.153,48,3.34,49,2.244,50,3.07,51,1.74,52,3.34,53,3.153,54,3.34,55,4.87,56,1.076,57,2.92,58,3.391,59,3.34,60,3.153,61,3.34,62,1.048,63,2.92,64,3.34,65,3.153,66,3.34,67,3.34,68,1.468,69,2.92,70,3.34,71,3.153,72,0.003,73,0.003]],["title/classes/AddNewItem.html",[0,0.013,74,3.391]],["body/classes/AddNewItem.html",[0,0.023,2,0.045,3,0.045,4,0.039,6,1.305,7,1.432,8,0.111,9,0.298,10,2.233,11,1.835,12,2.207,13,0.246,14,0.625,17,0.892,19,0.808,20,0.005,21,0.673,22,0.754,24,0.518,25,0.775,27,0.207,28,0.653,34,0.075,35,0.866,37,1.245,38,1.606,39,2.209,41,1.074,44,0.85,49,3.473,51,2.929,68,1.315,72,0.003,73,0.003,74,5.297,75,5.927,76,3.589,77,3.439,78,6.944,79,5.118,80,5.795,81,5.106,82,4.519,83,2.653,84,2.636,85,3.589,86,3.763,87,4.667,88,3.309,89,1.976,90,5.106,91,3.439,92,4.49,93,2.123,94,1.228,95,5.106,96,4.667]],["title/classes/AddNewProgressItem.html",[0,0.013,97,3.148]],["body/classes/AddNewProgressItem.html",[0,0.023,2,0.04,3,0.04,4,0.035,6,1.324,7,1.443,8,0.1,9,0.277,10,2.135,11,2.542,12,2.224,13,0.245,14,0.562,15,3.229,17,0.844,19,0.727,20,0.005,21,0.605,22,0.679,24,0.466,25,0.698,27,0.301,28,0.588,33,0.779,34,0.076,35,0.887,37,1.12,38,1.445,39,2.265,41,1.354,43,2.239,44,0.753,46,2.487,49,2.537,51,1.967,58,2.63,72,0.003,73,0.003,82,3.302,83,1.939,97,4.651,98,2.977,99,4.324,100,6.456,101,4.605,102,5.01,103,3.095,104,4.009,105,5.221,106,4.339,107,3.896,108,4.339,109,4.028,110,4.339,111,3.896,112,4.339,113,4.028,114,4.339,115,3.302,116,4.339,117,4.028]],["title/interfaces/AddPlaying.html",[118,0.357,119,2.645]],["body/interfaces/AddPlaying.html",[2,0.063,3,0.063,4,0.055,8,0.156,9,0.37,13,0.216,20,0.005,34,0.066,43,2.88,44,0.899,56,1.354,62,1.318,72,0.004,73,0.004,94,1.725,118,0.654,119,4.523,120,6.438,121,6.438,122,5.611,123,4.83,124,2.36]],["title/components/AddPlayingComponent.html",[125,1.195,126,1.852]],["body/components/AddPlayingComponent.html",[0,0.007,2,0.054,3,0.024,4,0.021,6,0.629,7,0.423,8,0.06,9,0.188,11,0.728,13,0.214,14,0.336,17,1.023,19,0.864,20,0.005,21,0.896,22,1.123,24,0.735,25,1.101,27,0.338,28,0.352,33,0.466,34,0.021,35,0.668,36,1.667,37,1.984,41,0.578,43,2.047,44,0.7,56,1.491,62,1.398,68,1.752,72,0.002,73,0.003,83,2.288,94,1.054,119,2.868,122,1.611,123,3.677,124,0.905,125,1.614,126,2.291,127,1.064,128,1.064,129,1.064,130,9.131,131,8.18,132,2.755,133,2.113,134,1.011,135,2.192,136,2.192,137,3.821,138,3.515,139,1.797,140,1.695,141,4.389,142,1.695,143,4.389,144,3.872,145,1.357,146,2.411,147,6.241,148,6.241,149,2.855,150,2.008,151,2.008,152,4.169,153,2.05,154,4.527,155,1.409,156,2.905,157,4.097,158,2.755,159,2.755,160,4.035,161,2.755,162,3.201,163,2.755,164,2.755,165,2.755,166,2.755,167,2.755,168,1.483,169,2.711,170,2.755,171,2.755,172,2.755,173,3.932,174,5.34,175,2.755,176,2.279,177,3.932,178,2.755,179,2.468,180,2.649,181,5.472,182,2.755,183,2.755,184,1.376,185,0.594,186,1.611,187,1.662,188,1.521,189,1.662,190,1.662,191,1.611,192,2.138,193,2.138,194,0.57,195,1.143,196,1.344,197,2.755,198,2.755,199,2.755,200,0.827,201,0.979,202,1.851,203,2.95,204,1.719,205,3.227,206,3.807,207,2.468,208,2.279,209,2.468,210,2.755,211,2.468,212,2.468,213,3.078,214,2.755,215,2.468,216,2.755,217,2.755,218,2.755,219,2.279,220,2.245,221,2.279,222,3.631,223,0.905,224,1.695,225,1.666,226,1.695,227,2.411,228,1.064,229,2.279,230,1.064,231,1.011,232,1.064,233,1.011,234,2.108,235,1.064,236,1.011,237,1.695,238,0.995,239,1.064,240,0.995,241,1.064,242,1.011,243,0.878,244,1.064,245,0.995,246,1.064,247,0.995,248,1.064,249,1.064,250,1.011,251,2.346,252,1.046,253,1.064,254,1.883,255,2.113,256,1.046,257,1.011,258,2.623,259,1.064,260,1.011,261,1.695,262,0.995,263,1.064,264,0.995,265,1.064,266,1.011,267,1.064,268,1.011,269,0.948,270,0.995,271,1.064,272,1.011,273,1.064,274,1.011,275,0.995,276,1.064,277,0.995,278,1.064,279,1.011,280,1.028,281,1.064,282,1.011,283,1.064,284,1.011,285,2.113,286,1.011,287,1.011,288,1.011,289,1.064,290,0.995,291,1.064]],["title/injectables/AddPlayingEffects.html",[292,1.584,293,4.175]],["body/injectables/AddPlayingEffects.html",[0,0.014,2,0.049,3,0.049,4,0.043,7,1.488,8,0.122,9,0.317,13,0.141,14,0.687,17,0.837,19,0.889,20,0.005,21,0.739,22,0.829,24,0.57,25,0.852,27,0.385,34,0.043,38,2.756,72,0.004,73,0.004,185,1.212,190,3.395,191,3.29,192,4.366,193,4.366,200,1.689,201,1.998,292,2.594,293,6.12,294,8.264,295,5.625,296,4.285,297,3.395,298,6.17,299,5.625,300,4.615,301,7.396,302,4.384,303,5.676,304,7.396,305,7.396,306,7.396,307,7.396,308,7.396,309,7.396,310,7.396,311,4.971,312,4.971,313,7.396,314,4.971,315,3.509,316,5.156,317,5.625,318,2.948,319,2.1,320,3.78,321,2.291,322,4.136,323,3.78,324,2.334,325,4.654,326,5.039]],["title/interfaces/AddPlayingInfo.html",[118,0.357,123,3.391]],["body/interfaces/AddPlayingInfo.html",[2,0.061,3,0.061,4,0.054,8,0.153,9,0.366,13,0.23,20,0.005,34,0.065,43,2.118,44,0.896,56,1.796,62,1.749,72,0.004,73,0.004,94,2.202,118,0.648,119,3.697,120,6.319,121,6.319,122,4.126,123,5.734,124,3.131]],["title/interfaces/AddTimerInfo.html",[118,0.357,327,2.581]],["body/interfaces/AddTimerInfo.html",[2,0.059,3,0.059,4,0.052,8,0.146,9,0.355,13,0.241,20,0.005,34,0.064,43,2.815,44,0.905,56,1.814,62,1.766,72,0.004,73,0.004,93,3.889,94,2.385,118,0.635,124,3.162,327,4.235,328,6.017,329,3.072]],["title/components/AppComponent.html",[125,1.195,231,1.852]],["body/components/AppComponent.html",[0,0.01,2,0.033,3,0.033,4,0.029,6,0.802,8,0.082,9,0.24,13,0.167,14,0.462,17,0.891,19,0.597,20,0.005,21,0.877,22,0.557,27,0.362,28,0.483,34,0.029,35,0.371,36,1.707,37,0.92,41,0.793,56,0.713,62,0.694,68,1.715,72,0.003,73,0.003,83,2.365,89,2.164,125,1.865,126,1.388,127,1.461,128,1.461,129,1.461,133,2.577,134,1.388,137,3.942,138,3.626,139,1.242,140,2.164,142,2.164,145,1.732,146,2.849,153,1.242,156,2.951,168,1.363,169,1.412,185,0.815,194,0.783,200,1.136,201,2.37,223,1.242,224,2.164,225,2.127,226,2.164,227,2.849,228,1.461,230,1.461,231,2.708,232,1.461,233,1.388,234,2.435,235,1.461,236,1.388,237,2.164,238,1.366,239,1.461,240,1.366,241,1.461,242,1.388,243,1.205,244,1.461,245,1.366,246,1.461,247,1.366,248,1.461,249,1.461,250,1.388,251,2.71,252,1.436,253,1.461,254,2.296,255,2.577,256,1.436,257,1.388,258,2.978,259,1.461,260,1.388,261,2.164,262,1.366,263,1.461,264,1.366,265,1.461,266,1.388,267,1.461,268,1.388,269,1.301,270,1.366,271,1.461,272,1.388,273,1.461,274,1.388,275,1.366,276,1.461,277,1.366,278,1.461,279,1.388,280,1.412,281,1.461,282,1.388,283,1.461,284,1.388,285,2.577,286,1.388,287,1.388,288,1.388,289,1.461,290,1.366,291,1.461,319,1.412,330,3.782,331,4.348,332,5.602,333,5.602,334,7.376,335,6.103,336,7.376,337,2.781,338,5.325,339,6.672,340,7.376,341,5.736,342,5.602,343,3.928,344,3.782,345,3.782,346,3.75,347,3.782,348,3.129,349,2.935,350,2.36,351,3.782,352,3.388,353,3.129,354,3.782,355,2.935,356,2.935,357,2.445,358,2.36,359,2.781,360,2.542,361,3.388,362,3.782,363,3.782,364,3.782,365,5.602,366,3.782,367,3.782,368,3.782,369,3.782,370,3.782,371,3.782,372,2.282]],["title/modules/AppModule.html",[373,2.133,374,3.916]],["body/modules/AppModule.html",[0,0.01,2,0.034,3,0.034,4,0.03,20,0.005,27,0.414,28,0.736,34,0.044,72,0.003,73,0.003,138,1.397,156,1.573,185,0.847,195,1.632,223,1.292,231,3.46,254,2.878,272,3.07,318,2.061,338,2.454,341,5.621,348,4.77,349,3.052,355,3.052,356,3.052,360,5.379,361,3.523,373,2.437,374,7.959,375,2.234,376,4.119,377,4.119,378,3.844,379,3.523,380,3.523,381,3.523,382,3.523,383,3.523,384,6.15,385,6.15,386,6.15,387,6.15,388,6.15,389,6.15,390,6.15,391,5.218,392,6.15,393,3.479,394,1.312,395,2.3,396,3.933,397,3.372,398,5.765,399,5.765,400,3.933,401,4.239,402,2.758,403,2.643,404,2.891,405,5.765,406,3.933,407,2.758,408,2.643,409,3.933,410,3.523,411,3.933,412,3.254,413,5.765,414,3.523,415,5.765,416,2.172,417,3.933,418,3.254,419,3.933,420,3.933,421,3.523,422,3.933,423,3.933,424,3.933,425,3.933,426,3.933,427,3.933,428,3.933,429,2.891,430,3.933,431,3.254,432,3.933,433,4.475,434,3.523,435,5.765,436,3.933,437,4.239,438,1.728,439,3.933,440,3.933,441,3.933,442,3.933,443,3.933,444,3.933,445,3.933,446,3.933,447,3.933]],["title/modules/AppRoutingModule.html",[373,2.133,384,3.71]],["body/modules/AppRoutingModule.html",[0,0.014,2,0.049,3,0.049,4,0.043,20,0.005,27,0.405,34,0.057,35,0.554,72,0.004,73,0.004,83,1.696,125,2.295,138,2.007,185,1.217,238,2.678,240,2.678,243,1.8,251,1.944,256,2.145,258,2.04,262,2.678,264,2.678,270,2.678,275,2.678,277,2.678,290,2.678,350,3.524,373,2.388,384,5.453,397,4.339,433,5.757,434,5.061,448,5.649,449,5.061,450,6.645,451,4.998,452,5.649,453,5.649,454,5.649,455,5.649,456,5.649,457,5.649,458,5.649,459,5.649,460,8.865,461,2.889,462,4.673,463,5.061,464,5.649,465,5.649,466,5.061,467,5.649,468,5.649,469,5.649]],["title/injectables/AuthEffects.html",[292,1.584,470,4.175]],["body/injectables/AuthEffects.html",[0,0.015,2,0.051,3,0.051,4,0.045,7,1.499,8,0.126,9,0.324,13,0.146,14,0.711,17,0.856,19,0.92,20,0.005,21,0.765,22,0.858,24,0.589,25,0.882,27,0.398,34,0.045,38,3.122,72,0.004,73,0.004,185,1.254,200,1.748,292,2.638,297,3.513,300,4.719,302,3.778,303,4.891,315,3.632,316,5.243,318,3.051,321,2.371,322,4.28,324,2.415,470,6.258,471,5.821,472,4.913,473,5.821,474,6.777,475,6.777,476,6.777,477,7.564,478,7.564,479,7.564,480,7.564,481,7.564,482,5.821,483,4.816,484,4.816,485,5.215,486,5.215,487,4.518,488,4.518,489,4.28,490,4.082,491,3.764,492,5.215,493,4.816,494,5.821]],["title/components/AuthFormComponent.html",[125,1.195,233,1.852]],["body/components/AuthFormComponent.html",[0,0.007,2,0.026,3,0.026,4,0.023,6,0.666,8,0.064,9,0.199,13,0.203,14,0.362,17,1.039,19,0.468,20,0.005,21,0.754,22,0.437,24,0.581,25,0.87,27,0.263,33,0.501,34,0.023,36,1.417,37,0.721,38,2.04,41,0.622,44,0.411,56,0.558,62,0.544,68,1.475,72,0.002,73,0.002,83,2.121,125,1.672,126,1.088,127,1.144,128,1.144,129,1.144,133,2.216,134,1.088,135,2.322,136,2.322,137,3.852,138,3.543,139,0.973,140,1.796,142,1.796,144,4.011,145,1.438,146,2.51,152,3.833,153,0.973,168,1.442,169,2.636,180,2.806,184,1.48,185,0.638,186,1.733,188,1.636,200,0.89,223,0.973,224,1.796,225,1.765,226,1.796,227,2.51,228,1.144,230,1.144,231,1.088,232,1.144,233,2.386,234,2.775,235,1.144,236,1.088,237,1.796,238,1.07,239,1.144,240,1.07,241,1.144,242,1.088,243,0.944,244,1.144,245,1.07,246,1.144,247,1.07,248,1.144,249,1.144,250,1.088,251,2.43,252,1.125,253,1.144,254,1.975,255,2.216,256,1.125,257,1.088,258,2.706,259,1.144,260,1.088,261,1.796,262,1.07,263,1.144,264,1.07,265,1.144,266,1.088,267,1.144,268,1.088,269,1.02,270,1.07,271,1.144,272,1.088,273,1.144,274,1.088,275,1.07,276,1.144,277,1.07,278,1.144,279,1.088,280,1.106,281,1.144,282,1.088,283,1.144,284,1.088,285,2.216,286,1.088,287,1.088,288,1.088,289,1.144,290,1.07,291,1.144,495,9.266,496,8.301,497,2.963,498,4.649,499,4.649,500,4.649,501,6.5,502,6.5,503,6.5,504,6.5,505,6.5,506,4.219,507,4.406,508,7.423,509,7.021,510,5.739,511,5.739,512,5.739,513,5.739,514,2.963,515,5.823,516,2.963,517,4.166,518,2.72,519,2.963,520,2.963,521,2.963,522,4.558,523,8.038,524,2.963,525,2.963,526,2.963,527,2.963,528,2.963,529,2.963,530,2.963,531,2.963,532,2.963,533,5.823,534,2.963,535,3.407,536,5.739,537,3.495,538,5.739,539,3.495,540,5.739,541,2.963,542,2.299,543,2.178,544,2.654,545,2.178,546,2.963,547,2.654,548,2.172,549,4.166,550,2.654,551,2.219,552,2.963,553,2.963,554,2.963,555,2.963,556,2.963,557,2.963,558,2.963,559,2.963]],["title/guards/AuthGuard.html",[433,3.916,560,4.175]],["body/guards/AuthGuard.html",[0,0.015,2,0.051,3,0.051,4,0.045,6,0.843,8,0.128,13,0.191,14,0.719,17,0.862,19,1.203,20,0.005,21,1.001,22,1.123,27,0.383,28,0.751,34,0.045,72,0.004,73,0.004,145,2.356,155,3.01,156,3.792,168,1.825,185,1.268,194,1.849,195,2.442,200,1.767,201,2.091,234,1.82,292,2.391,302,2.939,319,2.197,321,2.397,324,2.442,338,6.019,346,3.711,350,3.672,433,5.913,463,8.004,518,3.443,560,4.869,561,5.886,562,5.886,563,7.618,564,8.933,565,6.934,566,5.886,567,5.886,568,5.886,569,4.127,570,5.886,571,5.886,572,5.886,573,4.568,574,5.273,575,5.886,576,3.443,577,5.886]],["title/modules/AuthModule.html",[373,2.133,385,3.71]],["body/modules/AuthModule.html",[0,0.013,2,0.045,3,0.045,4,0.04,20,0.005,27,0.411,28,0.663,34,0.054,72,0.004,73,0.004,185,1.12,195,2.156,223,1.707,233,3.36,234,1.607,247,3.305,270,3.305,277,3.305,318,2.724,373,2.966,375,2.952,376,4.794,377,3.137,378,4.063,385,7.438,393,4.235,394,1.733,395,3.04,397,4.105,401,5.159,402,3.644,403,3.493,404,3.821,408,3.493,421,4.656,438,3.083,470,5.805,496,4.656,578,4.656,579,4.656,580,4.656,581,4.656,582,6.73,583,6.73,584,5.197,585,4.537,586,3.243,587,5.197,588,5.197,589,4.656,590,4.3,591,4.656,592,5.197,593,5.197,594,5.197,595,5.805,596,5.197,597,5.805,598,5.197,599,4.656,600,5.805,601,7.017,602,5.197,603,5.197,604,4.3]],["title/modules/AuthRoutingModule.html",[373,2.133,582,3.71]],["body/modules/AuthRoutingModule.html",[0,0.018,2,0.062,3,0.062,4,0.055,20,0.005,27,0.387,34,0.066,35,0.7,72,0.004,73,0.004,125,1.693,185,1.54,247,3.106,350,4.459,373,3.021,397,5.031,449,6.404,450,7.706,451,5.568,460,6.404,582,6.324,589,6.404,590,5.914,591,6.404,605,7.148,606,7.148,607,7.148]],["title/injectables/AuthService.html",[292,1.584,583,3.71]],["body/injectables/AuthService.html",[0,0.011,2,0.039,3,0.039,4,0.034,8,0.097,13,0.2,14,0.545,17,1.093,19,1.259,20,0.005,21,1.048,22,1.175,27,0.322,34,0.034,35,0.718,38,2.301,44,0.873,72,0.003,73,0.003,145,1.954,168,2.072,185,0.962,200,1.341,201,3.314,292,2.301,319,1.667,346,4.379,378,3.75,414,4.001,548,3.426,551,4.378,583,4.646,608,4.466,609,4.178,610,7.972,611,4.178,612,3.312,613,6.319,614,7.972,615,7.972,616,7.972,617,7.972,618,6.319,619,4.178,620,4.466,621,7.972,622,4.466,623,6.319,624,4.466,625,8.734,626,4.466,627,4.466,628,6.319,629,4.466,630,6.319,631,4.466,632,4.466,633,4.466,634,4.466,635,4.466,636,6.319,637,4.466,638,4.466,639,3.132,640,4.466,641,4.466,642,4.466,643,4.466,644,4.466,645,4.466,646,4.466,647,4.466,648,4.466,649,4.466,650,7.332,651,4.466,652,4.466]],["title/interfaces/AuthState.html",[118,0.357,653,3.916]],["body/interfaces/AuthState.html",[2,0.05,3,0.05,4,0.044,8,0.123,9,0.319,13,0.187,20,0.005,24,0.576,27,0.356,28,0.726,33,0.962,34,0.077,35,0.962,72,0.004,73,0.004,118,0.587,194,1.72,204,3.547,234,1.758,438,2.498,506,4.18,569,5.223,653,6.447,654,5.093,655,7.426,656,4.985,657,7.442,658,7.442,659,3.904,660,2.98,661,2.98,662,5.093,663,5.093,664,5.093,665,5.093,666,5.093,667,5.093,668,5.093,669,5.093,670,5.093,671,6.673,672,5.093,673,5.093,674,5.093,675,6.673,676,6.673,677,6.673,678,6.673,679,6.673,680,5.093,681,6.673,682,5.093,683,5.093,684,3.986]],["title/classes/Authenticated.html",[0,0.013,472,2.787]],["body/classes/Authenticated.html",[0,0.024,2,0.037,3,0.037,4,0.033,6,1.357,7,1.47,8,0.092,9,0.261,10,2.06,12,2.266,13,0.247,14,1.081,17,0.807,19,0.672,20,0.005,21,0.559,22,0.627,24,0.431,25,0.644,27,0.246,28,0.543,33,0.719,34,0.077,35,0.917,39,1.95,44,0.73,72,0.003,73,0.003,234,2.894,394,1.418,461,3.987,472,5.001,535,2.229,537,2.287,539,2.287,548,3.643,551,3.407,609,3.198,611,3.198,612,3.198,619,3.198,656,4.779,685,2.488,686,4.252,687,6.102,688,4.252,689,3.682,690,3.281,691,3.682,692,3.466,693,3.682,694,4.429,695,3.682,696,3.682,697,4.327,698,4.56,699,3.682,700,3.281,701,3.682]],["title/interfaces/BarGraphConfig.html",[118,0.357,702,3.263]],["body/interfaces/BarGraphConfig.html",[2,0.049,3,0.049,4,0.044,8,0.123,9,0.319,13,0.246,20,0.005,21,0.746,25,0.86,34,0.068,44,0.858,72,0.004,73,0.004,89,3.998,94,2.253,118,0.646,702,4.809,703,4.403,704,5.008,705,6.176,706,6.476,707,6.476,708,6.476,709,6.476,710,6.476,711,6.476,712,6.476,713,6.476,714,6.476,715,3.475,716,3.424,717,4.171,718,3.978,719,4.171,720,3.668,721,4.171,722,4.171,723,4.171,724,4.403,725,3.812,726,4.171,727,4.171,728,4.171]],["title/classes/CancelTimer.html",[0,0.013,729,2.787]],["body/classes/CancelTimer.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.47,8,0.097,9,0.271,11,1.18,12,2.265,13,0.244,14,0.973,16,2.621,17,0.715,20,0.005,24,0.452,25,0.677,27,0.296,28,0.57,29,2.086,33,0.755,34,0.077,35,0.914,39,2.245,41,0.937,43,1.341,44,0.649,46,1.49,56,1.191,62,1.159,68,1.148,72,0.003,73,0.003,84,3.027,94,1.072,124,1.467,149,2.891,150,2.891,151,2.891,220,2.284,296,3.084,327,3.231,329,2.891,394,1.49,729,4.05,730,2.695,731,6.319,732,4.575,733,3.942,734,5.272,735,3.589,736,3.312,737,3.312,738,3.942,739,3.942,740,3.49,741,3.942,742,3.589,743,2.613,744,3.942,745,3.589,746,3.942,747,3.696]],["title/interfaces/CompletedDisplayData.html",[118,0.357,748,3.71]],["body/interfaces/CompletedDisplayData.html",[2,0.06,3,0.06,4,0.053,8,0.149,9,0.36,11,2.562,13,0.211,20,0.005,27,0.34,34,0.065,72,0.004,73,0.004,94,2.019,115,3.523,118,0.642,196,3.363,748,6.185,749,6.172,750,6.172,751,7.07,752,6.27,753,4.777,754,6.528,755,5.065,756,6.172,757,5.065,758,6.172]],["title/interfaces/CompletedItem.html",[118,0.357,751,3.538]],["body/interfaces/CompletedItem.html",[2,0.057,3,0.057,4,0.05,8,0.142,9,0.35,13,0.24,20,0.005,34,0.068,44,0.902,51,2.001,56,1.753,62,1.706,72,0.004,73,0.004,93,3.858,94,2.419,104,3.531,118,0.657,122,3.841,124,3.054,751,5.727,752,4.246,757,6.837,759,5.433,760,2.829,761,5.095]],["title/components/CompletedItemComponent.html",[125,1.195,236,1.852]],["body/components/CompletedItemComponent.html",[0,0.009,2,0.03,3,0.03,4,0.026,6,0.749,8,0.075,9,0.224,11,1.382,13,0.177,14,0.421,17,0.902,19,0.545,20,0.005,21,0.83,22,0.508,24,0.529,25,0.792,27,0.334,28,0.44,33,0.583,34,0.026,36,1.593,37,0.839,41,0.724,43,2.116,44,0.463,49,3.132,56,0.65,62,0.633,68,1.946,72,0.003,73,0.003,83,2.786,91,3.514,125,1.793,126,1.266,127,1.332,128,1.332,129,1.332,133,2.439,134,1.266,135,2.611,136,2.611,137,3.91,138,3.597,139,1.133,140,2.019,142,2.019,144,4.3,145,1.617,146,2.721,152,3.603,153,1.133,155,1.764,156,3.188,157,4.451,168,1.068,169,1.952,180,3.155,184,1.723,185,0.743,186,2.018,187,2.082,188,1.905,189,2.082,194,0.714,195,1.431,200,1.036,201,1.226,202,2.318,203,2.318,204,2.152,206,1.808,220,2.674,221,4.326,222,5.829,223,1.133,224,2.019,225,1.985,226,2.019,227,2.721,228,1.332,229,4.326,230,1.332,231,1.266,232,1.332,233,1.266,234,2.341,235,1.332,236,2.586,237,2.019,238,1.246,239,1.332,240,1.246,241,1.332,242,1.266,243,1.099,244,1.332,245,1.246,246,1.332,247,1.246,248,1.332,249,1.332,250,1.266,251,2.605,252,1.31,253,1.332,254,2.173,255,2.439,256,1.31,257,1.266,258,2.877,259,1.332,260,1.266,261,2.019,262,1.246,263,1.332,264,1.246,265,1.332,266,1.266,267,1.332,268,1.266,269,1.187,270,1.246,271,1.332,272,1.266,273,1.332,274,1.266,275,1.246,276,1.332,277,1.246,278,1.332,279,1.266,280,1.288,281,1.332,282,1.266,283,1.332,284,1.266,285,2.439,286,1.266,287,1.266,288,1.266,289,1.332,290,1.246,291,1.332,487,2.677,488,2.677,748,4.642,762,8.278,763,7.416,764,3.09,765,4.684,766,4.684,767,5.657,768,3.449,769,3.449,770,3.09,771,3.449,772,5.224,773,3.449,774,3.449,775,3.09,776,3.09,777,5.228,778,5.228,779,3.844,780,5.228,781,5.228,782,5.228]],["title/components/CompletionComponent.html",[125,1.195,238,1.822]],["body/components/CompletionComponent.html",[0,0.008,2,0.053,3,0.028,4,0.025,6,0.711,8,0.07,9,0.213,13,0.219,14,0.394,17,1.007,19,0.509,20,0.005,21,0.796,22,0.475,27,0.353,28,0.412,33,0.545,34,0.025,35,0.593,36,1.513,37,0.785,41,0.676,56,1.723,62,0.592,68,1.556,72,0.002,73,0.002,83,2.571,105,2.67,123,4.937,125,1.74,126,1.184,127,1.245,128,1.245,129,1.245,133,2.339,134,1.184,137,3.885,138,3.574,139,1.059,140,1.918,142,1.918,145,1.536,146,2.627,153,1.059,156,3.234,160,2.085,162,4.297,168,1.237,169,1.203,185,0.695,194,1.028,195,1.338,196,1.574,200,0.968,201,1.145,205,3.651,223,1.059,224,1.918,225,1.885,226,1.918,227,2.627,228,1.245,230,1.245,231,1.184,232,1.245,233,1.184,234,2.272,235,1.245,236,1.184,237,1.918,238,2.456,239,1.245,240,1.164,241,1.245,242,1.184,243,1.027,244,1.245,245,1.164,246,1.245,247,1.164,248,1.245,249,1.245,250,1.184,251,2.528,252,1.224,253,1.245,254,2.084,255,2.339,256,1.224,257,1.184,258,2.802,259,1.245,260,1.184,261,1.918,262,1.164,263,1.245,264,1.164,265,1.245,266,1.184,267,1.245,268,1.184,269,1.109,270,1.164,271,1.245,272,1.184,273,1.245,274,1.184,275,1.164,276,1.245,277,1.164,278,1.245,279,1.184,280,1.203,281,1.245,282,1.184,283,1.245,284,1.184,285,2.339,286,1.184,287,1.184,288,1.184,289,1.245,290,1.164,291,1.245,319,1.203,321,1.313,324,1.338,337,2.371,343,3.482,346,4.377,357,2.085,358,2.012,359,2.371,748,5.401,755,5.401,783,3.224,784,4.965,785,4.965,786,6.803,787,6.803,788,5.28,789,6.056,790,4.965,791,3.224,792,3.224,793,3.224,794,3.224,795,3.224,796,3.224,797,3.224,798,3.224,799,3.224,800,2.667,801,2.667,802,2.502,803,2.371,804,3.224,805,3.224,806,3.224,807,2.667,808,3.224,809,3.224,810,3.224,811,2.667,812,5.425,813,2.667,814,3.224,815,3.224,816,3.224,817,6.056,818,3.224,819,3.224,820,4.572,821,3.224,822,4.965,823,4.449,824,3.224,825,3.224,826,3.224,827,2.261,828,3.224,829,3.224,830,3.224,831,3.224,832,3.482,833,3.224,834,3.224,835,3.224,836,3.224,837,3.224,838,3.224,839,3.224]],["title/modules/CompletionModule.html",[373,2.133,386,3.71]],["body/modules/CompletionModule.html",[0,0.012,2,0.042,3,0.042,4,0.037,20,0.005,27,0.412,28,0.621,34,0.051,72,0.003,73,0.003,126,3.294,131,4.359,157,4.825,185,1.048,189,2.936,195,2.018,223,1.598,236,3.294,238,3.241,274,3.294,282,3.294,293,5.55,298,5.802,318,2.55,325,4.025,373,2.836,375,2.763,376,4.633,377,2.936,378,3.926,386,7.482,391,5.599,393,4.048,394,1.623,395,2.846,397,3.924,401,4.932,402,3.412,403,3.27,404,3.577,408,3.27,429,3.577,438,2.947,543,3.577,585,4.337,586,3.036,600,5.55,604,4.025,763,4.359,840,4.359,841,4.359,842,4.865,843,4.359,844,4.865,845,6.01,846,3.776,847,4.025,848,4.025,849,4.865,850,4.865,851,4.865,852,4.865,853,6.708,854,4.865,855,4.359,856,4.865,857,4.865,858,4.865,859,5.55,860,4.865,861,4.932,862,4.865,863,4.865]],["title/interfaces/CompletionState.html",[118,0.357,802,3.916]],["body/interfaces/CompletionState.html",[2,0.048,3,0.048,4,0.042,8,0.12,9,0.313,13,0.205,20,0.005,24,0.56,27,0.366,28,0.706,33,0.936,34,0.076,35,0.957,37,1.346,72,0.004,73,0.004,82,2.829,83,1.661,115,4.639,118,0.579,119,4.754,123,5.508,139,2.403,194,1.805,438,2.43,659,3.834,660,2.899,661,2.899,788,4.293,801,6.052,802,6.362,832,3.879,864,4.956,865,6.852,866,7.343,867,7.343,868,7.343,869,4.956,870,4.956,871,4.956,872,4.956,873,4.956,874,4.956,875,4.956,876,4.956,877,4.956,878,4.956,879,4.956,880,4.956,881,7.343,882,4.956,883,4.956,884,4.956,885,4.956,886,4.956,887,6.554,888,4.956,889,4.956,890,6.554,891,4.956,892,6.554,893,4.956,894,4.956]],["title/classes/CustomRouterStateSerializer.html",[0,0.013,437,3.71]],["body/classes/CustomRouterStateSerializer.html",[0,0.019,2,0.049,3,0.049,4,0.043,6,1.055,8,0.121,13,0.14,17,0.632,19,0.883,20,0.005,21,0.735,22,0.824,24,0.566,27,0.368,28,0.713,33,0.946,34,0.072,35,0.916,44,0.495,72,0.004,73,0.004,118,0.521,145,2.278,156,2.236,168,1.504,194,1.705,331,4.338,338,4.595,350,3.487,407,3.919,437,5.416,438,2.456,451,4.972,565,6.797,573,6.394,659,3.861,660,2.93,661,2.93,895,4.625,896,7.366,897,6.094,898,5.59,899,6.094,900,6.394,901,7.732,902,4.338,903,4.625,904,4.625,905,6.117,906,4.625,907,4.625,908,4.625,909,4.625,910,4.625,911,4.625,912,6.094,913,4.625,914,6.094,915,6.816,916,4.625,917,4.625,918,6.094]],["title/components/DashboardComponent.html",[125,1.195,240,1.822]],["body/components/DashboardComponent.html",[0,0.007,2,0.024,3,0.024,4,0.021,6,0.636,8,0.061,9,0.19,13,0.215,14,0.341,17,0.986,19,0.441,20,0.005,21,0.726,22,0.411,24,0.695,25,1.04,27,0.339,28,0.356,33,0.472,34,0.021,35,0.616,36,1.352,37,0.679,41,0.586,56,1.04,62,0.512,68,1.969,72,0.002,73,0.002,83,2.061,125,1.625,126,1.025,127,1.078,128,1.078,129,1.078,133,2.132,134,1.025,137,3.827,138,3.521,139,2.254,140,1.714,142,1.714,145,1.372,146,2.429,153,1.813,156,3.064,168,0.57,169,1.042,185,0.602,194,0.918,195,1.158,200,0.838,201,2.721,223,0.917,224,1.714,225,1.684,226,1.714,227,2.429,228,1.078,230,1.078,231,1.025,232,1.078,233,1.025,234,2.122,235,1.078,236,1.025,237,1.714,238,1.008,239,1.078,240,2.271,241,1.078,242,1.025,243,0.89,244,1.078,245,1.008,246,1.078,247,1.008,248,1.078,249,1.078,250,1.025,251,2.636,252,1.06,253,1.078,254,1.9,255,2.132,256,1.06,257,1.025,258,2.638,259,1.078,260,1.025,261,1.714,262,1.008,263,1.078,264,1.008,265,1.078,266,1.025,267,1.078,268,1.025,269,0.961,270,1.008,271,1.078,272,1.025,273,1.078,274,1.025,275,1.008,276,1.078,277,1.008,278,1.078,279,1.025,280,1.042,281,1.078,282,1.025,283,1.078,284,1.025,285,2.132,286,1.025,287,1.025,288,1.025,289,1.078,290,1.008,291,1.078,319,1.042,321,1.137,324,1.158,337,2.053,343,3.111,346,4.023,357,1.805,358,1.742,359,2.053,518,4.909,576,5.098,702,5.425,705,5.574,706,3.262,707,3.262,708,3.262,709,3.262,710,3.262,711,3.262,712,3.262,713,5.372,714,5.372,716,1.685,717,3.262,718,3.111,719,3.262,720,2.869,721,3.262,722,3.262,723,3.262,725,4.227,726,3.262,727,3.262,728,3.262,811,2.31,813,2.31,919,2.792,920,4.437,921,4.437,922,6.289,923,6.289,924,5.326,925,6.289,926,6.289,927,6.289,928,6.289,929,6.289,930,4.066,931,5.521,932,2.792,933,2.792,934,6.289,935,4.946,936,4.437,937,3.671,938,2.792,939,6.289,940,6.289,941,2.792,942,2.792,943,2.792,944,4.437,945,2.792,946,2.792,947,2.792,948,2.792,949,2.792,950,2.792,951,2.31,952,2.167,953,2.31,954,2.792,955,2.792,956,2.792,957,2.792,958,2.792,959,2.792,960,5.203,961,2.792,962,2.792,963,2.501,964,2.792,965,2.792,966,2.792,967,2.792,968,2.792,969,2.792,970,2.792,971,2.792,972,2.792,973,2.792,974,2.792,975,2.792,976,2.053,977,2.792,978,1.542,979,2.792,980,2.792]],["title/modules/DashboardModule.html",[373,2.133,387,3.71]],["body/modules/DashboardModule.html",[0,0.013,2,0.047,3,0.047,4,0.041,20,0.005,27,0.406,28,0.682,34,0.055,56,1.347,62,1.312,72,0.004,73,0.004,153,2.348,185,1.151,195,2.217,223,1.755,240,3.332,250,3.387,254,3.175,284,3.387,286,3.387,287,3.387,373,3.022,375,3.035,376,4.862,377,3.225,378,2.732,387,7.513,391,5.757,393,4.314,394,1.782,395,3.126,397,4.182,408,3.591,429,3.929,431,4.421,438,3.141,585,4.622,586,3.334,981,4.787,982,4.787,983,5.343,984,5.343,985,7.149,986,4.421,987,4.421,988,5.343,989,4.787,990,5.343,991,8.056,992,6.253,993,8.056,994,5.343,995,5.343]],["title/interfaces/DashboardState.html",[118,0.357,952,3.916]],["body/interfaces/DashboardState.html",[2,0.054,3,0.054,4,0.048,8,0.135,9,0.338,13,0.156,20,0.005,24,0.629,27,0.35,28,0.793,34,0.076,35,0.942,72,0.004,73,0.004,118,0.613,153,2.591,168,1.269,194,1.633,251,2.139,438,2.73,659,4.135,660,3.257,661,3.257,951,6.527,952,6.727,960,5.142,996,5.568,997,6.094,998,7.765,999,5.568,1000,4.824,1001,5.568,1002,5.568,1003,5.568,1004,5.568,1005,5.568,1006,5.568,1007,5.568,1008,5.568,1009,7.068,1010,7.068,1011,5.568,1012,5.568,1013,7.068,1014,5.568,1015,5.142]],["title/interfaces/Dictionary.html",[118,0.357,1016,3.916]],["body/interfaces/Dictionary.html",[2,0.064,3,0.064,4,0.056,8,0.159,17,0.831,20,0.005,34,0.072,44,0.855,72,0.004,73,0.004,118,0.683,160,4.749,760,4.022,1016,6.785,1017,6.077,1018,7.233,1019,7.345,1020,5.7,1021,4.936,1022,6.077]],["title/components/EditDisplayNameComponent.html",[125,1.195,242,1.852]],["body/components/EditDisplayNameComponent.html",[0,0.009,2,0.03,3,0.03,4,0.026,6,0.749,8,0.075,9,0.224,13,0.19,14,0.421,17,0.937,19,0.826,20,0.005,21,1.047,22,0.77,24,0.349,25,0.523,27,0.322,28,0.44,34,0.026,35,0.338,36,1.593,37,0.839,38,1.083,41,0.724,43,2.116,44,0.559,56,0.65,62,0.633,68,1.623,72,0.003,73,0.003,83,2.274,125,1.793,126,1.266,127,1.332,128,1.332,129,1.332,133,2.439,134,1.266,135,2.611,136,2.611,137,3.91,138,3.597,139,1.133,140,2.019,142,2.019,144,4.3,145,1.617,146,2.721,153,1.133,155,1.764,156,3.188,157,4.451,168,1.29,169,2.357,180,3.155,184,1.723,185,0.743,186,2.018,187,2.082,188,1.905,189,2.082,194,0.714,195,1.431,200,1.036,201,1.226,202,2.318,203,2.318,204,2.152,206,1.808,223,1.133,224,2.019,225,1.985,226,2.019,227,2.721,228,1.332,230,1.332,231,1.266,232,1.332,233,1.266,234,2.341,235,1.332,236,1.266,237,2.019,238,1.246,239,1.332,240,1.246,241,1.332,242,2.586,243,2.012,244,3.197,245,3.568,246,1.332,247,1.246,248,1.332,249,1.332,250,1.266,251,2.605,252,1.31,253,1.332,254,2.173,255,2.439,256,1.31,257,1.266,258,2.877,259,1.332,260,1.266,261,2.019,262,1.246,263,1.332,264,1.246,265,1.332,266,1.266,267,1.332,268,1.266,269,1.187,270,1.246,271,1.332,272,1.266,273,1.332,274,1.266,275,1.246,276,1.332,277,1.246,278,1.332,279,1.266,280,1.288,281,1.332,282,1.266,283,1.332,284,1.266,285,2.439,286,1.266,287,1.266,288,1.266,289,1.332,290,1.246,291,1.332,493,2.854,509,6.312,522,2.419,523,6.312,743,3.058,1023,8.527,1024,7.639,1025,3.449,1026,5.228,1027,5.228,1028,7.045,1029,4.326,1030,6.314,1031,3.449,1032,3.449,1033,3.449,1034,3.449,1035,5.228,1036,5.224,1037,3.449,1038,3.449,1039,5.228,1040,5.657,1041,5.224,1042,3.449,1043,3.449,1044,2.854,1045,3.449,1046,2.811,1047,5.228,1048,3.449,1049,3.449]],["title/pipes/ElapsedTimePipe.html",[302,2.52,1050,3.916]],["body/pipes/ElapsedTimePipe.html",[0,0.017,2,0.06,3,0.06,4,0.052,6,0.979,13,0.171,17,0.774,19,1.08,20,0.005,21,1.189,22,1.007,27,0.338,34,0.052,44,0.741,72,0.004,73,0.004,94,2.363,134,2.51,145,2.114,168,1.71,185,1.473,302,4.519,953,5.656,1050,6.498,1051,8.372,1052,6.836,1053,6.926,1054,5.656,1055,8.372,1056,9.431,1057,6.836,1058,6.836,1059,6.926,1060,6.125,1061,6.836]],["title/injectables/ElapsedTimeService.html",[292,1.584,341,3.391]],["body/injectables/ElapsedTimeService.html",[0,0.014,2,0.048,3,0.048,4,0.043,8,0.12,9,0.314,13,0.206,14,0.677,17,0.988,19,1.157,20,0.005,21,0.963,22,1.079,27,0.384,28,0.708,33,0.938,34,0.043,35,0.718,38,1.74,44,0.726,72,0.004,73,0.004,94,1.331,145,2.265,156,3.492,168,1.854,185,1.194,195,2.3,200,1.665,292,2.575,319,2.069,321,2.258,324,2.3,329,4.152,337,4.076,341,4.923,343,5.137,346,4.241,357,3.584,358,3.458,800,4.586,1060,4.966,1062,9.076,1063,5.543,1064,9.509,1065,8.729,1066,7.325,1067,7.325,1068,5.543,1069,7.325,1070,5.543,1071,7.325,1072,5.543,1073,4.586,1074,8.205,1075,5.543,1076,4.586,1077,4.966,1078,5.543,1079,5.543,1080,5.543]],["title/interfaces/EmailAuthEvent.html",[118,0.357,545,3.71]],["body/interfaces/EmailAuthEvent.html",[2,0.065,3,0.065,4,0.057,8,0.161,9,0.377,13,0.221,20,0.005,34,0.057,44,0.888,72,0.004,73,0.004,118,0.622,545,6.47,548,4.53,551,4.629,1081,7.426]],["title/classes/EmailLogin.html",[0,0.013,700,2.713]],["body/classes/EmailLogin.html",[0,0.024,2,0.036,3,0.036,4,0.032,6,1.35,7,1.464,8,0.09,9,0.257,10,2.252,12,2.256,13,0.247,14,1.073,17,0.873,19,0.656,20,0.005,21,0.546,22,0.612,24,0.421,25,0.629,27,0.242,28,0.53,33,0.703,34,0.077,35,0.912,39,1.929,44,0.851,72,0.003,73,0.003,234,2.878,394,1.385,461,3.944,472,4.708,535,2.177,537,2.233,539,2.233,548,4.204,551,4.295,609,3.144,611,3.144,612,3.144,619,3.144,656,3.852,685,2.429,689,3.62,690,3.226,691,3.62,692,3.407,693,3.62,694,4.381,695,3.62,696,3.62,697,4.287,698,4.518,699,4.25,700,3.787,701,3.62,1082,3.436,1083,5.999,1084,5.999]],["title/interfaces/Environment.html",[118,0.357,360,3.391]],["body/interfaces/Environment.html",[2,0.058,3,0.058,4,0.051,8,0.144,9,0.353,13,0.234,20,0.005,34,0.051,44,0.904,72,0.004,73,0.004,89,3.452,118,0.66,360,5.531,639,6.549,720,4.299,1085,5.501,1086,7.728,1087,7.728,1088,7.249,1089,7.249,1090,7.249,1091,5.501,1092,5.501,1093,5.501,1094,5.501,1095,5.501,1096,5.501,1097,5.501]],["title/classes/Error.html",[0,0.013,905,3.391]],["body/classes/Error.html",[0,0.02,2,0.055,3,0.055,4,0.049,6,1.144,7,1.525,8,0.137,9,0.342,10,2.5,12,2.07,13,0.249,14,0.773,17,1.039,19,1,20,0.005,21,0.832,22,0.933,24,0.641,25,0.96,27,0.256,28,0.808,34,0.067,35,0.621,39,1.584,44,0.892,72,0.004,73,0.004,138,2.25,297,3.822,507,6.028,905,6.169,1098,5.674,1099,7.983,1100,7.983,1101,8.743]],["title/classes/FacebookLogin.html",[0,0.013,609,2.645]],["body/classes/FacebookLogin.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.365,7,1.479,8,0.095,9,0.267,10,1.648,12,2.279,13,0.245,14,1.115,17,0.706,20,0.005,24,0.444,25,0.665,27,0.252,28,0.56,33,0.742,34,0.077,35,0.923,39,1.977,44,0.739,72,0.003,73,0.003,234,2.913,394,1.463,461,4.044,472,4.795,535,2.299,537,2.358,539,2.358,548,3.694,551,3.465,609,3.805,611,3.269,612,3.269,619,3.269,656,3.949,685,2.565,689,3.764,690,3.354,691,3.764,692,3.543,693,3.764,694,4.491,695,4.381,696,3.764,697,4.379,698,4.614,699,3.764,700,3.354,701,3.764,1102,6.237]],["title/interfaces/FirebaseConfig.html",[118,0.357,1089,3.916]],["body/interfaces/FirebaseConfig.html",[2,0.056,3,0.056,4,0.049,8,0.139,9,0.345,13,0.243,20,0.005,34,0.049,44,0.925,72,0.004,73,0.004,89,2.481,118,0.652,360,4.318,639,4.505,720,4.154,1085,5.315,1086,5.315,1087,5.315,1088,4.986,1089,6.83,1090,6.252,1091,7.634,1092,7.634,1093,7.634,1094,7.634,1095,7.634,1096,7.634,1097,5.315]],["title/interfaces/FirestoreHistoryItem.html",[118,0.357,1103,3.916]],["body/interfaces/FirestoreHistoryItem.html",[0,0.011,2,0.038,3,0.076,4,0.034,8,0.096,9,0.269,11,1.166,13,0.218,16,2.6,20,0.005,27,0.361,30,2.809,31,2.809,32,2.809,34,0.048,35,0.853,44,0.888,51,2.417,56,1.723,58,3.544,62,1.678,72,0.003,73,0.003,93,3.794,94,2.088,118,0.515,124,3.003,168,1.9,185,0.951,196,2.155,200,1.326,201,2.589,292,1.967,319,1.648,321,1.798,324,1.831,327,3.726,346,3.932,416,2.438,760,3.856,820,2.967,827,3.095,1103,6.5,1104,3.652,1105,3.559,1106,4.138,1107,2.507,1108,3.652,1109,3.095,1110,3.095,1111,2.854,1112,4.864,1113,2.507,1114,3.652,1115,3.652,1116,3.652,1117,3.652,1118,3.095,1119,3.652,1120,3.652,1121,3.652,1122,3.652,1123,3.095,1124,3.652,1125,3.652,1126,3.652,1127,3.652,1128,3.095,1129,3.095,1130,3.652,1131,5.109,1132,5.109,1133,3.652,1134,3.652,1135,3.652,1136,3.652,1137,3.246,1138,3.652,1139,3.652,1140,3.095,1141,3.652,1142,3.652,1143,3.652,1144,3.652,1145,3.652,1146,3.652,1147,3.652]],["title/interfaces/FirestorePlatformsItem.html",[118,0.357,1148,4.175]],["body/interfaces/FirestorePlatformsItem.html",[0,0.016,2,0.056,3,0.056,4,0.049,8,0.206,9,0.344,13,0.201,20,0.005,22,1.357,27,0.372,34,0.062,35,0.627,44,0.777,72,0.004,73,0.004,94,2.108,118,0.568,168,1.306,185,1.378,200,1.92,201,2.272,292,2.521,319,2.387,321,2.604,324,2.653,346,3.529,416,3.531,976,4.701,1105,4.562,1106,4.562,1107,3.631,1113,3.631,1148,6.645,1149,5.728,1150,4.483,1151,5.728,1152,5.728,1153,5.728,1154,5.728,1155,5.728,1156,5.728,1157,5.728,1158,4.962,1159,5.728,1160,5.728,1161,5.728,1162,5.728]],["title/interfaces/FirestoreProfileItem.html",[118,0.357,1163,4.175]],["body/interfaces/FirestoreProfileItem.html",[0,0.016,2,0.055,3,0.055,4,0.048,8,0.136,9,0.34,13,0.157,20,0.005,27,0.381,33,1.061,34,0.061,35,0.615,44,0.853,72,0.004,73,0.004,118,0.561,168,1.621,185,1.352,200,1.884,201,2.229,243,2.528,292,2.491,319,2.342,321,2.555,324,2.603,346,3.824,416,3.465,576,3.67,1046,5.183,1105,4.507,1106,4.507,1107,3.563,1113,3.563,1163,6.566,1164,5.62,1165,4.399,1166,5.62,1167,5.62,1168,5.62,1169,5.62,1170,5.62,1171,5.62,1172,5.62,1173,5.62,1174,5.62,1175,4.613,1176,5.62]],["title/interfaces/FirestoreProgressItem.html",[118,0.357,1177,3.916]],["body/interfaces/FirestoreProgressItem.html",[0,0.013,2,0.045,3,0.045,4,0.04,8,0.112,9,0.299,11,1.365,13,0.199,20,0.005,27,0.384,33,0.874,34,0.054,35,0.831,44,0.886,51,2.13,58,2.847,72,0.004,73,0.004,99,3.781,104,3.758,105,2.779,118,0.56,119,4.151,122,5.186,168,1.866,185,1.113,196,2.522,200,1.552,201,2.483,292,2.194,298,3.341,319,1.929,321,2.105,324,2.144,346,3.895,416,2.854,760,3.937,761,5.829,1105,3.97,1106,4.499,1107,2.935,1109,3.623,1110,3.623,1113,2.935,1118,3.623,1123,3.623,1128,3.623,1129,3.623,1131,3.623,1132,3.623,1140,3.623,1177,6.586,1178,4.275,1179,3.224,1180,5.425,1181,4.275,1182,4.275,1183,4.275,1184,4.275,1185,4.275,1186,4.275,1187,4.275,1188,4.275,1189,4.275,1190,4.275,1191,4.275,1192,4.275,1193,4.275,1194,4.275,1195,4.275,1196,4.275]],["title/interfaces/FirestoreTimerItem.html",[118,0.357,1197,4.175]],["body/interfaces/FirestoreTimerItem.html",[0,0.013,2,0.062,3,0.047,4,0.041,8,0.116,9,0.306,13,0.202,20,0.005,27,0.362,34,0.055,35,0.524,38,1.677,44,0.89,56,1.805,62,1.757,72,0.004,73,0.004,94,2.152,118,0.505,124,3.145,168,1.46,185,1.151,196,2.608,200,1.604,201,1.898,292,2.244,319,1.994,321,2.176,324,2.217,329,3.27,346,3.141,416,2.951,576,4.712,734,2.873,820,3.591,827,3.747,978,2.951,1076,4.421,1105,4.06,1106,4.06,1107,3.035,1113,3.035,1137,3.929,1175,5.923,1197,5.914,1198,4.787,1199,3.334,1200,4.787,1201,4.787,1202,4.787,1203,4.787,1204,8.033,1205,4.787,1206,4.787,1207,4.787,1208,4.787,1209,4.787,1210,4.787,1211,4.787,1212,4.787,1213,4.787]],["title/components/ForgotPasswordComponent.html",[125,1.195,247,1.822]],["body/components/ForgotPasswordComponent.html",[0,0.009,2,0.033,3,0.033,4,0.029,6,0.797,8,0.081,9,0.239,13,0.166,14,0.458,17,0.888,19,0.592,20,0.005,21,0.873,22,0.553,24,0.38,25,0.568,27,0.317,28,0.479,34,0.029,35,0.367,36,1.696,37,0.912,41,0.787,44,0.492,56,0.707,62,0.688,68,1.706,72,0.003,73,0.003,83,2.357,125,1.858,126,1.377,127,1.448,128,1.448,129,1.448,133,2.564,134,1.377,137,3.939,138,3.623,139,1.232,140,2.15,142,2.15,145,1.722,146,2.837,153,1.232,155,1.918,156,3.289,168,1.137,169,2.078,185,0.808,194,0.776,195,1.556,200,1.126,201,1.332,206,1.966,223,1.232,224,2.15,225,2.113,226,2.15,227,2.837,228,1.448,230,1.448,231,1.377,232,1.448,233,1.377,234,2.632,235,1.448,236,1.377,237,2.15,238,1.354,239,1.448,240,1.354,241,1.448,242,1.377,243,1.195,244,1.448,245,1.354,246,1.448,247,2.653,248,3.45,249,1.448,250,1.377,251,2.701,252,1.424,253,1.448,254,2.285,255,2.564,256,1.424,257,1.377,258,2.969,259,1.448,260,1.377,261,2.15,262,1.354,263,1.448,264,1.354,265,1.448,266,1.377,267,1.448,268,1.377,269,1.29,270,1.354,271,1.448,272,1.377,273,1.448,274,1.377,275,1.354,276,1.448,277,1.354,278,1.448,279,1.377,280,1.4,281,1.448,282,1.377,283,1.448,284,1.377,285,2.564,286,1.377,287,1.377,288,1.377,289,1.448,290,1.354,291,1.448,394,2.214,491,2.425,507,5.13,515,6.581,517,5.948,533,6.581,542,2.911,543,2.757,547,3.36,548,3.432,549,3.36,550,3.36,551,4.063,590,6.802,612,3.85,1214,8.222,1215,3.75,1216,5.567,1217,5.567,1218,7.346,1219,5.567,1220,3.75,1221,3.75,1222,3.75,1223,2.52,1224,3.75,1225,3.75,1226,3.75,1227,3.75,1228,2.911,1229,3.36]],["title/classes/GetUser.html",[0,0.013,690,2.713]],["body/classes/GetUser.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.365,7,1.479,8,0.095,9,0.267,10,1.648,12,2.279,13,0.245,14,1.115,17,0.706,20,0.005,24,0.444,25,0.665,27,0.252,28,0.56,33,0.742,34,0.077,35,0.923,39,1.977,44,0.739,72,0.003,73,0.003,234,2.913,394,1.463,461,4.044,472,4.795,535,2.299,537,2.358,539,2.358,548,3.694,551,3.465,609,3.269,611,3.269,612,3.269,619,3.269,656,3.949,685,2.565,689,4.381,690,3.904,691,3.764,692,3.543,693,3.764,694,4.491,695,3.764,696,3.764,697,4.379,698,4.614,699,3.764,700,3.354,701,3.764,1230,6.237]],["title/classes/GoogleLogin.html",[0,0.013,611,2.645]],["body/classes/GoogleLogin.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.365,7,1.479,8,0.095,9,0.267,10,1.648,12,2.279,13,0.245,14,1.115,17,0.706,20,0.005,24,0.444,25,0.665,27,0.252,28,0.56,33,0.742,34,0.077,35,0.923,39,1.977,44,0.739,72,0.003,73,0.003,234,2.913,394,1.463,461,4.044,472,4.795,535,2.299,537,2.358,539,2.358,548,3.694,551,3.465,609,3.269,611,3.805,612,3.269,619,3.269,656,3.949,685,2.565,689,3.764,690,3.354,691,3.764,692,3.543,693,4.381,694,4.491,695,3.764,696,3.764,697,4.379,698,4.614,699,3.764,700,3.354,701,3.764,1231,6.237]],["title/interfaces/GraphConfig.html",[118,0.357,705,3.538]],["body/interfaces/GraphConfig.html",[2,0.052,3,0.052,4,0.046,8,0.13,9,0.331,13,0.243,20,0.005,21,0.789,25,0.91,34,0.069,44,0.796,72,0.004,73,0.004,89,3.983,94,2.161,118,0.658,702,3.883,703,4.661,704,4.658,705,6.312,706,4.415,707,4.415,708,4.415,709,4.415,710,4.415,711,4.415,712,4.415,713,4.415,714,4.415,716,3.624,717,6.618,718,5.98,719,6.618,720,3.883,721,6.618,722,6.618,723,6.618,724,4.661,725,4.036,726,4.415,727,4.415,728,4.415,1232,7.718]],["title/interfaces/GraphDataItem.html",[118,0.357,716,3.045]],["body/interfaces/GraphDataItem.html",[2,0.055,3,0.055,4,0.049,8,0.138,9,0.343,13,0.201,20,0.005,21,1.209,25,1.393,34,0.071,44,0.856,72,0.004,73,0.004,89,3.922,94,2.322,118,0.67,702,4.114,703,4.939,704,4.832,705,6.144,706,4.679,707,4.679,708,4.679,709,4.679,710,4.679,711,4.679,712,4.679,713,4.679,714,4.679,716,4.832,717,4.679,718,4.462,719,4.679,720,4.114,721,4.679,722,4.679,723,4.679,724,4.939,725,4.276,726,4.679,727,4.679,728,4.679]],["title/components/GraphTooltipComponent.html",[125,1.195,250,1.852]],["body/components/GraphTooltipComponent.html",[0,0.011,2,0.037,3,0.037,4,0.033,6,0.873,8,0.092,13,0.106,14,0.87,17,0.807,20,0.005,21,0.801,27,0.246,33,1.318,34,0.033,36,1.857,37,1.033,41,0.891,56,0.8,62,0.779,68,2.121,72,0.003,73,0.003,83,2.478,125,1.954,126,1.559,127,1.64,128,1.64,129,1.64,133,2.754,134,1.559,135,3.044,136,3.044,137,3.978,138,3.66,139,1.394,140,2.354,142,2.354,145,1.885,146,3.009,152,3.985,153,1.394,168,0.867,169,1.585,184,2.12,185,0.915,223,1.394,224,2.354,225,2.314,226,2.354,227,3.009,228,1.64,230,1.64,231,1.559,232,1.64,233,1.559,234,2.552,235,1.64,236,1.559,237,2.354,238,1.533,239,1.64,240,1.533,241,1.64,242,1.559,243,1.353,244,1.64,245,1.533,246,1.64,247,1.533,248,1.64,249,1.64,250,2.86,251,3.044,252,3.359,253,1.64,254,2.454,255,2.754,256,1.612,257,1.559,258,3.101,259,1.64,260,1.559,261,2.354,262,1.533,263,1.64,264,1.533,265,1.64,266,1.559,267,1.64,268,1.559,269,1.461,270,1.533,271,1.64,272,1.559,273,1.64,274,1.559,275,1.533,276,1.64,277,1.533,278,1.64,279,1.559,280,1.585,281,1.64,282,1.559,283,1.64,284,1.559,285,2.754,286,1.559,287,1.559,288,1.559,289,1.64,290,1.533,291,1.64,716,4.303,989,6.98,1233,7.791,1234,4.246,1235,6.095,1236,6.095,1237,6.095,1238,6.095,1239,4.246,1240,6.095,1241,6.095]],["title/components/HeaderComponent.html",[125,1.195,254,1.736]],["body/components/HeaderComponent.html",[0,0.012,2,0.04,3,0.04,4,0.035,6,0.927,8,0.1,14,0.912,17,0.732,20,0.005,21,0.851,27,0.187,34,0.035,36,1.972,37,1.124,41,0.969,56,0.871,62,0.848,68,1.92,72,0.003,73,0.003,83,2.558,125,2.017,126,1.696,127,1.785,128,1.785,129,1.785,133,2.885,134,1.696,137,4.003,138,3.682,139,1.518,140,2.5,142,2.5,145,2.001,146,3.126,153,1.518,168,0.944,169,1.725,185,0.996,223,1.518,224,2.5,225,2.457,226,2.5,227,3.126,228,1.785,230,1.785,231,1.696,232,1.785,233,1.696,234,2.635,235,1.785,236,1.696,237,2.5,238,1.669,239,1.785,240,1.669,241,1.785,242,1.696,243,1.472,244,1.785,245,1.669,246,1.785,247,1.669,248,1.785,249,1.785,250,1.696,251,2.932,252,1.754,253,1.785,254,3.039,255,2.885,256,1.754,257,1.696,258,3.189,259,1.785,260,1.696,261,2.5,262,1.669,263,1.785,264,1.669,265,1.785,266,1.696,267,1.785,268,1.696,269,1.59,270,1.669,271,1.785,272,1.696,273,1.785,274,1.696,275,1.669,276,1.785,277,1.669,278,1.785,279,1.696,280,1.725,281,1.785,282,1.696,283,1.785,284,1.696,285,2.885,286,1.696,287,1.696,288,1.696,289,1.785,290,1.669,291,1.785,461,3.31,462,5.355,1242,4.621,1243,5.355,1244,5.355,1245,5.355,1246,4.621,1247,4.621]],["title/components/HeaderComponent-1.html",[125,0.999,254,1.452,372,2.546]],["body/components/HeaderComponent-1.html",[0,0.009,2,0.032,3,0.032,4,0.028,6,0.788,7,0.567,8,0.08,13,0.165,14,0.45,17,0.882,19,0.868,20,0.005,21,0.958,22,0.81,24,0.666,25,0.833,27,0.315,28,0.471,33,0.624,34,0.028,36,1.675,37,0.897,41,0.774,56,0.695,62,0.677,68,2.003,72,0.003,73,0.003,83,2.34,125,1.845,126,1.354,127,1.424,128,1.424,129,1.424,133,2.539,134,1.354,135,2.746,136,2.746,137,3.933,138,3.618,139,1.211,140,2.123,142,2.123,145,1.7,146,2.814,152,3.985,153,1.211,155,1.886,156,3.269,168,1.123,169,2.052,174,4.833,184,1.842,185,0.795,194,0.763,195,1.53,200,1.107,206,4.084,223,1.211,224,2.123,225,2.087,226,2.123,227,2.814,228,1.424,230,1.424,231,1.354,232,1.424,233,1.354,234,2.41,235,1.424,236,1.354,237,2.123,238,1.332,239,1.424,240,1.332,241,1.424,242,1.354,243,1.175,244,1.424,245,1.332,246,1.424,247,1.332,248,1.424,249,1.424,250,1.354,251,3.06,252,1.4,253,1.424,254,2.812,255,2.539,256,1.4,257,1.354,258,2.951,259,1.424,260,1.354,261,2.123,262,1.332,263,1.424,264,1.332,265,1.424,266,1.354,267,1.424,268,1.354,269,1.269,270,1.332,271,1.424,272,1.354,273,1.424,274,1.354,275,1.332,276,1.424,277,1.332,278,1.424,279,1.354,280,1.377,281,1.424,282,1.354,283,1.424,284,1.354,285,2.539,286,1.354,287,1.354,288,1.354,289,1.424,290,1.332,291,1.424,372,2.226,924,5.102,930,5.038,978,3.036,1015,5.438,1243,4.549,1244,4.549,1245,4.549,1248,3.688,1249,5.498,1250,5.498,1251,5.438,1252,3.688,1253,3.688,1254,5.498,1255,3.688,1256,3.688,1257,3.304,1258,3.304,1259,1.842,1260,3.688,1261,3.639,1262,5.498,1263,7.286,1264,3.051,1265,3.688,1266,3.051,1267,3.688,1268,3.051,1269,3.688,1270,5.357,1271,5.357,1272,5.357]],["title/components/HeaderComponent-2.html",[125,0.999,254,1.452,1273,3.49]],["body/components/HeaderComponent-2.html",[0,0.011,2,0.038,3,0.038,4,0.033,6,0.888,8,0.094,14,0.882,17,0.818,20,0.005,21,0.815,24,0.44,25,0.659,27,0.176,34,0.033,36,1.89,37,1.058,41,0.913,56,0.82,62,0.798,68,1.857,72,0.003,73,0.003,83,2.501,125,1.972,126,1.597,127,1.68,128,1.68,129,1.68,133,2.791,134,1.597,135,3.097,136,3.097,137,3.985,138,3.666,139,1.429,140,2.395,142,2.395,145,1.918,146,3.043,152,4.029,153,1.429,168,0.888,169,1.624,184,2.172,185,0.937,223,1.429,224,2.395,225,2.354,226,2.395,227,3.043,228,1.68,230,1.68,231,1.597,232,1.68,233,1.597,234,2.575,235,1.68,236,1.597,237,2.395,238,1.571,239,1.68,240,1.571,241,1.68,242,1.597,243,1.386,244,1.68,245,1.571,246,1.68,247,1.571,248,1.68,249,1.68,250,1.597,251,2.866,252,1.651,253,1.68,254,2.979,255,2.791,256,3.162,257,1.597,258,3.127,259,1.68,260,1.597,261,2.395,262,1.571,263,1.68,264,1.571,265,1.68,266,1.597,267,1.68,268,1.597,269,1.497,270,1.571,271,1.68,272,1.597,273,1.68,274,1.597,275,1.571,276,1.68,277,1.571,278,1.68,279,1.597,280,1.624,281,1.68,282,1.597,283,1.68,284,1.597,285,2.791,286,1.597,287,1.597,288,1.597,289,1.68,290,1.571,291,1.68,978,3.425,1243,5.13,1244,5.13,1245,5.13,1273,3.599,1274,4.35,1275,8.91,1276,6.201,1277,4.35,1278,4.35,1279,4.35]],["title/interfaces/HistoryCollection.html",[118,0.357,1112,3.916]],["body/interfaces/HistoryCollection.html",[0,0.012,2,0.041,3,0.066,4,0.036,8,0.102,9,0.28,11,2.152,13,0.117,16,2.711,20,0.005,27,0.368,30,2.929,31,2.929,32,2.929,34,0.05,35,0.869,44,0.854,51,2.481,56,1.614,58,3.613,62,1.571,72,0.003,73,0.003,93,3.553,94,1.569,118,0.532,124,2.813,168,1.926,185,1.01,196,2.287,200,1.407,201,2.674,292,2.051,319,1.749,321,1.909,324,1.944,327,3.849,346,3.999,416,2.588,760,3.508,820,3.149,827,3.286,1103,6.884,1104,3.877,1105,3.712,1106,4.274,1107,2.661,1108,3.877,1109,3.286,1110,3.286,1111,3.03,1112,5.841,1113,2.661,1114,3.877,1115,3.877,1116,3.877,1117,3.877,1118,3.286,1119,3.877,1120,3.877,1121,3.877,1122,3.877,1123,3.286,1124,3.877,1125,3.877,1126,3.877,1127,3.877,1128,3.286,1129,3.286,1130,3.877,1131,5.277,1132,5.277,1133,3.877,1134,3.877,1135,3.877,1136,3.877,1137,3.445,1138,3.877,1139,3.877,1140,3.286,1141,3.877,1142,3.877,1143,3.877,1144,3.877,1145,3.877,1146,3.877,1147,3.877]],["title/components/HistoryComponent.html",[125,1.195,257,1.852]],["body/components/HistoryComponent.html",[0,0.01,2,0.035,3,0.035,4,0.031,6,0.844,8,0.088,13,0.174,14,0.848,17,0.917,20,0.005,21,0.775,24,0.703,25,1.052,27,0.238,34,0.031,36,2.323,37,0.986,41,0.85,44,0.675,56,0.764,62,0.743,68,2.082,72,0.003,73,0.003,83,2.432,125,1.918,126,1.488,127,1.565,128,1.565,129,1.565,133,2.682,134,1.488,135,2.943,136,2.943,137,3.964,138,3.646,139,1.331,140,2.276,142,2.276,145,1.822,146,2.945,152,4.322,153,1.331,162,4.062,168,0.828,169,1.513,184,2.024,185,0.873,196,1.978,223,1.331,224,2.276,225,2.237,226,2.276,227,2.945,228,1.565,230,1.565,231,1.488,232,1.565,233,1.488,234,2.505,235,1.565,236,1.488,237,2.276,238,1.463,239,1.565,240,1.463,241,1.565,242,1.488,243,1.291,244,1.565,245,1.463,246,1.565,247,1.463,248,1.565,249,1.565,250,1.488,251,2.788,252,1.538,253,1.565,254,2.39,255,2.682,256,1.538,257,2.799,258,3.227,259,1.565,260,1.488,261,2.276,262,1.463,263,1.565,264,1.463,265,1.565,266,1.488,267,1.565,268,1.488,269,1.394,270,1.463,271,1.565,272,1.488,273,1.565,274,1.488,275,1.463,276,1.565,277,1.463,278,1.565,279,1.488,280,1.513,281,1.565,282,1.488,283,1.565,284,1.488,285,2.682,286,1.488,287,1.488,288,1.488,289,1.565,290,1.463,291,1.565,823,6.221,1280,4.052,1281,5.893,1282,5.893,1283,4.869,1284,5.39,1285,5.893,1286,4.052,1287,4.052,1288,4.052,1289,5.893,1290,5.893,1291,5.893,1292,5.893,1293,4.875]],["title/injectables/HistoryEffects.html",[292,1.584,1294,4.175]],["body/injectables/HistoryEffects.html",[0,0.009,2,0.032,3,0.032,4,0.028,7,1.5,8,0.08,9,0.237,13,0.093,14,0.453,17,0.96,19,0.586,20,0.005,21,0.487,22,0.546,24,0.829,25,1.241,27,0.352,34,0.028,38,2.923,42,3.929,50,3.929,57,3.736,63,3.736,69,3.736,72,0.003,73,0.003,185,0.799,190,2.238,191,2.169,200,1.114,201,1.318,292,2.07,297,2.238,300,5.811,302,4.961,303,6.142,311,6.092,312,6.092,314,6.092,315,5.109,316,5.873,318,1.944,319,1.384,320,2.492,321,1.51,323,2.492,324,1.538,483,3.068,484,3.068,489,2.727,490,2.6,742,4.149,1111,5.483,1294,4.568,1295,3.708,1296,3.708,1297,5.521,1298,5.521,1299,7.035,1300,5.521,1301,4.285,1302,5.521,1303,5.521,1304,3.708,1305,5.521,1306,5.521,1307,5.521,1308,4.285,1309,5.521,1310,5.521,1311,5.521,1312,3.708,1313,5.521,1314,5.521,1315,5.521,1316,3.708,1317,5.521,1318,5.521,1319,5.521,1320,6.355,1321,8.188,1322,5.521,1323,5.521,1324,3.708,1325,5.521,1326,5.521,1327,5.521,1328,5.521,1329,5.521,1330,3.708,1331,5.521,1332,5.521,1333,5.521,1334,5.521,1335,5.521,1336,3.708,1337,3.068]],["title/interfaces/HistoryEntity.html",[16,2.093,118,0.357]],["body/interfaces/HistoryEntity.html",[2,0.044,3,0.044,4,0.039,7,1.055,8,0.109,9,0.294,13,0.22,16,2.847,20,0.005,24,0.509,27,0.316,33,0.851,34,0.064,35,0.861,41,1.761,44,0.847,51,1.533,56,1.582,58,2.796,62,1.54,72,0.003,73,0.003,89,1.943,93,3.482,94,2.176,118,0.552,124,2.756,168,1.956,194,2.066,518,4.015,576,2.943,704,3.036,715,2.35,760,3.906,1259,2.512,1261,4.633,1338,4.162,1339,4.813,1340,4.813,1341,4.813,1342,3.381,1343,4.507,1344,4.438,1345,3.528,1346,3.51,1347,3.528,1348,2.512,1349,2.573,1350,2.573,1351,4.507,1352,3.905,1353,4.507,1354,4.507,1355,5.327,1356,3.905,1357,4.507,1358,3.528,1359,4.507,1360,6.999,1361,4.507,1362,4.507,1363,4.507,1364,6.149,1365,4.813,1366,3.528]],["title/components/HistoryEntryComponent.html",[125,1.195,260,1.852]],["body/components/HistoryEntryComponent.html",[0,0.007,2,0.023,3,0.023,4,0.02,6,0.603,8,0.057,9,0.18,11,1.396,13,0.206,14,0.319,17,0.998,19,0.957,20,0.005,21,0.933,22,1.045,24,0.672,25,1.006,27,0.332,28,0.334,30,1.172,31,1.172,32,1.172,34,0.02,35,0.731,36,2.365,37,0.636,38,1.321,41,0.548,43,1.819,44,0.687,49,2.789,51,1.61,56,1.337,57,3.098,58,2.89,62,1.218,63,2.153,68,1.358,69,2.153,72,0.002,73,0.002,83,1.994,93,1.746,124,1.735,125,1.572,126,0.96,127,1.01,128,1.01,129,1.01,133,2.041,134,0.96,135,2.102,136,2.102,137,3.798,138,3.494,139,0.859,140,1.626,142,1.626,144,3.771,145,1.302,146,2.339,152,3.815,153,0.859,155,1.337,156,2.838,157,4.012,160,3.916,168,1.524,169,2.785,174,3.885,176,2.163,180,2.54,184,1.306,185,0.563,186,1.529,187,1.578,188,1.444,189,1.578,194,0.541,195,1.085,196,1.276,200,0.785,201,1.495,202,1.757,203,1.757,204,1.631,205,1.922,206,3.48,208,2.163,223,0.859,224,1.626,225,1.598,226,1.626,227,2.339,228,1.01,230,1.01,231,0.96,232,1.01,233,0.96,234,2.053,235,1.01,236,0.96,237,1.626,238,0.944,239,1.01,240,0.944,241,1.01,242,0.96,243,0.833,244,1.01,245,0.944,246,1.01,247,0.944,248,1.01,249,1.01,250,0.96,251,2.285,252,0.992,253,1.01,254,1.818,255,2.041,256,0.992,257,0.96,258,2.802,259,1.01,260,2.224,261,1.626,262,0.944,263,1.01,264,0.944,265,1.01,266,0.96,267,1.01,268,0.96,269,0.9,270,0.944,271,1.01,272,0.96,273,1.01,274,0.96,275,0.944,276,1.01,277,0.944,278,1.01,279,0.96,280,0.976,281,1.01,282,0.96,283,1.01,284,0.96,285,2.041,286,0.96,287,0.96,288,0.96,289,1.01,290,0.944,291,1.01,329,2.771,483,2.163,484,2.163,489,1.922,490,1.833,753,3.001,772,4.372,1021,3.551,1036,5.87,1199,4.655,1283,3.705,1284,4.101,1367,8.933,1368,8.003,1369,2.342,1370,3.771,1371,3.771,1372,3.771,1373,3.771,1374,6.357,1375,2.614,1376,2.614,1377,2.614,1378,2.614,1379,2.342,1380,2.614,1381,3.771,1382,2.614,1383,2.342,1384,2.614,1385,2.614,1386,4.209,1387,2.614,1388,2.614,1389,2.614,1390,4.209,1391,2.614,1392,4.734,1393,2.614,1394,2.614,1395,1.922,1396,2.342,1397,2.342,1398,2.342,1399,6.057,1400,2.342,1401,2.614,1402,2.614,1403,2.342,1404,2.342,1405,2.163,1406,2.342,1407,2.163,1408,2.614,1409,2.614,1410,2.614,1411,2.614,1412,2.614,1413,2.614,1414,2.614,1415,2.614,1416,2.342,1417,5.427,1418,3.771,1419,3.771,1420,3.771,1421,3.771]],["title/interfaces/HistoryGrouping.html",[118,0.357,162,2.952]],["body/interfaces/HistoryGrouping.html",[2,0.055,3,0.055,4,0.048,8,0.136,9,0.34,13,0.229,20,0.005,30,3.552,31,3.552,32,3.552,34,0.074,44,0.896,51,2.65,56,1.493,62,1.454,72,0.004,73,0.004,89,2.417,93,3.287,94,2.348,118,0.681,124,2.603,153,2.603,162,4.635,213,6.409,269,2.154,753,5.191,760,2.697,930,5.91,997,3.905,1344,4.047,1422,4.389,1423,6.72]],["title/interfaces/HistoryListItem.html",[118,0.357,753,2.866]],["body/interfaces/HistoryListItem.html",[2,0.051,3,0.051,4,0.045,8,0.127,9,0.325,13,0.245,20,0.005,30,3.4,31,3.4,32,3.4,34,0.073,44,0.904,51,2.566,56,1.74,62,1.694,72,0.004,73,0.004,89,3.252,93,3.831,94,2.369,118,0.669,124,3.033,153,3.108,162,3.42,213,4.1,269,3.066,753,4.783,760,3.839,930,3.78,997,5.56,1344,3.78,1422,4.1,1423,4.299]],["title/injectables/HistoryService.html",[292,1.584,1111,3.263]],["body/injectables/HistoryService.html",[0,0.009,2,0.056,3,0.056,4,0.027,8,0.077,9,0.229,11,0.938,13,0.228,14,0.433,16,2.666,17,1.03,19,1.416,20,0.005,21,1.179,22,1.321,27,0.338,30,3.204,31,3.204,32,3.204,34,0.041,35,0.789,36,1.082,43,2.419,44,0.883,51,2.455,56,1.445,57,2.733,58,3.759,62,1.407,63,2.733,69,2.733,72,0.003,73,0.003,93,3.181,94,1.283,118,0.378,124,2.518,145,1.653,168,1.981,185,0.765,196,1.733,200,1.066,201,3.127,292,2.017,319,1.325,321,1.446,324,1.473,327,4.275,346,4.1,416,1.961,740,2.951,760,3.08,820,2.386,827,2.49,1103,6.488,1104,2.937,1105,4.06,1106,4.576,1107,2.017,1108,2.937,1109,2.49,1110,2.49,1111,3.455,1112,5.951,1113,3.035,1114,2.937,1115,2.937,1116,4.421,1117,2.937,1118,2.49,1119,2.937,1120,2.937,1121,2.937,1122,4.421,1123,2.49,1124,2.937,1125,2.937,1126,2.937,1127,4.421,1128,2.49,1129,2.49,1130,4.421,1131,4.506,1132,4.506,1133,4.421,1134,4.421,1135,4.421,1136,2.937,1137,2.61,1138,2.937,1139,2.937,1140,3.747,1141,2.937,1142,4.421,1143,2.937,1144,2.937,1145,2.937,1146,2.937,1147,2.937,1424,5.344,1425,5.344,1426,5.344,1427,5.344,1428,4.787,1429,2.61,1430,5.344,1431,3.55,1432,3.55,1433,3.55,1434,3.55,1435,3.55,1436,3.55,1437,3.55,1438,3.55,1439,3.55]],["title/components/HomeComponent.html",[125,1.195,262,1.822]],["body/components/HomeComponent.html",[0,0.01,2,0.035,3,0.035,4,0.031,6,0.847,8,0.088,9,0.253,13,0.102,14,0.85,17,0.788,20,0.005,21,0.777,24,0.412,25,0.617,27,0.164,34,0.031,36,1.802,37,0.99,41,0.854,44,0.523,56,1.646,62,1.489,68,2.245,72,0.003,73,0.003,82,3.024,83,2.623,125,1.922,126,1.494,127,1.572,128,1.572,129,1.572,133,2.689,134,1.494,137,3.965,138,3.648,139,1.337,140,2.283,142,2.283,145,1.828,146,2.951,153,1.337,168,0.831,169,1.52,185,0.877,223,1.337,224,2.283,225,2.245,226,2.283,227,2.951,228,1.572,230,1.572,231,1.494,232,1.572,233,1.494,234,2.51,235,1.572,236,1.494,237,2.283,238,1.47,239,1.572,240,1.47,241,1.572,242,1.494,243,1.297,244,1.572,245,1.47,246,1.572,247,1.47,248,1.572,249,1.572,250,1.494,251,2.793,252,2.643,253,1.572,254,2.396,255,2.689,256,1.545,257,1.494,258,3.057,259,1.572,260,1.494,261,2.283,262,2.759,263,1.572,264,1.47,265,1.572,266,1.494,267,1.572,268,1.494,269,1.401,270,1.47,271,1.572,272,1.494,273,1.572,274,1.494,275,1.47,276,1.572,277,1.47,278,1.572,279,1.494,280,1.52,281,1.572,282,1.494,283,1.572,284,1.494,285,2.689,286,1.494,287,1.494,288,1.494,289,1.572,290,1.47,291,1.572,779,5.618,1293,6.322,1440,4.071,1441,5.912,1442,5.912,1443,5.912,1444,8.466,1445,5.912,1446,4.071,1447,5.297,1448,5.912,1449,5.297,1450,5.912,1451,5.297,1452,5.912,1453,5.297,1454,5.912,1455,5.912,1456,5.912,1457,5.912,1458,5.912,1459,5.297,1460,5.912,1461,4.071,1462,5.912,1463,4.071]],["title/modules/HomeModule.html",[373,2.133,388,3.71]],["body/modules/HomeModule.html",[0,0.018,2,0.061,3,0.061,4,0.053,20,0.005,27,0.383,34,0.065,72,0.004,73,0.004,185,1.496,223,2.28,262,3.569,373,3.572,375,3.943,376,5.499,377,4.19,378,3.551,388,7.266,393,5.1,394,2.316,395,4.061,397,4.944,585,5.464,586,4.332,1464,6.22,1465,6.22,1466,6.943,1467,6.943]],["title/interfaces/IHasId.html",[118,0.357,1020,3.916]],["body/interfaces/IHasId.html",[2,0.063,3,0.063,4,0.056,8,0.158,9,0.372,13,0.182,20,0.005,34,0.071,44,0.871,72,0.004,73,0.004,118,0.68,160,4.697,760,4.24,1016,5.638,1017,6.01,1018,6.01,1020,6.741,1021,4.882,1022,6.01]],["title/classes/IncrementDaysToShow.html",[0,0.013,1468,4.175]],["body/classes/IncrementDaysToShow.html",[0,0.021,2,0.057,3,0.057,4,0.05,6,1.172,7,1.367,8,0.143,9,0.35,10,2.161,12,2.107,13,0.248,14,0.804,17,1.007,19,1.04,20,0.005,21,0.865,22,0.97,24,0.667,25,0.998,27,0.266,28,0.84,34,0.068,35,0.645,39,1.646,72,0.004,73,0.004,85,4.616,94,2.298,245,2.377,1468,7.362,1469,5.898,1470,9.572,1471,6.583,1472,8.179,1473,6.583,1474,8.898,1475,6.583,1476,6.583]],["title/components/LibraryComponent.html",[125,1.195,264,1.822]],["body/components/LibraryComponent.html",[0,0.01,2,0.033,3,0.033,4,0.029,6,0.802,8,0.082,9,0.24,13,0.167,14,0.462,17,0.933,19,0.597,20,0.005,21,0.877,22,0.557,24,0.383,25,1.193,27,0.345,28,0.483,33,0.64,34,0.029,35,0.371,36,1.707,37,0.92,41,0.793,56,0.713,62,0.694,68,1.715,72,0.003,73,0.003,83,2.365,94,1.345,125,1.865,126,1.388,127,1.461,128,1.461,129,1.461,133,2.577,134,1.388,137,3.942,138,3.626,139,1.242,140,2.164,142,2.164,145,1.732,146,2.849,153,1.242,154,3.129,156,2.951,168,1.144,169,2.091,185,0.815,194,0.783,200,1.136,223,1.242,224,2.164,225,2.127,226,2.164,227,2.849,228,1.461,230,1.461,231,1.388,232,1.461,233,1.388,234,2.435,235,1.461,236,1.388,237,2.164,238,1.366,239,1.461,240,1.366,241,1.461,242,1.388,243,1.205,244,1.461,245,1.366,246,1.461,247,1.366,248,1.461,249,1.461,250,1.388,251,2.71,252,1.436,253,1.461,254,2.296,255,2.577,256,2.533,257,1.388,258,2.978,259,1.461,260,1.388,261,2.164,262,1.366,263,1.461,264,2.664,265,1.461,266,1.388,267,1.461,268,1.388,269,1.301,270,1.366,271,1.461,272,1.388,273,1.461,274,1.388,275,1.366,276,1.461,277,1.366,278,1.461,279,1.388,280,1.412,281,1.461,282,1.388,283,1.461,284,1.388,285,2.577,286,1.388,287,1.388,288,1.388,289,1.461,290,1.366,291,1.461,319,1.412,337,2.781,343,3.928,346,3.241,357,2.445,358,2.36,359,2.781,522,3.928,811,3.129,813,3.129,937,4.635,1477,3.782,1478,5.602,1479,5.602,1480,6.516,1481,7.376,1482,7.376,1483,6.672,1484,6.672,1485,5.602,1486,3.782,1487,3.782,1488,3.782,1489,3.782,1490,3.782,1491,3.782,1492,3.782,1493,3.782,1494,3.782,1495,3.782,1496,3.782,1497,3.782,1498,5.602,1499,3.782,1500,3.782,1501,3.782,1502,3.782,1503,5.602,1504,5.602]],["title/interfaces/LibraryEntry.html",[118,0.357,1480,4.175]],["body/interfaces/LibraryEntry.html",[2,0.062,3,0.062,4,0.054,8,0.153,9,0.366,13,0.239,20,0.005,34,0.054,44,0.878,56,1.798,72,0.004,73,0.004,94,2.383,118,0.604,930,6.169,1480,7.071,1505,7.072,1506,9.541,1507,9.541]],["title/modules/LibraryModule.html",[373,2.133,389,3.71]],["body/modules/LibraryModule.html",[0,0.016,2,0.055,3,0.055,4,0.049,20,0.005,27,0.401,34,0.061,72,0.004,73,0.004,185,1.365,223,2.08,254,3.325,264,3.489,373,3.375,375,3.597,376,5.276,377,3.822,378,3.239,389,7.416,391,6.028,393,4.818,394,2.112,395,3.705,397,4.67,429,4.656,431,5.24,585,5.162,586,3.951,986,5.24,1508,5.674,1509,5.674,1510,6.333,1511,6.333,1512,7.983,1513,5.674,1514,6.333]],["title/classes/LoadHistoryItems.html",[0,0.013,42,2.713]],["body/classes/LoadHistoryItems.html",[0,0.024,1,3.153,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.274,12,2.249,13,0.245,14,0.474,16,2.81,17,0.766,19,0.613,20,0.005,21,0.51,22,0.572,24,0.393,25,0.588,26,3.34,27,0.274,28,0.495,29,1.813,30,3.036,31,3.036,32,3.036,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.962,41,1.198,42,3.642,43,2.706,44,0.822,45,3.34,46,2.655,47,3.153,48,3.34,49,2.244,50,3.07,51,1.74,52,3.34,53,3.153,54,3.34,55,4.87,56,1.076,57,2.92,58,3.391,59,3.34,60,3.153,61,3.34,62,1.048,63,2.92,64,3.34,65,3.153,66,3.34,67,3.34,68,1.468,69,2.92,70,3.34,71,3.153,72,0.003,73,0.003,1515,2.27,1516,5.71,1517,3.881]],["title/classes/LoadHistoryItemsSucceeded.html",[0,0.013,47,2.787]],["body/classes/LoadHistoryItemsSucceeded.html",[0,0.024,1,3.153,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.455,12,2.249,13,0.245,14,0.474,15,2.721,16,3.57,17,0.766,19,0.613,20,0.005,21,0.51,22,0.572,24,0.393,25,0.588,26,3.34,27,0.274,28,0.495,29,1.813,30,3.036,31,3.036,32,3.036,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.34,41,1.198,42,3.07,43,2.39,44,0.761,45,3.962,46,2.655,47,3.741,48,3.34,49,2.244,50,3.07,51,1.74,52,3.34,53,3.153,54,3.34,55,4.87,56,1.076,57,2.92,58,3.391,59,3.34,60,3.153,61,3.34,62,1.048,63,2.92,64,3.34,65,3.153,66,3.34,67,3.34,68,1.468,69,2.92,70,3.34,71,3.153,72,0.003,73,0.003,1518,5.71,1519,3.881]],["title/classes/LoadItems.html",[0,0.013,96,3.391]],["body/classes/LoadItems.html",[0,0.023,2,0.045,3,0.045,4,0.039,6,1.305,7,1.432,8,0.111,9,0.298,10,2.233,11,1.835,12,2.207,13,0.246,14,0.625,17,0.892,19,0.808,20,0.005,21,0.673,22,0.754,24,0.518,25,0.775,27,0.207,28,0.653,34,0.075,35,0.866,37,1.245,38,1.606,39,2.209,41,1.074,44,0.85,49,3.473,51,2.929,68,1.315,72,0.003,73,0.003,74,4.667,75,5.927,76,3.589,77,3.439,80,5.106,81,5.106,82,4.519,83,2.653,84,2.636,85,3.589,86,3.763,87,4.667,88,3.309,89,1.976,90,5.106,91,3.439,92,4.49,93,2.123,94,1.228,95,5.795,96,5.297,1520,6.944,1521,5.118]],["title/components/LoadMoreComponent.html",[125,1.195,266,1.852]],["body/components/LoadMoreComponent.html",[0,0.01,2,0.036,3,0.036,4,0.032,6,0.853,7,0.631,8,0.089,9,0.255,13,0.149,14,0.502,17,0.868,19,0.649,20,0.005,21,0.92,22,0.605,24,0.416,25,0.623,27,0.31,28,0.524,34,0.032,36,1.814,37,1,41,1.918,56,0.774,62,0.754,68,1.799,72,0.003,73,0.003,83,2.446,94,1.429,125,1.929,126,1.508,127,1.587,128,1.587,129,1.587,133,2.703,134,1.508,137,3.968,138,3.65,139,1.349,140,2.299,142,2.299,145,1.841,146,2.964,153,1.349,155,2.101,156,3.397,168,1.216,169,2.222,185,0.885,194,0.85,195,1.704,200,1.234,206,2.153,223,1.349,224,2.299,225,2.26,226,2.299,227,2.964,228,1.587,230,1.587,231,1.508,232,1.587,233,1.508,234,2.519,235,1.587,236,1.508,237,2.299,238,1.484,239,1.587,240,1.484,241,1.587,242,1.508,243,1.309,244,1.587,245,1.484,246,1.587,247,1.484,248,1.587,249,1.587,250,1.508,251,2.803,252,1.56,253,1.587,254,2.408,255,2.703,256,1.56,257,1.508,258,3.24,259,1.587,260,1.508,261,2.299,262,1.484,263,1.587,264,1.484,265,1.587,266,2.817,267,1.587,268,1.508,269,1.414,270,1.484,271,1.587,272,1.508,273,1.587,274,1.508,275,1.484,276,1.587,277,1.484,278,1.587,279,1.508,280,1.534,281,1.587,282,1.508,283,1.587,284,1.508,285,2.703,286,1.508,287,1.508,288,1.508,289,1.587,290,1.484,291,1.587,1522,8.145,1523,7.297,1524,4.108,1525,7.674,1526,5.952,1527,5.952,1528,7.674,1529,7.674,1530,5.952,1531,4.108,1532,4.108,1533,4.924,1534,3.681,1535,4.108]],["title/classes/LoadOptions.html",[0,0.013,1536,3.71]],["body/classes/LoadOptions.html",[0,0.022,2,0.057,3,0.057,4,0.05,6,1.269,7,1.425,8,0.141,9,0.348,12,2.196,13,0.244,14,1.082,17,0.92,20,0.005,22,1.198,24,0.66,25,0.988,27,0.263,28,0.832,34,0.073,35,0.797,39,1.63,41,1.705,44,0.577,46,2.174,62,1.625,72,0.004,73,0.004,1536,6.514,1537,5.393,1538,8.129,1539,7.937,1540,7.283,1541,6.31]],["title/classes/LoadOptionsSucceeded.html",[0,0.013,1541,3.916]],["body/classes/LoadOptionsSucceeded.html",[0,0.022,2,0.054,3,0.054,4,0.048,6,1.243,7,1.402,8,0.135,9,0.339,10,2.088,12,2.161,13,0.248,14,0.965,17,0.982,19,0.984,20,0.005,21,0.819,22,1.278,24,0.631,25,0.944,27,0.252,28,0.795,34,0.072,35,0.774,39,1.558,41,1.657,44,0.833,46,2.078,62,1.793,72,0.004,73,0.004,1536,5.809,1537,5.154,1539,7.078,1540,7.773,1541,6.734,1542,5.154,1543,7.9,1544,6.229]],["title/classes/LoadProfile.html",[0,0.013,1545,3.391]],["body/classes/LoadProfile.html",[0,0.023,2,0.048,3,0.048,4,0.042,6,1.293,7,1.426,8,0.118,9,0.31,10,2.15,12,2.198,13,0.247,14,0.666,17,0.921,19,0.861,20,0.005,21,0.717,22,0.803,24,0.552,25,0.826,27,0.293,28,0.696,33,0.922,34,0.075,35,0.85,39,2.168,41,1.52,43,2.787,44,0.851,46,2.417,72,0.004,73,0.004,84,2.751,243,3.102,1046,4.663,1515,3.189,1545,5.469,1546,4.009,1547,7.246,1548,6.316,1549,5.452,1550,5.624,1551,5.081,1552,5.624,1553,5.081,1554,5.624,1555,5.081]],["title/classes/LoadProfileSucceeded.html",[0,0.013,1551,3.538]],["body/classes/LoadProfileSucceeded.html",[0,0.023,2,0.048,3,0.048,4,0.042,6,1.293,7,1.426,8,0.118,9,0.31,10,2.15,12,2.198,13,0.247,14,0.666,17,0.921,19,0.861,20,0.005,21,0.717,22,0.803,24,0.552,25,0.826,27,0.293,28,0.696,33,0.922,34,0.075,35,0.85,39,2.168,41,1.52,43,2.176,44,0.767,46,2.417,72,0.004,73,0.004,84,2.751,243,3.253,1046,4.663,1545,4.87,1546,4.009,1548,5.624,1550,6.316,1551,5.706,1552,5.624,1553,5.081,1554,5.624,1555,5.081,1556,5.452,1557,7.246,1558,5.452]],["title/classes/LoadProgressItems.html",[0,0.013,107,3.045]],["body/classes/LoadProgressItems.html",[0,0.023,2,0.04,3,0.04,4,0.035,6,1.324,7,1.443,8,0.1,9,0.277,10,2.135,11,2.393,12,2.224,13,0.245,14,0.562,17,0.844,19,0.727,20,0.005,21,0.605,22,0.679,24,0.466,25,0.698,27,0.301,28,0.588,33,0.779,34,0.076,35,0.887,37,1.12,38,1.445,39,2.265,41,1.354,43,2.72,44,0.831,46,2.487,49,2.537,51,1.967,58,2.63,72,0.003,73,0.003,82,3.302,83,1.939,97,4.028,98,2.977,99,3.559,102,4.339,103,3.095,104,4.009,105,5.221,106,5.01,107,4.499,108,4.339,109,4.028,110,4.339,111,3.896,112,4.339,113,4.028,114,4.339,115,3.302,116,4.339,117,4.028,1515,2.694,1559,6.456,1560,4.605]],["title/classes/LoadProgressItemsSucceeded.html",[0,0.013,109,3.148]],["body/classes/LoadProgressItemsSucceeded.html",[0,0.023,2,0.04,3,0.04,4,0.035,6,1.324,7,1.443,8,0.1,9,0.277,10,2.135,11,2.542,12,2.224,13,0.245,14,0.562,15,3.229,17,0.844,19,0.727,20,0.005,21,0.605,22,0.679,24,0.466,25,0.698,27,0.301,28,0.588,33,0.779,34,0.076,35,0.887,37,1.12,38,1.445,39,2.265,41,1.354,43,2.239,44,0.753,46,2.487,49,2.537,51,1.967,58,2.63,72,0.003,73,0.003,82,3.302,83,1.939,97,4.028,98,2.977,99,4.324,102,4.339,103,3.095,104,4.009,105,5.221,106,4.339,107,3.896,108,5.01,109,4.651,110,4.339,111,3.896,112,4.339,113,4.028,114,4.339,115,3.302,116,4.339,117,4.028,1561,6.456,1562,4.605]],["title/classes/LoadTimerInfo.html",[0,0.013,745,2.866]],["body/classes/LoadTimerInfo.html",[0,0.024,2,0.078,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,1.144,12,2.251,13,0.246,14,0.88,16,2.564,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,2.496,44,0.787,46,1.444,56,1.165,62,1.134,68,1.113,72,0.003,73,0.003,84,2.984,94,1.039,124,1.422,149,2.827,150,2.827,151,2.827,220,2.214,296,3.016,327,3.16,329,2.827,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.239,737,3.239,738,3.855,739,3.855,740,3.413,741,3.855,742,3.51,743,2.532,744,4.496,745,4.093,746,3.855,747,3.615,1515,2.532,1563,6.179,1564,4.328]],["title/components/LockedHistoryEntryComponent.html",[125,1.195,268,1.852]],["body/components/LockedHistoryEntryComponent.html",[0,0.008,2,0.029,3,0.029,4,0.025,6,0.72,8,0.071,9,0.215,11,1.616,13,0.172,14,0.4,17,0.884,19,0.517,20,0.005,21,0.804,22,0.483,24,0.509,25,0.762,27,0.339,28,0.418,34,0.025,35,0.321,36,2.979,37,0.797,41,0.687,43,2.06,44,0.445,56,0.947,62,0.922,68,1.572,72,0.003,73,0.003,83,2.222,124,1.076,125,1.752,126,1.202,127,1.265,128,1.265,129,1.265,133,2.362,134,1.202,135,2.51,136,2.51,137,3.891,138,3.579,139,1.076,140,1.941,142,1.941,144,4.202,145,1.554,146,2.649,152,3.508,153,1.076,155,1.675,156,3.124,157,4.372,168,1.027,169,1.876,180,3.033,184,1.636,185,0.706,186,1.916,187,1.977,188,1.809,189,1.977,194,0.678,195,1.359,196,1.599,200,0.984,201,1.786,202,2.201,203,2.201,204,2.044,206,1.717,223,1.076,224,1.941,225,1.908,226,1.941,227,2.649,228,1.265,230,1.265,231,1.202,232,1.265,233,1.202,234,2.288,235,1.265,236,1.202,237,1.941,238,1.183,239,1.265,240,1.183,241,1.265,242,1.202,243,1.044,244,1.265,245,1.183,246,1.265,247,1.183,248,1.265,249,1.265,250,1.202,251,2.546,252,1.244,253,1.265,254,2.105,255,2.362,256,1.244,257,1.202,258,3.029,259,1.265,260,1.202,261,1.941,262,1.183,263,1.265,264,1.183,265,1.265,266,1.202,267,1.265,268,2.518,269,2.96,270,1.183,271,1.265,272,1.202,273,1.265,274,1.202,275,1.183,276,1.265,277,1.183,278,1.265,279,1.202,280,1.223,281,1.265,282,1.202,283,1.265,284,1.202,285,2.362,286,1.202,287,1.202,288,1.202,289,1.265,290,1.183,291,1.265,329,3.138,489,2.408,490,2.297,753,3.474,1199,5.072,1369,2.935,1370,4.503,1371,4.503,1372,4.503,1374,6.996,1379,2.935,1392,5.479,1395,2.408,1403,2.935,1404,2.935,1405,2.71,1406,2.935,1407,2.71,1417,6.145,1418,4.503,1419,4.503,1420,4.503,1421,4.503,1565,8.13,1566,7.284,1567,3.276,1568,3.276,1569,3.276,1570,6.116,1571,3.276,1572,3.276,1573,4.159,1574,4.159]],["title/components/LoginComponent.html",[125,1.195,270,1.822]],["body/components/LoginComponent.html",[0,0.01,2,0.033,3,0.033,4,0.029,6,0.8,8,0.082,9,0.239,13,0.185,14,0.46,17,0.991,19,0.882,20,0.005,21,0.968,22,0.823,27,0.333,28,0.481,33,0.637,34,0.029,36,1.702,37,0.916,41,0.79,56,0.71,62,0.691,68,1.711,72,0.003,73,0.003,83,2.361,125,1.862,126,1.383,127,1.455,128,1.455,129,1.455,133,2.57,134,1.383,137,3.94,138,3.625,139,1.237,140,2.157,142,2.157,145,1.727,146,2.843,153,1.237,155,1.926,156,3.294,168,1.606,169,2.935,185,0.812,194,0.78,195,1.562,200,1.131,206,4.121,223,1.237,224,2.157,225,2.12,226,2.157,227,2.843,228,1.455,230,1.455,231,1.383,232,1.455,233,1.383,234,2.636,235,1.455,236,1.383,237,2.157,238,1.36,239,1.455,240,1.36,241,1.455,242,1.383,243,1.2,244,1.455,245,1.36,246,1.455,247,1.36,248,2.57,249,1.455,250,1.383,251,2.705,252,1.43,253,1.455,254,2.29,255,2.57,256,1.43,257,1.383,258,2.974,259,1.455,260,1.383,261,2.157,262,1.36,263,1.455,264,1.36,265,1.455,266,1.383,267,1.455,268,1.383,269,1.296,270,2.658,271,1.455,272,1.383,273,1.455,274,1.383,275,1.36,276,1.455,277,1.36,278,1.455,279,1.383,280,1.406,281,1.455,282,1.383,283,1.455,284,1.383,285,2.57,286,1.383,287,1.383,288,1.383,289,1.455,290,1.36,291,1.455,319,1.406,346,3.745,461,2.856,491,2.435,506,5.412,507,4.593,522,2.641,545,5.412,551,2.666,569,2.641,609,3.858,611,3.858,619,3.858,700,3.003,1223,2.531,1228,2.923,1575,3.766,1576,5.584,1577,5.584,1578,5.584,1579,5.584,1580,3.766,1581,3.766,1582,3.766,1583,3.766,1584,3.766,1585,3.766,1586,3.374,1587,3.374,1588,3.374,1589,3.374,1590,3.116,1591,3.116,1592,3.116,1593,3.766,1594,3.374]],["title/classes/Logout.html",[0,0.013,697,2.645]],["body/classes/Logout.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.365,7,1.479,8,0.095,9,0.267,10,1.648,12,2.279,13,0.245,14,1.115,17,0.706,20,0.005,24,0.444,25,0.665,27,0.252,28,0.56,33,0.742,34,0.077,35,0.923,39,1.977,44,0.739,72,0.003,73,0.003,234,2.913,394,1.463,461,4.044,472,4.795,535,2.299,537,2.358,539,2.358,548,3.694,551,3.465,609,3.269,611,3.269,612,3.269,619,3.269,656,3.949,685,2.565,689,3.764,690,3.354,691,3.764,692,3.543,693,3.764,694,4.491,695,3.764,696,3.764,697,4.681,698,4.614,699,3.764,700,3.354,701,3.764,1595,6.237]],["title/classes/MarkComplete.html",[0,0.013,115,2.581]],["body/classes/MarkComplete.html",[0,0.023,2,0.039,3,0.039,4,0.034,6,1.316,7,1.435,8,0.097,9,0.272,10,2.312,11,2.376,12,2.211,13,0.246,14,0.548,17,0.904,19,0.709,20,0.005,21,0.59,22,0.661,24,0.455,25,0.68,27,0.297,28,0.573,33,0.759,34,0.076,35,0.881,37,1.092,38,1.409,39,2.248,41,1.33,43,2.7,44,0.826,46,2.452,49,2.492,51,1.932,58,3.663,72,0.003,73,0.003,82,3.243,83,1.904,97,3.956,98,2.902,99,3.51,102,4.262,103,3.017,104,4.835,105,5.197,106,4.262,107,3.827,108,4.262,109,3.956,110,4.262,111,3.827,112,4.262,113,3.956,114,4.941,115,3.76,116,4.262,117,3.956,1515,2.626,1596,6.341,1597,6.341]],["title/interfaces/MarkCompleteEntity.html",[118,0.357,832,3.538]],["body/interfaces/MarkCompleteEntity.html",[2,0.047,3,0.047,4,0.041,7,1.106,8,0.117,9,0.308,11,1.426,13,0.203,20,0.005,24,0.547,27,0.291,34,0.066,35,0.846,44,0.764,51,2.193,72,0.004,73,0.004,88,5.983,89,3.127,93,3.839,94,1.944,118,0.572,168,1.93,194,2.032,518,3.157,704,3.257,715,2.521,760,4.07,832,5.678,978,2.981,1259,2.695,1261,4.493,1308,5.586,1339,5.047,1340,5.047,1341,5.047,1342,3.627,1345,3.785,1346,3.681,1347,3.785,1348,2.695,1349,2.76,1350,2.76,1358,3.785,1365,5.047,1366,5.047,1598,4.465,1599,4.465,1600,4.189,1601,4.189,1602,4.835,1603,4.835,1604,4.835,1605,4.835,1606,4.835,1607,4.835,1608,4.835,1609,4.835,1610,4.835,1611,4.835,1612,4.835,1613,4.835]],["title/interfaces/MarkCompleteItem.html",[118,0.357,754,3.916]],["body/interfaces/MarkCompleteItem.html",[2,0.063,3,0.063,4,0.055,8,0.157,9,0.371,13,0.232,20,0.005,34,0.055,44,0.82,72,0.004,73,0.004,88,6.213,89,3.58,93,3.987,94,2.225,118,0.612,754,6.719,760,4.14,1614,7.225,1615,7.225]],["title/interfaces/MarkCompletePayload.html",[104,2.713,118,0.357]],["body/interfaces/MarkCompletePayload.html",[2,0.06,3,0.06,4,0.053,8,0.15,9,0.362,13,0.212,20,0.005,34,0.07,44,0.909,51,2.887,56,1.305,62,1.271,72,0.004,73,0.004,93,2.873,94,2.185,104,4.537,118,0.67,122,4.051,124,2.274,751,4.856,752,4.477,757,5.092,759,5.729,760,2.984,761,6.059]],["title/classes/MarkCompleteSucceeded.html",[0,0.013,117,3.148]],["body/classes/MarkCompleteSucceeded.html",[0,0.023,2,0.04,3,0.04,4,0.035,6,1.324,7,1.443,8,0.1,9,0.277,10,2.135,11,2.393,12,2.224,13,0.245,14,0.562,17,0.844,19,0.727,20,0.005,21,0.605,22,0.679,24,0.466,25,0.698,27,0.301,28,0.588,33,0.779,34,0.076,35,0.887,37,1.12,38,1.445,39,2.265,41,1.354,43,2.239,44,0.753,46,2.487,49,2.537,51,1.967,58,3.593,72,0.003,73,0.003,82,3.302,83,1.939,97,4.028,98,2.977,99,3.559,102,4.339,103,3.095,104,4.87,105,5.221,106,4.339,107,3.896,108,4.339,109,4.028,110,4.339,111,3.896,112,4.339,113,4.028,114,4.339,115,3.302,116,5.01,117,4.651,1616,3.574,1617,6.456,1618,4.605]],["title/components/NavComponent.html",[125,1.195,272,1.852]],["body/components/NavComponent.html",[0,0.007,2,0.024,3,0.024,4,0.022,6,0.639,8,0.061,9,0.191,13,0.192,14,0.343,17,0.988,19,0.444,20,0.005,21,0.729,22,0.414,24,0.778,25,1.164,27,0.296,33,0.475,34,0.022,36,1.359,37,0.684,41,0.589,56,0.53,62,0.515,68,1.425,72,0.002,73,0.002,83,2.306,125,1.63,126,1.031,127,1.085,128,1.085,129,1.085,133,2.141,134,1.031,135,2.227,136,2.227,137,3.83,138,3.54,139,0.923,140,1.722,142,1.722,144,5.097,145,1.379,146,2.438,152,3.228,153,0.923,157,3.939,168,1.132,169,2.069,180,2.691,184,1.403,185,0.605,186,2.608,187,1.696,188,2.463,200,0.844,223,0.923,224,1.722,225,1.693,226,1.722,227,2.438,228,1.085,230,1.085,231,1.031,232,1.085,233,1.031,234,2.129,235,1.085,236,1.031,237,1.722,238,1.015,239,1.085,240,1.015,241,1.085,242,1.031,243,0.895,244,1.085,245,1.015,246,1.085,247,1.015,248,1.085,249,1.085,250,1.031,251,2.642,252,1.067,253,1.085,254,1.908,255,2.141,256,2.105,257,1.031,258,3.036,259,1.085,260,1.031,261,1.722,262,1.015,263,1.085,264,1.015,265,1.085,266,1.031,267,1.085,268,1.031,269,0.967,270,1.015,271,1.085,272,2.317,273,1.085,274,1.031,275,1.015,276,1.085,277,1.015,278,1.085,279,1.031,280,1.049,281,1.085,282,1.031,283,1.085,284,1.031,285,2.141,286,1.031,287,1.031,288,1.031,289,1.085,290,1.015,291,1.085,338,5.446,451,3.809,466,3.995,508,7.222,576,4.918,697,4.175,779,3.279,1041,4.587,1293,3.689,1619,2.81,1620,4.459,1621,4.459,1622,4.459,1623,6.311,1624,6.311,1625,6.311,1626,6.311,1627,5.754,1628,6.311,1629,6.883,1630,2.81,1631,2.81,1632,2.81,1633,2.81,1634,2.81,1635,2.81,1636,7.33,1637,7.821,1638,4.459,1639,2.81,1640,2.81,1641,5.544,1642,4.459,1643,5.544,1644,3.995,1645,2.81,1646,4.459,1647,4.459,1648,2.81,1649,4.459,1650,7.137,1651,5.544,1652,4.459,1653,4.459,1654,5.544,1655,4.459,1656,4.459,1657,5.544,1658,4.459,1659,2.81,1660,5.544,1661,4.459,1662,2.81,1663,2.81,1664,2.517,1665,2.81,1666,2.81,1667,2.517,1668,2.517,1669,2.81,1670,4.459,1671,4.459,1672,4.459,1673,4.459,1674,3.995]],["title/interfaces/NgSelectValue.html",[118,0.357,1021,3.391]],["body/interfaces/NgSelectValue.html",[2,0.062,3,0.062,4,0.055,8,0.155,9,0.369,13,0.179,20,0.005,22,1.267,34,0.071,44,0.867,72,0.004,73,0.004,118,0.677,160,5.966,760,3.706,1016,5.548,1017,5.914,1018,5.914,1020,5.548,1021,5.781,1022,7.922]],["title/classes/NotAuthenticated.html",[0,0.013,692,2.866]],["body/classes/NotAuthenticated.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.365,7,1.479,8,0.095,9,0.267,10,1.648,12,2.279,13,0.245,14,1.115,17,0.706,20,0.005,24,0.444,25,0.665,27,0.252,28,0.56,33,0.742,34,0.077,35,0.923,39,1.977,44,0.739,72,0.003,73,0.003,234,2.913,394,1.463,461,4.044,472,4.795,535,2.299,537,2.358,539,2.358,548,3.694,551,3.465,609,3.269,611,3.269,612,3.269,619,3.269,656,3.949,685,2.565,689,3.764,690,3.354,691,4.381,692,4.123,693,3.764,694,4.491,695,3.764,696,3.764,697,4.379,698,4.614,699,3.764,700,3.354,701,3.764,1675,6.237]],["title/interfaces/PieChartConfig.html",[118,0.357,725,3.391]],["body/interfaces/PieChartConfig.html",[2,0.054,3,0.054,4,0.048,8,0.135,9,0.339,13,0.218,20,0.005,21,0.819,25,0.944,34,0.07,44,0.807,72,0.004,73,0.004,89,3.998,94,2.19,118,0.666,702,4.028,703,4.835,704,5.236,705,6.398,706,4.58,707,4.58,708,4.58,709,4.58,710,4.58,711,4.58,712,4.58,713,4.58,714,4.58,716,3.759,717,4.58,718,4.368,719,4.58,720,4.028,721,4.58,722,4.58,723,4.58,724,4.835,725,5.31,726,6.709,727,6.709,728,6.709]],["title/injectables/PlatformsEffects.html",[292,1.584,1676,4.175]],["body/injectables/PlatformsEffects.html",[0,0.015,2,0.052,3,0.052,4,0.046,7,1.462,8,0.129,9,0.329,13,0.15,14,0.728,17,0.869,19,0.942,20,0.005,21,0.784,22,0.879,24,0.604,25,0.904,27,0.391,34,0.046,38,2.412,72,0.004,73,0.004,185,1.285,190,3.6,191,3.489,200,1.791,201,2.119,292,2.668,297,3.6,300,4.794,302,4.484,311,5.164,312,5.164,314,5.164,315,3.721,316,5.304,318,3.126,319,2.226,320,4.009,321,2.429,323,5.713,324,2.475,485,5.344,486,5.344,1150,6.786,1301,5.964,1536,6.601,1676,6.358,1677,5.965,1678,5.965,1679,7.684,1680,7.684,1681,7.684,1682,7.684,1683,5.965,1684,5.344]],["title/injectables/PlatformsService.html",[292,1.584,1150,3.538]],["body/injectables/PlatformsService.html",[0,0.015,2,0.053,3,0.053,4,0.047,8,0.169,9,0.335,13,0.196,14,0.747,17,0.973,19,0.966,20,0.005,21,0.804,22,1.15,27,0.366,34,0.06,35,0.599,44,0.541,72,0.004,73,0.004,94,1.468,118,0.432,145,2.415,168,1.595,185,1.318,200,1.836,201,3.056,292,2.7,319,2.283,321,2.491,324,2.537,346,3.779,416,3.377,976,4.496,1105,5.147,1106,5.147,1107,3.473,1113,4.435,1148,5.059,1149,5.479,1150,5.475,1151,8.119,1152,5.479,1153,5.479,1154,8.119,1155,5.479,1156,5.479,1157,5.479,1158,4.746,1159,5.479,1160,5.479,1161,5.479,1162,5.479,1429,4.496,1685,7.808,1686,6.115]],["title/interfaces/PlayingDisplayData.html",[118,0.357,755,3.71]],["body/interfaces/PlayingDisplayData.html",[2,0.057,3,0.057,4,0.05,8,0.142,9,0.349,11,2.524,13,0.239,20,0.005,27,0.329,34,0.062,72,0.004,73,0.004,94,2.338,115,4.747,118,0.627,196,3.19,748,4.805,749,5.854,750,5.854,751,6.219,752,6.175,753,5.273,754,7.205,755,5.986,756,8.317,757,6.826,758,8.317]],["title/components/PlayingItemComponent.html",[125,1.195,274,1.852]],["body/components/PlayingItemComponent.html",[0,0.007,2,0.026,3,0.026,4,0.023,6,0.661,8,0.064,9,0.198,11,1.507,13,0.187,14,0.358,17,0.963,19,0.729,20,0.005,21,0.85,22,0.953,24,0.577,25,0.864,27,0.351,28,0.374,33,0.496,34,0.023,35,0.452,36,1.737,37,0.714,41,0.615,43,1.941,44,0.408,49,2.933,51,0.894,56,0.553,62,0.538,68,2.007,72,0.002,73,0.003,82,2.359,83,2.607,91,3.1,92,2.983,93,1.914,115,3.306,125,1.664,126,1.077,127,1.133,128,1.133,129,1.133,133,2.202,134,1.077,135,2.304,136,2.304,137,3.848,138,3.54,139,2.564,140,1.782,142,1.782,144,3.992,145,1.427,146,2.497,152,3.594,153,0.963,154,4.717,155,1.5,156,2.985,157,4.198,162,3.335,168,1.436,169,2.624,174,4.192,180,2.784,184,1.465,185,0.632,186,1.716,187,1.77,188,1.62,189,1.77,190,1.77,191,1.716,194,0.607,195,1.217,196,1.432,200,0.881,201,1.042,202,1.971,203,1.971,204,1.83,206,3.684,219,2.427,220,2.359,221,3.817,222,5.348,223,0.963,224,1.782,225,1.751,226,1.782,227,2.497,228,1.133,229,3.817,230,1.133,231,1.077,232,1.133,233,1.077,234,2.174,235,1.133,236,1.077,237,1.782,238,1.059,239,1.133,240,1.059,241,1.133,242,1.077,243,0.935,244,1.133,245,1.059,246,1.133,247,1.059,248,1.133,249,1.133,250,1.077,251,2.419,252,1.114,253,1.133,254,1.962,255,2.202,256,1.114,257,1.077,258,2.695,259,1.133,260,1.077,261,1.782,262,1.059,263,1.133,264,1.059,265,1.133,266,1.077,267,1.133,268,1.077,269,1.009,270,1.059,271,1.133,272,1.077,273,1.133,274,2.373,275,1.059,276,1.133,277,1.059,278,1.133,279,1.077,280,1.095,281,1.133,282,1.077,283,1.133,284,1.077,285,2.202,286,1.077,287,1.077,288,1.077,289,1.133,290,1.059,291,1.133,487,2.277,488,2.277,755,4.192,761,1.83,764,2.628,765,4.133,766,4.133,767,5.108,770,2.628,772,4.717,775,2.628,776,4.133,779,3.392,855,7.778,1040,5.108,1041,4.717,1600,2.277,1601,2.277,1644,4.133,1687,8.681,1688,6.464,1689,2.933,1690,2.933,1691,2.933,1692,2.933,1693,2.933,1694,2.933,1695,4.613,1696,2.933,1697,2.933,1698,2.933,1699,2.933,1700,2.628,1701,2.933,1702,2.933,1703,2.933,1704,2.933,1705,2.933,1706,2.933,1707,4.613,1708,2.933,1709,2.933,1710,2.933,1711,2.933,1712,2.933,1713,2.628,1714,4.613,1715,4.613,1716,4.613,1717,4.613]],["title/pipes/PluralizePipe.html",[302,2.52,1718,3.916]],["body/pipes/PluralizePipe.html",[0,0.017,2,0.059,3,0.059,4,0.052,6,0.967,13,0.169,17,0.764,19,1.066,20,0.005,21,1.183,22,0.995,25,1.259,27,0.273,34,0.052,44,0.889,72,0.004,73,0.004,94,2.16,134,2.478,145,2.087,168,1.838,185,1.455,302,4.494,372,4.073,1054,5.584,1059,6.872,1718,6.447,1719,6.75,1720,8.307,1721,8.307,1722,9.389,1723,9.389,1724,6.75]],["title/interfaces/Profile.html",[118,0.357,243,1.608]],["body/interfaces/Profile.html",[2,0.066,3,0.066,4,0.058,8,0.165,9,0.383,13,0.191,20,0.005,34,0.058,44,0.839,72,0.004,73,0.004,118,0.631,243,2.846,1046,5.257,1725,7.617]],["title/components/ProfileComponent.html",[125,1.195,275,1.822]],["body/components/ProfileComponent.html",[0,0.009,2,0.03,3,0.03,4,0.027,6,0.756,8,0.076,9,0.226,13,0.191,14,0.426,17,0.968,19,0.833,20,0.005,21,1.052,22,0.777,24,0.644,25,0.964,27,0.336,28,0.445,34,0.027,36,1.607,37,0.849,41,0.732,44,0.467,56,0.658,62,0.64,68,1.634,72,0.003,73,0.003,83,2.285,89,2.456,125,1.802,126,1.281,127,1.348,128,1.348,129,1.348,133,2.456,134,1.281,137,3.914,138,3.601,139,1.146,140,2.037,142,2.037,144,4.322,145,1.631,146,2.737,153,1.146,155,1.785,156,3.202,157,4.469,168,1.299,169,2.374,180,3.183,185,0.752,186,2.042,187,2.106,188,1.927,189,2.106,194,0.722,200,1.048,201,1.24,206,1.829,223,1.146,224,2.037,225,2.003,226,2.037,227,2.737,228,1.348,230,1.348,231,1.281,232,1.348,233,1.281,234,2.353,235,1.348,236,1.281,237,2.037,238,1.26,239,1.348,240,1.26,241,1.348,242,1.281,243,2.026,244,2.456,245,2.296,246,1.348,247,1.26,248,1.348,249,1.348,250,1.281,251,2.619,252,1.325,253,1.348,254,2.188,255,2.456,256,1.325,257,1.281,258,2.89,259,1.348,260,1.281,261,2.037,262,1.26,263,1.348,264,1.26,265,1.348,266,1.281,267,1.348,268,1.281,269,1.201,270,1.26,271,1.348,272,1.281,273,1.348,274,1.281,275,2.559,276,1.348,277,1.26,278,1.348,279,1.281,280,1.303,281,1.348,282,1.281,283,1.348,284,1.281,285,2.456,286,1.281,287,1.281,288,1.281,289,1.348,290,1.26,291,1.348,394,2.121,491,2.256,492,3.127,507,4.994,518,3.086,548,2.971,551,3.036,653,2.709,1228,2.709,1229,3.127,1459,4.726,1627,6.142,1667,3.127,1668,3.127,1674,4.726,1726,3.49,1727,5.275,1728,5.275,1729,8.004,1730,7.087,1731,5.275,1732,3.49,1733,3.49,1734,3.49,1735,5.275,1736,3.49,1737,3.49,1738,6.359,1739,3.49,1740,3.49,1741,3.49,1742,3.49,1743,3.49,1744,3.49,1745,3.49,1746,3.49,1747,5.275]],["title/injectables/ProfileEffects.html",[292,1.584,1748,4.175]],["body/injectables/ProfileEffects.html",[0,0.013,2,0.045,3,0.045,4,0.04,7,1.499,8,0.113,9,0.301,13,0.131,14,0.637,17,0.901,19,0.824,20,0.005,21,0.686,22,0.769,24,0.712,25,1.066,27,0.378,34,0.04,38,2.674,72,0.004,73,0.004,185,1.124,190,3.149,191,3.052,200,1.567,201,1.854,292,2.498,297,3.149,300,5.315,302,4.756,303,5.508,311,5.726,312,5.726,314,5.726,315,4.389,316,5.549,318,2.735,319,1.948,320,3.507,321,2.125,323,3.507,324,2.165,493,4.317,1029,7.049,1044,4.317,1165,6.568,1299,6.612,1301,6.612,1545,5.726,1748,5.821,1749,5.218,1750,5.218,1751,7.035,1752,7.035,1753,7.035,1754,7.035,1755,7.035,1756,5.218,1757,7.035,1758,7.035,1759,7.035,1760,6.303,1761,7.035,1762,7.035,1763,5.218,1764,4.675]],["title/modules/ProfileModule.html",[373,2.133,390,3.71]],["body/modules/ProfileModule.html",[0,0.015,2,0.052,3,0.052,4,0.046,20,0.005,27,0.406,28,0.758,34,0.059,72,0.004,73,0.004,185,1.28,195,2.463,223,1.95,242,3.488,245,2.767,275,3.431,318,3.112,373,3.239,375,3.373,376,5.12,377,3.584,378,4.338,390,7.338,393,4.624,394,1.981,395,3.474,397,4.482,401,5.634,402,4.164,403,3.991,404,4.366,408,3.991,438,3.366,585,4.954,586,3.705,1024,5.32,1165,6.662,1748,4.913,1764,5.32,1765,5.32,1766,5.32,1767,5.32,1768,5.938,1769,5.938,1770,5.938,1771,5.938,1772,5.938,1773,5.938,1774,5.938]],["title/injectables/ProfileService.html",[292,1.584,1165,3.538]],["body/injectables/ProfileService.html",[0,0.014,2,0.049,3,0.049,4,0.043,8,0.121,9,0.315,13,0.219,14,0.68,17,0.989,19,1.299,20,0.005,21,1.081,22,1.211,27,0.367,33,0.942,34,0.056,35,0.545,43,2.206,44,0.873,72,0.004,73,0.004,118,0.393,145,2.272,168,1.786,185,1.199,200,1.671,201,2.921,243,2.34,292,2.581,319,2.078,321,2.267,324,2.309,346,3.993,416,3.074,576,3.256,1029,6.077,1046,4.887,1105,4.966,1106,4.966,1107,3.161,1113,4.172,1163,4.605,1164,4.987,1165,5.151,1166,7.833,1167,4.987,1168,4.987,1169,6.581,1170,4.987,1171,4.987,1172,4.987,1173,6.581,1174,4.987,1175,4.093,1176,4.987,1429,4.093,1775,7.346,1776,7.346,1777,5.566,1778,5.566]],["title/interfaces/ProfileState.html",[118,0.357,1779,3.916]],["body/interfaces/ProfileState.html",[2,0.086,3,0.057,4,0.05,8,0.142,9,0.35,13,0.165,20,0.005,24,0.665,27,0.359,28,0.838,33,1.111,34,0.075,35,0.911,72,0.004,73,0.004,118,0.628,194,1.691,243,2.832,438,2.885,659,4.281,660,3.442,661,3.442,1779,6.899,1780,5.883,1781,7.963,1782,5.883,1783,5.883,1784,5.883,1785,5.883,1786,5.883,1787,7.317,1788,5.883,1789,5.883,1790,7.317]],["title/interfaces/ProgressCollection.html",[118,0.357,1180,3.916]],["body/interfaces/ProgressCollection.html",[0,0.013,2,0.046,3,0.046,4,0.041,8,0.115,9,0.305,11,2.267,13,0.133,20,0.005,27,0.386,33,0.898,34,0.055,35,0.841,44,0.846,51,2.17,58,2.9,72,0.004,73,0.004,99,3.834,104,3.829,105,2.856,118,0.568,119,4.21,122,4.165,168,1.881,185,1.145,196,2.592,200,1.595,201,2.53,292,2.235,298,3.434,319,1.983,321,2.163,324,2.203,346,3.931,416,2.933,760,3.461,761,5.354,1105,4.044,1106,4.562,1107,3.017,1109,3.724,1110,3.724,1113,3.017,1118,3.724,1123,3.724,1128,3.724,1129,3.724,1131,3.724,1132,3.724,1140,3.724,1177,6.945,1178,4.394,1179,3.314,1180,6.234,1181,4.394,1182,4.394,1183,4.394,1184,4.394,1185,4.394,1186,4.394,1187,4.394,1188,4.394,1189,4.394,1190,4.394,1191,4.394,1192,4.394,1193,4.394,1194,4.394,1195,4.394,1196,4.394]],["title/injectables/ProgressEffects.html",[292,1.584,859,4.175]],["body/injectables/ProgressEffects.html",[0,0.01,2,0.035,3,0.035,4,0.031,7,1.48,8,0.087,9,0.251,13,0.101,14,0.49,17,0.913,19,0.634,20,0.005,21,0.528,22,0.592,24,0.769,25,1.15,27,0.367,34,0.031,38,3.065,72,0.003,73,0.003,107,4.582,111,4.582,115,3.882,185,0.865,190,2.423,191,2.349,192,3.117,193,3.117,200,1.206,201,1.427,292,2.168,297,2.423,298,5.624,300,5.562,302,4.812,303,5.972,311,5.662,312,5.662,314,5.662,315,4.736,316,5.672,318,2.105,319,1.499,320,2.699,321,1.636,322,2.952,323,2.699,324,1.666,325,3.322,326,3.598,487,3.117,488,3.117,859,4.843,1299,6.539,1308,4.543,1320,4.543,1600,3.117,1601,3.117,1700,3.598,1713,5.245,1791,4.016,1792,7.592,1793,4.016,1794,5.854,1795,5.854,1796,5.854,1797,5.854,1798,5.854,1799,5.854,1800,4.843,1801,4.843,1802,5.854,1803,5.854,1804,4.016,1805,5.854,1806,5.854,1807,5.854,1808,5.854,1809,5.854,1810,5.854,1811,4.016,1812,5.854,1813,5.854,1814,5.854,1815,5.854,1816,5.854,1817,5.854,1818,5.854,1819,4.016,1820,5.854,1821,5.854,1822,5.854,1823,5.245,1824,5.854,1825,5.854,1826,4.016]],["title/interfaces/ProgressEntity.html",[99,2.409,118,0.357]],["body/interfaces/ProgressEntity.html",[2,0.049,3,0.049,4,0.043,7,1.129,8,0.121,9,0.315,13,0.206,20,0.005,24,0.564,27,0.297,34,0.067,35,0.857,41,1.834,44,0.865,51,1.696,72,0.004,73,0.004,89,2.15,99,3.507,118,0.581,122,5.114,168,1.907,194,2.043,518,4.297,576,3.256,704,3.359,715,2.6,760,4.022,761,5.455,1259,2.78,1261,4.539,1320,4.32,1339,5.151,1340,5.151,1341,5.151,1342,3.741,1345,3.903,1346,3.757,1347,3.903,1348,2.78,1349,2.847,1350,2.847,1352,4.32,1355,5.701,1356,4.32,1358,3.903,1365,5.151,1366,3.903,1827,4.605,1828,4.987,1829,4.987,1830,4.987,1831,4.987,1832,4.987,1833,4.987]],["title/interfaces/ProgressItem.html",[118,0.357,752,3.263]],["body/interfaces/ProgressItem.html",[2,0.059,3,0.059,4,0.052,8,0.148,9,0.358,13,0.226,20,0.005,34,0.069,44,0.914,51,2.073,56,1.282,62,1.248,72,0.004,73,0.004,93,2.822,94,2.167,104,3.657,118,0.665,122,5.507,124,2.234,751,4.769,752,5.396,757,5.001,759,5.627,760,4.056,761,6.028]],["title/injectables/ProgressService.html",[292,1.584,298,3.263]],["body/injectables/ProgressService.html",[0,0.011,2,0.037,3,0.037,4,0.033,8,0.092,9,0.262,11,1.125,13,0.227,14,0.52,17,1.025,19,1.399,20,0.005,21,1.164,22,1.305,27,0.366,33,0.721,34,0.047,35,0.765,43,2.343,44,0.88,49,2.401,51,2.378,58,3.178,72,0.003,73,0.003,99,3.41,104,4.196,105,2.29,115,3.124,118,0.432,119,4.835,122,3.573,145,1.889,168,1.955,185,0.918,196,2.079,200,1.279,201,3.055,292,2.242,298,3.95,319,1.59,321,1.735,324,1.767,346,4.052,416,2.352,760,3.077,761,4.868,1105,4.432,1106,4.883,1107,2.419,1109,2.987,1110,2.987,1113,3.47,1118,2.987,1123,2.987,1128,2.987,1129,2.987,1131,2.987,1132,2.987,1140,4.284,1177,6.056,1178,3.524,1179,2.657,1180,6.412,1181,3.524,1182,3.524,1183,5.054,1184,3.524,1185,3.524,1186,3.524,1187,5.054,1188,3.524,1189,3.524,1190,3.524,1191,5.054,1192,5.054,1193,5.054,1194,3.524,1195,3.524,1196,3.524,1428,5.473,1429,3.132,1834,6.109,1835,6.109,1836,6.109,1837,6.109,1838,4.259,1839,4.259,1840,4.259,1841,4.259,1842,4.259,1843,4.259]],["title/components/RegisterComponent.html",[125,1.195,277,1.822]],["body/components/RegisterComponent.html",[0,0.01,2,0.033,3,0.033,4,0.029,6,0.805,8,0.082,9,0.241,13,0.185,14,0.464,17,0.993,19,0.888,20,0.005,21,0.972,22,0.828,27,0.334,28,0.485,33,0.643,34,0.029,36,1.712,37,0.924,41,0.797,56,0.716,62,0.697,68,1.719,72,0.003,73,0.003,83,2.369,125,1.868,126,1.394,127,1.467,128,1.467,129,1.467,133,2.583,134,1.394,137,3.943,138,3.627,139,1.247,140,2.17,142,2.17,145,1.738,146,2.855,153,1.247,155,1.942,156,3.304,168,1.611,169,2.945,185,0.818,194,0.786,195,1.576,200,1.141,206,3.874,223,1.247,224,2.17,225,2.133,226,2.17,227,2.855,228,1.467,230,1.467,231,1.394,232,1.467,233,1.394,234,2.643,235,1.467,236,1.394,237,2.17,238,1.372,239,1.467,240,1.372,241,1.467,242,1.394,243,1.21,244,1.467,245,1.372,246,1.467,247,1.372,248,1.467,249,1.467,250,1.394,251,2.715,252,1.442,253,1.467,254,2.302,255,2.583,256,1.442,257,1.394,258,2.983,259,1.467,260,1.394,261,2.17,262,1.372,263,1.467,264,1.372,265,1.467,266,1.394,267,1.467,268,1.394,269,1.307,270,1.372,271,1.467,272,1.394,273,1.467,274,1.394,275,1.372,276,1.467,277,2.669,278,1.467,279,1.394,280,1.418,281,1.467,282,1.394,283,1.467,284,1.394,285,2.583,286,1.394,287,1.394,288,1.394,289,1.467,290,1.372,291,1.467,319,1.418,346,3.755,462,4.649,491,2.456,506,5.435,507,4.612,522,2.663,545,5.435,569,2.663,1223,2.553,1228,2.948,1587,3.403,1588,3.403,1589,3.403,1590,3.142,1591,3.142,1592,3.142,1594,3.403,1844,3.798,1845,5.619,1846,5.619,1847,5.619,1848,7.392,1849,7.392,1850,7.392,1851,5.619,1852,5.619,1853,3.798,1854,3.798,1855,3.798,1856,3.798,1857,3.798,1858,3.798,1859,3.798]],["title/classes/Remove.html",[0,0.013,49,1.983]],["body/classes/Remove.html",[0,0.023,2,0.045,3,0.045,4,0.039,6,1.305,7,1.432,8,0.111,9,0.298,10,2.233,11,1.835,12,2.207,13,0.246,14,0.625,17,0.892,19,0.808,20,0.005,21,0.673,22,0.754,24,0.518,25,0.775,27,0.207,28,0.653,34,0.075,35,0.866,37,1.245,38,1.606,39,2.209,41,1.074,44,0.85,49,3.663,51,2.929,68,1.315,72,0.003,73,0.003,74,4.667,75,5.927,76,3.589,77,3.439,80,5.106,81,5.106,82,4.519,83,2.653,84,2.636,85,3.589,86,3.763,87,4.667,88,3.309,89,1.976,90,5.106,91,3.439,92,4.49,93,2.123,94,1.228,95,5.106,96,4.667,1860,6.944,1861,5.118]],["title/classes/RemoveHistoryItem.html",[0,0.013,50,2.713]],["body/classes/RemoveHistoryItem.html",[0,0.024,1,3.104,2,0.033,3,0.033,4,0.029,5,2.157,6,1.341,7,1.453,8,0.082,9,0.241,10,2.319,11,2.258,12,2.239,13,0.246,14,0.464,16,2.775,17,0.836,19,0.6,20,0.005,21,0.499,22,0.56,24,0.385,25,0.576,26,3.287,27,0.27,28,0.485,29,1.774,30,2.998,31,2.998,32,2.998,33,0.643,34,0.077,35,0.906,36,2.852,37,0.924,38,1.192,39,2.313,40,3.287,41,1.179,42,3.022,43,2.691,44,0.851,45,3.287,46,2.631,47,3.104,48,3.913,49,2.209,50,3.597,51,2.604,52,3.287,53,3.104,54,3.287,55,4.832,56,1.059,57,2.874,58,3.365,59,3.287,60,3.104,61,3.287,62,1.031,63,2.874,64,3.287,65,3.104,66,3.287,67,3.287,68,1.444,69,2.874,70,3.287,71,3.104,72,0.003,73,0.003,1515,2.222,1862,5.619,1863,5.619]],["title/classes/RemoveHistoryItemSucceeded.html",[0,0.013,53,2.787]],["body/classes/RemoveHistoryItemSucceeded.html",[0,0.024,1,3.153,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.274,12,2.249,13,0.245,14,0.474,16,2.81,17,0.766,19,0.613,20,0.005,21,0.51,22,0.572,24,0.393,25,0.588,26,3.34,27,0.274,28,0.495,29,1.813,30,3.036,31,3.036,32,3.036,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.34,41,1.198,42,3.07,43,2.39,44,0.822,45,3.34,46,2.655,47,3.153,48,3.34,49,2.244,50,3.07,51,2.537,52,3.962,53,3.741,54,3.34,55,4.87,56,1.076,57,2.92,58,3.391,59,3.34,60,3.153,61,3.34,62,1.048,63,2.92,64,3.34,65,3.153,66,3.34,67,3.34,68,1.468,69,2.92,70,3.34,71,3.153,72,0.003,73,0.003,77,2.608,1864,5.71,1865,3.881]],["title/classes/RemoveProgressItem.html",[0,0.013,111,3.045]],["body/classes/RemoveProgressItem.html",[0,0.023,2,0.039,3,0.039,4,0.034,6,1.316,7,1.435,8,0.097,9,0.272,10,2.312,11,2.376,12,2.211,13,0.246,14,0.548,17,0.904,19,0.709,20,0.005,21,0.59,22,0.661,24,0.455,25,0.68,27,0.297,28,0.573,33,0.759,34,0.076,35,0.881,37,1.092,38,1.409,39,2.248,41,1.33,43,2.7,44,0.862,46,2.452,49,2.492,51,2.74,58,2.583,72,0.003,73,0.003,82,3.243,83,1.904,97,3.956,98,2.902,99,3.51,102,4.262,103,3.017,104,3.954,105,5.197,106,4.262,107,3.827,108,4.262,109,3.956,110,4.941,111,4.437,112,4.262,113,3.956,114,4.262,115,3.243,116,4.262,117,3.956,1515,2.626,1866,6.341,1867,6.341]],["title/classes/RemoveProgressItemSucceeded.html",[0,0.013,113,3.148]],["body/classes/RemoveProgressItemSucceeded.html",[0,0.023,2,0.04,3,0.04,4,0.035,6,1.324,7,1.443,8,0.1,9,0.277,10,2.135,11,2.393,12,2.224,13,0.245,14,0.562,17,0.844,19,0.727,20,0.005,21,0.605,22,0.679,24,0.466,25,0.698,27,0.301,28,0.588,33,0.779,34,0.076,35,0.887,37,1.12,38,1.445,39,2.265,41,1.354,43,2.239,44,0.831,46,2.487,49,2.537,51,2.688,58,2.63,72,0.003,73,0.003,77,3.095,82,3.302,83,1.939,97,4.028,98,2.977,99,3.559,102,4.339,103,3.095,104,4.009,105,5.221,106,4.339,107,3.896,108,4.339,109,4.028,110,4.339,111,3.896,112,5.01,113,4.651,114,4.339,115,3.302,116,4.339,117,4.028,1868,6.456,1869,4.605]],["title/classes/Reset.html",[0,0.013,394,1.683]],["body/classes/Reset.html",[0,0.023,2,0.044,3,0.044,4,0.039,6,1.332,7,1.454,8,0.11,9,0.296,11,1.342,12,2.241,13,0.243,14,0.958,17,0.782,20,0.005,24,0.514,25,0.77,27,0.317,28,0.648,33,0.859,34,0.076,35,0.891,37,2.212,39,2.204,44,0.611,46,1.694,56,1.302,62,1.267,72,0.003,73,0.003,84,2.98,94,1.219,99,3.298,119,4.115,124,2.269,139,2.986,149,3.16,150,3.16,151,3.16,296,4.437,394,3.102,736,3.621,737,3.621,1179,3.168,1870,5.276,1871,3.413,1872,6.908,1873,4.844,1874,4.844,1875,4.466]],["title/classes/ResetPassword.html",[0,0.013,612,2.645]],["body/classes/ResetPassword.html",[0,0.024,2,0.037,3,0.037,4,0.033,6,1.357,7,1.47,8,0.092,9,0.261,10,2.06,12,2.266,13,0.247,14,1.081,17,0.807,19,0.672,20,0.005,21,0.559,22,0.627,24,0.431,25,0.644,27,0.246,28,0.543,33,0.719,34,0.077,35,0.917,39,1.95,44,0.816,72,0.003,73,0.003,234,2.894,394,1.418,461,3.987,472,4.746,535,2.229,537,2.287,539,2.287,548,4.23,551,3.407,609,3.198,611,3.198,612,3.74,619,3.198,656,3.894,685,2.488,689,3.682,690,3.281,691,3.682,692,3.466,693,3.682,694,4.429,695,3.682,696,3.682,697,4.327,698,4.56,699,3.682,700,3.281,701,4.307,1082,3.518,1876,6.102,1877,4.252]],["title/classes/ResetTimer.html",[0,0.013,735,2.866]],["body/classes/ResetTimer.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.47,8,0.097,9,0.271,11,1.18,12,2.265,13,0.244,14,0.973,16,2.621,17,0.715,20,0.005,24,0.452,25,0.677,27,0.296,28,0.57,29,2.086,33,0.755,34,0.077,35,0.914,39,2.245,41,0.937,43,1.341,44,0.649,46,1.49,56,1.191,62,1.159,68,1.148,72,0.003,73,0.003,84,3.027,94,1.072,124,1.467,149,2.891,150,2.891,151,2.891,220,2.284,296,3.084,327,3.231,329,2.891,394,1.49,729,3.49,730,2.695,732,3.942,733,4.575,734,5.272,735,4.165,736,3.312,737,3.312,738,3.942,739,3.942,740,3.49,741,3.942,742,3.589,743,2.613,744,3.942,745,3.589,746,3.942,747,3.696,1878,6.319]],["title/interfaces/RouteEntry.html",[118,0.357,1636,4.175]],["body/interfaces/RouteEntry.html",[2,0.058,3,0.058,4,0.051,8,0.145,9,0.353,13,0.241,20,0.005,22,1.377,27,0.269,34,0.051,44,0.894,72,0.004,73,0.004,89,3.456,118,0.583,144,5.31,188,3.681,338,5.832,508,7.734,1636,6.819,1637,8.375,1650,8.375,1879,6.665,1880,9.348,1881,5.972,1882,5.972]],["title/interfaces/RouterStateUrl.html",[118,0.357,900,3.916]],["body/interfaces/RouterStateUrl.html",[0,0.014,2,0.048,3,0.048,4,0.043,6,0.794,8,0.12,9,0.314,13,0.206,20,0.005,24,0.561,27,0.367,28,0.708,33,0.938,34,0.072,35,0.914,44,0.726,72,0.004,73,0.004,118,0.58,156,2.217,168,1.132,194,1.698,331,4.302,338,4.57,350,3.458,407,3.887,437,4.076,438,2.435,451,4.952,565,5.686,573,7.237,659,3.84,660,2.905,661,2.905,895,4.586,897,4.586,899,4.586,900,6.368,901,8.326,902,4.302,903,4.586,904,4.586,905,6.1,906,4.586,907,4.586,908,4.586,909,4.586,910,4.586,911,4.586,912,6.061,913,4.586,914,6.061,915,7.714,916,4.586,917,4.586,918,6.061]],["title/classes/Save.html",[0,0.013,296,2.463]],["body/classes/Save.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.319,7,1.441,8,0.106,9,0.289,10,1.779,11,1.293,12,2.222,13,0.246,14,0.822,17,0.871,19,0.773,20,0.005,21,0.643,22,0.721,24,0.495,25,0.741,27,0.311,28,0.624,33,0.828,34,0.076,35,0.881,37,2.187,39,2.175,44,0.596,46,1.632,56,1.269,62,1.235,72,0.003,73,0.003,84,2.923,94,1.174,99,3.214,119,5.1,124,2.212,139,2.952,149,3.08,150,3.08,151,3.08,296,4.579,394,2.901,736,3.529,737,3.529,1179,3.052,1870,5.574,1871,3.288,1873,4.722,1874,4.722,1875,4.354,1883,4.892,1884,6.733,1885,4.892]],["title/classes/SaveSucceeded.html",[0,0.013,1875,3.263]],["body/classes/SaveSucceeded.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.319,7,1.441,8,0.106,9,0.289,10,1.779,11,2.298,12,2.222,13,0.246,14,0.822,15,3.43,17,0.871,19,0.773,20,0.005,21,0.643,22,0.721,24,0.495,25,0.741,27,0.311,28,0.624,33,0.828,34,0.076,35,0.881,37,2.187,39,2.175,44,0.596,46,1.632,56,1.269,62,1.235,72,0.003,73,0.003,84,2.923,94,1.174,99,4.291,119,4.036,124,2.212,139,2.952,149,3.08,150,3.08,151,3.08,296,4.387,394,2.901,736,3.529,737,3.529,1179,3.052,1870,5.574,1871,3.288,1873,4.722,1874,5.399,1875,4.978,1886,6.733,1887,4.892]],["title/classes/SaveTimerInfo.html",[0,0.013,740,2.787]],["body/classes/SaveTimerInfo.html",[0,0.024,2,0.083,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,1.144,12,2.251,13,0.246,14,0.88,16,2.564,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,1.3,44,0.638,46,1.444,56,1.165,62,1.134,68,1.113,72,0.003,73,0.003,84,2.984,94,1.039,124,1.422,149,2.827,150,2.827,151,2.827,220,2.214,296,3.016,327,4.421,329,2.827,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.239,737,3.239,738,3.855,739,4.496,740,3.98,741,3.855,742,3.51,743,2.532,744,3.855,745,3.51,746,3.855,747,3.615,1888,3.878,1889,6.179,1890,4.328]],["title/classes/SaveTimerInfoSucceeded.html",[0,0.013,742,2.866]],["body/classes/SaveTimerInfoSucceeded.html",[0,0.024,2,0.078,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,2.196,12,2.251,13,0.246,14,0.88,15,3.035,16,3.586,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,1.3,44,0.638,46,1.444,56,1.165,62,1.134,68,1.113,72,0.003,73,0.003,84,2.984,94,1.039,124,1.422,149,2.827,150,2.827,151,2.827,220,2.214,296,3.016,327,3.16,329,2.827,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.239,737,3.239,738,3.855,739,3.855,740,3.413,741,4.496,742,4.093,743,2.532,744,3.855,745,3.51,746,3.855,747,3.615,1891,6.179,1892,4.328]],["title/classes/SetAttemptingLogin.html",[0,0.013,1893,3.916]],["body/classes/SetAttemptingLogin.html",[0,0.022,2,0.054,3,0.054,4,0.047,6,1.239,7,1.398,8,0.134,9,0.337,10,2.078,12,2.155,13,0.248,14,0.755,17,0.979,19,0.977,20,0.005,21,0.813,22,0.911,24,0.626,25,0.937,27,0.25,28,0.79,34,0.072,35,0.771,39,1.967,44,0.547,72,0.004,73,0.004,84,2.986,89,3.629,461,3.164,507,3.859,542,4.801,655,6.105,684,4.338,694,3.513,1893,6.712,1894,5.118,1895,7.774,1896,6.186,1897,7.866,1898,6.186,1899,7.748,1900,7.047,1901,6.105]],["title/classes/SetEndTime.html",[0,0.013,92,3.263]],["body/classes/SetEndTime.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.293,7,1.421,8,0.108,9,0.291,10,2.386,11,1.797,12,2.189,13,0.247,14,0.606,17,0.944,19,0.784,20,0.005,21,0.653,22,0.732,24,0.503,25,0.752,27,0.201,28,0.634,34,0.075,35,0.857,37,1.208,38,1.558,39,2.186,41,1.042,44,0.845,49,3.436,51,2.91,68,1.276,72,0.003,73,0.003,74,4.571,75,6.131,76,3.482,77,3.337,80,5.001,81,5.001,82,4.471,83,2.625,84,2.582,85,3.482,86,3.651,87,4.571,88,3.21,89,1.918,90,5.705,91,3.337,92,5.017,93,3.746,94,2.099,95,5.001,96,4.571,1902,6.802,1903,6.802]],["title/classes/SetGame.html",[0,0.013,149,2.308]],["body/classes/SetGame.html",[0,0.024,2,0.078,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,1.144,12,2.251,13,0.246,14,0.88,16,2.564,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,1.3,44,0.787,46,1.444,56,1.629,62,1.134,68,1.113,72,0.003,73,0.003,84,2.984,94,1.039,124,1.422,149,3.297,150,2.827,151,2.827,220,2.214,296,3.016,327,3.16,329,2.827,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.777,737,3.239,738,3.855,739,3.855,740,3.413,741,3.855,742,3.51,743,2.532,744,3.855,745,3.51,746,3.855,747,3.615,1904,3.878,1905,6.179,1906,4.328]],["title/classes/SetGame-1.html",[0,0.011,149,1.93,372,2.546]],["body/classes/SetGame-1.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.319,7,1.441,8,0.106,9,0.289,10,1.779,11,1.293,12,2.222,13,0.246,14,0.822,17,0.871,19,0.773,20,0.005,21,0.643,22,0.721,24,0.495,25,0.741,27,0.311,28,0.624,33,0.828,34,0.076,35,0.881,37,2.187,39,2.175,44,0.795,46,1.632,56,1.694,62,1.235,72,0.003,73,0.003,84,2.923,94,1.174,99,3.214,119,4.036,124,2.212,139,2.952,149,3.522,150,3.08,151,3.08,296,4.387,394,2.901,736,4.036,737,3.529,1179,3.052,1870,5.574,1871,3.288,1873,4.722,1874,4.722,1875,4.354,1904,4.383,1907,6.733,1908,4.892]],["title/classes/SetLastMonth.html",[0,0.013,1909,3.538]],["body/classes/SetLastMonth.html",[0,0.023,2,0.051,3,0.051,4,0.045,6,1.322,7,1.453,8,0.127,9,0.325,12,2.239,13,0.245,14,1.155,17,0.857,20,0.005,24,0.591,25,0.884,27,0.236,28,0.745,34,0.076,35,0.872,72,0.004,73,0.004,84,3.38,251,3.064,1270,5.57,1271,5.57,1272,5.57,1909,5.899,1910,6.185,1911,4.29,1912,7.575,1913,6.529,1914,5.879,1915,5.312,1916,5.879,1917,5.312,1918,5.879,1919,5.312]],["title/classes/SetLastWeek.html",[0,0.013,1917,3.538]],["body/classes/SetLastWeek.html",[0,0.023,2,0.051,3,0.051,4,0.045,6,1.322,7,1.453,8,0.127,9,0.325,12,2.239,13,0.245,14,1.155,17,0.857,20,0.005,24,0.591,25,0.884,27,0.236,28,0.745,34,0.076,35,0.872,72,0.004,73,0.004,84,3.38,251,3.064,1270,5.57,1271,5.57,1272,5.57,1909,5.312,1910,6.185,1911,4.29,1913,5.879,1914,5.879,1915,5.312,1916,6.529,1917,5.899,1918,5.879,1919,5.312,1920,7.575]],["title/classes/SetPlatform.html",[0,0.013,150,2.308]],["body/classes/SetPlatform.html",[0,0.024,2,0.078,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,1.144,12,2.251,13,0.246,14,0.88,16,2.564,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,1.3,44,0.787,46,1.444,56,1.165,62,1.586,68,1.113,72,0.003,73,0.003,84,2.984,94,1.039,124,1.422,149,2.827,150,3.297,151,2.827,220,2.214,296,3.016,327,3.16,329,2.827,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.239,737,3.777,738,3.855,739,3.855,740,3.413,741,3.855,742,3.51,743,2.532,744,3.855,745,3.51,746,3.855,747,3.615,1542,3.581,1921,6.179,1922,4.328]],["title/classes/SetPlatform-1.html",[0,0.011,150,1.93,372,2.546]],["body/classes/SetPlatform-1.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.319,7,1.441,8,0.106,9,0.289,10,1.779,11,1.293,12,2.222,13,0.246,14,0.822,17,0.871,19,0.773,20,0.005,21,0.643,22,0.721,24,0.495,25,0.741,27,0.311,28,0.624,33,0.828,34,0.076,35,0.881,37,2.187,39,2.175,44,0.795,46,1.632,56,1.269,62,1.649,72,0.003,73,0.003,84,2.923,94,1.174,99,3.214,119,4.036,124,2.212,139,2.952,149,3.08,150,3.522,151,3.08,296,4.387,394,2.901,736,3.529,737,4.036,1179,3.052,1542,4.048,1870,5.574,1871,3.288,1873,4.722,1874,4.722,1875,4.354,1923,6.733,1924,4.892]],["title/classes/SetProfileDisplayName.html",[0,0.013,1553,3.538]],["body/classes/SetProfileDisplayName.html",[0,0.023,2,0.046,3,0.046,4,0.041,6,1.28,7,1.414,8,0.115,9,0.304,10,2.361,12,2.179,13,0.247,14,0.646,17,0.969,19,0.836,20,0.005,21,0.695,22,0.779,24,0.536,25,0.802,27,0.287,28,0.675,33,0.895,34,0.074,35,0.84,39,2.142,41,1.49,43,2.763,44,0.879,46,2.368,72,0.004,73,0.004,84,2.696,243,3.083,1046,5.204,1515,3.095,1545,4.772,1546,3.89,1548,5.511,1550,5.511,1551,4.979,1552,6.221,1553,5.621,1554,5.511,1555,4.979,1925,7.101,1926,7.101]],["title/classes/SetProfileDisplayNameSucceeded.html",[0,0.013,1555,3.538]],["body/classes/SetProfileDisplayNameSucceeded.html",[0,0.023,2,0.048,3,0.048,4,0.042,6,1.293,7,1.426,8,0.118,9,0.31,10,2.15,12,2.198,13,0.247,14,0.666,17,0.921,19,0.861,20,0.005,21,0.717,22,0.803,24,0.552,25,0.826,27,0.293,28,0.696,33,0.922,34,0.075,35,0.85,39,2.168,41,1.52,43,2.176,44,0.851,46,2.417,72,0.004,73,0.004,84,2.751,243,3.102,1046,5.172,1545,4.87,1546,4.009,1548,5.624,1550,5.624,1551,5.081,1552,5.624,1553,5.081,1554,6.316,1555,5.706,1927,5.452,1928,7.246,1929,5.452]],["title/classes/SetShowExtra.html",[0,0.013,87,3.391]],["body/classes/SetShowExtra.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.293,7,1.421,8,0.108,9,0.291,10,2.386,11,1.797,12,2.189,13,0.247,14,0.606,17,0.944,19,0.784,20,0.005,21,0.653,22,0.732,24,0.503,25,0.752,27,0.201,28,0.634,34,0.075,35,0.857,37,1.208,38,1.558,39,2.186,41,1.042,44,0.845,49,3.436,51,2.91,68,1.276,72,0.003,73,0.003,74,4.571,75,6.131,76,3.482,77,3.337,80,5.001,81,5.705,82,4.471,83,2.625,84,2.582,85,3.482,86,3.651,87,5.215,88,5.838,89,3.377,90,5.001,91,3.337,92,4.398,93,2.06,94,1.192,95,5.001,96,4.571,1930,6.802,1931,6.802]],["title/classes/SetStartTime.html",[0,0.013,151,2.308]],["body/classes/SetStartTime.html",[0,0.024,2,0.078,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,1.144,12,2.251,13,0.246,14,0.88,16,2.564,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,1.3,44,0.638,46,1.444,56,1.165,62,1.134,68,1.113,72,0.003,73,0.003,84,2.984,94,1.995,124,2.73,149,2.827,150,2.827,151,3.297,220,2.214,296,3.016,327,3.16,329,2.827,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.239,737,3.239,738,4.496,739,3.855,740,3.413,741,3.855,742,3.51,743,2.532,744,3.855,745,3.51,746,3.855,747,3.615,1932,3.878,1933,6.179,1934,4.328]],["title/classes/SetStartTime-1.html",[0,0.011,151,1.93,372,2.546]],["body/classes/SetStartTime-1.html",[0,0.023,2,0.043,3,0.043,4,0.038,6,1.319,7,1.441,8,0.106,9,0.289,10,1.779,11,1.293,12,2.222,13,0.246,14,0.822,17,0.871,19,0.773,20,0.005,21,0.643,22,0.721,24,0.495,25,0.741,27,0.311,28,0.624,33,0.828,34,0.076,35,0.881,37,2.187,39,2.175,44,0.596,46,1.632,56,1.269,62,1.235,72,0.003,73,0.003,84,2.923,94,2.088,99,3.214,119,4.036,124,2.952,139,2.952,149,3.08,150,3.08,151,3.522,296,4.387,394,2.901,736,3.529,737,3.529,1179,3.052,1870,5.574,1871,3.288,1873,5.399,1874,4.722,1875,4.354,1932,4.383,1935,6.733,1936,4.892]],["title/classes/SetThisMonth.html",[0,0.013,1919,3.538]],["body/classes/SetThisMonth.html",[0,0.023,2,0.051,3,0.051,4,0.045,6,1.322,7,1.453,8,0.127,9,0.325,12,2.239,13,0.245,14,1.155,17,0.857,20,0.005,24,0.591,25,0.884,27,0.236,28,0.745,34,0.076,35,0.872,72,0.004,73,0.004,84,3.38,251,3.064,1270,5.57,1271,5.57,1272,5.57,1909,5.312,1910,6.185,1911,4.29,1913,5.879,1914,5.879,1915,5.312,1916,5.879,1917,5.312,1918,6.529,1919,5.899,1937,7.575]],["title/classes/SetThisWeek.html",[0,0.013,1915,3.538]],["body/classes/SetThisWeek.html",[0,0.023,2,0.051,3,0.051,4,0.045,6,1.322,7,1.453,8,0.127,9,0.325,12,2.239,13,0.245,14,1.155,17,0.857,20,0.005,24,0.591,25,0.884,27,0.236,28,0.745,34,0.076,35,0.872,72,0.004,73,0.004,84,3.38,251,3.064,1270,5.57,1271,5.57,1272,5.57,1909,5.312,1910,6.185,1911,4.29,1913,5.879,1914,6.529,1915,5.899,1916,5.879,1917,5.312,1918,5.879,1919,5.312,1938,7.575]],["title/classes/SetTimerInfo.html",[0,0.013,747,2.952]],["body/classes/SetTimerInfo.html",[0,0.024,2,0.083,3,0.038,4,0.033,6,1.346,7,1.461,8,0.094,9,0.265,10,1.633,11,1.144,12,2.251,13,0.246,14,0.88,16,2.564,17,0.815,19,0.684,20,0.005,21,0.569,22,0.638,24,0.438,25,0.656,27,0.291,28,0.553,29,2.022,33,0.732,34,0.077,35,0.907,39,2.225,41,0.908,43,1.3,44,0.638,46,1.444,56,1.165,62,1.134,68,1.113,72,0.003,73,0.003,84,2.984,94,1.039,124,1.422,149,2.827,150,2.827,151,2.827,220,2.214,296,3.016,327,3.16,329,3.954,394,1.444,729,3.413,730,2.612,732,3.855,733,3.855,734,5.246,735,3.51,736,3.239,737,3.239,738,3.855,739,3.855,740,3.413,741,3.855,742,3.51,743,2.532,744,3.855,745,3.51,746,4.496,747,4.216,1888,3.878,1939,6.179,1940,4.328]],["title/classes/SetValidationMessage.html",[0,0.013,1901,3.916]],["body/classes/SetValidationMessage.html",[0,0.022,2,0.054,3,0.054,4,0.047,6,1.239,7,1.398,8,0.134,9,0.337,10,2.078,12,2.155,13,0.248,14,0.755,17,0.979,19,0.977,20,0.005,21,0.813,22,0.911,24,0.626,25,0.937,27,0.25,28,0.79,34,0.072,35,0.771,39,1.967,44,0.831,72,0.004,73,0.004,84,2.986,89,2.389,461,3.164,507,3.859,542,4.801,655,6.105,684,6.589,694,3.513,1893,6.105,1894,5.118,1895,5.118,1899,7.047,1900,7.748,1901,6.712,1941,6.186,1942,7.866,1943,6.186]],["title/classes/SetVisibleTab.html",[0,0.013,1944,3.916]],["body/classes/SetVisibleTab.html",[0,0.02,2,0.057,3,0.057,4,0.05,6,1.163,7,1.36,8,0.141,9,0.348,10,2.145,12,2.095,13,0.247,14,0.794,17,1.001,19,1.027,20,0.005,21,0.855,22,0.958,24,0.658,25,0.985,27,0.328,28,0.83,33,1.1,34,0.068,35,0.637,39,1.626,72,0.004,73,0.004,84,2.469,803,7.152,865,7.254,1944,6.868,1945,5.826,1946,6.503,1947,8.117,1948,6.503,1949,8.849,1950,6.503]],["title/modules/SharedModule.html",[373,2.133,391,3.148]],["body/modules/SharedModule.html",[0,0.014,2,0.049,3,0.049,4,0.043,20,0.005,27,0.395,28,0.716,34,0.067,72,0.004,73,0.004,185,1.21,195,2.329,223,1.844,279,3.68,373,3.122,375,3.188,376,4.982,377,3.387,378,2.871,391,6.369,393,4.458,394,1.872,395,3.283,397,4.321,408,3.772,438,3.245,585,4.776,586,3.502,861,7.371,1050,7.781,1718,7.781,1951,5.029,1952,5.029,1953,5.029,1954,5.613,1955,5.613,1956,5.613,1957,5.613,1958,5.613,1959,5.613,1960,5.613]],["title/interfaces/SharedState.html",[118,0.357,358,3.148]],["body/interfaces/SharedState.html",[2,0.032,3,0.032,4,0.028,8,0.08,9,0.237,11,2.353,13,0.183,20,0.005,24,0.376,27,0.36,28,0.473,33,0.627,34,0.077,35,0.983,36,2.584,38,1.733,62,1.502,72,0.003,73,0.003,105,4.561,118,0.466,168,1.347,194,1.617,269,1.276,280,1.384,329,3.017,335,3.068,357,3.569,358,4.115,438,1.629,659,2.894,660,1.944,661,1.944,734,4.561,752,4.264,753,2.106,807,3.068,976,2.727,978,2.048,997,2.314,1073,3.068,1158,2.878,1283,2.6,1573,4.568,1574,3.068,1800,4.568,1801,4.568,1961,3.322,1962,5.908,1963,5.908,1964,5.908,1965,5.908,1966,3.322,1967,3.322,1968,3.322,1969,3.322,1970,3.322,1971,3.322,1972,3.322,1973,3.322,1974,3.322,1975,3.322,1976,3.322,1977,3.322,1978,3.322,1979,3.322,1980,3.322,1981,3.322,1982,3.322,1983,3.322,1984,3.322,1985,3.322,1986,3.322,1987,6.545,1988,3.322,1989,3.322,1990,3.322,1991,4.946,1992,3.322,1993,3.322,1994,3.322,1995,4.946,1996,4.946,1997,3.322,1998,4.946,1999,4.946,2000,6.545,2001,4.946,2002,4.946,2003,3.322,2004,3.322,2005,3.322,2006,3.322,2007,5.908,2008,3.322,2009,3.322,2010,3.322,2011,3.322,2012,3.322,2013,4.946,2014,3.322,2015,3.322,2016,3.322,2017,3.322,2018,3.322,2019,4.946,2020,6.545,2021,5.456,2022,5.908,2023,3.322,2024,5.908,2025,4.946,2026,4.946,2027,4.946,2028,4.946,2029,4.946,2030,4.946,2031,3.322,2032,4.946,2033,3.322,2034,3.322,2035,4.946,2036,3.322,2037,3.322,2038,3.322,2039,4.946,2040,3.322,2041,4.946,2042,4.946,2043,3.322,2044,3.322,2045,3.322,2046,3.322,2047,3.322,2048,3.322,2049,3.322,2050,3.322]],["title/classes/SignUp.html",[0,0.013,698,2.787]],["body/classes/SignUp.html",[0,0.024,2,0.036,3,0.036,4,0.032,6,1.35,7,1.464,8,0.09,9,0.257,10,2.252,12,2.256,13,0.247,14,1.073,17,0.873,19,0.656,20,0.005,21,0.546,22,0.612,24,0.421,25,0.629,27,0.242,28,0.53,33,0.703,34,0.077,35,0.912,39,1.929,44,0.851,72,0.003,73,0.003,234,2.878,394,1.385,461,3.944,472,4.708,535,2.177,537,2.233,539,2.233,548,4.204,551,4.295,609,3.144,611,3.144,612,3.144,619,3.144,656,3.852,685,2.429,689,3.62,690,3.226,691,3.62,692,3.407,693,3.62,694,4.381,695,3.62,696,3.62,697,4.287,698,4.854,699,3.62,700,3.226,701,3.62,1082,3.436,2051,5.999,2052,5.999]],["title/components/SpinnerComponent.html",[125,1.195,279,1.852]],["body/components/SpinnerComponent.html",[0,0.012,2,0.04,3,0.04,4,0.036,6,0.929,8,0.101,14,0.914,17,0.734,20,0.005,21,0.853,27,0.187,34,0.036,36,1.977,37,1.128,41,0.973,56,0.874,62,0.851,68,1.923,72,0.003,73,0.003,83,2.562,125,2.02,126,1.702,127,1.791,128,1.791,129,1.791,133,2.89,134,1.702,137,4.004,138,3.683,139,1.523,140,2.506,142,2.506,145,2.006,146,3.13,153,1.523,168,0.947,169,1.731,185,0.999,223,1.523,224,2.506,225,2.463,226,2.506,227,3.13,228,1.791,230,1.791,231,1.702,232,1.791,233,1.702,234,2.638,235,1.791,236,1.702,237,2.506,238,1.674,239,1.791,240,1.674,241,1.791,242,1.702,243,1.477,244,1.791,245,1.674,246,1.791,247,1.674,248,1.791,249,1.791,250,1.702,251,2.936,252,1.76,253,1.791,254,2.575,255,2.89,256,1.76,257,1.702,258,3.192,259,1.791,260,1.702,261,2.506,262,1.674,263,1.791,264,1.674,265,1.791,266,1.702,267,1.791,268,1.702,269,1.596,270,1.674,271,1.791,272,1.702,273,1.791,274,1.702,275,1.674,276,1.791,277,1.674,278,1.791,279,2.975,280,2.793,281,1.791,282,1.702,283,1.791,284,1.702,285,2.89,286,1.702,287,1.702,288,1.702,289,1.791,290,1.674,291,1.791,2053,4.637,2054,6.488,2055,6.488,2056,6.488,2057,4.637,2058,4.637]],["title/interfaces/State.html",[118,0.357,194,1.045]],["body/interfaces/State.html",[2,0.057,3,0.057,4,0.05,7,1.536,8,0.143,9,0.35,13,0.205,20,0.005,24,0.667,27,0.266,34,0.063,35,0.645,44,0.863,72,0.004,73,0.004,118,0.578,168,1.671,191,3.851,194,2.048,507,6.087,715,3.075,1259,3.288,1261,3.288,1346,4.183,1348,3.288,1349,3.367,1350,3.367,2059,5.898,2060,6.583,2061,6.583,2062,6.583]],["title/interfaces/State-1.html",[118,0.298,194,0.873,372,2.546]],["body/interfaces/State-1.html",[0,0.014,2,0.049,3,0.049,4,0.043,6,0.806,8,0.122,9,0.317,13,0.185,20,0.005,24,0.57,27,0.368,28,0.718,33,0.952,34,0.072,35,0.917,44,0.498,72,0.004,73,0.004,118,0.584,156,2.25,168,1.149,194,1.817,331,4.366,338,5.69,350,3.509,407,3.944,437,4.136,438,2.471,451,4.987,565,5.741,573,6.414,659,3.877,660,2.948,661,2.948,895,4.654,897,4.654,899,4.654,900,5.741,901,7.746,902,4.366,903,4.654,904,4.654,905,6.508,906,6.837,907,6.837,908,4.654,909,4.654,910,4.654,911,4.654,912,6.12,913,4.654,914,6.12,915,6.837,916,4.654,917,4.654,918,6.12]],["title/interfaces/State-10.html",[118,0.298,194,0.873,937,3.49]],["body/interfaces/State-10.html",[2,0.052,3,0.052,4,0.046,7,1.179,8,0.129,9,0.329,13,0.213,20,0.005,24,0.603,27,0.24,34,0.059,35,0.583,44,0.841,56,1.792,62,1.774,72,0.004,73,0.004,94,2.038,118,0.542,124,3.219,168,1.896,192,4.619,193,4.619,194,2.05,212,5.332,715,2.78,978,4.69,1259,2.972,1261,4.48,1346,4.343,1348,2.972,1349,3.044,1350,3.044,2063,5.332,2064,5.332,2065,5.332,2066,5.332,2067,5.332,2068,4.924,2069,5.951,2070,5.332]],["title/interfaces/State-11.html",[118,0.298,194,0.873,2071,3.779]],["body/interfaces/State-11.html",[2,0.049,3,0.049,4,0.043,7,1.14,11,1.493,20,0.005,24,0.572,27,0.3,34,0.067,35,0.862,44,0.656,51,2.26,72,0.004,73,0.004,88,5.354,89,2.182,93,3.436,94,1.356,118,0.585,168,1.951,194,2.064,518,3.304,704,4.476,715,2.639,760,3.789,832,5.201,978,3.12,1259,2.821,1261,4.561,1308,5.757,1339,5.201,1340,5.201,1341,5.807,1342,3.796,1345,3.961,1346,3.793,1347,3.961,1348,2.821,1349,2.889,1350,2.889,1358,3.961,1365,5.201,1366,5.201,1598,4.673,1599,4.673,1600,4.384,1601,4.384,1602,5.061,1603,5.061,1604,5.061,1605,5.061,1606,5.061,1607,5.061,1608,5.061,1609,5.061,1610,5.061,1611,5.061,1612,5.061,1613,5.061]],["title/interfaces/State-12.html",[118,0.298,194,0.873,2072,4.218]],["body/interfaces/State-12.html",[2,0.05,3,0.05,4,0.044,8,0.124,9,0.32,13,0.143,20,0.005,24,0.577,27,0.37,28,0.727,33,0.964,34,0.077,35,0.962,37,1.386,72,0.004,73,0.004,82,2.913,83,2.649,115,3.814,118,0.588,119,3.909,123,5.589,139,2.45,194,1.896,438,2.503,659,3.909,660,2.986,661,2.986,788,4.422,801,6.171,802,6.848,832,3.995,864,5.104,865,6.114,866,5.104,867,5.104,868,5.104,869,5.104,870,5.104,871,5.104,872,5.104,873,5.104,874,5.104,875,5.104,876,5.104,877,5.104,878,5.104,879,5.104,880,5.104,881,7.45,882,5.104,883,5.104,884,5.104,885,5.104,886,5.104,887,6.682,888,5.104,889,5.104,890,6.682,891,5.104,892,6.682,893,5.104,894,5.104]],["title/interfaces/State-13.html",[118,0.298,194,0.873,2073,4.218]],["body/interfaces/State-13.html",[2,0.059,3,0.059,4,0.052,7,1.272,8,0.146,9,0.355,13,0.168,20,0.005,24,0.68,27,0.334,33,1.136,34,0.064,35,0.658,72,0.004,73,0.004,118,0.585,139,2.206,168,1.691,194,2.056,715,3.137,803,6.892,865,7.208,1259,3.354,1261,3.354,1346,4.235,1348,3.354,1349,3.434,1350,3.434,2074,6.017,2075,6.017,2076,6.716,2077,6.716]],["title/interfaces/State-14.html",[118,0.298,194,0.873,2078,4.218]],["body/interfaces/State-14.html",[2,0.045,3,0.045,4,0.04,7,1.08,8,0.113,9,0.301,13,0.242,20,0.005,24,0.527,27,0.321,33,0.881,34,0.054,35,0.977,38,1.635,72,0.004,73,0.004,118,0.497,153,3.202,168,1.871,194,1.938,372,4.24,715,2.433,924,6.899,1000,4.042,1251,4.308,1257,4.665,1258,4.665,1259,2.601,1261,4.251,1264,4.308,1266,4.308,1268,4.308,1346,4.067,1348,2.601,1349,2.663,1350,2.663,2079,4.665,2080,4.665,2081,9.159,2082,9.159,2083,5.207,2084,5.207,2085,5.207,2086,5.207,2087,5.207,2088,5.207,2089,4.665,2090,5.207,2091,7.026,2092,7.026,2093,5.207,2094,5.207,2095,5.207,2096,5.207,2097,5.207,2098,7.026,2099,5.207,2100,5.207,2101,5.207,2102,5.207,2103,5.207,2104,5.207,2105,7.026,2106,7.026,2107,5.207,2108,5.207,2109,5.207,2110,5.207,2111,7.026,2112,5.207,2113,5.207,2114,5.207,2115,5.207]],["title/interfaces/State-15.html",[118,0.298,194,0.873,1451,3.779]],["body/interfaces/State-15.html",[2,0.054,3,0.054,4,0.048,8,0.135,9,0.338,13,0.156,20,0.005,24,0.629,27,0.35,28,0.793,34,0.076,35,0.942,72,0.004,73,0.004,118,0.613,153,2.591,168,1.269,194,1.794,251,3.137,438,2.73,659,4.135,660,3.257,661,3.257,951,6.527,952,7.076,960,5.142,996,5.568,997,5.688,998,5.568,999,5.568,1000,4.824,1001,5.568,1002,5.568,1003,5.568,1004,5.568,1005,5.568,1006,5.568,1007,5.568,1008,5.568,1009,7.068,1010,7.068,1011,5.568,1012,5.568,1013,7.068,1014,5.568,1015,5.142]],["title/interfaces/State-16.html",[118,0.298,194,0.873,2116,4.218]],["body/interfaces/State-16.html",[2,0.058,3,0.058,4,0.051,7,1.264,8,0.144,9,0.353,13,0.167,20,0.005,24,0.673,27,0.269,34,0.063,35,0.651,44,0.791,72,0.004,73,0.004,118,0.582,168,1.826,194,2.073,715,3.106,1044,5.501,1046,5.259,1259,3.32,1261,4.11,1346,4.209,1348,3.32,1349,3.4,1350,3.4,1760,5.957,2117,5.957,2118,6.649,2119,6.649,2120,6.649]],["title/interfaces/State-17.html",[118,0.298,194,0.873,2121,3.779]],["body/interfaces/State-17.html",[2,0.081,3,0.057,4,0.05,8,0.142,9,0.35,13,0.165,20,0.005,24,0.665,27,0.359,28,0.838,33,1.111,34,0.075,35,0.911,72,0.004,73,0.004,118,0.628,194,1.84,243,3.107,438,2.885,659,4.281,660,3.442,661,3.442,1779,7.218,1780,5.883,1781,5.883,1782,5.883,1783,5.883,1784,5.883,1785,5.883,1786,5.883,1787,7.317,1788,5.883,1789,5.883,1790,7.317]],["title/interfaces/State-18.html",[118,0.298,194,0.873,2122,4.218]],["body/interfaces/State-18.html",[2,0.059,3,0.059,4,0.052,7,1.278,8,0.147,9,0.356,13,0.17,20,0.005,24,0.685,27,0.273,34,0.064,35,0.663,72,0.004,73,0.004,94,2.162,118,0.588,168,1.699,194,2.06,715,3.161,1259,3.379,1261,3.379,1346,4.255,1348,3.379,1349,3.461,1350,3.461,1533,5.599,1534,6.062,2123,6.062,2124,7.623,2125,6.767,2126,6.767,2127,6.767]],["title/interfaces/State-19.html",[118,0.298,194,0.873,2128,4.218]],["body/interfaces/State-19.html",[2,0.057,3,0.057,4,0.05,8,0.142,9,0.349,13,0.164,20,0.005,24,0.662,27,0.329,28,0.834,34,0.076,35,0.936,72,0.004,73,0.004,118,0.627,194,1.836,245,3.203,258,3.352,438,2.871,659,4.267,660,3.425,661,3.425,2124,5.072,2129,5.854,2130,7.205,2131,5.854,2132,5.854,2133,5.854,2134,5.854,2135,5.854,2136,5.854,2137,5.854,2138,5.854,2139,5.854,2140,7.294,2141,5.854,2142,5.854,2143,6.736]],["title/interfaces/State-2.html",[118,0.298,194,0.873,1273,3.49]],["body/interfaces/State-2.html",[2,0.046,3,0.046,4,0.041,7,1.091,8,0.115,9,0.304,13,0.133,16,2.195,20,0.005,24,0.536,27,0.324,33,0.895,34,0.066,35,0.876,41,1.972,44,0.709,51,1.612,56,0.997,58,2.892,62,0.971,72,0.004,73,0.004,89,3.096,93,2.195,94,1.705,118,0.567,124,1.737,168,1.977,194,2.09,518,4.154,576,3.095,704,4.285,715,2.471,760,3.454,1259,2.642,1261,4.694,1338,4.377,1339,4.979,1340,4.979,1341,5.621,1342,3.555,1343,4.739,1344,4.591,1345,3.71,1346,3.631,1347,3.71,1348,2.642,1349,2.705,1350,2.705,1351,4.739,1352,4.106,1353,4.739,1354,4.739,1355,5.511,1356,4.106,1357,4.739,1358,3.71,1359,4.739,1360,7.181,1361,4.739,1362,4.739,1363,4.739,1364,6.362,1365,4.979,1366,3.71]],["title/interfaces/State-3.html",[118,0.298,194,0.873,2144,3.779]],["body/interfaces/State-3.html",[2,0.059,3,0.059,4,0.052,7,1.282,8,0.148,9,0.358,13,0.171,20,0.005,22,1.449,24,0.689,27,0.275,34,0.064,35,0.666,44,0.799,72,0.004,73,0.004,118,0.59,168,1.705,194,2.062,715,3.177,1259,3.397,1261,3.397,1346,4.268,1348,3.397,1349,3.478,1350,3.478,2068,5.627,2145,6.093,2146,6.801,2147,6.801]],["title/interfaces/State-4.html",[118,0.298,194,0.873,1533,3.49]],["body/interfaces/State-4.html",[2,0.05,3,0.05,4,0.044,7,1.148,8,0.124,9,0.32,13,0.143,20,0.005,24,0.578,27,0.302,34,0.068,35,0.865,41,2.009,44,0.736,51,1.74,72,0.004,73,0.004,89,3.215,99,2.725,118,0.588,122,3.34,168,1.92,194,2.068,518,4.369,576,3.34,704,4.508,715,2.667,760,3.587,761,3.562,1259,2.851,1261,4.577,1320,4.431,1339,5.237,1340,5.237,1341,5.837,1342,3.837,1345,4.003,1346,3.82,1347,4.003,1348,2.851,1349,2.92,1350,2.92,1352,4.431,1355,5.797,1356,4.431,1358,4.003,1365,5.237,1366,4.003,1827,4.724,1828,5.115,1829,5.115,1830,5.115,1831,5.115,1832,5.115,1833,5.115]],["title/interfaces/State-5.html",[118,0.298,194,0.873,2148,4.218]],["body/interfaces/State-5.html",[2,0.033,3,0.033,4,0.029,8,0.083,9,0.242,11,2.372,13,0.096,20,0.005,24,0.387,27,0.362,28,0.488,33,0.646,34,0.077,35,0.986,36,2.259,38,1.771,62,1.231,72,0.003,73,0.003,105,3.986,118,0.474,168,1.371,194,1.713,269,1.315,280,2.767,329,3.07,335,3.16,357,3.649,358,4.625,438,1.678,659,2.958,660,2.002,661,2.002,734,3.986,752,4.339,753,2.17,807,3.16,976,2.809,978,2.11,997,2.383,1073,3.16,1158,2.965,1283,2.679,1573,4.669,1574,3.16,1800,4.669,1801,4.669,1961,3.422,1962,3.422,1963,3.422,1964,3.422,1965,3.422,1966,3.422,1967,3.422,1968,3.422,1969,3.422,1970,3.422,1971,3.422,1972,3.422,1973,3.422,1974,3.422,1975,3.422,1976,3.422,1977,3.422,1978,3.422,1979,3.422,1980,3.422,1981,3.422,1982,3.422,1983,3.422,1984,3.422,1985,3.422,1986,3.422,1987,6.641,1988,3.422,1989,3.422,1990,3.422,1991,5.056,1992,3.422,1993,3.422,1994,3.422,1995,5.056,1996,5.056,1997,3.422,1998,5.056,1999,5.056,2000,6.641,2001,5.056,2002,5.056,2003,3.422,2004,3.422,2005,3.422,2006,3.422,2007,6.013,2008,3.422,2009,3.422,2010,3.422,2011,3.422,2012,3.422,2013,5.056,2014,3.422,2015,3.422,2016,3.422,2017,3.422,2018,3.422,2019,5.056,2020,6.641,2021,5.552,2022,6.013,2023,3.422,2024,6.013,2025,5.056,2026,5.056,2027,5.056,2028,5.056,2029,5.056,2030,5.056,2031,3.422,2032,5.056,2033,3.422,2034,3.422,2035,5.056,2036,3.422,2037,3.422,2038,3.422,2039,5.056,2040,3.422,2041,5.056,2042,5.056,2043,3.422,2044,3.422,2045,3.422,2046,3.422,2047,3.422,2048,3.422,2049,3.422,2050,3.422]],["title/interfaces/State-6.html",[118,0.298,194,0.873,2149,4.218]],["body/interfaces/State-6.html",[2,0.052,3,0.052,4,0.046,7,1.177,8,0.129,9,0.328,13,0.213,20,0.005,24,0.601,27,0.24,34,0.059,35,0.582,44,0.841,56,1.791,62,1.743,72,0.004,73,0.004,94,2.036,118,0.542,124,3.121,168,1.941,194,2.066,715,2.774,978,3.28,1259,2.966,1261,4.634,1346,4.338,1348,2.966,1349,3.037,1350,3.037,2065,5.32,2066,5.32,2067,5.32,2068,4.913,2070,5.32,2150,5.32,2151,5.938,2152,5.938,2153,5.938,2154,5.938,2155,5.32]],["title/interfaces/State-7.html",[118,0.298,194,0.873,2156,4.218]],["body/interfaces/State-7.html",[2,0.05,3,0.05,4,0.044,8,0.125,9,0.322,13,0.145,20,0.005,24,0.584,27,0.358,28,0.737,33,0.976,34,0.077,35,0.965,72,0.004,73,0.004,118,0.591,194,1.835,204,3.6,234,2.742,438,2.535,506,4.243,569,5.274,653,6.882,654,5.17,655,6.882,656,4.863,657,5.17,658,5.17,659,3.942,660,3.025,661,3.025,662,5.17,663,5.17,664,5.17,665,5.17,666,5.17,667,5.17,668,5.17,669,5.17,670,5.17,671,6.739,672,5.17,673,5.17,674,5.17,675,6.739,676,6.739,677,6.739,678,6.739,679,6.739,680,5.17,681,6.739,682,5.17,683,5.17,684,4.047]],["title/interfaces/State-8.html",[118,0.298,194,0.873,2157,4.218]],["body/interfaces/State-8.html",[2,0.056,3,0.056,4,0.05,7,1.242,8,0.14,9,0.346,13,0.203,20,0.005,24,0.654,27,0.261,34,0.062,35,0.633,44,0.78,72,0.004,73,0.004,89,3.406,118,0.571,168,1.801,194,2.062,518,3.776,684,6.808,715,3.016,1259,3.224,1261,4.035,1346,4.132,1348,3.224,1349,3.301,1350,3.301,1895,8.033,2158,5.784,2159,5.784,2160,6.456,2161,6.456,2162,6.456,2163,6.456]],["title/interfaces/State-9.html",[118,0.298,194,0.873,2164,4.218]],["body/interfaces/State-9.html",[2,0.053,3,0.053,4,0.046,7,1.191,8,0.131,9,0.332,13,0.234,20,0.005,24,0.612,27,0.244,34,0.059,35,0.592,44,0.908,72,0.004,73,0.004,118,0.548,168,1.748,194,2.009,548,4.359,715,2.824,1046,5.017,1223,4.063,1259,3.019,1261,3.871,1346,4.375,1348,3.019,1349,3.092,1350,3.092,2165,5.416,2166,7.242,2167,7.242,2168,7.242,2169,6.046,2170,6.046,2171,6.046]],["title/injectables/StatusEffects.html",[292,1.584,595,4.175]],["body/injectables/StatusEffects.html",[0,0.012,2,0.041,3,0.041,4,0.036,7,1.429,8,0.102,9,0.281,13,0.118,14,0.576,17,0.971,19,0.745,20,0.005,21,0.62,22,0.695,24,0.827,25,1.238,27,0.381,33,0.798,34,0.036,35,0.644,38,3.002,72,0.003,73,0.003,156,1.888,168,1.341,185,1.017,190,2.848,191,2.76,200,1.417,292,2.371,297,2.848,300,5.802,302,3.28,303,4.246,315,5.095,316,5.893,318,2.473,321,1.922,322,3.47,324,1.958,407,3.309,461,4.177,474,5.884,476,5.884,491,3.051,595,5.434,684,4.605,902,3.663,905,6.129,1223,3.171,2159,4.228,2172,4.719,2173,8.167,2174,8.167,2175,4.719,2176,6.568,2177,6.568,2178,6.568,2179,8.167,2180,6.568,2181,4.719,2182,5.884,2183,5.884,2184,6.568,2185,6.568,2186,6.568,2187,8.889,2188,6.568,2189,4.719,2190,6.568,2191,4.719,2192,6.568,2193,6.568,2194,4.719,2195,4.719,2196,4.719,2197,4.719]],["title/components/TabsComponent.html",[125,1.195,282,1.852]],["body/components/TabsComponent.html",[0,0.01,2,0.034,3,0.034,4,0.03,6,0.815,7,0.594,8,0.084,13,0.169,14,0.472,17,0.94,19,0.899,20,0.005,21,0.98,22,0.839,24,0.684,25,1.024,27,0.321,28,0.493,33,0.654,34,0.03,36,1.734,37,0.94,41,0.811,56,0.728,62,0.709,68,1.737,72,0.003,73,0.003,83,2.703,105,3.06,125,1.882,126,1.419,127,1.492,128,1.492,129,1.492,133,2.609,134,1.419,135,2.842,136,2.842,137,3.949,138,3.632,139,2.219,140,2.198,142,2.198,145,1.76,146,2.879,152,4.251,153,1.269,155,1.976,156,3.325,168,1.162,169,2.125,184,1.93,185,0.833,194,0.8,195,1.603,200,1.16,206,2.025,223,1.269,224,2.198,225,2.161,226,2.198,227,2.879,228,1.492,230,1.492,231,1.419,232,1.492,233,1.419,234,2.457,235,1.492,236,1.419,237,2.198,238,1.395,239,1.492,240,1.395,241,1.492,242,1.419,243,1.231,244,1.492,245,1.395,246,1.492,247,1.395,248,1.492,249,1.492,250,1.419,251,2.734,252,1.467,253,1.492,254,2.325,255,2.609,256,1.467,257,1.419,258,3.001,259,1.492,260,1.419,261,2.198,262,1.395,263,1.492,264,1.395,265,1.492,266,1.419,267,1.492,268,1.419,269,1.33,270,1.395,271,1.492,272,1.419,273,1.492,274,1.419,275,1.395,276,1.492,277,1.395,278,1.492,279,1.419,280,1.442,281,1.492,282,2.736,283,1.492,284,1.419,285,2.609,286,1.419,287,1.419,288,1.419,289,1.492,290,1.395,291,1.492,788,5.244,803,6.111,865,4.968,978,4.117,1944,4.417,2075,3.462,2198,3.864,2199,5.691,2200,5.691,2201,7.946,2202,7.946,2203,5.691,2204,3.864,2205,3.864,2206,3.864,2207,5.691,2208,3.864,2209,3.864]],["title/components/TimeDateGraphComponent.html",[125,1.195,284,1.852]],["body/components/TimeDateGraphComponent.html",[0,0.011,2,0.036,3,0.036,4,0.032,6,0.86,8,0.09,13,0.151,14,0.86,17,0.873,20,0.005,21,0.789,27,0.243,33,0.704,34,0.032,36,1.83,37,1.012,41,0.873,56,0.784,62,0.763,68,2.357,72,0.003,73,0.003,83,2.458,125,1.938,126,1.527,127,1.607,128,1.607,129,1.607,133,2.722,134,1.527,135,2.999,136,2.999,137,3.972,138,3.654,139,1.366,140,2.319,142,2.319,145,1.857,146,2.981,152,4.186,153,3.242,168,0.85,169,1.553,184,2.077,185,0.896,223,1.366,224,2.319,225,2.28,226,2.319,227,2.981,228,1.607,230,1.607,231,1.527,232,1.607,233,1.527,234,2.531,235,1.607,236,1.527,237,2.319,238,1.502,239,1.607,240,1.502,241,1.607,242,1.527,243,1.325,244,1.607,245,1.502,246,1.607,247,1.502,248,1.607,249,1.607,250,1.527,251,3.026,252,2.676,253,1.607,254,2.425,255,2.722,256,1.579,257,1.527,258,3.08,259,1.607,260,1.527,261,2.319,262,1.502,263,1.607,264,1.502,265,1.607,266,1.527,267,1.607,268,1.527,269,1.431,270,1.502,271,1.607,272,1.527,273,1.607,274,1.527,275,1.502,276,1.607,277,1.502,278,1.607,279,1.527,280,1.553,281,1.607,282,1.527,283,1.607,284,2.833,285,2.722,286,1.527,287,1.527,288,1.527,289,1.607,290,1.502,291,1.607,702,4.557,716,4.254,992,6.353,2210,6.772,2211,3.441,2212,4.969,2213,4.969,2214,5.831,2215,5.831,2216,4.969,2217,3.441,2218,3.441]],["title/components/TimeGameGraphComponent.html",[125,1.195,286,1.852]],["body/components/TimeGameGraphComponent.html",[0,0.011,2,0.036,3,0.036,4,0.032,6,0.86,8,0.09,13,0.151,14,0.86,17,0.873,20,0.005,21,0.789,27,0.243,33,0.704,34,0.032,36,1.83,37,1.012,41,0.873,56,1.86,62,0.763,68,2.357,72,0.003,73,0.003,83,2.458,125,1.938,126,1.527,127,1.607,128,1.607,129,1.607,133,2.722,134,1.527,135,2.999,136,2.999,137,3.972,138,3.654,139,1.366,140,2.319,142,2.319,145,1.857,146,2.981,152,4.186,153,1.366,168,0.85,169,1.553,184,2.077,185,0.896,223,1.366,224,2.319,225,2.28,226,2.319,227,2.981,228,1.607,230,1.607,231,1.527,232,1.607,233,1.527,234,2.531,235,1.607,236,1.527,237,2.319,238,1.502,239,1.607,240,1.502,241,1.607,242,1.527,243,1.325,244,1.607,245,1.502,246,1.607,247,1.502,248,1.607,249,1.607,250,1.527,251,3.026,252,2.676,253,1.607,254,2.425,255,2.722,256,1.579,257,1.527,258,3.08,259,1.607,260,1.527,261,2.319,262,1.502,263,1.607,264,1.502,265,1.607,266,1.527,267,1.607,268,1.527,269,1.431,270,1.502,271,1.607,272,1.527,273,1.607,274,1.527,275,1.502,276,1.607,277,1.502,278,1.607,279,1.527,280,1.553,281,1.607,282,1.527,283,1.607,284,1.527,285,2.722,286,2.833,287,1.527,288,1.527,289,1.607,290,1.502,291,1.607,702,4.557,716,4.254,992,6.353,2210,6.772,2211,3.441,2212,4.969,2213,4.969,2214,5.831,2215,5.831,2216,4.969,2217,3.441,2218,3.441]],["title/pipes/TimePipe.html",[302,2.52,861,3.71]],["body/pipes/TimePipe.html",[0,0.018,2,0.061,3,0.061,4,0.054,6,1.002,13,0.175,17,0.792,19,1.105,20,0.005,21,1.202,22,1.031,27,0.343,34,0.054,44,0.751,68,2.183,72,0.004,73,0.004,94,2.195,134,2.569,145,2.164,168,1.734,185,1.508,302,4.566,861,6.244,935,6.269,953,5.79,1054,5.79,1059,7.026,2219,6.998,2220,8.492,2221,6.998,2222,6.998,2223,6.998]],["title/components/TimePlatformGraphComponent.html",[125,1.195,287,1.852]],["body/components/TimePlatformGraphComponent.html",[0,0.011,2,0.036,3,0.036,4,0.032,6,0.86,8,0.09,13,0.151,14,0.86,17,0.873,20,0.005,21,0.789,27,0.243,33,0.704,34,0.032,36,1.83,37,1.012,41,0.873,56,0.784,62,1.811,68,2.357,72,0.003,73,0.003,83,2.458,125,1.938,126,1.527,127,1.607,128,1.607,129,1.607,133,2.722,134,1.527,135,2.999,136,2.999,137,3.972,138,3.654,139,1.366,140,2.319,142,2.319,145,1.857,146,2.981,152,4.186,153,1.366,168,0.85,169,1.553,184,2.077,185,0.896,223,1.366,224,2.319,225,2.28,226,2.319,227,2.981,228,1.607,230,1.607,231,1.527,232,1.607,233,1.527,234,2.531,235,1.607,236,1.527,237,2.319,238,1.502,239,1.607,240,1.502,241,1.607,242,1.527,243,1.325,244,1.607,245,1.502,246,1.607,247,1.502,248,1.607,249,1.607,250,1.527,251,3.026,252,2.676,253,1.607,254,2.425,255,2.722,256,1.579,257,1.527,258,3.08,259,1.607,260,1.527,261,2.319,262,1.502,263,1.607,264,1.502,265,1.607,266,1.527,267,1.607,268,1.527,269,1.431,270,1.502,271,1.607,272,1.527,273,1.607,274,1.527,275,1.502,276,1.607,277,1.502,278,1.607,279,1.527,280,1.553,281,1.607,282,1.527,283,1.607,284,1.527,285,2.722,286,1.527,287,2.833,288,1.527,289,1.607,290,1.502,291,1.607,716,4.254,725,4.737,992,6.353,2210,6.772,2211,3.441,2212,4.969,2213,4.969,2214,5.831,2215,5.831,2216,4.969,2217,3.441,2218,3.441]],["title/components/TimerComponent.html",[125,1.195,288,1.852]],["body/components/TimerComponent.html",[0,0.007,2,0.058,3,0.023,4,0.02,6,0.6,7,0.399,8,0.056,9,0.179,13,0.206,14,0.317,17,1.039,19,0.953,20,0.005,21,0.93,22,1.042,24,0.716,25,1.072,27,0.323,28,0.331,34,0.02,35,0.693,36,1.276,37,0.632,38,1.314,41,0.545,43,1.987,44,0.685,56,1.402,62,1.298,68,1.352,72,0.002,73,0.002,83,1.987,93,1.077,124,2.542,125,1.567,126,0.953,127,1.003,128,1.003,129,1.003,133,2.031,134,0.953,135,2.091,136,2.091,137,3.795,138,3.491,139,0.853,140,1.617,142,1.617,144,3.758,145,1.295,146,2.33,149,2.76,150,1.915,151,1.915,152,3.959,153,1.727,155,1.328,156,2.83,157,4.001,160,3.901,168,1.713,169,2.983,173,3.75,174,3.867,176,2.148,177,3.75,179,2.326,180,2.526,184,1.297,185,0.559,186,1.519,187,1.567,188,1.434,189,1.567,194,0.537,195,1.077,196,1.267,200,0.78,201,1.487,202,1.745,203,2.813,204,1.62,205,1.909,206,3.9,207,2.326,208,2.148,209,2.326,211,2.326,215,2.326,220,2.141,223,0.853,224,1.617,225,1.589,226,1.617,227,2.33,228,1.003,230,1.003,231,0.953,232,1.003,233,0.953,234,2.046,235,1.003,236,0.953,237,1.617,238,0.938,239,1.003,240,0.938,241,1.003,242,0.953,243,0.827,244,1.003,245,0.938,246,1.003,247,0.938,248,1.003,249,1.003,250,0.953,251,2.277,252,0.986,253,1.003,254,1.81,255,2.031,256,0.986,257,0.953,258,2.795,259,1.003,260,0.953,261,1.617,262,0.938,263,1.003,264,0.938,265,1.003,266,0.953,267,1.003,268,0.953,269,0.893,270,0.938,271,1.003,272,0.953,273,1.003,274,0.953,275,0.938,276,1.003,277,0.938,278,1.003,279,0.953,280,0.969,281,1.003,282,0.953,283,1.003,284,0.953,285,2.031,286,0.953,287,0.953,288,2.215,289,1.003,290,0.938,291,1.003,327,1.328,329,2.406,490,1.821,729,3.332,734,2.251,743,2.449,978,3.654,1021,3.535,1036,5.852,1053,5.475,1199,4.642,1283,3.688,1284,4.082,1373,3.75,1381,3.75,1383,2.326,1395,1.909,1396,2.326,1397,2.326,1398,2.326,1400,2.326,1405,4.351,1407,2.148,1416,2.326,2089,4.712,2224,2.596,2225,4.186,2226,4.186,2227,6.033,2228,6.033,2229,6.033,2230,2.596,2231,4.186,2232,2.596,2233,2.596,2234,2.596,2235,2.596,2236,2.596,2237,2.596,2238,2.596,2239,2.596,2240,2.596,2241,2.596,2242,2.596,2243,2.596,2244,2.596,2245,2.596,2246,2.596,2247,5.259,2248,4.186,2249,5.259,2250,5.259,2251,2.596,2252,2.596,2253,2.596,2254,2.596,2255,2.596,2256,7.073,2257,2.596,2258,4.186,2259,2.596,2260,4.186,2261,2.596,2262,2.596,2263,2.596,2264,2.596,2265,2.596,2266,2.596]],["title/injectables/TimerEffects.html",[292,1.584,2267,4.175]],["body/injectables/TimerEffects.html",[0,0.012,2,0.041,3,0.041,4,0.036,7,1.468,8,0.102,9,0.28,13,0.118,14,0.573,17,0.922,19,0.741,20,0.005,21,0.617,22,0.692,24,0.763,25,1.141,27,0.375,34,0.036,38,2.915,72,0.003,73,0.003,185,1.012,190,2.833,191,2.746,200,1.41,201,2.325,292,2.364,297,2.833,300,5.537,302,4.638,303,6.005,311,5.476,312,5.476,314,5.476,315,4.7,316,5.681,318,2.46,319,1.752,320,3.155,321,1.912,322,3.451,323,3.155,324,1.947,489,3.451,490,3.292,729,4.5,740,4.5,745,4.628,1111,5.887,1199,5.681,1301,5.079,1337,3.884,1395,3.451,1823,5.862,2155,5.862,2267,5.414,2268,4.694,2269,4.694,2270,6.543,2271,6.543,2272,8.149,2273,4.694,2274,6.543,2275,6.543,2276,6.543,2277,6.543,2278,6.543,2279,6.543,2280,6.543,2281,4.694,2282,6.543,2283,6.543,2284,6.543,2285,6.543,2286,6.543,2287,6.543,2288,4.694]],["title/interfaces/TimerInfo.html",[118,0.357,329,2.308]],["body/interfaces/TimerInfo.html",[2,0.061,3,0.061,4,0.053,8,0.151,9,0.363,13,0.229,20,0.005,34,0.065,43,2.09,44,0.9,56,1.833,62,1.784,72,0.004,73,0.004,93,2.888,94,2.334,118,0.645,124,3.194,327,3.56,328,6.237,329,3.872]],["title/injectables/TimerService.html",[292,1.584,1199,3.148]],["body/injectables/TimerService.html",[0,0.011,2,0.068,3,0.037,4,0.033,8,0.093,9,0.263,13,0.227,14,0.523,17,1.045,19,1.401,20,0.005,21,1.166,22,1.307,27,0.334,34,0.047,35,0.419,38,1.343,43,2.586,44,0.902,56,1.671,62,1.627,72,0.003,73,0.003,94,2.067,118,0.302,124,2.913,145,1.896,149,2.804,150,2.804,151,2.804,168,1.886,169,3.089,185,0.922,196,2.089,200,1.285,201,2.544,292,2.248,319,1.598,321,1.743,324,1.776,329,3.577,346,3.146,416,2.364,576,4.189,734,2.301,735,3.482,820,2.876,827,3.001,978,2.364,1076,3.541,1105,4.442,1106,4.442,1107,2.431,1113,3.482,1137,3.147,1175,5.266,1197,3.541,1198,3.834,1199,3.824,1200,7.006,1201,3.834,1202,3.834,1203,5.492,1204,7.415,1205,5.492,1206,5.492,1207,5.492,1208,5.492,1209,5.492,1210,3.834,1211,3.834,1212,3.834,1213,7.006,1429,3.147,2289,6.13,2290,6.13,2291,6.13,2292,4.28,2293,4.28,2294,4.28,2295,4.28,2296,4.28,2297,4.28,2298,4.28]],["title/components/TrackerComponent.html",[125,1.195,290,1.822]],["body/components/TrackerComponent.html",[0,0.009,2,0.03,3,0.03,4,0.027,6,0.755,8,0.076,9,0.226,13,0.214,14,0.426,17,0.991,19,0.551,20,0.005,21,0.835,22,0.514,27,0.354,28,0.445,34,0.027,35,0.623,36,1.606,37,0.848,41,0.731,56,1.433,62,0.639,68,1.633,72,0.003,73,0.003,83,2.284,125,1.801,126,1.28,127,1.346,128,1.346,129,1.346,133,2.454,134,1.28,137,3.914,138,3.6,139,1.145,140,2.035,142,2.035,145,1.63,146,2.735,153,1.145,156,3.323,160,2.254,162,4.68,168,0.712,169,1.301,185,0.751,194,1.091,195,1.446,196,1.701,200,1.047,201,1.872,205,2.563,223,1.145,224,2.035,225,2.001,226,2.035,227,2.735,228,1.346,230,1.346,231,1.28,232,1.346,233,1.28,234,2.352,235,1.346,236,1.28,237,2.035,238,1.259,239,1.346,240,1.259,241,1.346,242,1.28,243,1.111,244,1.346,245,1.259,246,1.346,247,1.259,248,1.346,249,1.346,250,1.28,251,2.617,252,1.323,253,1.346,254,2.187,255,2.454,256,1.323,257,1.28,258,3.089,259,1.346,260,1.28,261,2.035,262,1.259,263,1.346,264,1.259,265,1.346,266,1.28,267,1.346,268,1.28,269,1.199,270,1.259,271,1.346,272,1.28,273,1.346,274,1.28,275,1.259,276,1.346,277,1.259,278,1.346,279,1.28,280,1.301,281,1.346,282,1.28,283,1.346,284,1.28,285,2.454,286,1.28,287,1.28,288,1.28,289,1.346,290,2.558,291,1.346,319,1.301,321,1.42,324,1.446,329,3.479,341,5.583,343,4.456,346,4.331,355,2.705,356,2.705,357,2.254,358,2.175,359,2.563,812,3.123,820,3.542,963,3.123,1021,2.342,1053,5.86,1077,3.123,1283,4.966,1284,5.497,2124,4.09,2130,2.705,2143,2.884,2299,3.485,2300,5.27,2301,5.27,2302,7.083,2303,3.485,2304,5.27,2305,5.27,2306,3.485,2307,3.485,2308,3.485,2309,3.485,2310,3.485,2311,3.485,2312,3.485,2313,3.485,2314,3.485,2315,3.485,2316,3.485,2317,3.485,2318,3.485,2319,3.485,2320,3.485,2321,6.354,2322,3.485,2323,3.485,2324,3.485,2325,3.485,2326,3.485,2327,3.485,2328,3.485]],["title/modules/TrackerModule.html",[373,2.133,392,3.71]],["body/modules/TrackerModule.html",[0,0.011,2,0.038,3,0.038,4,0.033,20,0.005,27,0.413,28,0.555,34,0.048,36,1.89,72,0.003,73,0.003,157,4.656,185,0.937,189,2.625,195,1.804,223,1.429,257,3.178,260,3.178,266,3.178,268,3.178,288,3.178,290,3.127,318,2.28,341,5.819,355,3.376,356,3.376,373,2.621,375,2.47,376,4.361,377,2.625,378,3.696,391,5.402,392,7.539,393,3.742,394,1.451,395,2.544,397,3.627,401,4.559,402,3.05,403,2.923,404,3.198,408,2.923,429,3.198,438,2.724,543,3.198,585,4.009,586,2.714,600,5.13,604,3.599,845,5.556,846,4.813,847,3.599,848,3.599,1111,5.598,1150,6.071,1199,5.402,1294,5.13,1337,3.599,1368,3.897,1395,3.198,1523,3.897,1566,3.897,1676,5.13,1684,3.897,2267,5.13,2329,3.897,2330,3.897,2331,4.35,2332,3.897,2333,4.35,2334,6.201,2335,6.201,2336,3.897,2337,3.897,2338,4.35,2339,6.201,2340,4.35,2341,4.35,2342,4.35,2343,4.35,2344,4.35,2345,4.35,2346,4.35,2347,4.35,2348,4.35,2349,4.35]],["title/interfaces/TrackerState.html",[118,0.357,2130,3.916]],["body/interfaces/TrackerState.html",[2,0.057,3,0.057,4,0.05,8,0.142,9,0.349,13,0.164,20,0.005,24,0.662,27,0.329,28,0.834,34,0.076,35,0.936,72,0.004,73,0.004,118,0.627,194,1.685,245,3.517,258,2.36,438,2.871,659,4.267,660,3.425,661,3.425,2124,5.072,2129,5.854,2130,6.883,2131,5.854,2132,5.854,2133,7.946,2134,5.854,2135,5.854,2136,5.854,2137,5.854,2138,5.854,2139,5.854,2140,7.294,2141,5.854,2142,5.854,2143,6.736]],["title/classes/TwitterLogin.html",[0,0.013,619,2.645]],["body/classes/TwitterLogin.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.365,7,1.479,8,0.095,9,0.267,10,1.648,12,2.279,13,0.245,14,1.115,17,0.706,20,0.005,24,0.444,25,0.665,27,0.252,28,0.56,33,0.742,34,0.077,35,0.923,39,1.977,44,0.739,72,0.003,73,0.003,234,2.913,394,1.463,461,4.044,472,4.795,535,2.299,537,2.358,539,2.358,548,3.694,551,3.465,609,3.269,611,3.269,612,3.269,619,3.805,656,3.949,685,2.565,689,3.764,690,3.354,691,3.764,692,3.543,693,3.764,694,4.491,695,3.764,696,4.381,697,4.379,698,4.614,699,3.764,700,3.354,701,3.764,2350,6.237]],["title/interfaces/UUIDConfig.html",[118,0.357,1090,3.916]],["body/interfaces/UUIDConfig.html",[2,0.06,3,0.06,4,0.053,8,0.149,9,0.36,13,0.211,20,0.005,34,0.053,44,0.915,72,0.004,73,0.004,89,2.661,118,0.668,360,4.63,639,4.831,720,6.114,1085,5.7,1086,5.7,1087,5.7,1088,5.347,1089,6.528,1090,7.048,1091,5.7,1092,5.7,1093,5.7,1094,5.7,1095,5.7,1096,5.7,1097,7.824]],["title/classes/UpdateElapsedTime.html",[0,0.013,69,2.581]],["body/classes/UpdateElapsedTime.html",[0,0.024,1,3.104,2,0.033,3,0.033,4,0.029,5,2.157,6,1.341,7,1.453,8,0.082,9,0.241,10,2.319,11,2.258,12,2.239,13,0.246,14,0.464,16,2.775,17,0.836,19,0.6,20,0.005,21,0.499,22,0.56,24,0.385,25,0.576,26,3.287,27,0.27,28,0.485,29,1.774,30,2.998,31,2.998,32,3.831,33,0.643,34,0.077,35,0.906,36,2.852,37,0.924,38,1.192,39,2.313,40,3.287,41,1.179,42,3.022,43,2.691,44,0.818,45,3.287,46,2.631,47,3.104,48,3.287,49,2.209,50,3.022,51,1.712,52,3.287,53,3.104,54,3.287,55,4.832,56,1.059,57,2.874,58,3.767,59,3.287,60,3.104,61,3.287,62,1.031,63,2.874,64,3.287,65,3.104,66,3.913,67,3.287,68,1.444,69,3.421,70,3.287,71,3.104,72,0.003,73,0.003,1515,2.222,2351,5.619,2352,5.619]],["title/classes/UpdateElapsedTimeSucceeded.html",[0,0.013,71,2.787]],["body/classes/UpdateElapsedTimeSucceeded.html",[0,0.024,1,3.153,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.274,12,2.249,13,0.245,14,0.474,16,2.81,17,0.766,19,0.613,20,0.005,21,0.51,22,0.572,24,0.393,25,0.588,26,3.34,27,0.274,28,0.495,29,1.813,30,3.036,31,3.036,32,3.857,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.34,41,1.198,42,3.07,43,2.39,44,0.761,45,3.34,46,2.655,47,3.153,48,3.34,49,2.244,50,3.07,51,1.74,52,3.34,53,3.153,54,3.34,55,4.87,56,1.076,57,2.92,58,3.733,59,3.34,60,3.153,61,3.34,62,1.048,63,2.92,64,3.34,65,3.153,66,3.34,67,3.34,68,1.468,69,2.92,70,3.962,71,3.741,72,0.003,73,0.003,1616,3.012,2353,5.71,2354,3.881]],["title/classes/UpdateGame.html",[0,0.013,57,2.581]],["body/classes/UpdateGame.html",[0,0.024,1,3.104,2,0.033,3,0.033,4,0.029,5,2.157,6,1.341,7,1.453,8,0.082,9,0.241,10,2.319,11,2.258,12,2.239,13,0.246,14,0.464,16,2.775,17,0.836,19,0.6,20,0.005,21,0.499,22,0.56,24,0.385,25,0.576,26,3.287,27,0.27,28,0.485,29,1.774,30,3.831,31,2.998,32,2.998,33,0.643,34,0.077,35,0.906,36,2.852,37,0.924,38,1.192,39,2.313,40,3.287,41,1.179,42,3.022,43,2.691,44,0.818,45,3.287,46,2.631,47,3.104,48,3.287,49,2.209,50,3.022,51,1.712,52,3.287,53,3.104,54,3.913,55,4.832,56,1.059,57,3.421,58,3.767,59,3.287,60,3.104,61,3.287,62,1.031,63,2.874,64,3.287,65,3.104,66,3.287,67,3.287,68,1.444,69,2.874,70,3.287,71,3.104,72,0.003,73,0.003,1515,2.222,2355,5.619,2356,5.619]],["title/classes/UpdateGameSucceeded.html",[0,0.013,60,2.787]],["body/classes/UpdateGameSucceeded.html",[0,0.024,1,3.153,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.274,12,2.249,13,0.245,14,0.474,16,2.81,17,0.766,19,0.613,20,0.005,21,0.51,22,0.572,24,0.393,25,0.588,26,3.34,27,0.274,28,0.495,29,1.813,30,3.857,31,3.036,32,3.036,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.34,41,1.198,42,3.07,43,2.39,44,0.761,45,3.34,46,2.655,47,3.153,48,3.34,49,2.244,50,3.07,51,1.74,52,3.34,53,3.153,54,3.34,55,4.87,56,1.076,57,2.92,58,3.733,59,3.962,60,3.741,61,3.34,62,1.048,63,2.92,64,3.34,65,3.153,66,3.34,67,3.34,68,1.468,69,2.92,70,3.34,71,3.153,72,0.003,73,0.003,1616,3.012,2357,5.71,2358,3.881]],["title/interfaces/UpdateHistoryItemGamePayload.html",[30,2.262,118,0.357]],["body/interfaces/UpdateHistoryItemGamePayload.html",[2,0.055,3,0.055,4,0.049,8,0.138,9,0.343,13,0.22,20,0.005,30,3.927,31,3.589,32,3.589,34,0.074,44,0.907,51,2.948,56,1.786,62,1.469,72,0.004,73,0.004,89,2.458,93,3.322,94,2.275,118,0.684,124,2.63,153,2.63,162,3.722,213,4.462,269,2.19,753,4.548,760,2.742,930,4.114,997,3.97,1344,4.114,1422,4.462,1423,4.679]],["title/interfaces/UpdateHistoryItemPlatformPayload.html",[31,2.262,118,0.357]],["body/interfaces/UpdateHistoryItemPlatformPayload.html",[2,0.055,3,0.055,4,0.049,8,0.138,9,0.343,13,0.22,20,0.005,30,3.589,31,3.927,32,3.589,34,0.074,44,0.907,51,2.948,56,1.509,62,1.739,72,0.004,73,0.004,89,2.458,93,3.322,94,2.275,118,0.684,124,2.63,153,2.63,162,3.722,213,4.462,269,2.19,753,4.548,760,2.742,930,4.114,997,3.97,1344,4.114,1422,4.462,1423,4.679]],["title/interfaces/UpdateHistoryItemTimesPayload.html",[32,2.262,118,0.357]],["body/interfaces/UpdateHistoryItemTimesPayload.html",[2,0.055,3,0.055,4,0.048,8,0.136,9,0.34,13,0.229,20,0.005,30,3.552,31,3.552,32,3.897,34,0.074,44,0.896,51,2.935,56,1.493,62,1.454,72,0.004,73,0.004,89,2.417,93,3.912,94,2.398,118,0.681,124,3.097,153,2.603,162,3.661,213,4.389,269,2.154,753,4.501,760,2.697,930,4.047,997,3.905,1344,4.047,1422,4.389,1423,4.602]],["title/classes/UpdatePlatform.html",[0,0.013,63,2.581]],["body/classes/UpdatePlatform.html",[0,0.024,1,3.104,2,0.033,3,0.033,4,0.029,5,2.157,6,1.341,7,1.453,8,0.082,9,0.241,10,2.319,11,2.258,12,2.239,13,0.246,14,0.464,16,2.775,17,0.836,19,0.6,20,0.005,21,0.499,22,0.56,24,0.385,25,0.576,26,3.287,27,0.27,28,0.485,29,1.774,30,2.998,31,3.831,32,2.998,33,0.643,34,0.077,35,0.906,36,2.852,37,0.924,38,1.192,39,2.313,40,3.287,41,1.179,42,3.022,43,2.691,44,0.818,45,3.287,46,2.631,47,3.104,48,3.287,49,2.209,50,3.022,51,1.712,52,3.287,53,3.104,54,3.287,55,4.832,56,1.059,57,2.874,58,3.767,59,3.287,60,3.104,61,3.913,62,1.031,63,3.421,64,3.287,65,3.104,66,3.287,67,3.287,68,1.444,69,2.874,70,3.287,71,3.104,72,0.003,73,0.003,1515,2.222,2359,5.619,2360,5.619]],["title/classes/UpdatePlatformSucceeded.html",[0,0.013,65,2.787]],["body/classes/UpdatePlatformSucceeded.html",[0,0.024,1,3.153,2,0.034,3,0.034,4,0.03,5,2.204,6,1.347,7,1.459,8,0.084,9,0.245,10,2.2,11,2.274,12,2.249,13,0.245,14,0.474,16,2.81,17,0.766,19,0.613,20,0.005,21,0.51,22,0.572,24,0.393,25,0.588,26,3.34,27,0.274,28,0.495,29,1.813,30,3.036,31,3.857,32,3.036,33,0.657,34,0.077,35,0.91,36,2.865,37,0.944,38,1.218,39,2.324,40,3.34,41,1.198,42,3.07,43,2.39,44,0.761,45,3.34,46,2.655,47,3.153,48,3.34,49,2.244,50,3.07,51,1.74,52,3.34,53,3.153,54,3.34,55,4.87,56,1.076,57,2.92,58,3.733,59,3.34,60,3.153,61,3.34,62,1.048,63,2.92,64,3.962,65,3.741,66,3.34,67,3.34,68,1.468,69,2.92,70,3.34,71,3.153,72,0.003,73,0.003,1616,3.012,2361,5.71,2362,3.881]],["title/interfaces/User.html",[118,0.357,656,2.52]],["body/interfaces/User.html",[2,0.056,3,0.056,4,0.05,8,0.14,9,0.347,13,0.244,20,0.005,34,0.068,44,0.921,72,0.004,73,0.004,118,0.624,378,4.516,535,3.392,537,3.48,539,3.48,548,4.449,551,3.089,656,4.041,1046,5.121,1627,4.538,2166,7.18,2167,7.18,2168,7.18,2363,5.354,2364,5.354]],["title/injectables/UserEffects.html",[292,1.584,597,4.175]],["body/injectables/UserEffects.html",[0,0.007,2,0.024,3,0.024,4,0.022,7,1.469,8,0.061,9,0.191,13,0.139,14,0.343,17,0.951,19,0.704,20,0.005,21,0.586,22,0.657,24,0.807,25,1.207,27,0.34,33,0.475,34,0.022,35,0.618,38,2.849,72,0.002,73,0.002,138,1.584,145,1.379,168,1.627,185,0.605,190,1.696,191,1.644,200,0.844,201,2.603,292,1.74,297,1.696,300,5.72,302,4.925,303,5.928,311,6.032,312,6.162,314,6.162,315,4.97,316,5.771,318,1.473,319,1.049,320,1.888,321,3.609,323,5.766,324,1.166,338,4.791,350,1.753,451,3.346,475,3.995,491,1.817,548,1.313,574,3.995,583,5.646,597,3.689,599,2.517,609,3.308,611,3.308,612,3.308,619,3.308,656,2.769,690,3.394,697,3.308,698,3.486,700,3.394,1046,1.511,1223,1.888,1299,5.686,1586,7.821,1590,3.689,1591,3.689,1592,3.689,2166,2.181,2167,2.181,2168,2.181,2182,3.995,2183,3.995,2365,2.81,2366,4.459,2367,6.311,2368,2.81,2369,4.459,2370,6.311,2371,2.81,2372,5.544,2373,4.459,2374,4.459,2375,6.311,2376,4.459,2377,2.81,2378,4.459,2379,4.459,2380,4.459,2381,2.81,2382,4.459,2383,4.459,2384,4.459,2385,4.459,2386,4.459,2387,4.459,2388,6.311,2389,4.459,2390,2.81,2391,4.459,2392,4.459,2393,4.459,2394,2.81,2395,4.459,2396,3.995,2397,4.459,2398,4.459,2399,4.459,2400,2.81,2401,4.459,2402,4.459,2403,4.459,2404,4.459,2405,4.459,2406,2.81,2407,4.459,2408,4.459,2409,4.459,2410,2.81,2411,4.459,2412,4.459,2413,4.459,2414,2.81,2415,2.81,2416,4.459,2417,2.81,2418,2.81,2419,2.81,2420,2.81,2421,2.81,2422,2.81,2423,2.81]],["title/interfaces/UserInfo.html",[118,0.357,1627,3.538]],["body/interfaces/UserInfo.html",[2,0.057,3,0.057,4,0.05,8,0.143,9,0.35,13,0.24,20,0.005,34,0.068,44,0.913,72,0.004,73,0.004,118,0.629,378,5.113,535,3.45,537,3.54,539,3.54,548,4.472,551,3.143,656,3.288,1046,5.147,1627,5.735,2166,5.109,2167,5.109,2168,5.109,2363,5.447,2364,7.701]],["title/injectables/UserService.html",[157,2.713,292,1.584]],["body/injectables/UserService.html",[0,0.014,2,0.048,3,0.048,4,0.042,8,0.119,13,0.137,14,0.667,17,0.982,19,0.863,20,0.005,21,0.718,22,0.805,27,0.393,28,0.697,33,0.924,34,0.042,35,0.711,72,0.004,73,0.004,145,2.244,155,2.794,156,3.897,157,3.902,168,1.897,169,2.708,185,1.177,194,1.502,195,2.267,200,1.641,201,1.941,206,2.864,243,2.959,292,2.557,319,2.039,346,3.969,378,2.794,491,3.532,548,2.552,569,3.831,656,4.334,690,4.667,697,4.549,800,4.52,1046,2.938,1223,3.672,1627,3.831,1779,4.241,2364,4.52,2396,4.895,2424,5.464,2425,8.679,2426,8.146,2427,5.464,2428,5.464,2429,5.464,2430,5.464,2431,5.464,2432,5.464,2433,5.464,2434,5.464,2435,5.464,2436,5.464,2437,5.464,2438,5.464,2439,5.464,2440,5.464,2441,5.464,2442,5.464,2443,5.464,2444,5.464,2445,5.464,2446,5.464]],["title/dependencies.html",[375,3.446,2447,4.218]],["body/dependencies.html",[20,0.005,28,0.97,72,0.004,73,0.004,144,4.788,153,1.925,156,2.344,185,1.263,186,4.931,187,3.536,188,4.926,225,2.225,318,3.071,319,2.187,348,6.285,349,5.896,350,3.656,352,5.25,353,4.848,375,3.328,402,4.109,403,3.938,407,4.109,410,5.25,412,4.848,418,4.848,543,4.308,544,5.25,586,3.656,639,4.109,846,5.896,847,4.848,848,4.848,986,6.285,987,4.848,1000,4.548,1088,4.548,1342,3.938,1513,5.25,1664,5.25,1881,5.25,1882,6.806,2336,5.25,2337,5.25,2448,5.86,2449,9.873,2450,5.86,2451,5.86,2452,5.86,2453,5.86,2454,5.86,2455,5.86,2456,5.86,2457,8.43,2458,5.86,2459,9.24,2460,5.86,2461,5.86,2462,5.86,2463,5.86,2464,5.86,2465,5.86,2466,5.86,2467,5.86,2468,5.86,2469,5.86,2470,5.86,2471,5.86,2472,5.86,2473,5.86,2474,5.86]],["title/miscellaneous/functions.html",[715,2.834,2475,3.274]],["body/miscellaneous/functions.html",[7,1.589,8,0.109,19,1.577,20,0.005,21,1.312,22,1.471,72,0.003,73,0.003,194,2.055,438,4.551,715,2.355,718,7.264,1338,4.17,1348,4.957,1598,4.17,1599,5.686,1827,4.17,2059,4.516,2063,4.516,2064,6.157,2074,4.516,2079,4.516,2080,6.157,2117,4.516,2123,4.516,2145,4.516,2150,4.516,2158,4.516,2165,4.516,2475,3.912,2476,6.872,2477,5.04,2478,5.04,2479,5.04,2480,5.04,2481,5.04,2482,5.04,2483,5.04,2484,5.04,2485,4.516,2486,4.516,2487,5.04,2488,4.516,2489,5.04,2490,5.04,2491,5.04,2492,5.04]],["title/index.html",[8,0.092,220,2.157,2493,3.779]],["body/index.html",[20,0.004,56,1.25,68,1.705,72,0.004,73,0.004,138,2.356,219,5.487,220,3.392,258,2.395,319,2.476,353,5.487,403,5.522,412,5.487,418,5.487,535,3.476,639,4.651,779,4.876,846,6.378,987,5.487,1447,5.942,1453,5.942,2494,6.632,2495,6.632,2496,6.632,2497,6.632,2498,6.632,2499,6.632,2500,6.632,2501,6.632,2502,6.632,2503,8.928,2504,9.774,2505,6.632,2506,6.632,2507,6.632,2508,6.632,2509,6.632,2510,6.632,2511,6.632,2512,6.632,2513,6.632,2514,6.632,2515,6.632,2516,9.592,2517,8.928,2518,9.332,2519,8.217,2520,8.217,2521,8.217,2522,6.632,2523,6.632,2524,6.632,2525,6.632,2526,6.632,2527,6.632,2528,6.632,2529,6.632]],["title/license.html",[220,2.157,2493,3.779,2530,3.779]],["body/license.html",[4,0.049,7,0.973,20,0.004,72,0.004,73,0.004,378,3.239,395,3.705,522,4.441,1175,4.656,2530,5.674,2531,7.983,2532,8.743,2533,6.333,2534,6.333,2535,6.333,2536,6.333,2537,7.983,2538,6.333,2539,6.333,2540,6.333,2541,6.333,2542,7.983,2543,6.333,2544,9.179,2545,10.013,2546,6.333,2547,6.333,2548,7.983,2549,8.743,2550,6.333,2551,8.743,2552,7.983,2553,6.333,2554,7.983,2555,6.333,2556,6.333,2557,6.333,2558,6.333,2559,6.333,2560,6.333,2561,6.333,2562,6.333,2563,6.333,2564,6.333,2565,6.333,2566,6.333,2567,7.983,2568,7.983,2569,6.333,2570,6.333,2571,7.983,2572,6.333,2573,6.333,2574,6.333,2575,6.333,2576,6.333,2577,6.333,2578,6.333,2579,6.333,2580,6.333,2581,6.333,2582,6.333,2583,6.333,2584,6.333,2585,6.333,2586,6.333,2587,6.333,2588,6.333,2589,6.333,2590,6.333,2591,6.333]],["title/modules.html",[373,2.907]],["body/modules.html",[20,0.004,72,0.004,73,0.004,188,5.624,252,3.224,349,7.903,373,2.958,374,5.431,384,5.145,385,5.145,386,5.145,387,5.145,388,5.145,389,5.145,390,5.145,391,4.366,392,5.145,582,5.145,1449,9.123,2592,10.289,2593,8.492]],["title/overview.html",[2594,6.162]],["body/overview.html",[0,0.009,20,0.005,34,0.027,72,0.003,73,0.003,118,0.253,125,0.846,126,2.368,157,3.857,223,1.174,231,3.076,233,2.368,236,2.368,238,2.33,240,2.33,242,2.368,247,2.33,250,2.368,254,2.646,257,2.368,260,2.368,262,2.33,264,2.33,266,2.368,268,2.368,270,2.33,272,2.368,274,2.368,275,2.33,277,2.33,279,3.076,282,2.368,284,2.368,286,2.368,287,2.368,288,2.368,290,2.33,292,1.122,298,4.171,302,1.785,341,4.821,360,4.336,372,2.157,373,2.27,374,7.867,375,2.03,376,2.157,377,2.157,378,1.828,379,3.202,380,3.202,381,3.202,382,3.202,383,3.202,384,4.743,385,6.996,386,7.175,387,7.095,388,5.654,389,6.483,390,6.483,391,6.089,392,7.386,393,3.241,394,1.192,395,2.091,451,2.157,560,2.957,578,3.202,579,3.202,580,3.202,581,3.202,582,4.743,583,4.743,840,3.202,841,3.202,843,3.202,861,6.16,981,3.202,982,3.202,1050,6.503,1111,4.171,1150,4.524,1165,4.524,1199,4.025,1464,3.202,1465,3.202,1508,3.202,1509,3.202,1718,6.503,1765,3.202,1766,3.202,1767,3.202,1951,3.202,1952,3.202,1953,3.202,2071,4.812,2121,3.202,2144,3.202,2329,3.202,2330,3.202,2332,3.202,2594,3.202,2595,3.574,2596,3.574,2597,3.574]],["title/routes.html",[451,4.151]],["body/routes.html",[20,0.005,72,0.005,73,0.005,451,4.905]],["title/miscellaneous/typealiases.html",[2475,3.274,2598,6.066]],["body/miscellaneous/typealiases.html",[1,2.53,5,2.602,8,0.099,13,0.115,20,0.005,24,0.464,30,2.053,31,2.053,32,2.053,42,2.463,47,2.53,49,1.8,50,2.463,53,2.53,57,2.343,60,2.53,63,2.343,65,2.53,69,2.343,71,2.53,72,0.003,73,0.003,74,3.079,75,3.212,76,4.511,83,1.376,87,3.079,92,2.962,96,3.079,97,2.858,98,2.962,107,2.765,109,2.858,111,2.765,113,2.858,115,2.343,117,2.858,139,1.505,149,2.943,150,2.943,151,2.943,296,2.236,321,2.62,378,3.802,394,1.528,472,2.53,535,2.401,537,2.463,539,2.463,551,2.187,609,2.401,611,2.401,612,2.401,619,2.401,685,2.68,690,2.463,692,2.602,697,2.401,698,2.53,700,2.463,715,3.005,729,2.53,730,2.765,735,2.602,740,2.53,742,2.602,745,2.602,747,2.68,803,5.466,905,3.079,924,5.77,1098,4.104,1251,3.79,1264,3.79,1266,3.79,1268,3.79,1344,4.807,1422,3.212,1468,3.79,1469,4.104,1536,3.368,1537,3.79,1541,3.556,1545,3.079,1546,3.368,1551,3.212,1553,3.212,1555,3.212,1870,3.079,1871,4.323,1875,2.962,1893,3.556,1894,3.79,1901,3.556,1909,3.212,1910,3.368,1911,4.73,1915,3.212,1917,3.212,1919,3.212,1944,3.556,1945,4.104,2021,6.151,2363,3.79,2475,3.556,2485,4.104,2486,4.104,2488,5.763,2599,4.581,2600,4.581,2601,4.581,2602,4.581,2603,4.581,2604,4.581,2605,4.581,2606,4.581,2607,4.581,2608,4.581,2609,4.581,2610,7.435,2611,4.581,2612,6.433,2613,7.435,2614,4.581,2615,6.433,2616,7.435,2617,7.435,2618,7.435,2619,4.581,2620,4.581,2621,4.581,2622,4.581,2623,4.581,2624,4.581,2625,4.581,2626,4.581,2627,4.581,2628,4.581,2629,4.581,2630,4.581,2631,4.581,2632,4.581,2633,4.581,2634,4.581,2635,4.581,2636,4.581,2637,4.581,2638,4.581,2639,4.581,2640,4.581,2641,4.581]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/SharedState.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["0.0.4",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["00:00:00",{"_index":2231,"title":{},"body":{"components/TimerComponent.html":{}}}],["1",{"_index":372,"title":{"components/HeaderComponent-1.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-1.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent-1.html":{},"pipes/PluralizePipe.html":{},"interfaces/State-14.html":{},"overview.html":{}}}],["1.2.4",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["1.29.0",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":937,"title":{"interfaces/State-10.html":{}},"body":{"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["11",{"_index":2071,"title":{"interfaces/State-11.html":{}},"body":{"overview.html":{}}}],["12",{"_index":2072,"title":{"interfaces/State-12.html":{}},"body":{}}],["13",{"_index":2073,"title":{"interfaces/State-13.html":{}},"body":{}}],["13.1.0",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2078,"title":{"interfaces/State-14.html":{}},"body":{}}],["15",{"_index":1451,"title":{"interfaces/State-15.html":{}},"body":{"components/HomeComponent.html":{}}}],["16",{"_index":2116,"title":{"interfaces/State-16.html":{}},"body":{}}],["17",{"_index":2121,"title":{"interfaces/State-17.html":{}},"body":{"overview.html":{}}}],["18",{"_index":2122,"title":{"interfaces/State-18.html":{}},"body":{}}],["19",{"_index":2128,"title":{"interfaces/State-19.html":{}},"body":{}}],["2",{"_index":1273,"title":{"components/HeaderComponent-2.html":{},"interfaces/State-2.html":{}},"body":{"components/HeaderComponent-2.html":{}}}],["2.5.7",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["2.7.1",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":2534,"title":{},"body":{"license.html":{}}}],["3",{"_index":2144,"title":{"interfaces/State-3.html":{}},"body":{"overview.html":{}}}],["3.3.2",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2595,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4",{"_index":1533,"title":{"interfaces/State-4.html":{}},"body":{"components/LoadMoreComponent.html":{},"interfaces/State-18.html":{}}}],["5",{"_index":2148,"title":{"interfaces/State-5.html":{}},"body":{}}],["5.0.0",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":2149,"title":{"interfaces/State-6.html":{}},"body":{}}],["6.0.16",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2596,"title":{},"body":{"overview.html":{}}}],["69",{"_index":2597,"title":{},"body":{"overview.html":{}}}],["7",{"_index":2156,"title":{"interfaces/State-7.html":{}},"body":{}}],["8",{"_index":2157,"title":{"interfaces/State-8.html":{}},"body":{}}],["9",{"_index":2164,"title":{"interfaces/State-9.html":{}},"body":{}}],["9.0.0",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["_rout",{"_index":567,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_selectaddplayinginfo",{"_index":887,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["_selectallhistori",{"_index":2003,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectallprogress",{"_index":1996,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectauthst",{"_index":668,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectcompletedprogress",{"_index":2002,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectcompletionst",{"_index":878,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["_selectdashboardfeatur",{"_index":1004,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["_selectdatelist",{"_index":1009,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["_selectdaterang",{"_index":1006,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["_selectdisplay",{"_index":2137,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selectentriestoshow",{"_index":2140,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selecterror",{"_index":912,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["_selecterrorst",{"_index":910,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["_selecthistori",{"_index":1986,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbyd",{"_index":2019,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbygam",{"_index":2026,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbyplatform",{"_index":2025,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistoryitem",{"_index":2005,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistoryload",{"_index":2027,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectinfo",{"_index":1787,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["_selectmarkcomplet",{"_index":883,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["_selectmarkcompleteent",{"_index":890,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["_selectplatform",{"_index":1989,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplatformsload",{"_index":2035,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplatformsopt",{"_index":2032,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplay",{"_index":880,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["_selectplayingprogress",{"_index":1998,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectprofilest",{"_index":1785,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["_selectprogress",{"_index":1991,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectrangetyp",{"_index":1013,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["_selectsharedst",{"_index":1984,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectsortedhistoryitem",{"_index":2015,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectstatu",{"_index":673,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectstatusloggingin",{"_index":678,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectstatusvalidationmessag",{"_index":681,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selecttab",{"_index":885,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["_selecttim",{"_index":1993,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttimerinfo",{"_index":2039,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttrackedgam",{"_index":2030,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttrackerst",{"_index":2135,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selectus",{"_index":670,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectuserdata",{"_index":677,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectuserdataload",{"_index":2041,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectuserloggedin",{"_index":675,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectvisibletab",{"_index":892,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["a.index",{"_index":1159,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["a.starttim",{"_index":2018,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["abov",{"_index":2566,"title":{},"body":{"license.html":{}}}],["account",{"_index":1459,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["accru",{"_index":1462,"title":{},"body":{"components/HomeComponent.html":{}}}],["action",{"_index":7,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.act",{"_index":2061,"title":{},"body":{"interfaces/State.html":{}}}],["action.addplay",{"_index":305,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["action.amount",{"_index":2127,"title":{},"body":{"interfaces/State-18.html":{}}}],["action.attemptinglogin",{"_index":2161,"title":{},"body":{"interfaces/State-8.html":{}}}],["action.displaynam",{"_index":1760,"title":{},"body":{"injectables/ProfileEffects.html":{},"interfaces/State-16.html":{}}}],["action.endtim",{"_index":1605,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["action.gam",{"_index":2066,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-6.html":{}}}],["action.info",{"_index":2155,"title":{},"body":{"interfaces/State-6.html":{},"injectables/TimerEffects.html":{}}}],["action.item",{"_index":1822,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["action.itemid",{"_index":1308,"title":{},"body":{"injectables/HistoryEffects.html":{},"interfaces/MarkCompleteEntity.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-11.html":{}}}],["action.itemids.map(itemid",{"_index":1610,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["action.messag",{"_index":2062,"title":{},"body":{"interfaces/State.html":{}}}],["action.password",{"_index":2375,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload",{"_index":1320,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["action.platform",{"_index":2068,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{}}}],["action.profil",{"_index":2119,"title":{},"body":{"interfaces/State-16.html":{}}}],["action.showextra",{"_index":1603,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["action.starttim",{"_index":2070,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-6.html":{}}}],["action.tab",{"_index":2077,"title":{},"body":{"interfaces/State-13.html":{}}}],["action.typ",{"_index":1350,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["action.us",{"_index":2170,"title":{},"body":{"interfaces/State-9.html":{}}}],["action.userid",{"_index":2276,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["action.validationmessag",{"_index":2163,"title":{},"body":{"interfaces/State-8.html":{}}}],["actionreducermap",{"_index":659,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-15.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/TrackerState.html":{}}}],["actions.add_new_history_item",{"_index":1351,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.add_new_item",{"_index":1607,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["actions.add_new_progress_item",{"_index":1829,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.al",{"_index":1349,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["actions.app_error",{"_index":2060,"title":{},"body":{"interfaces/State.html":{}}}],["actions.authent",{"_index":2169,"title":{},"body":{"interfaces/State-9.html":{}}}],["actions.canceltim",{"_index":2259,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.increment_days_to_show",{"_index":2125,"title":{},"body":{"interfaces/State-18.html":{}}}],["actions.incrementdaystoshow(this.amount_to_load",{"_index":1535,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["actions.load_history_item",{"_index":1353,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.load_history_items_succeed",{"_index":1354,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.load_item",{"_index":1609,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["actions.load_options_succeed",{"_index":2147,"title":{},"body":{"interfaces/State-3.html":{}}}],["actions.load_profile_succeed",{"_index":2118,"title":{},"body":{"interfaces/State-16.html":{}}}],["actions.load_progress_item",{"_index":1830,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.load_progress_items_succeed",{"_index":1831,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.mark_complete_succeed",{"_index":1833,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.not_authent",{"_index":2171,"title":{},"body":{"interfaces/State-9.html":{}}}],["actions.remov",{"_index":1606,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["actions.remove_history_item_succeed",{"_index":1357,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.remove_progress_item_succeed",{"_index":1832,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.reset",{"_index":212,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/State-10.html":{}}}],["actions.reset_tim",{"_index":2152,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.save(addplay",{"_index":217,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["actions.savetimerinfo(info",{"_index":2257,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.set_attempting_login",{"_index":2160,"title":{},"body":{"interfaces/State-8.html":{}}}],["actions.set_endtim",{"_index":1604,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["actions.set_gam",{"_index":2065,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-6.html":{}}}],["actions.set_last_month",{"_index":2109,"title":{},"body":{"interfaces/State-14.html":{}}}],["actions.set_last_week",{"_index":2096,"title":{},"body":{"interfaces/State-14.html":{}}}],["actions.set_platform",{"_index":2067,"title":{},"body":{"interfaces/State-10.html":{},"interfaces/State-6.html":{}}}],["actions.set_profile_displayname_succeed",{"_index":2120,"title":{},"body":{"interfaces/State-16.html":{}}}],["actions.set_show_extra",{"_index":1602,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["actions.set_start_tim",{"_index":2153,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.set_starttim",{"_index":2069,"title":{},"body":{"interfaces/State-10.html":{}}}],["actions.set_this_month",{"_index":2103,"title":{},"body":{"interfaces/State-14.html":{}}}],["actions.set_this_week",{"_index":2095,"title":{},"body":{"interfaces/State-14.html":{}}}],["actions.set_timer_info",{"_index":2154,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.set_validation_messag",{"_index":2162,"title":{},"body":{"interfaces/State-8.html":{}}}],["actions.set_visible_tab",{"_index":2076,"title":{},"body":{"interfaces/State-13.html":{}}}],["actions.setgam",{"_index":2261,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.setgame(gam",{"_index":207,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setlastmonth",{"_index":1269,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setlastweek",{"_index":1265,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setplatform(platform",{"_index":209,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setstarttime(now",{"_index":2253,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.setstarttime(starttim",{"_index":211,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setthismonth",{"_index":1267,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setthisweek",{"_index":1262,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setvisibletab(tab",{"_index":2209,"title":{},"body":{"components/TabsComponent.html":{}}}],["actions.update_elapsed_time_succeed",{"_index":1362,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.update_game_succeed",{"_index":1359,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.update_platform_succeed",{"_index":1361,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions/add",{"_index":192,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-10.html":{}}}],["actions/app.act",{"_index":191,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["actions/d",{"_index":1257,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{}}}],["actions/display.act",{"_index":1534,"title":{},"body":{"components/LoadMoreComponent.html":{},"interfaces/State-18.html":{}}}],["actions/history.act",{"_index":1343,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions/mark",{"_index":1600,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-11.html":{}}}],["actions/platforms.act",{"_index":2146,"title":{},"body":{"interfaces/State-3.html":{}}}],["actions/profile.act",{"_index":1044,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{},"interfaces/State-16.html":{}}}],["actions/progress.act",{"_index":1828,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions/status.act",{"_index":2159,"title":{},"body":{"interfaces/State-8.html":{},"injectables/StatusEffects.html":{}}}],["actions/tab.act",{"_index":2075,"title":{},"body":{"interfaces/State-13.html":{},"components/TabsComponent.html":{}}}],["actions/timer.act",{"_index":2151,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions/user.act",{"_index":1223,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["activatedrout",{"_index":2367,"title":{},"body":{"injectables/UserEffects.html":{}}}],["activatedroutesnapshot",{"_index":564,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":291,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["adapt",{"_index":1345,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addall(action.item",{"_index":1356,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addall(item",{"_index":1612,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["adapter.addone(action.item",{"_index":1352,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addone(getmarkcompleteentity(action.itemid",{"_index":1608,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["adapter.getinitialst",{"_index":1347,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.removeone(action.itemid",{"_index":1358,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.updateon",{"_index":1366,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["add",{"_index":37,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime-1.html":{},"components/SpinnerComponent.html":{},"interfaces/State-12.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["add_new_history_item",{"_index":26,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["add_new_item",{"_index":80,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["add_new_progress_item",{"_index":102,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["addnewhistoryitem",{"_index":1,"title":{"classes/AddNewHistoryItem.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["addnewitem",{"_index":74,"title":{"classes/AddNewItem.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["addnewprogressitem",{"_index":97,"title":{"classes/AddNewProgressItem.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["addplay",{"_index":119,"title":{"interfaces/AddPlaying.html":{}},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/CompletionState.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-12.html":{}}}],["addplaying.startentryid",{"_index":1195,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["addplayingact",{"_index":326,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{}}}],["addplayingactions.reset",{"_index":310,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingactions.sav",{"_index":304,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingactions.savesucceed",{"_index":1821,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["addplayingactions.savesucceeded(newitem",{"_index":309,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingcompon",{"_index":126,"title":{"components/AddPlayingComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["addplayingeffect",{"_index":293,"title":{"injectables/AddPlayingEffects.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{}}}],["addplayinginfo",{"_index":123,"title":{"interfaces/AddPlayingInfo.html":{}},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["addtimerinfo",{"_index":327,"title":{"interfaces/AddTimerInfo.html":{}},"body":{"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{}}}],["af",{"_index":1113,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["afauth",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["air",{"_index":2628,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alias",{"_index":2599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amount",{"_index":1470,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["amount_to_load",{"_index":1528,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["analyt",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"index.html":{}}}],["and/or",{"_index":2559,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2503,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":586,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":185,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":543,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/CompletionModule.html":{},"components/ForgotPasswordComponent.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angularfire2/auth",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfire2/firestor",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfireauth",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfireauthmodul",{"_index":413,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":1105,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfirestorecollect",{"_index":1106,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfirestoremodul",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":417,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["anim",{"_index":723,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["apikey",{"_index":1091,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["app",{"_index":138,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["app.compon",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["app/complet",{"_index":1656,"title":{},"body":{"components/NavComponent.html":{}}}],["app/dashboard",{"_index":1649,"title":{},"body":{"components/NavComponent.html":{}}}],["app/librari",{"_index":1653,"title":{},"body":{"components/NavComponent.html":{}}}],["app/profil",{"_index":1646,"title":{},"body":{"components/NavComponent.html":{}}}],["app/track",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavComponent.html":{}}}],["app_error",{"_index":1101,"title":{},"body":{"classes/Error.html":{}}}],["appact",{"_index":190,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["appactions.error",{"_index":2177,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["appactions.error(actions.sav",{"_index":218,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["appactions.error(addplayingactions.sav",{"_index":313,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["appactions.error(historyactions.load_history_item",{"_index":1303,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.remove_history_item",{"_index":1311,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_elapsed_tim",{"_index":1323,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_gam",{"_index":1329,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_platform",{"_index":1335,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(platformsactions.load_opt",{"_index":1682,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["appactions.error(profileactions.load_profil",{"_index":1755,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["appactions.error(profileactions.set_profile_displaynam",{"_index":1762,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["appactions.error(progressactions.load_progress_item",{"_index":1803,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["appactions.error(progressactions.mark_complet",{"_index":1713,"title":{},"body":{"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["appactions.error(progressactions.remove_progress_item",{"_index":1818,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["appactions.error(timeractions.load_timer_info",{"_index":2280,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["appactions.error(timeractions.save_timer_info",{"_index":2287,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["appactions.error(useractions.email_login",{"_index":2376,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.facebook_login",{"_index":2380,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.get_us",{"_index":2389,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.google_login",{"_index":2393,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.logout",{"_index":2399,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.reset_password",{"_index":2405,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.signup",{"_index":2409,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.twitter_login",{"_index":2413,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appcompon",{"_index":231,"title":{"components/AppComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["applic",{"_index":2498,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":374,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":384,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":2629,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["argument",{"_index":1486,"title":{},"body":{"components/LibraryComponent.html":{}}}],["aris",{"_index":2590,"title":{},"body":{"license.html":{}}}],["associ",{"_index":2546,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":694,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["attemptinglogin",{"_index":1895,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-8.html":{}}}],["auth",{"_index":234,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{}}}],["auth/actions/user.act",{"_index":492,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ProfileComponent.html":{}}}],["auth/model",{"_index":1743,"title":{},"body":{"components/ProfileComponent.html":{}}}],["auth/reducers/root.reduc",{"_index":1742,"title":{},"body":{"components/ProfileComponent.html":{}}}],["auth/services/user.servic",{"_index":189,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{}}}],["authcomponentselector",{"_index":569,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-7.html":{},"injectables/UserService.html":{}}}],["authdata",{"_index":2372,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.displaynam",{"_index":2419,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.email",{"_index":2420,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.photourl",{"_index":2421,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.providerdata[0",{"_index":2417,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.uid",{"_index":2418,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdomain",{"_index":1092,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["autheffect",{"_index":470,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{}}}],["authent",{"_index":472,"title":{"classes/Authenticated.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["authform",{"_index":501,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["authformcompon",{"_index":233,"title":{"components/AuthFormComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["authguard",{"_index":433,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authmodul",{"_index":385,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2580,"title":{},"body":{"license.html":{}}}],["authroutingmodul",{"_index":582,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":583,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserEffects.html":{},"overview.html":{}}}],["authstat",{"_index":653,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"components/ProfileComponent.html":{},"interfaces/State-7.html":{}}}],["authus",{"_index":2370,"title":{},"body":{"injectables/UserEffects.html":{}}}],["avail",{"_index":2593,"title":{},"body":{"modules.html":{}}}],["awesom",{"_index":2528,"title":{},"body":{"index.html":{}}}],["axistickformat",{"_index":706,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["b",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["b.index",{"_index":1160,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["b.starttim",{"_index":2017,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["b.valu",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["backlog",{"_index":1460,"title":{},"body":{"components/HomeComponent.html":{}}}],["bannerrout",{"_index":1623,"title":{},"body":{"components/NavComponent.html":{}}}],["bannerroute.capt",{"_index":1671,"title":{},"body":{"components/NavComponent.html":{}}}],["bargraphbaseconfig",{"_index":922,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bargraphconfig",{"_index":702,"title":{"interfaces/BarGraphConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"classes/AddNewItem.html":{},"components/AppComponent.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/PieChartConfig.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"interfaces/RouteEntry.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"interfaces/UUIDConfig.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["bootstrap",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["brand",{"_index":544,"title":{},"body":{"components/AuthFormComponent.html":{},"dependencies.html":{}}}],["break",{"_index":1263,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["brows",{"_index":2592,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["builder",{"_index":517,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["c",{"_index":2533,"title":{},"body":{"license.html":{}}}],["canactiv",{"_index":463,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(_rout",{"_index":563,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":743,"title":{},"body":{"classes/CancelTimer.html":{},"components/EditDisplayNameComponent.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{}}}],["cancel_tim",{"_index":732,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["canceltim",{"_index":729,"title":{"classes/CancelTimer.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["caption",{"_index":1637,"title":{},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["case",{"_index":1261,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["catcherror",{"_index":320,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":311,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["chang",{"_index":1365,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["changedetect",{"_index":135,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["changedetectionstrategi",{"_index":184,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":136,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["charg",{"_index":2541,"title":{},"body":{"license.html":{}}}],["chart",{"_index":987,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{},"index.html":{}}}],["children",{"_index":464,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["claim",{"_index":2583,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["clearstat",{"_index":2476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearstate(reduc",{"_index":2492,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cli",{"_index":2505,"title":{},"body":{"index.html":{}}}],["close",{"_index":1644,"title":{},"body":{"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["cluster_appmodul",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":578,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":579,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":580,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":581,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_completionmodul",{"_index":840,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_completionmodule_declar",{"_index":841,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_completionmodule_import",{"_index":842,"title":{},"body":{"modules/CompletionModule.html":{}}}],["cluster_completionmodule_provid",{"_index":843,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":981,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":982,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":983,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_homemodul",{"_index":1464,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":1465,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_librarymodul",{"_index":1508,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_declar",{"_index":1509,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_import",{"_index":1510,"title":{},"body":{"modules/LibraryModule.html":{}}}],["cluster_profilemodul",{"_index":1765,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1766,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_provid",{"_index":1767,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1951,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1952,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1953,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackermodul",{"_index":2329,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["cluster_trackermodule_declar",{"_index":2330,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["cluster_trackermodule_import",{"_index":2331,"title":{},"body":{"modules/TrackerModule.html":{}}}],["cluster_trackermodule_provid",{"_index":2332,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["colorschem",{"_index":719,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["colorsetnam",{"_index":2610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":800,"title":{},"body":{"components/CompletionComponent.html":{},"injectables/ElapsedTimeService.html":{},"injectables/UserService.html":{}}}],["combinelatest(currenttim",{"_index":1079,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["combinelatest(this.historygroup",{"_index":822,"title":{},"body":{"components/CompletionComponent.html":{}}}],["combinelatest(us",{"_index":2442,"title":{},"body":{"injectables/UserService.html":{}}}],["commonmodul",{"_index":585,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["complet",{"_index":83,"title":{},"body":{"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"components/SpinnerComponent.html":{},"interfaces/State-12.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["complete.act",{"_index":1601,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-11.html":{}}}],["complete.actions.t",{"_index":76,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["complete.actions.ts:11",{"_index":1902,"title":{},"body":{"classes/SetEndTime.html":{}}}],["complete.actions.ts:12",{"_index":1903,"title":{},"body":{"classes/SetEndTime.html":{}}}],["complete.actions.ts:17",{"_index":1860,"title":{},"body":{"classes/Remove.html":{}}}],["complete.actions.ts:18",{"_index":1861,"title":{},"body":{"classes/Remove.html":{}}}],["complete.actions.ts:23",{"_index":1520,"title":{},"body":{"classes/LoadItems.html":{}}}],["complete.actions.ts:24",{"_index":1521,"title":{},"body":{"classes/LoadItems.html":{}}}],["complete.actions.ts:29",{"_index":78,"title":{},"body":{"classes/AddNewItem.html":{}}}],["complete.actions.ts:30",{"_index":79,"title":{},"body":{"classes/AddNewItem.html":{}}}],["complete.actions.ts:5",{"_index":1930,"title":{},"body":{"classes/SetShowExtra.html":{}}}],["complete.actions.ts:6",{"_index":1931,"title":{},"body":{"classes/SetShowExtra.html":{}}}],["complete.models.t",{"_index":1615,"title":{},"body":{"interfaces/MarkCompleteItem.html":{}}}],["complete.reduc",{"_index":872,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["complete.reducer.t",{"_index":1599,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{},"miscellaneous/functions.html":{}}}],["completedcount",{"_index":2201,"title":{},"body":{"components/TabsComponent.html":{}}}],["completeddisplaydata",{"_index":748,"title":{"interfaces/CompletedDisplayData.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/PlayingDisplayData.html":{}}}],["completeditem",{"_index":751,"title":{"interfaces/CompletedItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{}}}],["completeditemcompon",{"_index":236,"title":{"components/CompletedItemComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["completedprogerssitem",{"_index":830,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completion'},{'nam",{"_index":239,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["completion.compon",{"_index":849,"title":{},"body":{"modules/CompletionModule.html":{}}}],["completion.component.html",{"_index":785,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completion.component.scss",{"_index":784,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completioncompon",{"_index":238,"title":{"components/CompletionComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["completionmodul",{"_index":386,"title":{"modules/CompletionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules.html":{},"overview.html":{}}}],["completionselector",{"_index":801,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["completionst",{"_index":802,"title":{"interfaces/CompletionState.html":{}},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["completionstor",{"_index":789,"title":{},"body":{"components/CompletionComponent.html":{}}}],["compodoc",{"_index":2511,"title":{},"body":{"index.html":{}}}],["compon",{"_index":125,"title":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthRoutingModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":228,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["components/add",{"_index":850,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/auth",{"_index":587,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/complet",{"_index":852,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/edit",{"_index":1769,"title":{},"body":{"modules/ProfileModule.html":{}}}],["components/forgot",{"_index":589,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/graph",{"_index":988,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/header/header.compon",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{}}}],["components/histori",{"_index":2338,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/history/history.compon",{"_index":2340,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/load",{"_index":2341,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/lock",{"_index":2343,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/login/login.compon",{"_index":592,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/nav/nav.compon",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["components/play",{"_index":854,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/register/register.compon",{"_index":593,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/spinner/spinner.compon",{"_index":1955,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/tabs/tabs.compon",{"_index":856,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/tim",{"_index":991,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/timer/timer.compon",{"_index":2344,"title":{},"body":{"modules/TrackerModule.html":{}}}],["condit",{"_index":2565,"title":{},"body":{"license.html":{}}}],["config",{"_index":2214,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["confirm",{"_index":1039,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["connect",{"_index":2591,"title":{},"body":{"license.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(act",{"_index":297,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"classes/Error.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["constructor(addplay",{"_index":1883,"title":{},"body":{"classes/Save.html":{}}}],["constructor(af",{"_index":1429,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["constructor(afauth",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(amount",{"_index":1471,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["constructor(attemptinglogin",{"_index":1896,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["constructor(build",{"_index":514,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["constructor(displaynam",{"_index":1927,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["constructor(email",{"_index":1082,"title":{},"body":{"classes/EmailLogin.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{}}}],["constructor(gam",{"_index":1904,"title":{},"body":{"classes/SetGame.html":{},"classes/SetGame-1.html":{}}}],["constructor(info",{"_index":1888,"title":{},"body":{"classes/SaveTimerInfo.html":{},"classes/SetTimerInfo.html":{}}}],["constructor(item",{"_index":15,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfoSucceeded.html":{}}}],["constructor(itemid",{"_index":77,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["constructor(payload",{"_index":1616,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["constructor(platform",{"_index":1542,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{}}}],["constructor(priv",{"_index":200,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(profil",{"_index":1556,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["constructor(publ",{"_index":39,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["constructor(sharedstor",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{}}}],["constructor(starttim",{"_index":1932,"title":{},"body":{"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{}}}],["constructor(stor",{"_index":155,"title":{},"body":{"components/AddPlayingComponent.html":{},"guards/AuthGuard.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/UserService.html":{}}}],["constructor(tab",{"_index":1946,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["constructor(trackerstor",{"_index":2303,"title":{},"body":{"components/TrackerComponent.html":{}}}],["constructor(us",{"_index":686,"title":{},"body":{"classes/Authenticated.html":{}}}],["constructor(userid",{"_index":1515,"title":{},"body":{"classes/LoadHistoryItems.html":{},"classes/LoadProfile.html":{},"classes/LoadProgressItems.html":{},"classes/LoadTimerInfo.html":{},"classes/MarkComplete.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveProgressItem.html":{},"classes/SetProfileDisplayName.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateGame.html":{},"classes/UpdatePlatform.html":{}}}],["constructor(userservic",{"_index":1630,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(validationmessag",{"_index":1941,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["contract",{"_index":2587,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2526,"title":{},"body":{"index.html":{}}}],["cool",{"_index":2625,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["copi",{"_index":2544,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2532,"title":{},"body":{"license.html":{}}}],["core",{"_index":1882,"title":{},"body":{"interfaces/RouteEntry.html":{},"dependencies.html":{}}}],["createentityadapt",{"_index":1339,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["createfeatureselector",{"_index":660,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-15.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/TrackerState.html":{}}}],["createfeatureselector('auth",{"_index":669,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["createfeatureselector('complet",{"_index":879,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["createfeatureselector('dashboard",{"_index":1005,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["createfeatureselector('error",{"_index":911,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["createfeatureselector('profil",{"_index":1786,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["createfeatureselector('shar",{"_index":1985,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createfeatureselector('track",{"_index":2136,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector",{"_index":661,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-15.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selectallhistori",{"_index":2006,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectallprogress",{"_index":1999,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectauthst",{"_index":671,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["createselector(_selectcompletionst",{"_index":881,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["createselector(_selectdashboardfeatur",{"_index":1007,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["createselector(_selectdaterang",{"_index":1010,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["createselector(_selectdisplay",{"_index":2141,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selecterrorst",{"_index":913,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["createselector(_selecthistori",{"_index":2028,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selecthistoryitem",{"_index":2016,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplatform",{"_index":2033,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplatformsopt",{"_index":2036,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplay",{"_index":888,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["createselector(_selectprofilest",{"_index":1788,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["createselector(_selectsharedst",{"_index":1987,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectsortedhistoryitem",{"_index":2020,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectstatu",{"_index":679,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["createselector(_selecttab",{"_index":893,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["createselector(_selecttim",{"_index":2040,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selecttrackerst",{"_index":2138,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selectus",{"_index":676,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["currentrout",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.indexof('/app",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["currentst",{"_index":1364,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["currenttim",{"_index":1064,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["customrouterstateseri",{"_index":437,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"modules/AppModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["d3",{"_index":2509,"title":{},"body":{"index.html":{}}}],["damag",{"_index":2584,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":251,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"components/SpinnerComponent.html":{},"interfaces/State-15.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["dashboard'},{'nam",{"_index":241,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["dashboard.compon",{"_index":994,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":921,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":920,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":240,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":387,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardselector",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["dashboardst",{"_index":952,"title":{"interfaces/DashboardState.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["dashboardstor",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data",{"_index":2215,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["data.models.t",{"_index":750,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["data.util",{"_index":811,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["data.utils.t",{"_index":2615,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databaseurl",{"_index":1093,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["datat",{"_index":1513,"title":{},"body":{"modules/LibraryModule.html":{},"dependencies.html":{}}}],["date",{"_index":153,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"dependencies.html":{}}}],["date().gettim",{"_index":1076,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["date(datestrings[0]).gettim",{"_index":1413,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["date(datestrings[1]).gettim",{"_index":1414,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["date(historyentry.endtim",{"_index":2010,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["date(historyentry.starttim",{"_index":2009,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["date(now",{"_index":2266,"title":{},"body":{"components/TimerComponent.html":{}}}],["date(starttimeel.value).gettim",{"_index":2264,"title":{},"body":{"components/TimerComponent.html":{}}}],["date:'m/d/i",{"_index":221,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["date:'mm/d/yyyi",{"_index":1503,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date:'shorttim",{"_index":1418,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["date:\\'m/d/i",{"_index":229,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["date:\\'mm/d/yyyi",{"_index":1504,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date:\\'shorttim",{"_index":1421,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["dategraphconfig",{"_index":923,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datelist",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["daterang",{"_index":997,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/SharedState.html":{},"interfaces/State-15.html":{},"interfaces/State-5.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["daterange.endday",{"_index":1012,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["daterange.typ",{"_index":1014,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["daterangeel",{"_index":1256,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["daterangeel.valu",{"_index":1260,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["daterangetyp",{"_index":924,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{},"miscellaneous/typealiases.html":{}}}],["datestr",{"_index":1410,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["datestring.trim",{"_index":1412,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["datetim",{"_index":2337,"title":{},"body":{"modules/TrackerModule.html":{},"dependencies.html":{}}}],["day",{"_index":1476,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["deal",{"_index":2548,"title":{},"body":{"license.html":{}}}],["declar",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["decor",{"_index":315,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["default",{"_index":24,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"interfaces/ProfileState.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["defin",{"_index":17,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["deletehistoryitem",{"_index":1424,"title":{},"body":{"injectables/HistoryService.html":{}}}],["deletehistoryitem(userid",{"_index":1127,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["depend",{"_index":375,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":1453,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["dev",{"_index":2513,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2512,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dictionari",{"_index":1016,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["differ",{"_index":1452,"title":{},"body":{"components/HomeComponent.html":{}}}],["direct",{"_index":226,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["display",{"_index":245,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-19.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["display.entriestoshow",{"_index":2142,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["display.reduc",{"_index":2132,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["displaydata",{"_index":767,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["displaydata.completeditem.endtim",{"_index":782,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.gam",{"_index":777,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.platform",{"_index":778,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.starttim",{"_index":781,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.timeplay",{"_index":780,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.startentrydata.gam",{"_index":1714,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.startentrydata.platform",{"_index":1715,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.startentrydata.starttim",{"_index":1717,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.timeplay",{"_index":1716,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaynam",{"_index":1046,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"interfaces/State-16.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["displaynameel",{"_index":1038,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["displaynameel.valu",{"_index":1047,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["distribut",{"_index":2557,"title":{},"body":{"license.html":{}}}],["document",{"_index":2547,"title":{},"body":{"license.html":{}}}],["dom",{"_index":128,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["domain",{"_index":720,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["doughnut",{"_index":728,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["dynam",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["eachday",{"_index":999,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["eachday(daterange.startday",{"_index":1011,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["edit",{"_index":244,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["editdisplaynamecompon",{"_index":242,"title":{"components/EditDisplayNameComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["editnam",{"_index":1729,"title":{},"body":{"components/ProfileComponent.html":{}}}],["effect",{"_index":316,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["effects/add",{"_index":857,"title":{},"body":{"modules/CompletionModule.html":{}}}],["effects/auth.effect",{"_index":594,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/history.effect",{"_index":2346,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/platforms.effect",{"_index":2347,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/profile.effect",{"_index":1772,"title":{},"body":{"modules/ProfileModule.html":{}}}],["effects/progress.effect",{"_index":860,"title":{},"body":{"modules/CompletionModule.html":{}}}],["effects/status.effect",{"_index":596,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/timer.effect",{"_index":2348,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/user.effect",{"_index":598,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodul",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{}}}],["effectsmodule.forfeatur",{"_index":604,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["effectsmodule.forfeature([profileeffect",{"_index":1774,"title":{},"body":{"modules/ProfileModule.html":{}}}],["effectsmodule.forroot",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":1383,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["el.click",{"_index":1416,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["elaps",{"_index":67,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["elapsedtim",{"_index":1053,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["elapsedtime:item.endtim",{"_index":1420,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["elapsedtimeel",{"_index":1388,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimeel.valu",{"_index":1409,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimeel.value.split('~').map(datestr",{"_index":1411,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimepip",{"_index":1050,"title":{"pipes/ElapsedTimePipe.html":{}},"body":{"pipes/ElapsedTimePipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["elapsedtimeservic",{"_index":341,"title":{"injectables/ElapsedTimeService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ElapsedTimeService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["element",{"_index":225,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"dependencies.html":{}}}],["elements/googletagmanag",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":548,"title":{},"body":{"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"interfaces/State-9.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["email_login",{"_index":699,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["emailauth",{"_index":510,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emailauthev",{"_index":545,"title":{"interfaces/EmailAuthEvent.html":{}},"body":{"components/AuthFormComponent.html":{},"interfaces/EmailAuthEvent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emaillogin",{"_index":700,"title":{"classes/EmailLogin.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["emaillogin(ev",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailsignup",{"_index":1847,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailsignup(ev",{"_index":1852,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emitemailauth",{"_index":502,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emitfacebookauth",{"_index":503,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emitfinishedit",{"_index":1028,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["emitgoogleauth",{"_index":504,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emittwitterauth",{"_index":505,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["end",{"_index":91,"title":{},"body":{"classes/AddNewItem.html":{},"components/CompletedItemComponent.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["enddat",{"_index":758,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["endday",{"_index":2081,"title":{},"body":{"interfaces/State-14.html":{}}}],["endentryid",{"_index":761,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/MarkCompletePayload.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-4.html":{}}}],["enditem",{"_index":1707,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["enditem.id",{"_index":1712,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["endlastmonth",{"_index":2111,"title":{},"body":{"interfaces/State-14.html":{}}}],["endlastweek",{"_index":2098,"title":{},"body":{"interfaces/State-14.html":{}}}],["endmonth",{"_index":2106,"title":{},"body":{"interfaces/State-14.html":{}}}],["endofmonth",{"_index":2083,"title":{},"body":{"interfaces/State-14.html":{}}}],["endofmonth(now",{"_index":2107,"title":{},"body":{"interfaces/State-14.html":{}}}],["endofweek",{"_index":2084,"title":{},"body":{"interfaces/State-14.html":{}}}],["endofweek(now",{"_index":2093,"title":{},"body":{"interfaces/State-14.html":{}}}],["endtim",{"_index":93,"title":{},"body":{"classes/AddNewItem.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressItem.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["endtimeel",{"_index":1697,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["endtimeinm",{"_index":1056,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["endweek",{"_index":2092,"title":{},"body":{"interfaces/State-14.html":{}}}],["entiti",{"_index":2000,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entities.filter(ent",{"_index":2001,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entity.endentryid",{"_index":1800,"title":{},"body":{"injectables/ProgressEffects.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entity.id",{"_index":1802,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["entityadapt",{"_index":1340,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["entityst",{"_index":1341,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["entri",{"_index":1370,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entriestoshow",{"_index":2124,"title":{},"body":{"interfaces/State-18.html":{},"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["entry'},{'nam",{"_index":261,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["entry.compon",{"_index":2339,"title":{},"body":{"modules/TrackerModule.html":{}}}],["entry.component.html",{"_index":1372,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.scss",{"_index":1371,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.t",{"_index":1369,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":1568,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:24",{"_index":1572,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":1571,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":1567,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":1377,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:30",{"_index":1378,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:31",{"_index":1379,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":1376,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:33",{"_index":1394,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":1393,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:35",{"_index":1569,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":1375,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:40",{"_index":1380,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:44",{"_index":1389,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:54",{"_index":1391,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:62",{"_index":1384,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:72",{"_index":1385,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:76",{"_index":1387,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:91",{"_index":1382,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry/histori",{"_index":1368,"title":{},"body":{"components/HistoryEntryComponent.html":{},"modules/TrackerModule.html":{}}}],["entry/lock",{"_index":1566,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"modules/TrackerModule.html":{}}}],["environ",{"_index":360,"title":{"interfaces/Environment.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{},"overview.html":{}}}],["environment.product",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["err.messag",{"_index":314,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["error",{"_index":905,"title":{"classes/Error.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Error.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"miscellaneous/typealiases.html":{}}}],["error.reduc",{"_index":904,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["event",{"_index":522,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["event.password",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["eventemitt",{"_index":523,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{}}}],["exact",{"_index":1650,"title":{},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["explodeslic",{"_index":727,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["express",{"_index":2573,"title":{},"body":{"license.html":{}}}],["extend",{"_index":704,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/PieChartConfig.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["extra",{"_index":86,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["faban",{"_index":2250,"title":{},"body":{"components/TimerComponent.html":{}}}],["fabar",{"_index":1643,"title":{},"body":{"components/NavComponent.html":{}}}],["facebook",{"_index":537,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["facebook_login",{"_index":695,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["facebookauth",{"_index":511,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["facebooklogin",{"_index":609,"title":{"classes/FacebookLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["facebooksignup",{"_index":1848,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fachartbar",{"_index":1651,"title":{},"body":{"components/NavComponent.html":{}}}],["facheck",{"_index":1040,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/PlayingItemComponent.html":{}}}],["faclipboardlist",{"_index":1657,"title":{},"body":{"components/NavComponent.html":{}}}],["faclock",{"_index":1660,"title":{},"body":{"components/NavComponent.html":{}}}],["faedit",{"_index":1738,"title":{},"body":{"components/ProfileComponent.html":{}}}],["fafacebook",{"_index":538,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["fagoogl",{"_index":536,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["falist",{"_index":1654,"title":{},"body":{"components/NavComponent.html":{}}}],["falock",{"_index":1570,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["fals",{"_index":518,"title":{},"body":{"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["faplay",{"_index":1392,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["faplaycircl",{"_index":2247,"title":{},"body":{"components/TimerComponent.html":{}}}],["faplussquar",{"_index":181,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["fasignoutalt",{"_index":1641,"title":{},"body":{"components/NavComponent.html":{}}}],["fastopcircl",{"_index":2249,"title":{},"body":{"components/TimerComponent.html":{}}}],["fatim",{"_index":1041,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["fatrash",{"_index":772,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["fatwitt",{"_index":540,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["features/auth/auth.modul",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["features/auth/components/login/login.compon",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/auth/components/register/register.compon",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/auth/guards/auth.guard",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/auth/model",{"_index":1666,"title":{},"body":{"components/NavComponent.html":{}}}],["features/auth/services/user.servic",{"_index":1665,"title":{},"body":{"components/NavComponent.html":{}}}],["features/completion/completion.compon",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/completion/completion.modul",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["features/dashboard/dashboard.compon",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/dashboard/dashboard.modul",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["features/home/home.compon",{"_index":456,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/home/home.modul",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["features/library/library.compon",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/library/library.modul",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["features/profile/profile.compon",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/profile/profile.modul",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["features/tracker/tracker.compon",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/tracker/tracker.modul",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"license.html":{}}}],["filter.util",{"_index":807,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["filteredgroup",{"_index":2321,"title":{},"body":{"components/TrackerComponent.html":{}}}],["filterplatform",{"_index":804,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterplatforms(group",{"_index":824,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterstarttim",{"_index":805,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterstarttimes(group",{"_index":826,"title":{},"body":{"components/CompletionComponent.html":{}}}],["findmatchinghistoryentri",{"_index":197,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["findmatchinghistoryentry(this.gamegroup",{"_index":214,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["finish",{"_index":1456,"title":{},"body":{"components/HomeComponent.html":{}}}],["finishedit",{"_index":1030,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["fire",{"_index":2626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["firebas",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{},"dependencies.html":{},"index.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/app",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/auth",{"_index":2415,"title":{},"body":{"injectables/UserEffects.html":{}}}],["firebaseconfig",{"_index":1089,"title":{"interfaces/FirebaseConfig.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["firestorehistoryitem",{"_index":1103,"title":{"interfaces/FirestoreHistoryItem.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["firestoreplatformsitem",{"_index":1148,"title":{"interfaces/FirestorePlatformsItem.html":{}},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["firestoreprofileitem",{"_index":1163,"title":{"interfaces/FirestoreProfileItem.html":{}},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["firestoreprogressitem",{"_index":1177,"title":{"interfaces/FirestoreProgressItem.html":{}},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["firestoretimeritem",{"_index":1197,"title":{"interfaces/FirestoreTimerItem.html":{}},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["first",{"_index":1107,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["firstplay",{"_index":1506,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["fit",{"_index":2576,"title":{},"body":{"license.html":{}}}],["flame",{"_index":2630,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fn",{"_index":1000,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"dependencies.html":{}}}],["follow",{"_index":2564,"title":{},"body":{"license.html":{}}}],["fontawesom",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"index.html":{}}}],["fontawesomemodul",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{}}}],["forest",{"_index":2632,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["forgot",{"_index":248,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["forgotpassword",{"_index":606,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["forgotpasswordcompon",{"_index":247,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["form",{"_index":498,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form'},{'nam",{"_index":235,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["form.compon",{"_index":588,"title":{},"body":{"modules/AuthModule.html":{}}}],["form.component.html",{"_index":500,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.scss",{"_index":499,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.t",{"_index":497,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:18",{"_index":520,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:19",{"_index":519,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:20",{"_index":521,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:21",{"_index":524,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:22",{"_index":526,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:23",{"_index":525,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:24",{"_index":527,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:25",{"_index":534,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:26",{"_index":541,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:30",{"_index":516,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:33",{"_index":532,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:46",{"_index":528,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:55",{"_index":530,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:59",{"_index":529,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:63",{"_index":531,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form/auth",{"_index":496,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/AuthModule.html":{}}}],["formatd",{"_index":1974,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["formatdate(item.daterange[0",{"_index":2023,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["formatelapsedtim",{"_index":1060,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{}}}],["formatelapsedtime(starttimeinm",{"_index":1061,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["formatelapsedtime(timerinfo.starttim",{"_index":1080,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["formattim",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/TimePipe.html":{}}}],["formattime(timeinsecond",{"_index":2223,"title":{},"body":{"pipes/TimePipe.html":{}}}],["formbuild",{"_index":515,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["formgroup",{"_index":533,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["formsmodul",{"_index":600,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["fortawesome/angular",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":1881,"title":{},"body":{"interfaces/RouteEntry.html":{},"dependencies.html":{}}}],["fortawesome/fre",{"_index":186,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["found",{"_index":219,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/PlayingItemComponent.html":{},"index.html":{}}}],["free",{"_index":2540,"title":{},"body":{"license.html":{}}}],["from(this.afauth.auth.createuserwithemailandpassword(email",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.sendpasswordresetemail(email",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signinwithemailandpassword(email",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signout",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.facebooklogin",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.googlelogin",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.twitterlogin",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["fromdaterang",{"_index":1001,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["fromdaterange.reduc",{"_index":1003,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["fromdaterange.st",{"_index":998,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["fromdisplay",{"_index":2131,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromdisplay.reduc",{"_index":2134,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromdisplay.st",{"_index":2133,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromerror",{"_index":903,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromerror.reduc",{"_index":909,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromerror.st",{"_index":907,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromhistori",{"_index":1966,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.adapter.getselectors(_selecthistori",{"_index":2004,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.reduc",{"_index":1980,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.st",{"_index":1962,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["frommarkcomplet",{"_index":871,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["frommarkcomplete.adapter.getselectors(_selectmarkcomplet",{"_index":891,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["frommarkcomplete.reduc",{"_index":876,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["frommarkcomplete.st",{"_index":867,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromplatform",{"_index":1968,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplatforms.reduc",{"_index":1981,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplatforms.st",{"_index":1963,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplay",{"_index":869,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromplaying.reduc",{"_index":875,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromplaying.st",{"_index":866,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromprofil",{"_index":1782,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["fromprofile.reduc",{"_index":1784,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["fromprofile.st",{"_index":1781,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["fromprogress",{"_index":1970,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.adapter.getselectors(_selectprogress",{"_index":1997,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.reduc",{"_index":1982,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.st",{"_index":1964,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromrout",{"_index":902,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{}}}],["fromrouter.routerreduc",{"_index":908,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromrouter.routerreducerst",{"_index":906,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromrouter.routerstateseri",{"_index":916,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromstatu",{"_index":662,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromstatus.reduc",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromstatus.st",{"_index":657,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromtab",{"_index":873,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromtab.reduc",{"_index":877,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromtab.st",{"_index":868,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["fromtim",{"_index":1972,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromtimer.reduc",{"_index":1983,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromtimer.st",{"_index":1965,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromus",{"_index":664,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromuser.reduc",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromuser.st",{"_index":658,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["full",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fun",{"_index":2523,"title":{},"body":{"index.html":{}}}],["function",{"_index":715,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":2562,"title":{},"body":{"license.html":{}}}],["game",{"_index":56,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompletePayload.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressItem.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"index.html":{}}}],["gamecount",{"_index":1275,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["gamegraphconfig",{"_index":925,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gamegroup",{"_index":154,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/LibraryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["get",{"_index":2493,"title":{"index.html":{},"license.html":{}},"body":{}}],["get_us",{"_index":689,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["getauthenticatedact",{"_index":2366,"title":{},"body":{"injectables/UserEffects.html":{}}}],["getauthenticatedaction(authdata",{"_index":2369,"title":{},"body":{"injectables/UserEffects.html":{}}}],["getauthst",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcompleteddisplaydataitem",{"_index":808,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getcompleteddisplaydataitems(completedprogerssitem",{"_index":837,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getcurrenttim",{"_index":1065,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getcurrenttimed",{"_index":2227,"title":{},"body":{"components/TimerComponent.html":{}}}],["getdisplaynam",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["getdisplayname(us",{"_index":2443,"title":{},"body":{"injectables/UserService.html":{}}}],["getelapsedtim",{"_index":1066,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getelapsedtime(inactivevalu",{"_index":1069,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getemail",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["getemail(us",{"_index":2444,"title":{},"body":{"injectables/UserService.html":{}}}],["getenditem",{"_index":1701,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["getenditem(this.gamegroup",{"_index":1708,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["getgraphdata",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getgraphdata(groupingsbyplatform",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gethistoryent",{"_index":1425,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistoryentity(histori",{"_index":1142,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["gethistorygroupinglist",{"_index":1977,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorygroupinglist(historylistitemsmap",{"_index":2024,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorylist",{"_index":1426,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistorylist(userid",{"_index":1116,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["gethistorylistitemsmap",{"_index":1978,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorylistitemsmap(item",{"_index":2022,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getimgsrc",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["getimgsrc(us",{"_index":2445,"title":{},"body":{"injectables/UserService.html":{}}}],["getmarkcompleteent",{"_index":1613,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["getmarkcompleteentity(itemid",{"_index":1611,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{}}}],["getnewhistoryitem",{"_index":1427,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getnewhistoryitem(info",{"_index":1135,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["getnewprogressitem",{"_index":1834,"title":{},"body":{"injectables/ProgressService.html":{}}}],["getnewprogressitem(addplay",{"_index":1193,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getnowtim",{"_index":1213,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["getnumentriestoshow",{"_index":1493,"title":{},"body":{"components/LibraryComponent.html":{}}}],["getnumentriestoshow(window.innerheight",{"_index":1502,"title":{},"body":{"components/LibraryComponent.html":{}}}],["getpaddedgraphdata",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpaddedgraphdata(groupingsbyd",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getplatformsopt",{"_index":1154,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["getplayingdisplaydataitem",{"_index":809,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getplayingdisplaydataitems(playingprogressitem",{"_index":835,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getprofil",{"_index":1775,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(userid",{"_index":1169,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["getprogresslist",{"_index":1835,"title":{},"body":{"injectables/ProgressService.html":{}}}],["getprogresslist(userid",{"_index":1183,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getproviderfrom",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["getproviderfrom(user.providerid",{"_index":2446,"title":{},"body":{"injectables/UserService.html":{}}}],["getsortedgraphdata",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getsortedgraphdata(groupingsbygam",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getstat",{"_index":2088,"title":{},"body":{"interfaces/State-14.html":{}}}],["getstate(startlastmonth",{"_index":2115,"title":{},"body":{"interfaces/State-14.html":{}}}],["getstate(startlastweek",{"_index":2102,"title":{},"body":{"interfaces/State-14.html":{}}}],["getstate(startmonth",{"_index":2108,"title":{},"body":{"interfaces/State-14.html":{}}}],["getstate(startweek",{"_index":2094,"title":{},"body":{"interfaces/State-14.html":{}}}],["gettimerinfo",{"_index":2289,"title":{},"body":{"injectables/TimerService.html":{}}}],["gettimerinfo(userid",{"_index":1209,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["getuniquefrom",{"_index":1975,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getuniquefrom(item",{"_index":2031,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getupdatedst",{"_index":1363,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["getupdatedstate(action.payload",{"_index":1360,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["getus",{"_index":690,"title":{"classes/GetUser.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getuserinfo",{"_index":2425,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseritemcollect",{"_index":1428,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ProgressService.html":{}}}],["getuseritemcollection(userid",{"_index":1140,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid",{"_index":1109,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid(addplaying.userid",{"_index":1194,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid(info.userid",{"_index":1136,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["getvalidationmessag",{"_index":2196,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["getvalidationmessage(act",{"_index":2178,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["getvaluefromngselect",{"_index":1396,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["getvaluefromngselect(this.gam",{"_index":1400,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["googl",{"_index":535,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["google_login",{"_index":693,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["googleauth",{"_index":512,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["googlelogin",{"_index":611,"title":{"classes/GoogleLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["googlesignup",{"_index":1849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["googletagmanag",{"_index":1086,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["gradient",{"_index":722,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["grant",{"_index":2539,"title":{},"body":{"license.html":{}}}],["graph",{"_index":252,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules.html":{}}}],["graph'},{'nam",{"_index":285,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["graph.compon",{"_index":993,"title":{},"body":{"modules/DashboardModule.html":{}}}],["graph.component.html",{"_index":2213,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.scss",{"_index":2212,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.t",{"_index":2211,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:13",{"_index":2217,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:14",{"_index":2216,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:17",{"_index":2218,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph/tim",{"_index":992,"title":{},"body":{"modules/DashboardModule.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graphconfig",{"_index":705,"title":{"interfaces/GraphConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["graphdataitem",{"_index":716,"title":{"interfaces/GraphDataItem.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"interfaces/PieChartConfig.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graphdatamodifi",{"_index":2613,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["graphtooltipcompon",{"_index":250,"title":{"components/GraphTooltipComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["group",{"_index":823,"title":{},"body":{"components/CompletionComponent.html":{},"components/HistoryComponent.html":{}}}],["group.key",{"_index":1289,"title":{},"body":{"components/HistoryComponent.html":{}}}],["group.totaltim",{"_index":1290,"title":{},"body":{"components/HistoryComponent.html":{}}}],["groupings.map(item",{"_index":815,"title":{},"body":{"components/CompletionComponent.html":{}}}],["groupingsbyd",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupingsbygam",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupingsbyplatform",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["guard",{"_index":560,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hasmoretodisplay",{"_index":2313,"title":{},"body":{"components/TrackerComponent.html":{}}}],["hasmoretodisplay(historygroup",{"_index":2324,"title":{},"body":{"components/TrackerComponent.html":{}}}],["header",{"_index":1243,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["header'},{'nam",{"_index":255,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["header.component.html",{"_index":1245,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["header.component.scss",{"_index":1244,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["headercompon",{"_index":254,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["headless",{"_index":2519,"title":{},"body":{"index.html":{}}}],["here",{"_index":2500,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":2538,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":222,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["hidenavcont",{"_index":1624,"title":{},"body":{"components/NavComponent.html":{}}}],["histori",{"_index":36,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["histories.map(histori",{"_index":1120,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history'},{'nam",{"_index":259,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["history.component.html",{"_index":1282,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":1281,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.endtim",{"_index":1147,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.gam",{"_index":1144,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.id",{"_index":1143,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.load",{"_index":2029,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["history.platform",{"_index":1145,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.reduc",{"_index":1967,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["history.starttim",{"_index":1146,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historyact",{"_index":483,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{}}}],["historyactions.addnewhistoryitem(action.item",{"_index":1315,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.loadhistoryitem",{"_index":1298,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.loadhistoryitems(action.user.uid",{"_index":478,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["historyactions.loadhistoryitemssucceeded(data",{"_index":1302,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.removehistoryitem",{"_index":1306,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.removehistoryitem(this.userid",{"_index":1408,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.removehistoryitemsucceeded(itemid",{"_index":1310,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateelapsedtim",{"_index":1318,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateelapsedtime(this.userid",{"_index":1415,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updateelapsedtimesucceeded(payload",{"_index":1322,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updategam",{"_index":1326,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updategame(this.userid",{"_index":1401,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updategamesucceeded(payload",{"_index":1328,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateplatform",{"_index":1332,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateplatform(this.userid",{"_index":1402,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updateplatformsucceeded(payload",{"_index":1334,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historycollect",{"_index":1112,"title":{"interfaces/HistoryCollection.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historycompon",{"_index":257,"title":{"components/HistoryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historyeffect",{"_index":1294,"title":{"injectables/HistoryEffects.html":{}},"body":{"injectables/HistoryEffects.html":{},"modules/TrackerModule.html":{}}}],["historyent",{"_index":16,"title":{"interfaces/HistoryEntity.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-2.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["historyentri",{"_index":2007,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentries.map",{"_index":2008,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentry.id",{"_index":2013,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentrycompon",{"_index":260,"title":{"components/HistoryEntryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historygroup",{"_index":162,"title":{"interfaces/HistoryGrouping.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/PlayingItemComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historygroupingsbyd",{"_index":2044,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historygroupingsbygam",{"_index":2046,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historygroupingsbyplatform",{"_index":2045,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyitem",{"_index":213,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historyitem.id",{"_index":216,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["historylist",{"_index":1117,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historylist.pipe(map(histori",{"_index":1119,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historylistitem",{"_index":753,"title":{"interfaces/HistoryListItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historylistitemkeyfunct",{"_index":2616,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historylistitemmap",{"_index":2618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historylistitemsmap",{"_index":2021,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"miscellaneous/typealiases.html":{}}}],["historyload",{"_index":2047,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyservic",{"_index":1111,"title":{"injectables/HistoryService.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historytrackedgam",{"_index":2048,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["hold",{"_index":1457,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":2581,"title":{},"body":{"license.html":{}}}],["home",{"_index":1441,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":263,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["home.compon",{"_index":1467,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":1443,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1442,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":262,"title":{"components/HomeComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["homemodul",{"_index":388,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["horizon",{"_index":2633,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hostlisten",{"_index":1483,"title":{},"body":{"components/LibraryComponent.html":{}}}],["hostlistener('window:res",{"_index":1499,"title":{},"body":{"components/LibraryComponent.html":{}}}],["html",{"_index":224,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["htmlinputel",{"_index":1036,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["htmlselectel",{"_index":174,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["https://mzrimsek.github.io/track",{"_index":2501,"title":{},"body":{"index.html":{}}}],["icon",{"_index":144,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteEntry.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["icondefinit",{"_index":1880,"title":{},"body":{"interfaces/RouteEntry.html":{}}}],["id",{"_index":760,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/Dictionary.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"interfaces/IHasId.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["ihasid",{"_index":1020,"title":{"interfaces/IHasId.html":{}},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["imgsrc",{"_index":2364,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":6,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-1.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["impli",{"_index":2574,"title":{},"body":{"license.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["inactivevalu",{"_index":1071,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["includ",{"_index":2551,"title":{},"body":{"license.html":{}}}],["increment",{"_index":1475,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["increment_days_to_show",{"_index":1474,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["incrementdaystoshow",{"_index":1468,"title":{"classes/IncrementDaysToShow.html":{}},"body":{"classes/IncrementDaysToShow.html":{},"miscellaneous/typealiases.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["info.endtim",{"_index":1138,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["info.gam",{"_index":820,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["info.platform",{"_index":827,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{}}}],["info.starttim",{"_index":1137,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{}}}],["inform",{"_index":2497,"title":{},"body":{"index.html":{}}}],["initialst",{"_index":1346,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["inject",{"_index":292,"title":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/ElapsedTimeService.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":152,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["insert",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["insertanalyticsel",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["insertanalyticselements(environment.googletagmanag",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["interfac",{"_index":118,"title":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/AuthState.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/CompletionState.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"interfaces/EmailAuthEvent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/PieChartConfig.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/Profile.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/TimerInfo.html":{},"interfaces/TrackerState.html":{},"interfaces/UUIDConfig.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{}},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/AuthState.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"interfaces/EmailAuthEvent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/TrackerState.html":{},"interfaces/UUIDConfig.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"overview.html":{}}}],["interv",{"_index":1072,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["interval(1000).pipe(map",{"_index":1075,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["isuserloggedin",{"_index":683,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["item",{"_index":11,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-11.html":{},"interfaces/State-5.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["item'},{'nam",{"_index":237,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["item.compon",{"_index":853,"title":{},"body":{"modules/CompletionModule.html":{}}}],["item.component.html",{"_index":766,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.scss",{"_index":765,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.t",{"_index":764,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.ts:22",{"_index":769,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:23",{"_index":774,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:24",{"_index":773,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:26",{"_index":768,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:27",{"_index":1690,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:28",{"_index":1691,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:29",{"_index":770,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.ts:30",{"_index":1699,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:33",{"_index":771,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:34",{"_index":1689,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:37",{"_index":1693,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:41",{"_index":1698,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:45",{"_index":1694,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:49",{"_index":1696,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:54",{"_index":1692,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.endtim",{"_index":1419,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["item.gam",{"_index":1573,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["item.key",{"_index":816,"title":{},"body":{"components/CompletionComponent.html":{}}}],["item.opt",{"_index":1162,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["item.platform",{"_index":1574,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["item.starttim",{"_index":1417,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["item/complet",{"_index":763,"title":{},"body":{"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{}}}],["item/play",{"_index":855,"title":{},"body":{"modules/CompletionModule.html":{},"components/PlayingItemComponent.html":{}}}],["itemid",{"_index":51,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["items.sort((a",{"_index":1158,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["js",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":2517,"title":{},"body":{"index.html":{}}}],["key",{"_index":1423,"title":{},"body":{"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["kind",{"_index":2572,"title":{},"body":{"license.html":{}}}],["label",{"_index":1022,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["last",{"_index":1271,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["last_month",{"_index":1268,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{},"miscellaneous/typealiases.html":{}}}],["last_week",{"_index":1264,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{},"miscellaneous/typealiases.html":{}}}],["lastplay",{"_index":1507,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["learn",{"_index":1454,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":223,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["liabil",{"_index":2585,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2582,"title":{},"body":{"license.html":{}}}],["librari",{"_index":256,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["library'},{'nam",{"_index":265,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["library.compon",{"_index":1514,"title":{},"body":{"modules/LibraryModule.html":{}}}],["library.component.html",{"_index":1479,"title":{},"body":{"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":1478,"title":{},"body":{"components/LibraryComponent.html":{}}}],["librarycompon",{"_index":264,"title":{"components/LibraryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["libraryentri",{"_index":1480,"title":{"interfaces/LibraryEntry.html":{}},"body":{"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{}}}],["librarymodul",{"_index":389,"title":{"modules/LibraryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["licens",{"_index":2530,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":2552,"title":{},"body":{"license.html":{}}}],["liter",{"_index":1232,"title":{},"body":{"interfaces/GraphConfig.html":{}}}],["load",{"_index":41,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_history_item",{"_index":40,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_history_items_succeed",{"_index":45,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_item",{"_index":95,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["load_opt",{"_index":1539,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{}}}],["load_options_succeed",{"_index":1540,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{}}}],["load_profil",{"_index":1548,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["load_profile_succeed",{"_index":1550,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["load_progress_item",{"_index":106,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["load_progress_items_succeed",{"_index":108,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["load_timer_info",{"_index":744,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["loadhistoryitem",{"_index":42,"title":{"classes/LoadHistoryItems.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistoryitemssucceed",{"_index":47,"title":{"classes/LoadHistoryItemsSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loaditem",{"_index":96,"title":{"classes/LoadItems.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["loadmorecompon",{"_index":266,"title":{"components/LoadMoreComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["loadmoreentri",{"_index":1529,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["loadopt",{"_index":1536,"title":{"classes/LoadOptions.html":{}},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"injectables/PlatformsEffects.html":{},"miscellaneous/typealiases.html":{}}}],["loadoptionssucceed",{"_index":1541,"title":{"classes/LoadOptionsSucceeded.html":{}},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprofil",{"_index":1545,"title":{"classes/LoadProfile.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"injectables/ProfileEffects.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprofilesucceed",{"_index":1551,"title":{"classes/LoadProfileSucceeded.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprogressitem",{"_index":107,"title":{"classes/LoadProgressItems.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/ProgressEffects.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprogressitemssucceed",{"_index":109,"title":{"classes/LoadProgressItemsSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadtimerinfo",{"_index":745,"title":{"classes/LoadTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["lock",{"_index":269,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["lockedhistoryentrycompon",{"_index":268,"title":{"components/LockedHistoryEntryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["loggingin",{"_index":506,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-7.html":{}}}],["login",{"_index":461,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"classes/TwitterLogin.html":{}}}],["login'},{'nam",{"_index":271,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["login.component.html",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1576,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":270,"title":{"components/LoginComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["logo",{"_index":2529,"title":{},"body":{"index.html":{}}}],["logout",{"_index":697,"title":{"classes/Logout.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["made",{"_index":1447,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["map",{"_index":321,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["map(act",{"_index":303,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["map(auth",{"_index":571,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(authdata",{"_index":2384,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1301,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/TimerEffects.html":{}}}],["map(ent",{"_index":1801,"title":{},"body":{"injectables/ProgressEffects.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["map(item",{"_index":1161,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["map(itemid",{"_index":1309,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["map(payload",{"_index":1321,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["mapgroup",{"_index":1491,"title":{},"body":{"components/LibraryComponent.html":{}}}],["mapgroupings(gamegroup",{"_index":1497,"title":{},"body":{"components/LibraryComponent.html":{}}}],["mark",{"_index":82,"title":{},"body":{"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/CompletionState.html":{},"components/HomeComponent.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-12.html":{}}}],["mark_complet",{"_index":114,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["mark_complete_succeed",{"_index":116,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["markcomplet",{"_index":115,"title":{"classes/MarkComplete.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletionState.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/State-12.html":{},"miscellaneous/typealiases.html":{}}}],["markcompleteact",{"_index":1700,"title":{},"body":{"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["markcompleteactions.addnewitem(item.id",{"_index":1825,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.loaditems(entities.filter(ent",{"_index":1799,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.remove(data.itemid",{"_index":1810,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.remove(itemid",{"_index":1817,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.setendtime(this.displaydata.item.id",{"_index":1706,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["markcompleteactions.setshowextra(this.displaydata.item.id",{"_index":1703,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["markcompleted(userid",{"_index":1191,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["markcompleteent",{"_index":832,"title":{"interfaces/MarkCompleteEntity.html":{}},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{}}}],["markcompleteitem",{"_index":754,"title":{"interfaces/MarkCompleteItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/PlayingDisplayData.html":{}}}],["markcompletepayload",{"_index":104,"title":{"interfaces/MarkCompletePayload.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["markcompletesucceed",{"_index":117,"title":{"classes/MarkCompleteSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["match",{"_index":73,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["menu",{"_index":1642,"title":{},"body":{"components/NavComponent.html":{}}}],["merchant",{"_index":2575,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1175,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/ProfileService.html":{},"injectables/TimerService.html":{},"license.html":{}}}],["mergemap",{"_index":322,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{}}}],["mergemap(act",{"_index":476,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/StatusEffects.html":{}}}],["mergemap(data",{"_index":1808,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(ent",{"_index":1797,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(item",{"_index":1823,"title":{},"body":{"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{}}}],["mergemap(itemid",{"_index":1815,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(newitem",{"_index":308,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["messag",{"_index":507,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State.html":{}}}],["messagingsenderid",{"_index":1096,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["meta.reduc",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":134,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["metareduc",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["method",{"_index":145,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["mike",{"_index":2535,"title":{},"body":{"license.html":{}}}],["miscellan",{"_index":2475,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2531,"title":{},"body":{"license.html":{}}}],["mode",{"_index":2520,"title":{},"body":{"index.html":{}}}],["model",{"_index":33,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-17.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["model.nam",{"_index":1240,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["model.valu",{"_index":1241,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["modifi",{"_index":2555,"title":{},"body":{"license.html":{}}}],["modul",{"_index":373,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":1272,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["more",{"_index":1525,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more'},{'nam",{"_index":267,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["more.compon",{"_index":2342,"title":{},"body":{"modules/TrackerModule.html":{}}}],["more.component.html",{"_index":1527,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.scss",{"_index":1526,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.t",{"_index":1524,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:16",{"_index":1530,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:19",{"_index":1531,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:23",{"_index":1532,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more/load",{"_index":1523,"title":{},"body":{"components/LoadMoreComponent.html":{},"modules/TrackerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name'},{'nam",{"_index":246,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["name.compon",{"_index":1770,"title":{},"body":{"modules/ProfileModule.html":{}}}],["name.component.html",{"_index":1027,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.scss",{"_index":1026,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.t",{"_index":1025,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:20",{"_index":1032,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:21",{"_index":1043,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:22",{"_index":1042,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:25",{"_index":1031,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:28",{"_index":1034,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:32",{"_index":1033,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:36",{"_index":1037,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name/edit",{"_index":1024,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"modules/ProfileModule.html":{}}}],["namespac",{"_index":1097,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["natur",{"_index":2624,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nav",{"_index":1620,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'nam",{"_index":273,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["nav.component.html",{"_index":1622,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1621,"title":{},"body":{"components/NavComponent.html":{}}}],["navbann",{"_index":1638,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomplet",{"_index":1658,"title":{},"body":{"components/NavComponent.html":{}}}],["navcompon",{"_index":272,"title":{"components/NavComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["navdashboard",{"_index":1652,"title":{},"body":{"components/NavComponent.html":{}}}],["navlibrari",{"_index":1655,"title":{},"body":{"components/NavComponent.html":{}}}],["navprofil",{"_index":1647,"title":{},"body":{"components/NavComponent.html":{}}}],["navtrack",{"_index":1661,"title":{},"body":{"components/NavComponent.html":{}}}],["neon",{"_index":2634,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":38,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/SharedState.html":{},"interfaces/State-14.html":{},"interfaces/State-5.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{}}}],["newitem",{"_index":1123,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["newstat",{"_index":1355,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["ng",{"_index":846,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodul",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["ngoninit",{"_index":146,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["ngrx",{"_index":2507,"title":{},"body":{"index.html":{}}}],["ngrx/effect",{"_index":318,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":1342,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-11.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":28,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-15.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ngselectmodul",{"_index":845,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["ngselectvalu",{"_index":1021,"title":{"interfaces/NgSelectValue.html":{}},"body":{"interfaces/Dictionary.html":{},"components/HistoryEntryComponent.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["ngx",{"_index":2510,"title":{},"body":{"index.html":{}}}],["ngxchartsmodul",{"_index":985,"title":{},"body":{"modules/DashboardModule.html":{}}}],["ngxdatatablemodul",{"_index":1512,"title":{},"body":{"modules/LibraryModule.html":{}}}],["night",{"_index":2636,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nightlight",{"_index":2637,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["node_modules/@angular/form",{"_index":602,"title":{},"body":{"modules/AuthModule.html":{}}}],["noninfring",{"_index":2579,"title":{},"body":{"license.html":{}}}],["not_authent",{"_index":691,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["notauthent",{"_index":692,"title":{"classes/NotAuthenticated.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["noth",{"_index":1291,"title":{},"body":{"components/HistoryComponent.html":{}}}],["notic",{"_index":2567,"title":{},"body":{"license.html":{}}}],["now",{"_index":2089,"title":{},"body":{"interfaces/State-14.html":{},"components/TimerComponent.html":{}}}],["npm",{"_index":2521,"title":{},"body":{"index.html":{}}}],["null",{"_index":160,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"interfaces/Dictionary.html":{},"components/HistoryEntryComponent.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["number",{"_index":94,"title":{},"body":{"classes/AddNewItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"pipes/PluralizePipe.html":{},"interfaces/ProgressItem.html":{},"classes/Remove.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"pipes/TimePipe.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["number.parseint(endtimeel.valu",{"_index":1705,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["number.parseint(starttimeel.valu",{"_index":210,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["numentriestoshow",{"_index":1481,"title":{},"body":{"components/LibraryComponent.html":{}}}],["object",{"_index":180,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["observ",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":2543,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":2631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["of(displaynam",{"_index":1176,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["of(itemid",{"_index":1129,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(new",{"_index":312,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["of(newitem",{"_index":1190,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(payload",{"_index":1132,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(this.gethistoryentity(newitem",{"_index":1126,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["oftype(addplayingactions.sav",{"_index":301,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["oftype(addplayingactions.save_succeed",{"_index":1820,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(appactions.app_error",{"_index":2176,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["oftype(fromrouter.router_navig",{"_index":2192,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["oftype(historyactions.load_history_item",{"_index":1297,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.remove_history_item",{"_index":1305,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_elapsed_tim",{"_index":1317,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_gam",{"_index":1325,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_platform",{"_index":1331,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(platformsactions.load_opt",{"_index":1679,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["oftype(profileactions.load_profil",{"_index":1751,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["oftype(profileactions.set_profile_displaynam",{"_index":1757,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["oftype(progressactions.load_progress_item",{"_index":1794,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(progressactions.mark_complet",{"_index":1805,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(progressactions.remove_progress_item",{"_index":1812,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(timeractions.cancel_tim",{"_index":2270,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.load_timer_info",{"_index":2274,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.save_timer_info",{"_index":2282,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.save_timer_info_succeed",{"_index":1313,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(useractions.authent",{"_index":474,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/StatusEffects.html":{}}}],["oftype(useractions.email_login",{"_index":2182,"title":{},"body":{"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(useractions.facebook_login",{"_index":2378,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.get_us",{"_index":2382,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.google_login",{"_index":2391,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.logout",{"_index":2395,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.reset_password",{"_index":2401,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.signup",{"_index":2407,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.twitter_login",{"_index":2411,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oninit",{"_index":133,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["onres",{"_index":1500,"title":{},"body":{"components/LibraryComponent.html":{}}}],["opendatetimepick",{"_index":1373,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["opendatetimepicker(el",{"_index":1381,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["option",{"_index":22,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"interfaces/FirestorePlatformsItem.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"interfaces/RouteEntry.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"interfaces/State-3.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":2589,"title":{},"body":{"license.html":{}}}],["out",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":509,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{}}}],["over",{"_index":1450,"title":{},"body":{"components/HomeComponent.html":{}}}],["overview",{"_index":2594,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":2334,"title":{},"body":{"modules/TrackerModule.html":{}}}],["owlnativedatetimemodul",{"_index":2335,"title":{},"body":{"modules/TrackerModule.html":{}}}],["packag",{"_index":2447,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":901,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["paramet",{"_index":19,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":2577,"title":{},"body":{"license.html":{}}}],["password",{"_index":551,"title":{},"body":{"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["password'},{'nam",{"_index":249,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["password.compon",{"_index":591,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.component.html",{"_index":1217,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.scss",{"_index":1216,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":1215,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1222,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1219,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1220,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1221,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":590,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordComponent.html":{}}}],["passwordform",{"_index":1218,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["path",{"_index":460,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pathmatch",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":58,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/State-2.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["permiss",{"_index":2537,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2561,"title":{},"body":{"license.html":{}}}],["person",{"_index":2542,"title":{},"body":{"license.html":{}}}],["photourl",{"_index":2166,"title":{},"body":{"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["pick",{"_index":2336,"title":{},"body":{"modules/TrackerModule.html":{},"dependencies.html":{}}}],["picnic",{"_index":2635,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["piechartconfig",{"_index":725,"title":{"interfaces/PieChartConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/TimePlatformGraphComponent.html":{}}}],["pipe",{"_index":302,"title":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"pipes/PluralizePipe.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"pipes/TimePipe.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{},"overview.html":{}}}],["pipe(catcherror(err",{"_index":2404,"title":{},"body":{"injectables/UserEffects.html":{}}}],["pipe(map",{"_index":2271,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["pipe(mergemap",{"_index":2187,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["pipes/elaps",{"_index":1956,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/pluralize.pip",{"_index":1958,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/time.pip",{"_index":1959,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1059,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}}}],["platform",{"_index":62,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompletePayload.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressItem.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["platformel",{"_index":176,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["platformel.valu",{"_index":208,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["platformgraphconfig",{"_index":926,"title":{},"body":{"components/DashboardComponent.html":{}}}],["platformopt",{"_index":2037,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformoptions.length",{"_index":2038,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platforms.opt",{"_index":2034,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platforms.reduc",{"_index":1969,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformsact",{"_index":485,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PlatformsEffects.html":{}}}],["platformsactions.loadopt",{"_index":477,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["platformsactions.loadoptionssucceeded(data",{"_index":1681,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["platformscollect",{"_index":1151,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformseffect",{"_index":1676,"title":{"injectables/PlatformsEffects.html":{}},"body":{"injectables/PlatformsEffects.html":{},"modules/TrackerModule.html":{}}}],["platformsitem",{"_index":1155,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformsitems.pipe(map(item",{"_index":1157,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformsload",{"_index":2042,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformsopt",{"_index":1283,"title":{},"body":{"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["platformsservic",{"_index":1150,"title":{"injectables/PlatformsService.html":{}},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["play",{"_index":139,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"components/SpinnerComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["playing'},{'nam",{"_index":230,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["playing.act",{"_index":193,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-10.html":{}}}],["playing.actions.t",{"_index":1871,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["playing.actions.ts:10",{"_index":1908,"title":{},"body":{"classes/SetGame-1.html":{}}}],["playing.actions.ts:15",{"_index":1923,"title":{},"body":{"classes/SetPlatform-1.html":{}}}],["playing.actions.ts:16",{"_index":1924,"title":{},"body":{"classes/SetPlatform-1.html":{}}}],["playing.actions.ts:21",{"_index":1935,"title":{},"body":{"classes/SetStartTime-1.html":{}}}],["playing.actions.ts:22",{"_index":1936,"title":{},"body":{"classes/SetStartTime-1.html":{}}}],["playing.actions.ts:27",{"_index":1872,"title":{},"body":{"classes/Reset.html":{}}}],["playing.actions.ts:33",{"_index":1884,"title":{},"body":{"classes/Save.html":{}}}],["playing.actions.ts:34",{"_index":1885,"title":{},"body":{"classes/Save.html":{}}}],["playing.actions.ts:39",{"_index":1886,"title":{},"body":{"classes/SaveSucceeded.html":{}}}],["playing.actions.ts:40",{"_index":1887,"title":{},"body":{"classes/SaveSucceeded.html":{}}}],["playing.actions.ts:9",{"_index":1907,"title":{},"body":{"classes/SetGame-1.html":{}}}],["playing.compon",{"_index":851,"title":{},"body":{"modules/CompletionModule.html":{}}}],["playing.component.html",{"_index":143,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.scss",{"_index":141,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.t",{"_index":132,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:26",{"_index":163,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:27",{"_index":164,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:28",{"_index":161,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:29",{"_index":165,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:30",{"_index":166,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:31",{"_index":159,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:32",{"_index":183,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:33",{"_index":182,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:35",{"_index":158,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:38",{"_index":167,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:42",{"_index":172,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:49",{"_index":175,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:54",{"_index":178,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:59",{"_index":170,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:63",{"_index":171,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.effect",{"_index":858,"title":{},"body":{"modules/CompletionModule.html":{}}}],["playing.effects.t",{"_index":295,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.effects.ts:14",{"_index":299,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.effects.ts:18",{"_index":317,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.models.t",{"_index":121,"title":{},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{}}}],["playing.reduc",{"_index":870,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["playing.reducer.t",{"_index":2064,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["playing.util",{"_index":199,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing/add",{"_index":131,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/CompletionModule.html":{}}}],["playingcount",{"_index":2202,"title":{},"body":{"components/TabsComponent.html":{}}}],["playingdisplaydata",{"_index":755,"title":{"interfaces/PlayingDisplayData.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/CompletionComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{}}}],["playingitemcompon",{"_index":274,"title":{"components/PlayingItemComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["playingprogressitem",{"_index":828,"title":{},"body":{"components/CompletionComponent.html":{}}}],["playtim",{"_index":779,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"index.html":{}}}],["playtime').subscribe(titl",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["plural",{"_index":1720,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["pluralize:'game':'gam",{"_index":1278,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["pluralize:\\'game\\':\\'gam",{"_index":1279,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["pluralizepip",{"_index":1718,"title":{"pipes/PluralizePipe.html":{}},"body":{"pipes/PluralizePipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["pluralword",{"_index":1723,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["portion",{"_index":2570,"title":{},"body":{"license.html":{}}}],["postlogin",{"_index":2173,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["potentiald",{"_index":786,"title":{},"body":{"components/CompletionComponent.html":{}}}],["potentialplatform",{"_index":787,"title":{},"body":{"components/CompletionComponent.html":{}}}],["privat",{"_index":201,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LockedHistoryEntryComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["product",{"_index":1087,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["profil",{"_index":243,"title":{"interfaces/Profile.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"components/SpinnerComponent.html":{},"interfaces/State-17.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["profile'},{'nam",{"_index":276,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["profile.compon",{"_index":1771,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.html",{"_index":1728,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1727,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.reduc",{"_index":1783,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["profile/actions/profile.act",{"_index":494,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["profile/model",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/reducers/root.reduc",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/utils/userinfo.util",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["profileact",{"_index":493,"title":{},"body":{"injectables/AuthEffects.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{}}}],["profileactions.loadprofil",{"_index":1752,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.loadprofile(action.user.uid",{"_index":481,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["profileactions.loadprofilesucceeded(data",{"_index":1754,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.setprofiledisplaynam",{"_index":1758,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.setprofiledisplayname(this.userid",{"_index":1048,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["profileactions.setprofiledisplaynamesucceeded(data",{"_index":1761,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profilecollect",{"_index":1166,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profilecompon",{"_index":275,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["profilecomponentselector",{"_index":2431,"title":{},"body":{"injectables/UserService.html":{}}}],["profiledoc",{"_index":1170,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profiledoc.pipe(map(profil",{"_index":1172,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profileeffect",{"_index":1748,"title":{"injectables/ProfileEffects.html":{}},"body":{"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{}}}],["profilemodul",{"_index":390,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1625,"title":{},"body":{"components/NavComponent.html":{}}}],["profileselector",{"_index":1790,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["profileservic",{"_index":1165,"title":{"injectables/ProfileService.html":{}},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profilest",{"_index":1779,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{},"injectables/UserService.html":{}}}],["profilestor",{"_index":2426,"title":{},"body":{"injectables/UserService.html":{}}}],["progress",{"_index":105,"title":{},"body":{"classes/AddNewProgressItem.html":{},"components/CompletionComponent.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{}}}],["progress.load",{"_index":2043,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progress.reduc",{"_index":1971,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progress.some(x",{"_index":2011,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progressact",{"_index":487,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["progressactions.addnewprogressitem(item",{"_index":1824,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.loadprogressitem",{"_index":1795,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.loadprogressitems(action.user.uid",{"_index":480,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["progressactions.loadprogressitemssucceeded(ent",{"_index":1798,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.markcomplet",{"_index":1806,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.markcomplete(this.userid",{"_index":1711,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["progressactions.markcompletesucceeded(data",{"_index":1809,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.removeprogressitem",{"_index":1813,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.removeprogressitem(this.userid",{"_index":775,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["progressactions.removeprogressitemsucceeded(itemid",{"_index":1816,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progresscollect",{"_index":1180,"title":{"interfaces/ProgressCollection.html":{}},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresscomplet",{"_index":2050,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progresseffect",{"_index":859,"title":{"injectables/ProgressEffects.html":{}},"body":{"modules/CompletionModule.html":{},"injectables/ProgressEffects.html":{}}}],["progressent",{"_index":99,"title":{"interfaces/ProgressEntity.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-4.html":{}}}],["progressitem",{"_index":752,"title":{"interfaces/ProgressItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progresslist",{"_index":1184,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresslist.pipe(map(progresslistitem",{"_index":1185,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresslistitems.map(progress",{"_index":1186,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progressplay",{"_index":2049,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progressservic",{"_index":298,"title":{"injectables/ProgressService.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"overview.html":{}}}],["projectid",{"_index":1094,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["promis",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["provid",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"license.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["providerdata",{"_index":2416,"title":{},"body":{"injectables/UserEffects.html":{}}}],["providerdata.providerid",{"_index":2422,"title":{},"body":{"injectables/UserEffects.html":{}}}],["providerid",{"_index":2167,"title":{},"body":{"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["publish",{"_index":2556,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":2578,"title":{},"body":{"license.html":{}}}],["queryparam",{"_index":573,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["quickstart",{"_index":1374,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["range.act",{"_index":1258,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{}}}],["range.actions.t",{"_index":1911,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["range.actions.ts:11",{"_index":1920,"title":{},"body":{"classes/SetLastWeek.html":{}}}],["range.actions.ts:17",{"_index":1937,"title":{},"body":{"classes/SetThisMonth.html":{}}}],["range.actions.ts:23",{"_index":1912,"title":{},"body":{"classes/SetLastMonth.html":{}}}],["range.actions.ts:5",{"_index":1938,"title":{},"body":{"classes/SetThisWeek.html":{}}}],["range.models.t",{"_index":2612,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["range.reduc",{"_index":1002,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["range.reducer.t",{"_index":2080,"title":{},"body":{"interfaces/State-14.html":{},"miscellaneous/functions.html":{}}}],["rangetyp",{"_index":1015,"title":{},"body":{"interfaces/DashboardState.html":{},"components/HeaderComponent-1.html":{},"interfaces/State-15.html":{}}}],["rc.12",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":601,"title":{},"body":{"modules/AuthModule.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["redirectto",{"_index":465,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-15.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":1348,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["reducers/history.reduc",{"_index":29,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/CancelTimer.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["reducers/progress.reduc",{"_index":103,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["reducers/root.reduc",{"_index":195,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserService.html":{}}}],["redux",{"_index":2506,"title":{},"body":{"index.html":{}}}],["regist",{"_index":462,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":278,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["register.component.html",{"_index":1846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":277,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["regular",{"_index":1664,"title":{},"body":{"components/NavComponent.html":{},"dependencies.html":{}}}],["remov",{"_index":49,"title":{"classes/Remove.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["remove(userid",{"_index":1192,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["remove_history_item",{"_index":48,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["remove_history_item_succeed",{"_index":52,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["remove_progress_item",{"_index":110,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["remove_progress_item_succeed",{"_index":112,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["removehistoryitem",{"_index":50,"title":{"classes/RemoveHistoryItem.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removehistoryitemsucceed",{"_index":53,"title":{"classes/RemoveHistoryItemSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removeprogressitem",{"_index":111,"title":{"classes/RemoveProgressItem.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/ProgressEffects.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removeprogressitemsucceed",{"_index":113,"title":{"classes/RemoveProgressItemSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":394,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"modules/SharedModule.html":{},"classes/SignUp.html":{},"modules/TrackerModule.html":{},"classes/TwitterLogin.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["reset_password",{"_index":701,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["reset_tim",{"_index":733,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["resetgam",{"_index":2228,"title":{},"body":{"components/TimerComponent.html":{}}}],["resetinfo",{"_index":147,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["resetpassword",{"_index":612,"title":{"classes/ResetPassword.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["resetpassword(email",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["resettim",{"_index":735,"title":{"classes/ResetTimer.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["resettimer(userid",{"_index":1208,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["restrict",{"_index":2550,"title":{},"body":{"license.html":{}}}],["result",{"_index":72,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":168,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"components/NavComponent.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["returnurl",{"_index":574,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserEffects.html":{}}}],["right",{"_index":2553,"title":{},"body":{"license.html":{}}}],["root",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["root'},{'nam",{"_index":232,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["rootcomponentselector",{"_index":914,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["rout",{"_index":451,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"components/NavComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{},"overview.html":{},"routes.html":{}}}],["route.capt",{"_index":1673,"title":{},"body":{"components/NavComponent.html":{}}}],["route.firstchild",{"_index":918,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routeentri",{"_index":1636,"title":{"interfaces/RouteEntry.html":{}},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["routenavig",{"_index":2174,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["router",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"components/NavComponent.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{}}}],["routermodul",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":607,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerst",{"_index":899,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstate.root",{"_index":917,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstateseri",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":565,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstateurl",{"_index":900,"title":{"interfaces/RouterStateUrl.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routing.modul",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module.t",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["run",{"_index":2516,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":319,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/oper",{"_index":324,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{}}}],["save",{"_index":296,"title":{"classes/Save.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["save_succeed",{"_index":1874,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["save_timer_info",{"_index":739,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["save_timer_info_succeed",{"_index":741,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["saveaddplay",{"_index":1836,"title":{},"body":{"injectables/ProgressService.html":{}}}],["saveaddplaying(addplay",{"_index":1187,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["saveaddplayingsucceed",{"_index":1792,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["saveplay",{"_index":148,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["savesucceed",{"_index":1875,"title":{"classes/SaveSucceeded.html":{}},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["savetimerinfo",{"_index":740,"title":{"classes/SaveTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["savetimerinfo(info",{"_index":1122,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["savetimerinfosucceed",{"_index":742,"title":{"classes/SaveTimerInfoSucceeded.html":{}},"body":{"classes/CancelTimer.html":{},"injectables/HistoryEffects.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["scalemax",{"_index":707,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["select",{"_index":848,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["select.util",{"_index":1398,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["select/ng",{"_index":847,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["selectal",{"_index":1995,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["selectcolorschem",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectcolorscheme('cool",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectent",{"_index":889,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["selector",{"_index":137,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["sell",{"_index":2560,"title":{},"body":{"license.html":{}}}],["sendresetpasswordlink",{"_index":1730,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sent",{"_index":1229,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["serial",{"_index":896,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerst",{"_index":897,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["serv",{"_index":2515,"title":{},"body":{"index.html":{}}}],["server",{"_index":2514,"title":{},"body":{"index.html":{}}}],["services/auth.servic",{"_index":599,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UserEffects.html":{}}}],["services/history.servic",{"_index":1337,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["services/platforms.servic",{"_index":1684,"title":{},"body":{"injectables/PlatformsEffects.html":{},"modules/TrackerModule.html":{}}}],["services/profile.servic",{"_index":1764,"title":{},"body":{"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{}}}],["services/progress.servic",{"_index":325,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{},"injectables/ProgressEffects.html":{}}}],["services/timer.servic",{"_index":1395,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["set",{"_index":84,"title":{},"body":{"classes/AddNewItem.html":{},"classes/CancelTimer.html":{},"classes/LoadItems.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Remove.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{}}}],["set_attempting_login",{"_index":1899,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["set_endtim",{"_index":90,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["set_gam",{"_index":736,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{}}}],["set_last_month",{"_index":1913,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_last_week",{"_index":1916,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_platform",{"_index":737,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{}}}],["set_profile_displaynam",{"_index":1552,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["set_profile_displayname_succeed",{"_index":1554,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["set_show_extra",{"_index":81,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["set_start_tim",{"_index":738,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["set_starttim",{"_index":1873,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["set_this_month",{"_index":1918,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_this_week",{"_index":1914,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_timer_info",{"_index":746,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["set_validation_messag",{"_index":1900,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["set_visible_tab",{"_index":1949,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["setattemptinglogin",{"_index":1893,"title":{"classes/SetAttemptingLogin.html":{}},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["setdisplaynam",{"_index":1029,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{}}}],["setdisplayname(displaynameel",{"_index":1035,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["setdisplayname(userid",{"_index":1173,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["seteditnam",{"_index":1731,"title":{},"body":{"components/ProfileComponent.html":{}}}],["seteditname(editnam",{"_index":1735,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setendtim",{"_index":92,"title":{"classes/SetEndTime.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["setendtime(endtimeel",{"_index":1695,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["setgam",{"_index":149,"title":{"classes/SetGame.html":{},"classes/SetGame-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setgame(userid",{"_index":1205,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setlastmonth",{"_index":1909,"title":{"classes/SetLastMonth.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setlastweek",{"_index":1917,"title":{"classes/SetLastWeek.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setnumentriestoshow",{"_index":1482,"title":{},"body":{"components/LibraryComponent.html":{}}}],["setplatform",{"_index":150,"title":{"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setplatform(platformel",{"_index":173,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["setplatform(userid",{"_index":1206,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setprofiledisplaynam",{"_index":1553,"title":{"classes/SetProfileDisplayName.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["setprofiledisplaynamesucceed",{"_index":1555,"title":{"classes/SetProfileDisplayNameSucceeded.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["setshowextra",{"_index":87,"title":{"classes/SetShowExtra.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["setstarttim",{"_index":151,"title":{"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setstarttime(starttimeel",{"_index":177,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["setstarttime(userid",{"_index":1207,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setthismonth",{"_index":1919,"title":{"classes/SetThisMonth.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setthisweek",{"_index":1915,"title":{"classes/SetThisWeek.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["settim",{"_index":2290,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimer(userid",{"_index":1203,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["settimerinfo",{"_index":747,"title":{"classes/SetTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["setvalidationmessag",{"_index":1901,"title":{"classes/SetValidationMessage.html":{}},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibletab",{"_index":1944,"title":{"classes/SetVisibleTab.html":{}},"body":{"classes/SetVisibleTab.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibletab(tab",{"_index":2207,"title":{},"body":{"components/TabsComponent.html":{}}}],["shall",{"_index":2568,"title":{},"body":{"license.html":{}}}],["share",{"_index":280,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["shared/actions/history.act",{"_index":484,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{}}}],["shared/actions/platforms.act",{"_index":486,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PlatformsEffects.html":{}}}],["shared/actions/progress.act",{"_index":488,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["shared/actions/timer.act",{"_index":490,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{}}}],["shared/model",{"_index":196,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["shared/pipes/time.pip",{"_index":862,"title":{},"body":{"modules/CompletionModule.html":{}}}],["shared/reducers/history.reduc",{"_index":1108,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["shared/reducers/progress.reduc",{"_index":1179,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["shared/reducers/root.reduc",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{},"components/TrackerComponent.html":{}}}],["shared/services/elaps",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{}}}],["shared/shared.modul",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"modules/TrackerModule.html":{}}}],["shared/utils/date.util",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/ElapsedTimePipe.html":{},"pipes/TimePipe.html":{}}}],["shared/utils/histori",{"_index":806,"title":{},"body":{"components/CompletionComponent.html":{}}}],["shared/utils/ng",{"_index":1397,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["shared/utils/uuid.util",{"_index":1110,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["sharedmodul",{"_index":391,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedselector",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TrackerComponent.html":{}}}],["sharedst",{"_index":358,"title":{"interfaces/SharedState.html":{}},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TrackerComponent.html":{}}}],["sharedstor",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"components/TrackerComponent.html":{}}}],["shouldshowhead",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":85,"title":{},"body":{"classes/AddNewItem.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["show...get",{"_index":1292,"title":{},"body":{"components/HistoryComponent.html":{}}}],["showextra",{"_index":88,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-11.html":{}}}],["showgridlin",{"_index":708,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showlabel",{"_index":726,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showlegend",{"_index":721,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showloadmorebutton",{"_index":2302,"title":{},"body":{"components/TrackerComponent.html":{}}}],["showxaxi",{"_index":709,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showxaxislabel",{"_index":710,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showyaxi",{"_index":711,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showyaxislabel",{"_index":712,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["signinwithemail",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail(email",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithfacebook",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithgoogl",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithtwitt",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":698,"title":{"classes/SignUp.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["signupwithemail",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupwithemail(email",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["simpl",{"_index":1448,"title":{},"body":{"components/HomeComponent.html":{}}}],["singlularword",{"_index":1722,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["softwar",{"_index":2545,"title":{},"body":{"license.html":{}}}],["solar",{"_index":2627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["solid",{"_index":187,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["specif",{"_index":2495,"title":{},"body":{"index.html":{}}}],["spend",{"_index":1455,"title":{},"body":{"components/HomeComponent.html":{}}}],["spinner",{"_index":2054,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'nam",{"_index":281,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["spinner.component.html",{"_index":2056,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":2055,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercompon",{"_index":279,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["src/.../add",{"_index":2485,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.actions.t",{"_index":2600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../clear.meta.reducer.t",{"_index":2477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../colorscheme.utils.t",{"_index":2611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../date",{"_index":2488,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../display.actions.t",{"_index":2601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../display.reducer.t",{"_index":2478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../error.reducer.t",{"_index":2484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graph",{"_index":2614,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.actions.t",{"_index":2609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.models.t",{"_index":2621,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.reducer.t",{"_index":2479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../history.utils.t",{"_index":2617,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mark",{"_index":2486,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../platforms.actions.t",{"_index":2602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../platforms.reducer.t",{"_index":2480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../profile.actions.t",{"_index":2605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../profile.reducer.t",{"_index":2489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../progress.actions.t",{"_index":2603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../progress.reducer.t",{"_index":2481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../status.actions.t",{"_index":2607,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../status.reducer.t",{"_index":2483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tab.actions.t",{"_index":2606,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tab.reducer.t",{"_index":2487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tabs.models.t",{"_index":2620,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timer.actions.t",{"_index":2604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timer.reducer.t",{"_index":2482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.actions.t",{"_index":2608,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.models.t",{"_index":2619,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.t",{"_index":2490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/actions/app.actions.t",{"_index":1098,"title":{},"body":{"classes/Error.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/actions/app.actions.ts:5",{"_index":1099,"title":{},"body":{"classes/Error.html":{}}}],["src/app/actions/app.actions.ts:6",{"_index":1100,"title":{},"body":{"classes/Error.html":{}}}],["src/app/app",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/header/header.component.t",{"_index":1242,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:12",{"_index":1247,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:8",{"_index":1246,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/nav/nav.component.t",{"_index":1619,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:21",{"_index":1632,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:22",{"_index":1662,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:29",{"_index":1639,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:34",{"_index":1648,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:39",{"_index":1659,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:61",{"_index":1640,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:62",{"_index":1663,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:63",{"_index":1645,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:67",{"_index":1631,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:70",{"_index":1634,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:74",{"_index":1633,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:78",{"_index":1635,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/features/auth/actions/status.actions.t",{"_index":1894,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/actions/status.actions.ts:11",{"_index":1942,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["src/app/features/auth/actions/status.actions.ts:12",{"_index":1943,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["src/app/features/auth/actions/status.actions.ts:5",{"_index":1897,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["src/app/features/auth/actions/status.actions.ts:6",{"_index":1898,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["src/app/features/auth/actions/user.actions.t",{"_index":685,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/actions/user.actions.ts:13",{"_index":687,"title":{},"body":{"classes/Authenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:14",{"_index":688,"title":{},"body":{"classes/Authenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:19",{"_index":1675,"title":{},"body":{"classes/NotAuthenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:25",{"_index":1231,"title":{},"body":{"classes/GoogleLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:31",{"_index":1102,"title":{},"body":{"classes/FacebookLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:37",{"_index":2350,"title":{},"body":{"classes/TwitterLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:43",{"_index":1595,"title":{},"body":{"classes/Logout.html":{}}}],["src/app/features/auth/actions/user.actions.ts:49",{"_index":2051,"title":{},"body":{"classes/SignUp.html":{}}}],["src/app/features/auth/actions/user.actions.ts:50",{"_index":2052,"title":{},"body":{"classes/SignUp.html":{}}}],["src/app/features/auth/actions/user.actions.ts:55",{"_index":1083,"title":{},"body":{"classes/EmailLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:56",{"_index":1084,"title":{},"body":{"classes/EmailLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:61",{"_index":1876,"title":{},"body":{"classes/ResetPassword.html":{}}}],["src/app/features/auth/actions/user.actions.ts:62",{"_index":1877,"title":{},"body":{"classes/ResetPassword.html":{}}}],["src/app/features/auth/actions/user.actions.ts:7",{"_index":1230,"title":{},"body":{"classes/GetUser.html":{}}}],["src/app/features/auth/auth",{"_index":605,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/features/auth/auth.module.t",{"_index":584,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/features/auth/components/auth",{"_index":495,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1214,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/login/login.component.t",{"_index":1575,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:20",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:21",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:24",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:30",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:34",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:38",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:42",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.t",{"_index":1844,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:20",{"_index":1858,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:21",{"_index":1851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:24",{"_index":1856,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:29",{"_index":1855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:33",{"_index":1854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:37",{"_index":1857,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:41",{"_index":1853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/effects/auth.effects.t",{"_index":471,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/auth.effects.ts:15",{"_index":473,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/auth.effects.ts:19",{"_index":482,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/status.effects.t",{"_index":2172,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:17",{"_index":2175,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:21",{"_index":2181,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:35",{"_index":2194,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:42",{"_index":2189,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:53",{"_index":2191,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/user.effects.t",{"_index":2365,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:102",{"_index":2406,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:110",{"_index":2371,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:18",{"_index":2368,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:22",{"_index":2390,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:39",{"_index":2394,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:49",{"_index":2381,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:59",{"_index":2414,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:69",{"_index":2400,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:82",{"_index":2410,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:92",{"_index":2377,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/guards/auth.guard.t",{"_index":561,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/guards/auth.guard.ts:12",{"_index":562,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/guards/auth.guard.ts:15",{"_index":566,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/models/events.models.t",{"_index":1081,"title":{},"body":{"interfaces/EmailAuthEvent.html":{}}}],["src/app/features/auth/models/user.models.t",{"_index":2363,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/reducers/root.reducer.t",{"_index":654,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["src/app/features/auth/reducers/status.reducer.t",{"_index":2158,"title":{},"body":{"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/auth/reducers/user.reducer.t",{"_index":2165,"title":{},"body":{"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/auth/services/auth.service.t",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:11",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:15",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:19",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:23",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:27",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:31",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:35",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:39",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:43",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:48",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:53",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:8",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/user.service.t",{"_index":2424,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:22",{"_index":2427,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:26",{"_index":2428,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:30",{"_index":2429,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:44",{"_index":2430,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/completion/actions/add",{"_index":1870,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/mark",{"_index":75,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/tab.actions.t",{"_index":1945,"title":{},"body":{"classes/SetVisibleTab.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/tab.actions.ts:7",{"_index":1947,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["src/app/features/completion/actions/tab.actions.ts:8",{"_index":1948,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["src/app/features/completion/completion.component.t",{"_index":783,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:26",{"_index":796,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:27",{"_index":795,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:28",{"_index":792,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:29",{"_index":794,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:30",{"_index":799,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:31",{"_index":798,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:33",{"_index":797,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:34",{"_index":793,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:36",{"_index":790,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:39",{"_index":791,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.module.t",{"_index":844,"title":{},"body":{"modules/CompletionModule.html":{}}}],["src/app/features/completion/components/add",{"_index":130,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["src/app/features/completion/components/complet",{"_index":762,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["src/app/features/completion/components/play",{"_index":1687,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.t",{"_index":2198,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:19",{"_index":2205,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:20",{"_index":2204,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:21",{"_index":2203,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:24",{"_index":2206,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:26",{"_index":2208,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/effects/add",{"_index":294,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.t",{"_index":1791,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:16",{"_index":1793,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:20",{"_index":1804,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:33",{"_index":1826,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:44",{"_index":1811,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:57",{"_index":1819,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/models/add",{"_index":120,"title":{},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{}}}],["src/app/features/completion/models/display",{"_index":749,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["src/app/features/completion/models/mark",{"_index":1614,"title":{},"body":{"interfaces/MarkCompleteItem.html":{}}}],["src/app/features/completion/models/tabs.models.t",{"_index":2641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/reducers/add",{"_index":2063,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/reducers/mark",{"_index":1598,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-11.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/reducers/root.reducer.t",{"_index":864,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["src/app/features/completion/reducers/tab.reducer.t",{"_index":2074,"title":{},"body":{"interfaces/State-13.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/services/progress.service.t",{"_index":1178,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:17",{"_index":1837,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:22",{"_index":1839,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:27",{"_index":1843,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:33",{"_index":1841,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:39",{"_index":1842,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:44",{"_index":1838,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:53",{"_index":1840,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/dashboard/actions/d",{"_index":1910,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/components/graph",{"_index":1233,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["src/app/features/dashboard/components/header/header.component.t",{"_index":1248,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:19",{"_index":1252,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:20",{"_index":1250,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:23",{"_index":1253,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:25",{"_index":1255,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/tim",{"_index":2210,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.t",{"_index":919,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:26",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:27",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:28",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:30",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:32",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:34",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:43",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:55",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:60",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:65",{"_index":946,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:70",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:73",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.module.t",{"_index":984,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/features/dashboard/models/d",{"_index":2638,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/models/graph.models.t",{"_index":703,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["src/app/features/dashboard/reducers/d",{"_index":2079,"title":{},"body":{"interfaces/State-14.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/dashboard/reducers/root.reducer.t",{"_index":996,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["src/app/features/dashboard/utils/colorscheme.utils.t",{"_index":2622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/utils/graph",{"_index":2639,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/home/home.component.t",{"_index":1440,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:10",{"_index":1445,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:13",{"_index":1446,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.module.t",{"_index":1466,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/features/library/components/header/header.component.t",{"_index":1274,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/components/header/header.component.ts:11",{"_index":1276,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/components/header/header.component.ts:14",{"_index":1277,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/library.component.t",{"_index":1477,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:22",{"_index":1490,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:23",{"_index":1485,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:26",{"_index":1488,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:33",{"_index":1487,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:37",{"_index":1489,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.module.t",{"_index":1511,"title":{},"body":{"modules/LibraryModule.html":{}}}],["src/app/features/library/models/library.models.t",{"_index":1505,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["src/app/features/profile/actions/profile.actions.t",{"_index":1546,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:13",{"_index":1557,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:14",{"_index":1558,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:19",{"_index":1925,"title":{},"body":{"classes/SetProfileDisplayName.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:20",{"_index":1926,"title":{},"body":{"classes/SetProfileDisplayName.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:25",{"_index":1928,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:26",{"_index":1929,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:7",{"_index":1547,"title":{},"body":{"classes/LoadProfile.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:8",{"_index":1549,"title":{},"body":{"classes/LoadProfile.html":{}}}],["src/app/features/profile/components/edit",{"_index":1023,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["src/app/features/profile/effects/profile.effects.t",{"_index":1749,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:14",{"_index":1750,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:18",{"_index":1756,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:28",{"_index":1763,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/models/profile.models.t",{"_index":1725,"title":{},"body":{"interfaces/Profile.html":{}}}],["src/app/features/profile/profile.component.t",{"_index":1726,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:21",{"_index":1741,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:22",{"_index":1740,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:23",{"_index":1737,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:24",{"_index":1739,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:26",{"_index":1732,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:29",{"_index":1733,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:33",{"_index":1734,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:38",{"_index":1736,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.module.t",{"_index":1768,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/features/profile/reducers/profile.reducer.t",{"_index":2117,"title":{},"body":{"interfaces/State-16.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/profile/reducers/root.reducer.t",{"_index":1780,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["src/app/features/profile/services/profile.service.t",{"_index":1164,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:12",{"_index":1776,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:17",{"_index":1777,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:24",{"_index":1778,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/tracker/actions/display.actions.t",{"_index":1469,"title":{},"body":{"classes/IncrementDaysToShow.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/tracker/actions/display.actions.ts:5",{"_index":1472,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["src/app/features/tracker/actions/display.actions.ts:6",{"_index":1473,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["src/app/features/tracker/components/histori",{"_index":1367,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.t",{"_index":1280,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:13",{"_index":1286,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:14",{"_index":1287,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:15",{"_index":1285,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:18",{"_index":1288,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/load",{"_index":1522,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["src/app/features/tracker/components/lock",{"_index":1565,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.t",{"_index":2224,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:103",{"_index":2240,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:109",{"_index":2238,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:25",{"_index":2234,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:26",{"_index":2232,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:27",{"_index":2235,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:28",{"_index":2236,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:29",{"_index":2233,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:30",{"_index":2252,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:31",{"_index":2251,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:35",{"_index":2230,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:38",{"_index":2239,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:42",{"_index":2245,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:51",{"_index":2246,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:63",{"_index":2237,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:68",{"_index":2242,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:78",{"_index":2241,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:85",{"_index":2243,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:93",{"_index":2244,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/effects/history.effects.t",{"_index":1295,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:15",{"_index":1296,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:19",{"_index":1304,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:29",{"_index":1316,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:36",{"_index":1312,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:46",{"_index":1330,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:56",{"_index":1336,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:66",{"_index":1324,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.t",{"_index":1677,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.ts:14",{"_index":1678,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.ts:18",{"_index":1683,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.t",{"_index":2268,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:15",{"_index":2269,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:19",{"_index":2288,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:33",{"_index":2273,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:38",{"_index":2281,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/reducers/display.reducer.t",{"_index":2123,"title":{},"body":{"interfaces/State-18.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/tracker/reducers/root.reducer.t",{"_index":2129,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["src/app/features/tracker/services/history.service.t",{"_index":1104,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:19",{"_index":1430,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:24",{"_index":1433,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:29",{"_index":1436,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:35",{"_index":1431,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:40",{"_index":1438,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:46",{"_index":1439,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:52",{"_index":1437,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:58",{"_index":1434,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:70",{"_index":1435,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:74",{"_index":1432,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/platforms.service.t",{"_index":1149,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/platforms.service.ts:10",{"_index":1685,"title":{},"body":{"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/platforms.service.ts:15",{"_index":1686,"title":{},"body":{"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/timer.service.t",{"_index":1198,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:12",{"_index":2291,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:17",{"_index":2298,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:25",{"_index":2295,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:29",{"_index":2296,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:33",{"_index":2297,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:37",{"_index":2294,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:45",{"_index":2293,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:52",{"_index":2292,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/tracker.component.t",{"_index":2299,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:24",{"_index":2312,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:25",{"_index":2310,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:26",{"_index":2308,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:27",{"_index":2307,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:29",{"_index":2309,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:30",{"_index":2311,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:32",{"_index":2304,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:37",{"_index":2306,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.module.t",{"_index":2333,"title":{},"body":{"modules/TrackerModule.html":{}}}],["src/app/meta.reducers/clear.meta.reducer.t",{"_index":2491,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/models/route.models.t",{"_index":1879,"title":{},"body":{"interfaces/RouteEntry.html":{}}}],["src/app/reducers/error.reducer.t",{"_index":2059,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/app/reducers/root.reducer.t",{"_index":895,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["src/app/reducers/root.reducer.ts:37",{"_index":898,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/shared/actions/history.actions.t",{"_index":5,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/history.actions.ts:11",{"_index":18,"title":{},"body":{"classes/AddNewHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:12",{"_index":23,"title":{},"body":{"classes/AddNewHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:17",{"_index":1516,"title":{},"body":{"classes/LoadHistoryItems.html":{}}}],["src/app/shared/actions/history.actions.ts:18",{"_index":1517,"title":{},"body":{"classes/LoadHistoryItems.html":{}}}],["src/app/shared/actions/history.actions.ts:23",{"_index":1518,"title":{},"body":{"classes/LoadHistoryItemsSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:24",{"_index":1519,"title":{},"body":{"classes/LoadHistoryItemsSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:29",{"_index":1862,"title":{},"body":{"classes/RemoveHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:30",{"_index":1863,"title":{},"body":{"classes/RemoveHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:35",{"_index":1864,"title":{},"body":{"classes/RemoveHistoryItemSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:36",{"_index":1865,"title":{},"body":{"classes/RemoveHistoryItemSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:41",{"_index":2355,"title":{},"body":{"classes/UpdateGame.html":{}}}],["src/app/shared/actions/history.actions.ts:42",{"_index":2356,"title":{},"body":{"classes/UpdateGame.html":{}}}],["src/app/shared/actions/history.actions.ts:47",{"_index":2357,"title":{},"body":{"classes/UpdateGameSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:48",{"_index":2358,"title":{},"body":{"classes/UpdateGameSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:53",{"_index":2359,"title":{},"body":{"classes/UpdatePlatform.html":{}}}],["src/app/shared/actions/history.actions.ts:54",{"_index":2360,"title":{},"body":{"classes/UpdatePlatform.html":{}}}],["src/app/shared/actions/history.actions.ts:59",{"_index":2361,"title":{},"body":{"classes/UpdatePlatformSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:60",{"_index":2362,"title":{},"body":{"classes/UpdatePlatformSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:65",{"_index":2351,"title":{},"body":{"classes/UpdateElapsedTime.html":{}}}],["src/app/shared/actions/history.actions.ts:66",{"_index":2352,"title":{},"body":{"classes/UpdateElapsedTime.html":{}}}],["src/app/shared/actions/history.actions.ts:71",{"_index":2353,"title":{},"body":{"classes/UpdateElapsedTimeSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:72",{"_index":2354,"title":{},"body":{"classes/UpdateElapsedTimeSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.t",{"_index":1537,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/platforms.actions.ts:11",{"_index":1543,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.ts:12",{"_index":1544,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.ts:5",{"_index":1538,"title":{},"body":{"classes/LoadOptions.html":{}}}],["src/app/shared/actions/progress.actions.t",{"_index":98,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/progress.actions.ts:10",{"_index":101,"title":{},"body":{"classes/AddNewProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:15",{"_index":1559,"title":{},"body":{"classes/LoadProgressItems.html":{}}}],["src/app/shared/actions/progress.actions.ts:16",{"_index":1560,"title":{},"body":{"classes/LoadProgressItems.html":{}}}],["src/app/shared/actions/progress.actions.ts:21",{"_index":1561,"title":{},"body":{"classes/LoadProgressItemsSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:22",{"_index":1562,"title":{},"body":{"classes/LoadProgressItemsSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:27",{"_index":1866,"title":{},"body":{"classes/RemoveProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:28",{"_index":1867,"title":{},"body":{"classes/RemoveProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:33",{"_index":1868,"title":{},"body":{"classes/RemoveProgressItemSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:34",{"_index":1869,"title":{},"body":{"classes/RemoveProgressItemSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:39",{"_index":1596,"title":{},"body":{"classes/MarkComplete.html":{}}}],["src/app/shared/actions/progress.actions.ts:40",{"_index":1597,"title":{},"body":{"classes/MarkComplete.html":{}}}],["src/app/shared/actions/progress.actions.ts:45",{"_index":1617,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:46",{"_index":1618,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:9",{"_index":100,"title":{},"body":{"classes/AddNewProgressItem.html":{}}}],["src/app/shared/actions/timer.actions.t",{"_index":730,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/timer.actions.ts:15",{"_index":1905,"title":{},"body":{"classes/SetGame.html":{}}}],["src/app/shared/actions/timer.actions.ts:16",{"_index":1906,"title":{},"body":{"classes/SetGame.html":{}}}],["src/app/shared/actions/timer.actions.ts:21",{"_index":1921,"title":{},"body":{"classes/SetPlatform.html":{}}}],["src/app/shared/actions/timer.actions.ts:22",{"_index":1922,"title":{},"body":{"classes/SetPlatform.html":{}}}],["src/app/shared/actions/timer.actions.ts:27",{"_index":1933,"title":{},"body":{"classes/SetStartTime.html":{}}}],["src/app/shared/actions/timer.actions.ts:28",{"_index":1934,"title":{},"body":{"classes/SetStartTime.html":{}}}],["src/app/shared/actions/timer.actions.ts:33",{"_index":1889,"title":{},"body":{"classes/SaveTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:34",{"_index":1890,"title":{},"body":{"classes/SaveTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:39",{"_index":1891,"title":{},"body":{"classes/SaveTimerInfoSucceeded.html":{}}}],["src/app/shared/actions/timer.actions.ts:40",{"_index":1892,"title":{},"body":{"classes/SaveTimerInfoSucceeded.html":{}}}],["src/app/shared/actions/timer.actions.ts:45",{"_index":731,"title":{},"body":{"classes/CancelTimer.html":{}}}],["src/app/shared/actions/timer.actions.ts:51",{"_index":1563,"title":{},"body":{"classes/LoadTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:52",{"_index":1564,"title":{},"body":{"classes/LoadTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:57",{"_index":1939,"title":{},"body":{"classes/SetTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:58",{"_index":1940,"title":{},"body":{"classes/SetTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:9",{"_index":1878,"title":{},"body":{"classes/ResetTimer.html":{}}}],["src/app/shared/components/spinner/spinner.component.t",{"_index":2053,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:12",{"_index":2058,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:8",{"_index":2057,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/models/history.models.t",{"_index":1422,"title":{},"body":{"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/models/progress.models.t",{"_index":759,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressItem.html":{}}}],["src/app/shared/models/shared.models.t",{"_index":1017,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["src/app/shared/models/shared.models.ts:5",{"_index":1019,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/app/shared/models/timer.models.t",{"_index":328,"title":{},"body":{"interfaces/AddTimerInfo.html":{},"interfaces/TimerInfo.html":{}}}],["src/app/shared/pipes/elaps",{"_index":1051,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["src/app/shared/pipes/pluralize.pipe.t",{"_index":1719,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["src/app/shared/pipes/pluralize.pipe.ts:5",{"_index":1724,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["src/app/shared/pipes/time.pipe.t",{"_index":2219,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/shared/pipes/time.pipe.ts:8",{"_index":2221,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/shared/reducers/history.reducer.t",{"_index":1338,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/platforms.reducer.t",{"_index":2145,"title":{},"body":{"interfaces/State-3.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/progress.reducer.t",{"_index":1827,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/root.reducer.t",{"_index":1961,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["src/app/shared/reducers/timer.reducer.t",{"_index":2150,"title":{},"body":{"interfaces/State-6.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/services/elaps",{"_index":1062,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["src/app/shared/shared.module.t",{"_index":1954,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/utils/history.utils.t",{"_index":2640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/index.t",{"_index":1085,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["ssnjrthegr8",{"_index":2527,"title":{},"body":{"index.html":{}}}],["start",{"_index":220,"title":{"index.html":{},"license.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"classes/LoadTimerInfo.html":{},"components/PlayingItemComponent.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["startday",{"_index":2082,"title":{},"body":{"interfaces/State-14.html":{}}}],["startentrydata",{"_index":756,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["startentryid",{"_index":122,"title":{},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-4.html":{}}}],["startlastmonth",{"_index":2113,"title":{},"body":{"interfaces/State-14.html":{}}}],["startlastweek",{"_index":2100,"title":{},"body":{"interfaces/State-14.html":{}}}],["startmonth",{"_index":2104,"title":{},"body":{"interfaces/State-14.html":{}}}],["startofmonth",{"_index":2085,"title":{},"body":{"interfaces/State-14.html":{}}}],["startofmonth(endlastmonth",{"_index":2114,"title":{},"body":{"interfaces/State-14.html":{}}}],["startofmonth(now",{"_index":2105,"title":{},"body":{"interfaces/State-14.html":{}}}],["startofweek",{"_index":2086,"title":{},"body":{"interfaces/State-14.html":{}}}],["startofweek(endlastweek",{"_index":2101,"title":{},"body":{"interfaces/State-14.html":{}}}],["startofweek(now",{"_index":2091,"title":{},"body":{"interfaces/State-14.html":{}}}],["startthismonth",{"_index":2110,"title":{},"body":{"interfaces/State-14.html":{}}}],["startthisweek",{"_index":2097,"title":{},"body":{"interfaces/State-14.html":{}}}],["starttim",{"_index":124,"title":{},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressItem.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-10.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["starttimeel",{"_index":179,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["starttimeel.valu",{"_index":2263,"title":{},"body":{"components/TimerComponent.html":{}}}],["starttimeinm",{"_index":1058,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["startweek",{"_index":2090,"title":{},"body":{"interfaces/State-14.html":{}}}],["state",{"_index":194,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressEntity.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["state.addplay",{"_index":882,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["state.daterang",{"_index":1008,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-15.html":{}}}],["state.display",{"_index":2139,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["state.entriestoshow",{"_index":2126,"title":{},"body":{"interfaces/State-18.html":{}}}],["state.histori",{"_index":1988,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.info",{"_index":1789,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["state.markcomplet",{"_index":884,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["state.platform",{"_index":1990,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.progress",{"_index":1992,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.statu",{"_index":674,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["state.tab",{"_index":886,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["state.tim",{"_index":1994,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.url",{"_index":575,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.us",{"_index":672,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["statekey",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["statu",{"_index":655,"title":{},"body":{"interfaces/AuthState.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-7.html":{}}}],["status.attemptinglogin",{"_index":680,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["status.reduc",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["status.validationmessag",{"_index":682,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["statusact",{"_index":2195,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setattemptinglogin(fals",{"_index":2179,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setattemptinglogin(tru",{"_index":2188,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setvalidationmessag",{"_index":2193,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setvalidationmessage(validationmessag",{"_index":2180,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statuseffect",{"_index":595,"title":{"injectables/StatusEffects.html":{}},"body":{"modules/AuthModule.html":{},"injectables/StatusEffects.html":{}}}],["stop",{"_index":2248,"title":{},"body":{"components/TimerComponent.html":{}}}],["stoptim",{"_index":2229,"title":{},"body":{"components/TimerComponent.html":{}}}],["storagebucket",{"_index":1095,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["store",{"_index":156,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["storedevtoolsmodul",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instru",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodul",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["storemodule.forfeature('auth",{"_index":603,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature('complet",{"_index":863,"title":{},"body":{"modules/CompletionModule.html":{}}}],["storemodule.forfeature('dashboard",{"_index":995,"title":{},"body":{"modules/DashboardModule.html":{}}}],["storemodule.forfeature('profil",{"_index":1773,"title":{},"body":{"modules/ProfileModule.html":{}}}],["storemodule.forfeature('shar",{"_index":1960,"title":{},"body":{"modules/SharedModule.html":{}}}],["storemodule.forfeature('track",{"_index":2349,"title":{},"body":{"modules/TrackerModule.html":{}}}],["storemodule.forroot(reduc",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodul",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":44,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-16.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{}}}],["structur",{"_index":2499,"title":{},"body":{"index.html":{}}}],["styleurl",{"_index":140,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["subday",{"_index":2087,"title":{},"body":{"interfaces/State-14.html":{}}}],["subdays(startthismonth",{"_index":2112,"title":{},"body":{"interfaces/State-14.html":{}}}],["subdays(startthisweek",{"_index":2099,"title":{},"body":{"interfaces/State-14.html":{}}}],["subject",{"_index":2563,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2558,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":2569,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":46,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"classes/CancelTimer.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["support",{"_index":1449,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["svg",{"_index":188,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteEntry.html":{},"components/TimerComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["swimlane/ngx",{"_index":986,"title":{},"body":{"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1259,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["switchmap",{"_index":323,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(act",{"_index":1299,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(addplay",{"_index":306,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["switchmap(addtimerinfo",{"_index":2284,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["switchmap(userid",{"_index":2277,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["t",{"_index":1018,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["tab",{"_index":865,"title":{},"body":{"interfaces/CompletionState.html":{},"classes/SetVisibleTab.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"components/TabsComponent.html":{}}}],["tab.reduc",{"_index":874,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["tab.tab",{"_index":894,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-12.html":{}}}],["tabs'},{'nam",{"_index":283,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tabs.component.html",{"_index":2200,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2199,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabscompon",{"_index":282,"title":{"components/TabsComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["tabtyp",{"_index":803,"title":{},"body":{"components/CompletionComponent.html":{},"classes/SetVisibleTab.html":{},"interfaces/State-13.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["taglin",{"_index":1444,"title":{},"body":{"components/HomeComponent.html":{}}}],["take",{"_index":568,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":577,"title":{},"body":{"guards/AuthGuard.html":{}}}],["takefrom",{"_index":2314,"title":{},"body":{"components/TrackerComponent.html":{}}}],["takefrom(historygroup",{"_index":2322,"title":{},"body":{"components/TrackerComponent.html":{}}}],["technolog",{"_index":2502,"title":{},"body":{"index.html":{}}}],["templat",{"_index":127,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["templateurl",{"_index":142,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["test",{"_index":2518,"title":{},"body":{"index.html":{}}}],["test:mocha",{"_index":2522,"title":{},"body":{"index.html":{}}}],["test:nyan",{"_index":2525,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":300,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["this.addplayinginfo",{"_index":817,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.addplayinginfo$.pipe(map(info",{"_index":819,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.afauth.auth.signinwithpopup(provid",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authst",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.collection('histori",{"_index":1115,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.afs.collection('platform",{"_index":1153,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.afs.collection('profil",{"_index":1168,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.afs.collection('progress",{"_index":1182,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.afs.collection('tim",{"_index":1202,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.authform",{"_index":546,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.valid",{"_index":553,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.value.email",{"_index":555,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.value.password",{"_index":556,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authservice.getauthst",{"_index":2383,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.resetpassword(action.email",{"_index":2403,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithemail(action.email",{"_index":2374,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithfacebook",{"_index":2379,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithgoogl",{"_index":2392,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithtwitt",{"_index":2412,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signout",{"_index":2397,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signupwithemail(action.email",{"_index":2408,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.bargraphbaseconfig",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.builder.group",{"_index":547,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.completeddisplaydata",{"_index":836,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.addplayinginfo",{"_index":818,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.markcompleteent",{"_index":833,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.visibletab",{"_index":839,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.currenttim",{"_index":1074,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["this.dashboardstore.select(dashboardselectors.datelist",{"_index":961,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dashboardstore.select(dashboardselectors.rangetyp",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.daterangetyp",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.displaydata.item.id",{"_index":776,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["this.displaydata.markcomplete.endtim",{"_index":1710,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.displaydata.markcomplete.showextra",{"_index":1704,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.displaydata.startentrydata",{"_index":1709,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.editnam",{"_index":1746,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.elapsedtim",{"_index":2318,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.elapsedtimeservice.getelapsedtime('00:00:00",{"_index":2319,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.elapsedtimeservice.getelapsedtime('track",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["this.emailauth.emit",{"_index":554,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.emitfinishedit",{"_index":1049,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["this.facebookauth.emit(nul",{"_index":558,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.finishedit.emit(nul",{"_index":1045,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["this.gam",{"_index":205,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["this.getauthenticatedaction(authdata",{"_index":2387,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.getcurrenttim",{"_index":1078,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["this.gethistoryentity(histori",{"_index":1121,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getnewhistoryitem(info",{"_index":1124,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getnewprogressitem(addplay",{"_index":1188,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getus",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getuseritemcollection(addplaying.userid).doc(newitem.id).set(newitem",{"_index":1189,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(info.userid).doc(newitem.id).set(newitem",{"_index":1125,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getuseritemcollection(userid).doc(itemid).delet",{"_index":1128,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(userid).doc(itemid).upd",{"_index":1131,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(userid).valuechanges().pipe(first",{"_index":1118,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.googleauth.emit(nul",{"_index":557,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.graphconfig",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.hidenavcont",{"_index":1670,"title":{},"body":{"components/NavComponent.html":{}}}],["this.historycollect",{"_index":1114,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.historycollection.doc(userid).collection('item",{"_index":1141,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.historygroup",{"_index":812,"title":{},"body":{"components/CompletionComponent.html":{},"components/TrackerComponent.html":{}}}],["this.historygroupings$.pipe(map(group",{"_index":814,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.historyservice.deletehistoryitem(action.userid",{"_index":1307,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.gethistorylist(action.userid",{"_index":1300,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.savetimerinfo(addtimerinfo",{"_index":2285,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["this.historyservice.updateelapsedtime(action.userid",{"_index":1319,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.updategame(action.userid",{"_index":1327,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.updateplatform(action.userid",{"_index":1333,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.info",{"_index":215,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["this.info.gam",{"_index":2254,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.info.platform",{"_index":2255,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.info.starttim",{"_index":2256,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.item.gam",{"_index":1403,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["this.item.id",{"_index":1399,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["this.item.platform",{"_index":1404,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["this.libraryentri",{"_index":1496,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.loggingin",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.messag",{"_index":1228,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.numentriestoshow",{"_index":1501,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.passwordform",{"_index":1224,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.passwordform.valid",{"_index":1225,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.passwordform.value.email",{"_index":1226,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.platformscollect",{"_index":1152,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.platformscollection.valuechanges().pipe(first",{"_index":1156,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.platformsopt",{"_index":2327,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.platformsservice.getplatformsopt",{"_index":1680,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["this.playingdisplaydata",{"_index":834,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.potentiald",{"_index":825,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.potentialplatform",{"_index":821,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.profilecollect",{"_index":1167,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profilecollection.doc(userid).set",{"_index":1174,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profilecollection.doc(userid).valuechanges().pipe(first",{"_index":1171,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profileservice.getprofile(action.userid",{"_index":1753,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["this.profileservice.setdisplayname(action.userid",{"_index":1759,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["this.profilestore.select(profilecomponentselectors.info",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["this.progresscollect",{"_index":1181,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.progresscollection.doc(userid).collection('item",{"_index":1196,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.progressservice.getprogresslist(action.userid",{"_index":1796,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.markcompleted(action.userid",{"_index":1807,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.remove(action.userid",{"_index":1814,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.saveaddplaying(addplay",{"_index":307,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":2385,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate(['/login",{"_index":572,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['login",{"_index":2398,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate([returnurl",{"_index":2386,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.url",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setnumentriestoshow",{"_index":1498,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbyd",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{},"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbygam",{"_index":813,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbyplatform",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historytrackedgam",{"_index":2326,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.platformsopt",{"_index":2328,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.progresscomplet",{"_index":831,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.sharedstore.select(sharedselectors.progressplay",{"_index":829,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.sharedstore.select(sharedselectors.timerinfo",{"_index":1077,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.userdataload",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showloadmorebutton",{"_index":2323,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.store.dispatch(new",{"_index":206,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/UserService.html":{}}}],["this.store.select(authcomponentselectors.isuserloggedin",{"_index":570,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.store.select(authcomponentselectors.loggingin",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.store.select(authcomponentselectors.us",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["this.store.select(authcomponentselectors.validationmessag",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.timercollect",{"_index":1201,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timercollection.doc(userid).set",{"_index":1204,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timercollection.doc(userid).valuechanges().pipe(first",{"_index":1211,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timerinfo",{"_index":2316,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.timerinfo$.pipe(map(info",{"_index":2317,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.timerservice.getnowtim",{"_index":1405,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["this.timerservice.gettimerinfo(userid",{"_index":2278,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["this.timerservice.resettimer(this.userid",{"_index":2258,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setgame(this.userid",{"_index":2260,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setplatform(this.userid",{"_index":2262,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setstarttime(this.userid",{"_index":2265,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimer(this.userid",{"_index":1407,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["this.timevsdategraphdata",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsdategraphdata$.pipe(map(x",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsgamegraphdata",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsplatformgraphdata",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.titleservice.settitle(titl",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["this.totaltim",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.trackedgam",{"_index":2325,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.trackernavcapt",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trackerstore.select(trackerselectors.entriestoshow",{"_index":2320,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.twitterauth.emit(nul",{"_index":559,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.userdataload",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userid",{"_index":203,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["this.userinfo",{"_index":1668,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userinfo.email",{"_index":1745,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getuser().subscribe(us",{"_index":202,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["this.userservice.getuserinfo().subscribe(userinfo",{"_index":1667,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userservice.logout",{"_index":1669,"title":{},"body":{"components/NavComponent.html":{}}}],["this.visibletab",{"_index":838,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this_month",{"_index":1266,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{},"miscellaneous/typealiases.html":{}}}],["this_week",{"_index":1251,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-14.html":{},"miscellaneous/typealiases.html":{}}}],["time",{"_index":68,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"index.html":{}}}],["time.pip",{"_index":1957,"title":{},"body":{"modules/SharedModule.html":{}}}],["time.pipe.t",{"_index":1052,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["time.pipe.ts:8",{"_index":1057,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["time.servic",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{}}}],["time.service.t",{"_index":1063,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:17",{"_index":1067,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:20",{"_index":1068,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:27",{"_index":1070,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["timedategraphcompon",{"_index":284,"title":{"components/TimeDateGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timegamegraphcompon",{"_index":286,"title":{"components/TimeGameGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timeinsecond",{"_index":2222,"title":{},"body":{"pipes/TimePipe.html":{}}}],["timepip",{"_index":861,"title":{"pipes/TimePipe.html":{}},"body":{"modules/CompletionModule.html":{},"modules/SharedModule.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["timeplatformgraphcompon",{"_index":287,"title":{"components/TimePlatformGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timeplay",{"_index":757,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{}}}],["timer",{"_index":734,"title":{},"body":{"classes/CancelTimer.html":{},"interfaces/FirestoreTimerItem.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["timer'},{'nam",{"_index":289,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["timer.component.html",{"_index":2226,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":2225,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.reduc",{"_index":1973,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["timeract",{"_index":489,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"injectables/TimerEffects.html":{}}}],["timeractions.loadtimerinfo",{"_index":2275,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.loadtimerinfo(action.user.uid",{"_index":479,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["timeractions.resettim",{"_index":2272,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.savetimerinfo",{"_index":2283,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.savetimerinfosucceed",{"_index":1314,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["timeractions.savetimerinfosucceeded(item",{"_index":2286,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.settimerinfo(data",{"_index":2279,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.settimerinfo(timerinfo",{"_index":1406,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["timercollect",{"_index":1200,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timercompon",{"_index":288,"title":{"components/TimerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["timerdoc",{"_index":1210,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timerdoc.pipe(map(tim",{"_index":1212,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timereffect",{"_index":2267,"title":{"injectables/TimerEffects.html":{}},"body":{"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["timerinfo",{"_index":329,"title":{"interfaces/TimerInfo.html":{}},"body":{"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["timerservic",{"_index":1199,"title":{"injectables/TimerService.html":{}},"body":{"interfaces/FirestoreTimerItem.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["timevsdategraphdata",{"_index":927,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timevsgamegraphdata",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timevsplatformgraphdata",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["titl",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["titleservic",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["togglenav",{"_index":1628,"title":{},"body":{"components/NavComponent.html":{}}}],["toggleshowextra",{"_index":1688,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["tooltip",{"_index":1235,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip'},{'nam",{"_index":253,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tooltip.compon",{"_index":990,"title":{},"body":{"modules/DashboardModule.html":{}}}],["tooltip.component.html",{"_index":1237,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":1236,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.t",{"_index":1234,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.ts:13",{"_index":1238,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.ts:16",{"_index":1239,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip/graph",{"_index":989,"title":{},"body":{"modules/DashboardModule.html":{},"components/GraphTooltipComponent.html":{}}}],["tort",{"_index":2588,"title":{},"body":{"license.html":{}}}],["total",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totaltim",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/LibraryEntry.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["track",{"_index":1293,"title":{},"body":{"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["trackedgam",{"_index":1284,"title":{},"body":{"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tracker",{"_index":258,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-19.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"index.html":{}}}],["tracker.compon",{"_index":2345,"title":{},"body":{"modules/TrackerModule.html":{}}}],["tracker.component.html",{"_index":2301,"title":{},"body":{"components/TrackerComponent.html":{}}}],["tracker.component.scss",{"_index":2300,"title":{},"body":{"components/TrackerComponent.html":{}}}],["trackercapt",{"_index":1629,"title":{},"body":{"components/NavComponent.html":{}}}],["trackercompon",{"_index":290,"title":{"components/TrackerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["trackermodul",{"_index":392,"title":{"modules/TrackerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["trackernavcapt",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["trackerrout",{"_index":1626,"title":{},"body":{"components/NavComponent.html":{}}}],["trackerroute.capt",{"_index":1672,"title":{},"body":{"components/NavComponent.html":{}}}],["trackerselector",{"_index":2143,"title":{},"body":{"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["trackerst",{"_index":2130,"title":{"interfaces/TrackerState.html":{}},"body":{"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["trackerstor",{"_index":2305,"title":{},"body":{"components/TrackerComponent.html":{}}}],["trackingcategori",{"_index":508,"title":{},"body":{"components/AuthFormComponent.html":{},"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["trackmyplaytim",{"_index":2494,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1054,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}}}],["transform(starttimeinm",{"_index":1055,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["transform(timeinsecond",{"_index":2220,"title":{},"body":{"pipes/TimePipe.html":{}}}],["transform(valu",{"_index":1721,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["travisci",{"_index":2508,"title":{},"body":{"index.html":{}}}],["tree",{"_index":129,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["true",{"_index":576,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryEntity.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"injectables/TimerService.html":{}}}],["twitter",{"_index":539,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["twitter_login",{"_index":696,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["twitterauth",{"_index":513,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["twitterlogin",{"_index":619,"title":{"classes/TwitterLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["twittersignup",{"_index":1850,"title":{},"body":{"components/RegisterComponent.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":2598,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":2168,"title":{},"body":{"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["undefin",{"_index":718,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"miscellaneous/functions.html":{}}}],["updat",{"_index":55,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_elapsed_tim",{"_index":66,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_elapsed_time_succeed",{"_index":70,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_gam",{"_index":54,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_game_succeed",{"_index":59,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_platform",{"_index":61,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_platform_succeed",{"_index":64,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["updatedaterang",{"_index":1249,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["updatedaterange(daterangeel",{"_index":1254,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["updateelapsedtim",{"_index":69,"title":{"classes/UpdateElapsedTime.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updateelapsedtime(elapsedtimeel",{"_index":1386,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["updateelapsedtime(userid",{"_index":1134,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updateelapsedtimesucceed",{"_index":71,"title":{"classes/UpdateElapsedTimeSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updategam",{"_index":57,"title":{"classes/UpdateGame.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updategame(userid",{"_index":1130,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updategamesucceed",{"_index":60,"title":{"classes/UpdateGameSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemgamepayload",{"_index":30,"title":{"interfaces/UpdateHistoryItemGamePayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemplatformpayload",{"_index":31,"title":{"interfaces/UpdateHistoryItemPlatformPayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemtimespayload",{"_index":32,"title":{"interfaces/UpdateHistoryItemTimesPayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatepayload",{"_index":1344,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/State-2.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"miscellaneous/typealiases.html":{}}}],["updateplatform",{"_index":63,"title":{"classes/UpdatePlatform.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updateplatform(platformel",{"_index":1390,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["updateplatform(userid",{"_index":1133,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updateplatformsucceed",{"_index":65,"title":{"classes/UpdatePlatformSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":915,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["us",{"_index":2554,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":656,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"interfaces/State-7.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["user.reduc",{"_index":665,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["user.uid",{"_index":204,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/AuthState.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"interfaces/State-7.html":{},"components/TimerComponent.html":{}}}],["useract",{"_index":491,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useractions.authent",{"_index":475,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/UserEffects.html":{}}}],["useractions.authenticated(us",{"_index":2423,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.emaillogin",{"_index":2373,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.emaillogin(event.email",{"_index":1593,"title":{},"body":{"components/LoginComponent.html":{}}}],["useractions.facebook_login",{"_index":2185,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.facebooklogin",{"_index":1591,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.getus",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.google_login",{"_index":2184,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.googlelogin",{"_index":1590,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.logout",{"_index":2396,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useractions.not_authent",{"_index":2190,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.notauthent",{"_index":2388,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.resetpassword",{"_index":2402,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.resetpassword(email",{"_index":1227,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["useractions.resetpassword(this.userinfo.email",{"_index":1744,"title":{},"body":{"components/ProfileComponent.html":{}}}],["useractions.signup",{"_index":2183,"title":{},"body":{"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{}}}],["useractions.signup(event.email",{"_index":1859,"title":{},"body":{"components/RegisterComponent.html":{}}}],["useractions.twitter_login",{"_index":2186,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.twitterlogin",{"_index":1592,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["userdataload",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["usereffect",{"_index":597,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AuthModule.html":{},"injectables/UserEffects.html":{}}}],["userid",{"_index":43,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["userinfo",{"_index":1627,"title":{"interfaces/UserInfo.html":{}},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["userinfo.displaynam",{"_index":1674,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["userinfo.email",{"_index":1747,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userservic",{"_index":157,"title":{"injectables/UserService.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["util",{"_index":1495,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/add",{"_index":198,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["utils/colorscheme.util",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils/date.util",{"_index":1073,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/display",{"_index":810,"title":{},"body":{"components/CompletionComponent.html":{}}}],["utils/display.util",{"_index":2315,"title":{},"body":{"components/TrackerComponent.html":{}}}],["utils/graph",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils/histori",{"_index":1976,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/history.util",{"_index":1979,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/librari",{"_index":1492,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/playing.util",{"_index":1702,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["utils/res",{"_index":1494,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/validation.util",{"_index":2197,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["uuid",{"_index":1088,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{},"dependencies.html":{}}}],["uuidconfig",{"_index":1090,"title":{"interfaces/UUIDConfig.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["valid",{"_index":542,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["validationmessag",{"_index":684,"title":{},"body":{"interfaces/AuthState.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/StatusEffects.html":{}}}],["validators.email",{"_index":550,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["validators.minlength(6",{"_index":552,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["validators.requir",{"_index":549,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["valu",{"_index":25,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{}}}],["var",{"_index":227,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["via",{"_index":2504,"title":{},"body":{"index.html":{}}}],["video",{"_index":2496,"title":{},"body":{"index.html":{}}}],["view",{"_index":717,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["visibl",{"_index":1950,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["visibletab",{"_index":788,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-12.html":{},"components/TabsComponent.html":{}}}],["vivid",{"_index":2623,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["void",{"_index":169,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":2571,"title":{},"body":{"license.html":{}}}],["way",{"_index":2524,"title":{},"body":{"index.html":{}}}],["web",{"_index":1139,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["week",{"_index":1270,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["whether",{"_index":2586,"title":{},"body":{"license.html":{}}}],["window:res",{"_index":1484,"title":{},"body":{"components/LibraryComponent.html":{}}}],["without",{"_index":2549,"title":{},"body":{"license.html":{}}}],["x",{"_index":724,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["x.endentryid",{"_index":2014,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["x.reduce((a",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["x.startentryid",{"_index":2012,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["xaxislabel",{"_index":713,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["yaxislabel",{"_index":714,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["you'v",{"_index":1461,"title":{},"body":{"components/HomeComponent.html":{}}}],["you\\'v",{"_index":1463,"title":{},"body":{"components/HomeComponent.html":{}}}],["yourself",{"_index":1458,"title":{},"body":{"components/HomeComponent.html":{}}}],["zone.j",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["zrimsek",{"_index":2536,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddNewHistoryItem.html":{"url":"classes/AddNewHistoryItem.html","title":"class - AddNewHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: HistoryEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    HistoryEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     HistoryEntity\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_HISTORY_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewItem.html":{"url":"classes/AddNewItem.html","title":"class - AddNewItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewProgressItem.html":{"url":"classes/AddNewProgressItem.html","title":"class - AddNewProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: ProgressEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    ProgressEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     ProgressEntity\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_PROGRESS_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddPlaying.html":{"url":"interfaces/AddPlaying.html","title":"interface - AddPlaying","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddPlaying\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/add-playing.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        startEntryId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddPlayingInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddPlaying {\n  userId: string;\n  startEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddPlayingComponent.html":{"url":"components/AddPlayingComponent.html","title":"component - AddPlayingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddPlayingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/add-playing/add-playing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-add-playing\n            \n\n            \n                styleUrls\n                add-playing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-playing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetInfo\n                            \n                            \n                                savePlaying\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dates\n                            \n                            \n                                game\n                            \n                            \n                                gameGroupings\n                            \n                            \n                                games\n                            \n                            \n                                info\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dates\n                    \n                    \n                            \n                            Type :    number[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gameGroupings\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        games\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        info\n                    \n                    \n                            \n                            Type :    AddPlayingInfo\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platforms\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            savePlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nsavePlaying()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(startTimeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    add: faPlusSquare\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as appActions from '../../../../actions/app.actions';\nimport * as actions from '../../actions/add-playing.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../../../shared/models';\nimport { AddPlaying, AddPlayingInfo } from '../../models';\n\nimport { findMatchingHistoryEntry } from '../../utils/add-playing.utils';\n\n@Component({\n  selector: 'app-completion-add-playing',\n  templateUrl: './add-playing.component.html',\n  styleUrls: ['./add-playing.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddPlayingComponent implements OnInit {\n\n  @Input() gameGroupings: HistoryGrouping[] = [];\n  @Input() games: string[];\n  @Input() game: string | null = null;\n  @Input() info: AddPlayingInfo;\n  @Input() platforms: string[] = [];\n  @Input() dates: number[] = [];\n  userId = '';\n  icons = {\n    add: faPlusSquare\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  setGame() {\n    if (this.game) {\n      const game = this.game;\n      this.store.dispatch(new actions.SetGame(game));\n    }\n  }\n\n  setPlatform(platformEl: HTMLSelectElement) {\n    const platform = platformEl.value;\n    this.store.dispatch(new actions.SetPlatform(platform));\n  }\n\n  setStartTime(startTimeEl: HTMLSelectElement) {\n    const startTime = Number.parseInt(startTimeEl.value);\n    this.store.dispatch(new actions.SetStartTime(startTime));\n  }\n\n  resetInfo() {\n    this.store.dispatch(new actions.Reset());\n  }\n\n  savePlaying() {\n    const historyItem = findMatchingHistoryEntry(this.gameGroupings, this.info);\n    if (historyItem) {\n      const addPlaying: AddPlaying = {\n        userId: this.userId,\n        startEntryId: historyItem.id\n      };\n      this.store.dispatch(new actions.Save(addPlaying));\n    } else {\n      this.store.dispatch(new appActions.Error(actions.SAVE, 'No matching history item found.'));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    \n      Start Time\n      {{ option | date:'M/d/y hh:mm a' }}\n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}                  Start Time      {{ option | date:\\'M/d/y hh:mm a\\' }}                        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddPlayingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddPlayingEffects.html":{"url":"injectables/AddPlayingEffects.html","title":"injectable - AddPlayingEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddPlayingEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/effects/add-playing.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                save$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, progressService: ProgressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/effects/add-playing.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                    ProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        save$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(addPlayingActions.SAVE)\n      .pipe(\n        map(action => action as addPlayingActions.Save),\n        map(action => action.addPlaying),\n        switchMap(addPlaying => this.progressService.saveAddPlaying(addPlaying)\n          .pipe(\n            mergeMap(newItem => [\n              new addPlayingActions.SaveSucceeded(newItem),\n              new addPlayingActions.Reset()\n            ]),\n            catchError(err => of(new appActions.Error(addPlayingActions.SAVE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/add-playing.effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProgressService } from '../services/progress.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as addPlayingActions from '../actions/add-playing.actions';\n\n@Injectable()\nexport class AddPlayingEffects {\n\n  constructor(private actions$: Actions, private progressService: ProgressService) { }\n\n  @Effect() save$ =\n    this.actions$\n      .ofType(addPlayingActions.SAVE)\n      .pipe(\n        map(action => action as addPlayingActions.Save),\n        map(action => action.addPlaying),\n        switchMap(addPlaying => this.progressService.saveAddPlaying(addPlaying)\n          .pipe(\n            mergeMap(newItem => [\n              new addPlayingActions.SaveSucceeded(newItem),\n              new addPlayingActions.Reset()\n            ]),\n            catchError(err => of(new appActions.Error(addPlayingActions.SAVE, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddPlayingInfo.html":{"url":"interfaces/AddPlayingInfo.html","title":"interface - AddPlayingInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddPlayingInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/add-playing.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddPlayingInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddPlaying {\n  userId: string;\n  startEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddTimerInfo.html":{"url":"interfaces/AddTimerInfo.html","title":"interface - AddTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/timer.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimerInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddTimerInfo {\n  userId: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                trackerNavCaption$\n                            \n                            \n                                userDataLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                shouldShowHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, router: Router, titleService: Title, elapsedTimeService: ElapsedTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedTimeService\n                                                  \n                                                        \n                                                                    ElapsedTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldShowHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshouldShowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackerNavCaption$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackerNavCaption$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDataLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDataLoaded$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport { insertAnalyticsElements } from 'insert-analytics-elements/googleTagManager';\nimport { Observable } from 'rxjs';\n\nimport { ElapsedTimeService } from './shared/services/elapsed-time.service';\n\nimport sharedSelectors, { State as SharedState } from './shared/reducers/root.reducer';\n\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  userDataLoaded$: Observable;\n  trackerNavCaption$: Observable;\n  constructor(private sharedStore: Store,\n    private router: Router,\n    private titleService: Title,\n    private elapsedTimeService: ElapsedTimeService) { }\n\n  ngOnInit() {\n    insertAnalyticsElements(environment.googleTagManager);\n    this.userDataLoaded$ = this.sharedStore.select(sharedSelectors.userDataLoaded);\n    this.elapsedTimeService.getElapsedTime('Track My Playtime').subscribe(title => this.titleService.setTitle(title));\n    this.trackerNavCaption$ = this.elapsedTimeService.getElapsedTime('Tracker');\n  }\n\n  shouldShowHeader(): boolean {\n    const currentRoute = this.router.url;\n    return currentRoute.indexOf('/app') === -1;\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n\n    \n      \n        \n      \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompletionModule\n\nCompletionModule\n\nAppModule -->\n\nCompletionModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTrackerModule\n\nTrackerModule\n\nAppModule -->\n\nTrackerModule->AppModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nAppModule -->\n\nElapsedTimeService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                NavComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ElapsedTimeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    !environment\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CompletionModule\n                            \n                            \n                                    DashboardModule\n                            \n                            \n                                    HomeModule\n                            \n                            \n                                    LibraryModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TrackerModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthModule } from './features/auth/auth.module';\nimport { CompletionModule } from './features/completion/completion.module';\nimport { DashboardModule } from './features/dashboard/dashboard.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LibraryModule } from './features/library/library.module';\nimport { ProfileModule } from './features/profile/profile.module';\nimport { TrackerModule } from './features/tracker/tracker.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NavComponent } from './components/nav/nav.component';\n\nimport { ElapsedTimeService } from './shared/services/elapsed-time.service';\n\nimport { AuthGuard } from './features/auth/guards/auth.guard';\n\nimport { metaReducers } from './meta.reducers';\nimport { CustomRouterStateSerializer, reducers } from './reducers/root.reducer';\n\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    AppRoutingModule,\n    AuthModule,\n    SharedModule,\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router'\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([]),\n    HomeModule,\n    TrackerModule,\n    DashboardModule,\n    LibraryModule,\n    CompletionModule,\n    ProfileModule\n  ],\n  providers: [\n    { provide: RouterStateSerializer, useClass: CustomRouterStateSerializer },\n    AuthGuard,\n    ElapsedTimeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './features/auth/components/login/login.component';\nimport { RegisterComponent } from './features/auth/components/register/register.component';\nimport { CompletionComponent } from './features/completion/completion.component';\nimport { DashboardComponent } from './features/dashboard/dashboard.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { LibraryComponent } from './features/library/library.component';\nimport { ProfileComponent } from './features/profile/profile.component';\nimport { TrackerComponent } from './features/tracker/tracker.component';\n\nimport { AuthGuard } from './features/auth/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'app',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'tracker',\n        component: TrackerComponent\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent\n      },\n      {\n        path: 'library',\n        component: LibraryComponent\n      },\n      {\n        path: 'completion',\n        component: CompletionComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: '**',\n        redirectTo: '/app/tracker',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/auth.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticated$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/auth.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticated$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.AUTHENTICATED)\n      .pipe(\n        map(action => action as userActions.Authenticated),\n        mergeMap(action => [\n          new platformsActions.LoadOptions(),\n          new historyActions.LoadHistoryItems(action.user.uid),\n          new timerActions.LoadTimerInfo(action.user.uid),\n          new progressActions.LoadProgressItems(action.user.uid),\n          new profileActions.LoadProfile(action.user.uid)\n        ])\n      )\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/auth.effects.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport * as historyActions from '../../../shared/actions/history.actions';\nimport * as platformsActions from '../../../shared/actions/platforms.actions';\nimport * as progressActions from '../../../shared/actions/progress.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\nimport * as userActions from '../../auth/actions/user.actions';\nimport * as profileActions from '../../profile/actions/profile.actions';\n\n@Injectable()\nexport class AuthEffects {\n\n  constructor(private actions$: Actions) { }\n\n  @Effect() authenticated$ =\n    this.actions$\n      .ofType(userActions.AUTHENTICATED)\n      .pipe(\n        map(action => action as userActions.Authenticated),\n        mergeMap(action => [\n          new platformsActions.LoadOptions(),\n          new historyActions.LoadHistoryItems(action.user.uid),\n          new timerActions.LoadTimerInfo(action.user.uid),\n          new progressActions.LoadProgressItems(action.user.uid),\n          new profileActions.LoadProfile(action.user.uid)\n        ])\n      );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthFormComponent.html":{"url":"components/AuthFormComponent.html","title":"component - AuthFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/auth-form/auth-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-auth-form\n            \n\n            \n                styleUrls\n                auth-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                icons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitEmailAuth\n                            \n                            \n                                emitFacebookAuth\n                            \n                            \n                                emitGoogleAuth\n                            \n                            \n                                emitTwitterAuth\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn\n                            \n                            \n                                message\n                            \n                            \n                                trackingCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailAuth\n                            \n                            \n                                facebookAuth\n                            \n                            \n                                googleAuth\n                            \n                            \n                                twitterAuth\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loggingIn\n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackingCategory\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emailAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        facebookAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        googleAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        twitterAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitEmailAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitEmailAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitFacebookAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitFacebookAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitGoogleAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitGoogleAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitTwitterAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitTwitterAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    google: faGoogle,\n    facebook: faFacebook,\n    twitter: faTwitter\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { faFacebook, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-auth-form',\n  templateUrl: './auth-form.component.html',\n  styleUrls: ['./auth-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthFormComponent implements OnInit {\n\n  @Input() message = '';\n  @Input() loggingIn = false;\n  @Input() trackingCategory: string;\n  @Output() emailAuth: EventEmitter = new EventEmitter();\n  @Output() googleAuth: EventEmitter = new EventEmitter();\n  @Output() facebookAuth: EventEmitter = new EventEmitter();\n  @Output() twitterAuth: EventEmitter = new EventEmitter();\n  authForm: FormGroup;\n  icons = {\n    google: faGoogle,\n    facebook: faFacebook,\n    twitter: faTwitter\n  };\n  constructor(private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.authForm = this.builder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]]\n    });\n  }\n\n  emitEmailAuth() {\n    if (this.authForm.valid) {\n      this.emailAuth.emit({\n        email: this.authForm.value.email,\n        password: this.authForm.value.password\n      });\n    }\n  }\n\n  emitGoogleAuth() {\n    this.googleAuth.emit(null);\n  }\n\n  emitFacebookAuth() {\n    this.facebookAuth.emit(null);\n  }\n\n  emitTwitterAuth() {\n    this.twitterAuth.emit(null);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ trackingCategory }}\n  \n\n  \n    \n      \n      \n      {{ trackingCategory }}\n      {{ message }}\n    \n\n    \n\n    \n      \n        \n        {{ trackingCategory }} with Google\n      \n\n      \n        \n        {{ trackingCategory }} with Facebook\n      \n\n      \n        \n        {{ trackingCategory }} with Twitter\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ trackingCategory }}                          {{ trackingCategory }}      {{ message }}                                  {{ trackingCategory }} with Google                            {{ trackingCategory }} with Facebook                            {{ trackingCategory }} with Twitter            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport authComponentSelectors, { State } from '../reducers/root.reducer';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) { }\n\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.store.select(authComponentSelectors.isUserLoggedIn)\n      .pipe(\n        map(authed => {\n          if (!authed) {\n            this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n            return false;\n          }\n          return true;\n        }),\n        take(1));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthFormComponent\n                            \n                            \n                                ForgotPasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                RegisterComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { AuthFormComponent } from './components/auth-form/auth-form.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { AuthEffects } from './effects/auth.effects';\nimport { StatusEffects } from './effects/status.effects';\nimport { UserEffects } from './effects/user.effects';\n\nimport { AuthService } from './services/auth.service';\n\nimport { reducers } from './reducers/root.reducer';\n\nimport { FormsModule, ReactiveFormsModule } from '../../../../node_modules/@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    StoreModule.forFeature('auth', reducers),\n    EffectsModule.forFeature([\n      UserEffects,\n      AuthEffects,\n      StatusEffects\n    ])\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    AuthFormComponent,\n    ForgotPasswordComponent\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\n\nconst routes: Routes = [{\n  path: 'forgotPassword',\n  component: ForgotPasswordComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                facebookLogin\n                            \n                            \n                                getAuthState\n                            \n                            \n                                    Private\n                                googleLogin\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signInWithEmail\n                            \n                            \n                                signInWithFacebook\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                signInWithTwitter\n                            \n                            \n                                signOut\n                            \n                            \n                                signUpWithEmail\n                            \n                            \n                                    Private\n                                twitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        facebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        googleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithEmail(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithFacebook\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithFacebook()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithTwitter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithTwitter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUpWithEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignUpWithEmail(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            twitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        twitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { from, Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) { }\n\n  getAuthState(): Observable {\n    return this.afAuth.authState;\n  }\n\n  signInWithGoogle(): Observable {\n    return from(this.googleLogin());\n  }\n\n  signInWithFacebook(): Observable {\n    return from(this.facebookLogin());\n  }\n\n  signInWithTwitter(): Observable {\n    return from(this.twitterLogin());\n  }\n\n  signOut(): Observable {\n    return from(this.afAuth.auth.signOut());\n  }\n\n  signUpWithEmail(email: string, password: string): Observable {\n    return from(this.afAuth.auth.createUserWithEmailAndPassword(email, password));\n  }\n\n  signInWithEmail(email: string, password: string): Observable {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password));\n  }\n\n  resetPassword(email: string): Observable {\n    return from(this.afAuth.auth.sendPasswordResetEmail(email));\n  }\n\n  private googleLogin(): Promise {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n  private facebookLogin(): Promise {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n  private twitterLogin(): Promise {\n    const provider = new firebase.auth.TwitterAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     fromStatus.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromStatus.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     fromUser.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUser.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromStatus from './status.reducer';\nimport * as fromUser from './user.reducer';\n\nimport { User } from '../models';\n\nexport interface AuthState {\n  user: fromUser.State;\n  status: fromStatus.State;\n}\n\nexport interface State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: fromUser.reducer,\n  status: fromStatus.reducer\n};\n\nexport const _selectAuthState = createFeatureSelector('auth');\nexport const _selectUser = createSelector(_selectAuthState, state => state.user);\nexport const _selectStatus = createSelector(_selectAuthState, state => state.status);\n\nexport const _selectUserLoggedIn = createSelector(_selectUser, user => user.uid !== '');\nexport const _selectUserData = createSelector(_selectUser, user => user as User);\n\nexport const _selectStatusLoggingIn = createSelector(_selectStatus, status => status.attemptingLogin);\nexport const _selectStatusValidationMessage = createSelector(_selectStatus, status => status.validationMessage);\n\nconst authComponentSelectors = {\n  isUserLoggedIn: _selectUserLoggedIn,\n  user: _selectUserData,\n  loggingIn: _selectStatusLoggingIn,\n  validationMessage: _selectStatusValidationMessage\n};\n\nexport default authComponentSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Authenticated.html":{"url":"classes/Authenticated.html","title":"class - Authenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Authenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AUTHENTICATED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarGraphConfig.html":{"url":"interfaces/BarGraphConfig.html","title":"interface - BarGraphConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BarGraphConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GraphConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        axisTickFormatting\n                                \n                                \n                                        scaleMax\n                                \n                                \n                                        showGridLines\n                                \n                                \n                                        showXAxis\n                                \n                                \n                                        showXAxisLabel\n                                \n                                \n                                        showYAxis\n                                \n                                \n                                        showYAxisLabel\n                                \n                                \n                                        xAxisLabel\n                                \n                                \n                                        yAxisLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisTickFormatting\n                                    \n                                \n                                \n                                    \n                                        axisTickFormatting:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaleMax\n                                    \n                                \n                                \n                                    \n                                        scaleMax:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showGridLines\n                                    \n                                \n                                \n                                    \n                                        showGridLines:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showXAxis\n                                    \n                                \n                                \n                                    \n                                        showXAxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        showXAxisLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showYAxis\n                                    \n                                \n                                \n                                    \n                                        showYAxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showYAxisLabel\n                                    \n                                \n                                \n                                    \n                                        showYAxisLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelTimer.html":{"url":"classes/CancelTimer.html","title":"class - CancelTimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelTimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : CANCEL_TIMER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletedDisplayData.html":{"url":"interfaces/CompletedDisplayData.html","title":"interface - CompletedDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletedDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/display-data.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        completedItem\n                                \n                                \n                                        item\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completedItem\n                                    \n                                \n                                \n                                    \n                                        completedItem:     CompletedItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompletedItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     ProgressItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProgressItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompletedItem, HistoryListItem, ProgressItem } from '../../../shared/models';\n\nimport { MarkCompleteItem } from './';\n\nexport interface PlayingDisplayData {\n  item: ProgressItem;\n  startEntryData: HistoryListItem;\n  timePlayed: number;\n  endDates: number[];\n  markComplete: MarkCompleteItem;\n}\n\nexport interface CompletedDisplayData {\n  item: ProgressItem;\n  completedItem: CompletedItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletedItem.html":{"url":"interfaces/CompletedItem.html","title":"interface - CompletedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                                \n                                        timePlayed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timePlayed\n                                    \n                                \n                                \n                                    \n                                        timePlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompletedItemComponent.html":{"url":"components/CompletedItemComponent.html","title":"component - CompletedItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompletedItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/completed-item/completed-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-completed-item\n            \n\n            \n                styleUrls\n                completed-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./completed-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayData\n                    \n                    \n                            \n                            Type :    CompletedDisplayData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: faTrash\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as progressActions from '../../../../shared/actions/progress.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { CompletedDisplayData } from '../../models';\n\n@Component({\n  selector: 'app-completion-completed-item',\n  templateUrl: './completed-item.component.html',\n  styleUrls: ['./completed-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompletedItemComponent implements OnInit {\n\n  @Input() displayData: CompletedDisplayData;\n  userId = '';\n  icons = {\n    remove: faTrash\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  remove() {\n    this.store.dispatch(new progressActions.RemoveProgressItem(this.userId, this.displayData.item.id));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ displayData.completedItem.game }}\n      ({{ displayData.completedItem.platform }})\n    \n    \n      Playtime: {{ displayData.completedItem.timePlayed | time }}\n      Start: {{ displayData.completedItem.startTime | date:'M/d/y - hh:mm a' }}\n      End: {{ displayData.completedItem.endTime | date:'M/d/y - hh:mm a' }}\n    \n  \n\n  \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ displayData.completedItem.game }}      ({{ displayData.completedItem.platform }})              Playtime: {{ displayData.completedItem.timePlayed | time }}      Start: {{ displayData.completedItem.startTime | date:\\'M/d/y - hh:mm a\\' }}      End: {{ displayData.completedItem.endTime | date:\\'M/d/y - hh:mm a\\' }}                        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompletedItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompletionComponent.html":{"url":"components/CompletionComponent.html","title":"component - CompletionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompletionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/completion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion\n            \n\n            \n                styleUrls\n                completion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./completion.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayingInfo$\n                            \n                            \n                                completedDisplayData$\n                            \n                            \n                                game$\n                            \n                            \n                                games$\n                            \n                            \n                                historyGroupings$\n                            \n                            \n                                playingDisplayData$\n                            \n                            \n                                potentialDates$\n                            \n                            \n                                potentialPlatforms$\n                            \n                            \n                                visibleTab$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, completionStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/completion.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        completionStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPlayingInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addPlayingInfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completedDisplayData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completedDisplayData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            games$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        games$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            historyGroupings$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyGroupings$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playingDisplayData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playingDisplayData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            potentialDates$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        potentialDates$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            potentialPlatforms$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        potentialPlatforms$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibleTab$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleTab$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport completionSelectors, { State as CompletionState } from './reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../shared/models';\nimport { AddPlayingInfo, CompletedDisplayData, PlayingDisplayData, TabType } from './models';\n\nimport { filterPlatforms, filterStartTimes } from '../../shared/utils/history-filter.utils';\nimport {\n    getCompletedDisplayDataItems, getPlayingDisplayDataItems\n} from './utils/display-data.utils';\n\n@Component({\n  selector: 'app-completion',\n  templateUrl: './completion.component.html',\n  styleUrls: ['./completion.component.scss']\n})\nexport class CompletionComponent implements OnInit {\n\n  historyGroupings$: Observable;\n  games$: Observable;\n  addPlayingInfo$: Observable;\n  game$: Observable;\n  potentialPlatforms$: Observable;\n  potentialDates$: Observable;\n\n  playingDisplayData$: Observable;\n  completedDisplayData$: Observable;\n\n  visibleTab$: Observable;\n  constructor(private sharedStore: Store, private completionStore: Store) { }\n\n  ngOnInit() {\n    this.historyGroupings$ = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n    this.games$ = this.historyGroupings$.pipe(map(groupings => groupings.map(item => item.key)));\n    this.addPlayingInfo$ = this.completionStore.select(completionSelectors.addPlayingInfo);\n    this.game$ = this.addPlayingInfo$.pipe(map(info => info.game ? info.game : null));\n    this.potentialPlatforms$ = combineLatest(this.historyGroupings$, this.addPlayingInfo$, (groupings, info) => {\n      return filterPlatforms(groupings, info.game);\n    });\n    this.potentialDates$ = combineLatest(this.historyGroupings$, this.addPlayingInfo$, (groupings, info) => {\n      return filterStartTimes(groupings, info.game, info.platform);\n    });\n\n    const playingProgressItems = this.sharedStore.select(sharedSelectors.progressPlaying);\n    const completedProgerssItems = this.sharedStore.select(sharedSelectors.progressCompleted);\n    const markCompleteEntities = this.completionStore.select(completionSelectors.markCompleteEntities);\n    this.playingDisplayData$ = getPlayingDisplayDataItems(playingProgressItems, this.historyGroupings$, markCompleteEntities);\n    this.completedDisplayData$ = getCompletedDisplayDataItems(completedProgerssItems, this.historyGroupings$);\n\n    this.visibleTab$ = this.completionStore.select(completionSelectors.visibleTab);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n\n      \n        \n          \n        \n        No games in progress!\n      \n\n      \n        \n          \n        \n        No games completed!\n      \n\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        No games in progress!                                              No games completed!            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompletionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompletionModule.html":{"url":"modules/CompletionModule.html","title":"module - CompletionModule","body":"\n                   \n\n\n\n\n  Modules\n  CompletionModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompletionModule\n\n\n\ncluster_CompletionModule_declarations\n\n\n\ncluster_CompletionModule_imports\n\n\n\ncluster_CompletionModule_providers\n\n\n\n\nAddPlayingComponent\n\nAddPlayingComponent\n\n\n\nCompletionModule\n\nCompletionModule\n\nCompletionModule -->\n\nAddPlayingComponent->CompletionModule\n\n\n\n\n\nCompletedItemComponent\n\nCompletedItemComponent\n\nCompletionModule -->\n\nCompletedItemComponent->CompletionModule\n\n\n\n\n\nCompletionComponent\n\nCompletionComponent\n\nCompletionModule -->\n\nCompletionComponent->CompletionModule\n\n\n\n\n\nPlayingItemComponent\n\nPlayingItemComponent\n\nCompletionModule -->\n\nPlayingItemComponent->CompletionModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nCompletionModule -->\n\nTabsComponent->CompletionModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCompletionModule -->\n\nSharedModule->CompletionModule\n\n\n\n\n\nProgressService\n\nProgressService\n\nCompletionModule -->\n\nProgressService->CompletionModule\n\n\n\n\n\nUserService\n\nUserService\n\nCompletionModule -->\n\nUserService->CompletionModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/completion/completion.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddPlayingComponent\n                            \n                            \n                                CompletedItemComponent\n                            \n                            \n                                CompletionComponent\n                            \n                            \n                                PlayingItemComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProgressService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CompletionComponent } from './completion.component';\nimport { AddPlayingComponent } from './components/add-playing/add-playing.component';\nimport { CompletedItemComponent } from './components/completed-item/completed-item.component';\nimport { PlayingItemComponent } from './components/playing-item/playing-item.component';\nimport { TabsComponent } from './components/tabs/tabs.component';\n\nimport { AddPlayingEffects } from './effects/add-playing.effects';\nimport { ProgressEffects } from './effects/progress.effects';\n\nimport { UserService } from '../auth/services/user.service';\nimport { ProgressService } from './services/progress.service';\n\nimport { TimePipe } from '../../shared/pipes/time.pipe';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    NgSelectModule,\n    FormsModule,\n    SharedModule,\n    StoreModule.forFeature('completion', reducers),\n    EffectsModule.forFeature([\n      AddPlayingEffects,\n      ProgressEffects\n    ])\n  ],\n  declarations: [\n    CompletionComponent,\n    AddPlayingComponent,\n    PlayingItemComponent,\n    CompletedItemComponent,\n    TabsComponent],\n  providers: [\n    UserService,\n    ProgressService,\n    TimePipe\n  ]\n})\nexport class CompletionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletionState.html":{"url":"interfaces/CompletionState.html","title":"interface - CompletionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addPlaying\n                                \n                                \n                                        markComplete\n                                \n                                \n                                        tab\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addPlaying\n                                    \n                                \n                                \n                                    \n                                        addPlaying:     fromPlaying.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPlaying.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markComplete\n                                    \n                                \n                                \n                                    \n                                        markComplete:     fromMarkComplete.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMarkComplete.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                    \n                                \n                                \n                                    \n                                        tab:     fromTab.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTab.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromPlaying from './add-playing.reducer';\nimport * as fromMarkComplete from './mark-complete.reducer';\nimport * as fromTab from './tab.reducer';\n\nimport { AddPlayingInfo } from '../models';\n\nexport interface CompletionState {\n  addPlaying: fromPlaying.State;\n  markComplete: fromMarkComplete.State;\n  tab: fromTab.State;\n}\n\nexport interface State {\n  completion: CompletionState;\n}\n\nexport const reducers: ActionReducerMap = {\n  addPlaying: fromPlaying.reducer,\n  markComplete: fromMarkComplete.reducer,\n  tab: fromTab.reducer\n};\n\nexport const _selectCompletionState = createFeatureSelector('completion');\nexport const _selectPlaying = createSelector(_selectCompletionState, state => state.addPlaying);\nexport const _selectMarkComplete = createSelector(_selectCompletionState, state => state.markComplete);\nexport const _selectTab = createSelector(_selectCompletionState, state => state.tab);\n\nexport const _selectAddPlayingInfo = createSelector(_selectPlaying, playing => playing as AddPlayingInfo);\n\nexport const { selectEntities: _selectMarkCompleteEntities } = fromMarkComplete.adapter.getSelectors(_selectMarkComplete);\n\nexport const _selectVisibleTab = createSelector(_selectTab, tab => tab.tab);\n\nconst completionSelectors = {\n  addPlayingInfo: _selectAddPlayingInfo,\n  markCompleteEntities: _selectMarkCompleteEntities,\n  visibleTab: _selectVisibleTab\n};\n\nexport default completionSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize(routerState: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/reducers/root.reducer.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerState\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RouterStateUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                barGraphBaseConfig\n                            \n                            \n                                dateGraphConfig\n                            \n                            \n                                dateRangeType$\n                            \n                            \n                                gameGraphConfig\n                            \n                            \n                                    Private\n                                graphConfig\n                            \n                            \n                                platformGraphConfig\n                            \n                            \n                                timeVsDateGraphData$\n                            \n                            \n                                timeVsGameGraphData$\n                            \n                            \n                                timeVsPlatformGraphData$\n                            \n                            \n                                totalTime$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, dashboardStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/dashboard.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dashboardStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            barGraphBaseConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        barGraphBaseConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.graphConfig,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: false,\n    showYAxisLabel: false,\n    showGridLines: true,\n    xAxisLabel: '',\n    yAxisLabel: '',\n    axisTickFormatting: formatTime,\n    scaleMax: 3600 * 10\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateGraphConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Date',\n    yAxisLabel: 'Total Time Played'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateRangeType$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateRangeType$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gameGraphConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Total Time Played',\n    yAxisLabel: 'Game'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphConfig:     GraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     GraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    view: undefined,\n    colorScheme: {\n      domain: selectColorScheme('cool')\n    },\n    showLegend: false,\n    gradient: false,\n    animations: true,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformGraphConfig:     PieChartConfig\n\n                    \n                \n                    \n                        \n                            Type :     PieChartConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.graphConfig,\n    showLabels: true,\n    explodeSlices: false,\n    doughnut: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsDateGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsDateGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsGameGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsGameGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsPlatformGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsPlatformGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport dashboardSelectors, { State as DashboardState } from './reducers/root.reducer';\n\nimport {\n    BarGraphConfig, DateRangeType, GraphConfig, GraphDataItem, PieChartConfig\n} from './models';\n\nimport { formatTime } from '../../shared/utils/date.utils';\nimport { selectColorScheme } from './utils/colorScheme.utils';\nimport { getGraphData, getPaddedGraphData, getSortedGraphData } from './utils/graph-data.utils';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  timeVsDateGraphData$: Observable;\n  timeVsPlatformGraphData$: Observable;\n  timeVsGameGraphData$: Observable;\n\n  totalTime$: Observable;\n\n  dateRangeType$: Observable;\n\n  private graphConfig: GraphConfig = {\n    view: undefined,\n    colorScheme: {\n      domain: selectColorScheme('cool')\n    },\n    showLegend: false,\n    gradient: false,\n    animations: true,\n  };\n  private barGraphBaseConfig: BarGraphConfig = {\n    ...this.graphConfig,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: false,\n    showYAxisLabel: false,\n    showGridLines: true,\n    xAxisLabel: '',\n    yAxisLabel: '',\n    axisTickFormatting: formatTime,\n    scaleMax: 3600 * 10\n  };\n  dateGraphConfig: BarGraphConfig = {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Date',\n    yAxisLabel: 'Total Time Played'\n  };\n  gameGraphConfig: BarGraphConfig = {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Total Time Played',\n    yAxisLabel: 'Game'\n  };\n  platformGraphConfig: PieChartConfig = {\n    ...this.graphConfig,\n    showLabels: true,\n    explodeSlices: false,\n    doughnut: true\n  };\n  constructor(private sharedStore: Store, private dashboardStore: Store) { }\n\n  ngOnInit() {\n    const dateList = this.dashboardStore.select(dashboardSelectors.dateList);\n    const groupingsByDate = this.sharedStore.select(sharedSelectors.historyGroupingsByDate);\n    const groupingsByPlatform = this.sharedStore.select(sharedSelectors.historyGroupingsByPlatform);\n    const groupingsByGame = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n\n    this.timeVsDateGraphData$ = getPaddedGraphData(groupingsByDate, dateList);\n    this.timeVsPlatformGraphData$ = getGraphData(groupingsByPlatform, dateList);\n    this.timeVsGameGraphData$ = getSortedGraphData(groupingsByGame, dateList);\n\n    this.totalTime$ = this.timeVsDateGraphData$.pipe(map(x => x.reduce((a, b) => a + b.value, 0)));\n    this.dateRangeType$ = this.dashboardStore.select(dashboardSelectors.rangeType);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nGraphTooltipComponent\n\nGraphTooltipComponent\n\nDashboardModule -->\n\nGraphTooltipComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nTimeDateGraphComponent\n\nTimeDateGraphComponent\n\nDashboardModule -->\n\nTimeDateGraphComponent->DashboardModule\n\n\n\n\n\nTimeGameGraphComponent\n\nTimeGameGraphComponent\n\nDashboardModule -->\n\nTimeGameGraphComponent->DashboardModule\n\n\n\n\n\nTimePlatformGraphComponent\n\nTimePlatformGraphComponent\n\nDashboardModule -->\n\nTimePlatformGraphComponent->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                GraphTooltipComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                TimeDateGraphComponent\n                            \n                            \n                                TimeGameGraphComponent\n                            \n                            \n                                TimePlatformGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { GraphTooltipComponent } from './components/graph-tooltip/graph-tooltip.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { TimeDateGraphComponent } from './components/time-date-graph/time-date-graph.component';\nimport { TimeGameGraphComponent } from './components/time-game-graph/time-game-graph.component';\nimport {\n    TimePlatformGraphComponent\n} from './components/time-platform-graph/time-platform-graph.component';\nimport { DashboardComponent } from './dashboard.component';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxChartsModule,\n    SharedModule,\n    StoreModule.forFeature('dashboard', reducers),\n  ],\n  declarations: [\n    DashboardComponent,\n    TimeDateGraphComponent,\n    TimeGameGraphComponent,\n    TimePlatformGraphComponent,\n    GraphTooltipComponent,\n    HeaderComponent\n  ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardState.html":{"url":"interfaces/DashboardState.html","title":"interface - DashboardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DashboardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateRange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateRange\n                                    \n                                \n                                \n                                    \n                                        dateRange:     fromDateRange.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDateRange.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { eachDay } from 'date-fns';\n\nimport * as fromDateRange from './date-range.reducer';\n\nexport interface DashboardState {\n  dateRange: fromDateRange.State;\n}\n\nexport interface State {\n  dashboard: DashboardState;\n}\n\nexport const reducers: ActionReducerMap = {\n  dateRange: fromDateRange.reducer\n};\n\nexport const _selectDashboardFeature = createFeatureSelector('dashboard');\nexport const _selectDateRange = createSelector(_selectDashboardFeature, state => state.dateRange);\n\nexport const _selectDateList = createSelector(_selectDateRange, dateRange => {\n  return eachDay(dateRange.startDay, dateRange.endDay);\n});\nexport const _selectRangeType = createSelector(_selectDateRange, dateRange => dateRange.type);\n\nconst dashboardSelectors = {\n  dateList: _selectDateList,\n  rangeType: _selectRangeType\n};\n\nexport default dashboardSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/shared.models.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDisplayNameComponent.html":{"url":"components/EditDisplayNameComponent.html","title":"component - EditDisplayNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditDisplayNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/edit-display-name/edit-display-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-edit-display-name\n            \n\n            \n                styleUrls\n                edit-display-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-display-name.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitFinishEdit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDisplayName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                finishEdit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        finishEdit\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitFinishEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitFinishEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisplayName(displayNameEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayNameEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    confirm: faCheck,\n    cancel: faTimes\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as profileActions from '../../actions/profile.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-profile-edit-display-name',\n  templateUrl: './edit-display-name.component.html',\n  styleUrls: ['./edit-display-name.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditDisplayNameComponent implements OnInit {\n\n  @Output() finishEdit: EventEmitter = new EventEmitter();\n  userId: string;\n  icons = {\n    confirm: faCheck,\n    cancel: faTimes\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  emitFinishEdit() {\n    this.finishEdit.emit(null);\n  }\n\n  setDisplayName(displayNameEl: HTMLInputElement) {\n    const displayName = displayNameEl.value;\n    displayNameEl.value = '';\n\n    this.store.dispatch(new profileActions.SetProfileDisplayName(this.userId, displayName));\n    this.emitFinishEdit();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDisplayNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ElapsedTimePipe.html":{"url":"pipes/ElapsedTimePipe.html","title":"pipe - ElapsedTimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ElapsedTimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/elapsed-time.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        elapsedTime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(startTimeInMS: number, endTimeInMS: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/elapsed-time.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeInMS\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endTimeInMS\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatElapsedTime } from '../../shared/utils/date.utils';\n\n@Pipe({ name: 'elapsedTime' })\nexport class ElapsedTimePipe implements PipeTransform {\n\n  transform(startTimeInMS: number, endTimeInMS: number): string {\n    return formatElapsedTime(startTimeInMS, endTimeInMS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElapsedTimeService.html":{"url":"injectables/ElapsedTimeService.html","title":"injectable - ElapsedTimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElapsedTimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/elapsed-time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTime$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTime\n                            \n                            \n                                getElapsedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/elapsed-time.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetElapsedTime(inactiveValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inactiveValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, interval, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { SharedState } from '../reducers/root.reducer';\n\nimport { TimerInfo } from '../models';\n\nimport { formatElapsedTime } from '../utils/date.utils';\n\n@Injectable()\nexport class ElapsedTimeService {\n\n  currentTime$: Observable;\n  constructor(private sharedStore: Store) { }\n\n  getCurrentTime(): Observable {\n    if (!this.currentTime$) {\n      this.currentTime$ = interval(1000).pipe(map(() => new Date().getTime()));\n    }\n    return this.currentTime$;\n  }\n\n  getElapsedTime(inactiveValue: string): Observable {\n    const timerInfo$ = this.sharedStore.select(sharedSelectors.timerInfo);\n    const currentTime$ = this.getCurrentTime();\n\n    return combineLatest(currentTime$, timerInfo$, (currentTime: number, timerInfo: TimerInfo) => {\n      return formatElapsedTime(timerInfo.startTime, currentTime, inactiveValue);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailAuthEvent.html":{"url":"interfaces/EmailAuthEvent.html","title":"interface - EmailAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmailAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/events.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EmailAuthEvent {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailLogin.html":{"url":"classes/EmailLogin.html","title":"class - EmailLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : EMAIL_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Environment.html":{"url":"interfaces/Environment.html","title":"interface - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firebase\n                                \n                                \n                                        googleTagManager\n                                \n                                \n                                        production\n                                \n                                \n                                        uuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firebase\n                                    \n                                \n                                \n                                    \n                                        firebase:     FirebaseConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirebaseConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleTagManager\n                                    \n                                \n                                \n                                    \n                                        googleTagManager:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                    \n                                \n                                \n                                    \n                                        uuid:     UUIDConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUIDConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  firebase: FirebaseConfig;\n  uuid: UUIDConfig;\n  googleTagManager: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\ninterface UUIDConfig {\n  domain: string;\n  namespace: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Error.html":{"url":"classes/Error.html","title":"class - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/app.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/app.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        action:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : APP_ERROR\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const APP_ERROR = '[App] Error';\nexport class Error implements Action {\n  readonly type = APP_ERROR;\n  constructor(public action: string, public message: string) { }\n}\n\nexport type All = Error;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookLogin.html":{"url":"classes/FacebookLogin.html","title":"class - FacebookLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : FACEBOOK_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseConfig.html":{"url":"interfaces/FirebaseConfig.html","title":"interface - FirebaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiKey\n                                \n                                \n                                        authDomain\n                                \n                                \n                                        databaseURL\n                                \n                                \n                                        messagingSenderId\n                                \n                                \n                                        projectId\n                                \n                                \n                                        storageBucket\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authDomain\n                                    \n                                \n                                \n                                    \n                                        authDomain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        databaseURL\n                                    \n                                \n                                \n                                    \n                                        databaseURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messagingSenderId\n                                    \n                                \n                                \n                                    \n                                        messagingSenderId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageBucket\n                                    \n                                \n                                \n                                    \n                                        storageBucket:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  firebase: FirebaseConfig;\n  uuid: UUIDConfig;\n  googleTagManager: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\ninterface UUIDConfig {\n  domain: string;\n  namespace: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreHistoryItem.html":{"url":"interfaces/FirestoreHistoryItem.html","title":"interface - FirestoreHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        platform\n                                \n                                \n                                        source\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestorePlatformsItem.html":{"url":"interfaces/FirestorePlatformsItem.html","title":"interface - FirestorePlatformsItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestorePlatformsItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/platforms.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        option\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        option\n                                    \n                                \n                                \n                                    \n                                        option:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PlatformsService {\n\n  private platformsCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.platformsCollection = this.afs.collection('platforms');\n  }\n\n  getPlatformsOptions(): Observable {\n    const platformsItems = this.platformsCollection.valueChanges().pipe(first());\n    return platformsItems.pipe(map(items =>\n      items.sort((a, b) => a.index - b.index)\n        .map(item => item.option)));\n  }\n}\n\nexport interface FirestorePlatformsItem {\n  index: number;\n  option: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreProfileItem.html":{"url":"interfaces/FirestoreProfileItem.html","title":"interface - FirestoreProfileItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreProfileItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Profile } from '../models';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.profileCollection = this.afs.collection('profile');\n  }\n\n  getProfile(userId: string): Observable {\n    const profileDoc = this.profileCollection.doc(userId).valueChanges().pipe(first());\n    return profileDoc.pipe(map(profile => {\n      ...profile\n    }));\n  }\n\n  setDisplayName(userId: string, displayName: string): Observable {\n    this.profileCollection.doc(userId).set({ displayName }, { merge: true });\n    return of(displayName);\n  }\n}\n\nexport interface FirestoreProfileItem {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreProgressItem.html":{"url":"interfaces/FirestoreProgressItem.html","title":"interface - FirestoreProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreTimerItem.html":{"url":"interfaces/FirestoreTimerItem.html","title":"interface - FirestoreTimerItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreTimerItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/timer.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { TimerInfo } from '../../../shared/models';\n\n@Injectable()\nexport class TimerService {\n\n  private timerCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.timerCollection = this.afs.collection('timer');\n  }\n\n  setTimer(userId: string, info: TimerInfo) {\n    this.timerCollection.doc(userId).set({\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime\n    });\n  }\n\n  setGame(userId: string, game: string) {\n    this.timerCollection.doc(userId).set({ game }, { merge: true });\n  }\n\n  setPlatform(userId: string, platform: string) {\n    this.timerCollection.doc(userId).set({ platform }, { merge: true });\n  }\n\n  setStartTime(userId: string, startTime: number) {\n    this.timerCollection.doc(userId).set({ startTime }, { merge: true });\n  }\n\n  resetTimer(userId: string) {\n    this.timerCollection.doc(userId).set({\n      game: '',\n      platform: '',\n      startTime: 0\n    });\n  }\n\n  getTimerInfo(userId: string): Observable {\n    const timerDoc = this.timerCollection.doc(userId).valueChanges().pipe(first());\n    return timerDoc.pipe(map(timer => {\n      ...timer\n    }));\n  }\n\n  getNowTime(): number {\n    return new Date().getTime();\n  }\n}\n\nexport interface FirestoreTimerItem {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-forgot-password\n            \n\n            \n                styleUrls\n                forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                passwordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Store } from '@ngrx/store';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-auth-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  message = '';\n  passwordForm: FormGroup;\n  constructor(private store: Store, private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.passwordForm = this.builder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]]\n    });\n  }\n\n  resetPassword() {\n    if (this.passwordForm.valid) {\n      const email = this.passwordForm.value.email;\n      this.store.dispatch(new userActions.ResetPassword(email));\n      this.message = `A password reset email has been sent to ${email}`;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot Password\n  \n\n  \n    \n      \n      Reset Password\n      {{ message }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot Password                    Reset Password      {{ message }}      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUser.html":{"url":"classes/GetUser.html","title":"class - GetUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : GET_USER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLogin.html":{"url":"classes/GoogleLogin.html","title":"class - GoogleLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : GOOGLE_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphConfig.html":{"url":"interfaces/GraphConfig.html","title":"interface - GraphConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animations\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        gradient\n                                \n                                \n                                        showLegend\n                                \n                                \n                                        view\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animations\n                                    \n                                \n                                \n                                    \n                                        animations:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                    \n                                \n                                \n                                    \n                                        gradient:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLegend\n                                    \n                                \n                                \n                                    \n                                        showLegend:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                    \n                                \n                                \n                                    \n                                        view:      | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphDataItem.html":{"url":"interfaces/GraphDataItem.html","title":"interface - GraphDataItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphDataItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphTooltipComponent.html":{"url":"components/GraphTooltipComponent.html","title":"component - GraphTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-graph-tooltip\n            \n\n            \n                styleUrls\n                graph-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph-tooltip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                            \n                            Type :    GraphDataItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-graph-tooltip',\n  templateUrl: './graph-tooltip.component.html',\n  styleUrls: ['./graph-tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GraphTooltipComponent implements OnInit {\n\n  @Input() model: GraphDataItem;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{ model.name }}\n  \n  \n    {{ model.value | time }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ model.name }}        {{ model.value | time }}  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n  \n    \n      Register\n    \n\n    \n      Login\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Register              Login      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateDateRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rangeType\n                            \n                            \n                                totalTime\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/header/header.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rangeType\n                    \n                    \n                            \n                            Type :    DateRangeType\n\n                            \n                        \n                            Default value : 'THIS_WEEK'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTime\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateDateRange\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateDateRange(dateRangeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dateRangeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/date-range.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { DateRangeType } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() rangeType: DateRangeType = 'THIS_WEEK';\n  @Input() totalTime = 0;\n  constructor(private store: Store) { }\n\n  ngOnInit() { }\n\n  updateDateRange(dateRangeEl: HTMLSelectElement) {\n    switch (dateRangeEl.value) {\n      case 'THIS_WEEK': {\n        this.store.dispatch(new actions.SetThisWeek());\n        break;\n      }\n      case 'LAST_WEEK': {\n        this.store.dispatch(new actions.SetLastWeek());\n        break;\n      }\n      case 'THIS_MONTH': {\n        this.store.dispatch(new actions.SetThisMonth());\n        break;\n      }\n      case 'LAST_MONTH': {\n        this.store.dispatch(new actions.SetLastMonth());\n        break;\n      }\n      default: {\n        this.store.dispatch(new actions.SetThisWeek());\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  Dashboard - \n  {{ totalTime | time }}\n  \n    \n      This Week\n      Last Week\n      This Month\n      Last Month\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard -   {{ totalTime | time }}            This Week      Last Week      This Month      Last Month      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-2.html":{"url":"components/HeaderComponent-2.html","title":"component - HeaderComponent-2","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/library/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-library-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/library/components/header/header.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        gameCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/library/components/header/header.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/components/header/header.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-library-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() gameCount = 0;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Library - \n  {{ gameCount }} {{ gameCount | pluralize:'Game':'Games' }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Library -   {{ gameCount }} {{ gameCount | pluralize:\\'Game\\':\\'Games\\' }}'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-2'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryCollection.html":{"url":"interfaces/HistoryCollection.html","title":"interface - HistoryCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     FirestoreHistoryItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirestoreHistoryItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/history/history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-history\n            \n\n            \n                styleUrls\n                history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/history/history.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { HistoryGrouping } from '../../../../shared/models';\n\n@Component({\n  selector: 'app-tracker-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HistoryComponent implements OnInit {\n\n  @Input() groups: HistoryGrouping[] = [];\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n\n    \n\n      \n        {{ group.key }}\n        {{ group.totalTime | time }}\n      \n\n      \n        \n          \n\n          \n        \n      \n    \n  \n\n  \n    Nothing to show...get tracking!\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ group.key }}        {{ group.totalTime | time }}                                                                  Nothing to show...get tracking!  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryEffects.html":{"url":"injectables/HistoryEffects.html","title":"injectable - HistoryEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/history.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadHistoryItems$\n                            \n                            \n                                removeHistoryItem$\n                            \n                            \n                                saveTimerInfoSucceeded$\n                            \n                            \n                                updateElapsedTime$\n                            \n                            \n                                updateGame$\n                            \n                            \n                                updatePlatform$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/history.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                    HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadHistoryItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadHistoryItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.LOAD_HISTORY_ITEMS)\n      .pipe(\n        map(action => action as historyActions.LoadHistoryItems),\n        switchMap(action => this.historyService.getHistoryList(action.userId)\n          .pipe(\n            map(data => new historyActions.LoadHistoryItemsSucceeded(data)),\n            catchError(err => of(new appActions.Error(historyActions.LOAD_HISTORY_ITEMS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeHistoryItem$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeHistoryItem$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.REMOVE_HISTORY_ITEM)\n      .pipe(\n        map(action => action as historyActions.RemoveHistoryItem),\n        switchMap(action => this.historyService.deleteHistoryItem(action.userId, action.itemId)\n          .pipe(\n            map(itemId => new historyActions.RemoveHistoryItemSucceeded(itemId)),\n            catchError(err => of(new appActions.Error(historyActions.REMOVE_HISTORY_ITEM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfoSucceeded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveTimerInfoSucceeded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO_SUCCEEDED)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfoSucceeded),\n        map(action => new historyActions.AddNewHistoryItem(action.item)))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateElapsedTime$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_ELAPSED_TIME)\n      .pipe(\n        map(action => action as historyActions.UpdateElapsedTime),\n        switchMap(action => this.historyService.updateElapsedTime(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateElapsedTimeSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_ELAPSED_TIME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateGame$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_GAME)\n      .pipe(\n        map(action => action as historyActions.UpdateGame),\n        switchMap(action => this.historyService.updateGame(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateGameSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_GAME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatePlatform$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_PLATFORM)\n      .pipe(\n        map(action => action as historyActions.UpdatePlatform),\n        switchMap(action => this.historyService.updatePlatform(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdatePlatformSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_PLATFORM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:56\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { HistoryService } from '../services/history.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as historyActions from '../../../shared/actions/history.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\n\n@Injectable()\nexport class HistoryEffects {\n\n  constructor(private actions$: Actions, private historyService: HistoryService) { }\n\n  @Effect() loadHistoryItems$ =\n    this.actions$\n      .ofType(historyActions.LOAD_HISTORY_ITEMS)\n      .pipe(\n        map(action => action as historyActions.LoadHistoryItems),\n        switchMap(action => this.historyService.getHistoryList(action.userId)\n          .pipe(\n            map(data => new historyActions.LoadHistoryItemsSucceeded(data)),\n            catchError(err => of(new appActions.Error(historyActions.LOAD_HISTORY_ITEMS, err.message))))));\n\n  @Effect() saveTimerInfoSucceeded$ =\n    this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO_SUCCEEDED)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfoSucceeded),\n        map(action => new historyActions.AddNewHistoryItem(action.item)));\n\n  @Effect() removeHistoryItem$ =\n    this.actions$\n      .ofType(historyActions.REMOVE_HISTORY_ITEM)\n      .pipe(\n        map(action => action as historyActions.RemoveHistoryItem),\n        switchMap(action => this.historyService.deleteHistoryItem(action.userId, action.itemId)\n          .pipe(\n            map(itemId => new historyActions.RemoveHistoryItemSucceeded(itemId)),\n            catchError(err => of(new appActions.Error(historyActions.REMOVE_HISTORY_ITEM, err.message))))));\n\n  @Effect() updateGame$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_GAME)\n      .pipe(\n        map(action => action as historyActions.UpdateGame),\n        switchMap(action => this.historyService.updateGame(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateGameSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_GAME, err.message))))));\n\n  @Effect() updatePlatform$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_PLATFORM)\n      .pipe(\n        map(action => action as historyActions.UpdatePlatform),\n        switchMap(action => this.historyService.updatePlatform(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdatePlatformSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_PLATFORM, err.message))))));\n\n  @Effect() updateElapsedTime$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_ELAPSED_TIME)\n      .pipe(\n        map(action => action as historyActions.UpdateElapsedTime),\n        switchMap(action => this.historyService.updateElapsedTime(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateElapsedTimeSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_ELAPSED_TIME, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryEntity.html":{"url":"interfaces/HistoryEntity.html","title":"interface - HistoryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/history.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/history.actions';\n\nimport { UpdatePayload } from '../models';\n\nexport interface HistoryEntity {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_HISTORY_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_HISTORY_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_HISTORY_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_HISTORY_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.UPDATE_GAME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_PLATFORM_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_ELAPSED_TIME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getUpdatedState = (payload: UpdatePayload, currentState: State): State => {\n  const { itemId: id, ...changes } = payload;\n  return adapter.updateOne({\n    id,\n    changes\n  }, currentState);\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryEntryComponent.html":{"url":"components/HistoryEntryComponent.html","title":"component - HistoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/history-entry/history-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-history-entry\n            \n\n            \n                styleUrls\n                history-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDateTimePicker\n                            \n                            \n                                quickStart\n                            \n                            \n                                remove\n                            \n                            \n                                updateElapsedTime\n                            \n                            \n                                updateGame\n                            \n                            \n                                updatePlatform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                item\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | NgSelectValue | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    HistoryListItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDateTimePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDateTimePicker(el: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nquickStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateElapsedTime(elapsedTimeEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elapsedTimeEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: faTrash,\n    quickStart: faPlay\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faPlay, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as historyActions from '../../../../shared/actions/history.actions';\nimport * as timerActions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport {\n    HistoryListItem, NgSelectValue, TimerInfo, UpdateHistoryItemGamePayload,\n    UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../../../../shared/models';\n\nimport { getValueFromNgSelect } from '../../../../shared/utils/ng-select.utils';\n\n@Component({\n  selector: 'app-tracker-history-entry',\n  templateUrl: './history-entry.component.html',\n  styleUrls: ['./history-entry.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HistoryEntryComponent implements OnInit {\n\n  @Input() item: HistoryListItem;\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  @Input() game: string | NgSelectValue | null = null;\n  userId = '';\n  icons = {\n    remove: faTrash,\n    quickStart: faPlay\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  updateGame() {\n    if (this.game) {\n      const payload = {\n        itemId: this.item.id,\n        game: getValueFromNgSelect(this.game)\n      };\n      this.store.dispatch(new historyActions.UpdateGame(this.userId, payload));\n    }\n  }\n\n  updatePlatform(platformEl: HTMLSelectElement) {\n    const payload = {\n      itemId: this.item.id,\n      platform: platformEl.value\n    };\n    this.store.dispatch(new historyActions.UpdatePlatform(this.userId, payload));\n  }\n\n  quickStart() {\n    const timerInfo: TimerInfo = {\n      game: this.item.game,\n      platform: this.item.platform,\n      startTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new timerActions.SetTimerInfo(timerInfo));\n    this.timerService.setTimer(this.userId, timerInfo);\n  }\n\n  remove() {\n    this.store.dispatch(new historyActions.RemoveHistoryItem(this.userId, this.item.id));\n  }\n\n  updateElapsedTime(elapsedTimeEl: HTMLInputElement) {\n    if (elapsedTimeEl.value) {\n      const dateStrings = elapsedTimeEl.value.split('~').map(dateString => dateString.trim());\n      const startTime = new Date(dateStrings[0]).getTime();\n      const endTime = new Date(dateStrings[1]).getTime();\n\n      const payload = {\n        itemId: this.item.id,\n        startTime,\n        endTime\n      };\n      this.store.dispatch(new historyActions.UpdateElapsedTime(this.userId, payload));\n    }\n  }\n\n  openDateTimePicker(el: HTMLInputElement) {\n    el.click();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    \n      {{ item.startTime | date:'shortTime' }} - {{ item.endTime | date:'shortTime' }}\n    \n\n    \n      \n      \n    \n\n    \n      {{ item.startTime | elapsedTime:item.endTime }}\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}                  {{ item.startTime | date:\\'shortTime\\' }} - {{ item.endTime | date:\\'shortTime\\' }}                                  {{ item.startTime | elapsedTime:item.endTime }}                                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryGrouping.html":{"url":"interfaces/HistoryGrouping.html","title":"interface - HistoryGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        historyItems\n                                \n                                \n                                        key\n                                \n                                \n                                        totalTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        historyItems\n                                    \n                                \n                                \n                                    \n                                        historyItems:     HistoryListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HistoryListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTime\n                                    \n                                \n                                \n                                    \n                                        totalTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryListItem.html":{"url":"interfaces/HistoryListItem.html","title":"interface - HistoryListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateRange\n                                \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        locked\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateRange\n                                    \n                                \n                                \n                                    \n                                        dateRange:     [Date, Date]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [Date, Date]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locked\n                                    \n                                \n                                \n                                    \n                                        locked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                historyCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteHistoryItem\n                            \n                            \n                                    Private\n                                getHistoryEntity\n                            \n                            \n                                getHistoryList\n                            \n                            \n                                getNewHistoryItem\n                            \n                            \n                                    Private\n                                getUserItemCollection\n                            \n                            \n                                saveTimerInfo\n                            \n                            \n                                updateElapsedTime\n                            \n                            \n                                updateGame\n                            \n                            \n                                updatePlatform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/history.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteHistoryItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteHistoryItem(userId: string, itemId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getHistoryEntity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHistoryEntity(history: FirestoreHistoryItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        history\n                                                        \n                                                                    FirestoreHistoryItem\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HistoryEntity\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHistoryList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHistoryList(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNewHistoryItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNewHistoryItem(info: AddTimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FirestoreHistoryItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserItemCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserItemCollection(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveTimerInfo(info: AddTimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGame(userId: string, payload: UpdateHistoryItemGamePayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            historyCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tagline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/home/home.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tagline:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Game Time Tracking Made Simple'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  tagline = 'Game Time Tracking Made Simple';\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{ tagline }}\n  \n\n  \n    \n      Track playtime on any platform\n      We support over 15 different platforms\n    \n\n    \n      Get detailed graphs on playtime\n      Learn how you spend your time when you game\n    \n\n    \n      Mark games as complete as you finish them\n      Hold yourself accountable to that backlog you've accrued\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tagline }}              Track playtime on any platform      We support over 15 different platforms              Get detailed graphs on playtime      Learn how you spend your time when you game              Mark games as complete as you finish them      Hold yourself accountable to that backlog you\\'ve accrued      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHasId.html":{"url":"interfaces/IHasId.html","title":"interface - IHasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementDaysToShow.html":{"url":"classes/IncrementDaysToShow.html","title":"class - IncrementDaysToShow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementDaysToShow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/actions/display.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/actions/display.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/actions/display.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : INCREMENT_DAYS_TO_SHOW\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/actions/display.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const INCREMENT_DAYS_TO_SHOW = '[Display] Increment Days to Show';\nexport class IncrementDaysToShow implements Action {\n  readonly type = INCREMENT_DAYS_TO_SHOW;\n  constructor(public amount: number) { }\n}\n\nexport type All = IncrementDaysToShow;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/library/library.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-library\n            \n\n            \n                styleUrls\n                library.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                libraryEntries$\n                            \n                            \n                                numEntriesToShow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNumEntriesToShow\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/library/library.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setNumEntriesToShow\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetNumEntriesToShow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            libraryEntries$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        libraryEntries$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numEntriesToShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numEntriesToShow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\n\nimport { LibraryEntry } from './models';\n\nimport { mapGroupings } from './utils/library-data.utils';\n\nimport { getNumEntriesToShow } from './utils/resize-utils';\n\n@Component({\n  selector: 'app-library',\n  templateUrl: './library.component.html',\n  styleUrls: ['./library.component.scss']\n})\nexport class LibraryComponent implements OnInit {\n\n  libraryEntries$: Observable;\n  numEntriesToShow = 10;\n  constructor(private sharedStore: Store) { }\n\n  ngOnInit() {\n    const gameGroupings = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n    this.libraryEntries$ = mapGroupings(gameGroupings);\n    this.setNumEntriesToShow();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.setNumEntriesToShow();\n  }\n\n  setNumEntriesToShow() {\n    this.numEntriesToShow = getNumEntriesToShow(window.innerHeight);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n        \n          {{ value | date:'MM/d/yyyy' }}\n        \n        \n          {{ value | date:'MM/d/yyyy' }}\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{ value | date:\\'MM/d/yyyy\\' }}                          {{ value | date:\\'MM/d/yyyy\\' }}                    '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LibraryEntry.html":{"url":"interfaces/LibraryEntry.html","title":"interface - LibraryEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LibraryEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/library/models/library.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstPlayed\n                                \n                                \n                                        game\n                                \n                                \n                                        lastPlayed\n                                \n                                \n                                        totalTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstPlayed\n                                    \n                                \n                                \n                                    \n                                        firstPlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPlayed\n                                    \n                                \n                                \n                                    \n                                        lastPlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTime\n                                    \n                                \n                                \n                                    \n                                        totalTime:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LibraryEntry {\n  game: string;\n  totalTime: string;\n  firstPlayed: number;\n  lastPlayed: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibraryModule.html":{"url":"modules/LibraryModule.html","title":"module - LibraryModule","body":"\n                   \n\n\n\n\n  Modules\n  LibraryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_declarations\n\n\n\ncluster_LibraryModule_imports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nHeaderComponent->LibraryModule\n\n\n\n\n\nLibraryComponent\n\nLibraryComponent\n\nLibraryModule -->\n\nLibraryComponent->LibraryModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLibraryModule -->\n\nSharedModule->LibraryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/library/library.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HeaderComponent\n                            \n                            \n                                LibraryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { LibraryComponent } from './library.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    SharedModule\n  ],\n  declarations: [\n    LibraryComponent,\n    HeaderComponent\n  ]\n})\nexport class LibraryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryItems.html":{"url":"classes/LoadHistoryItems.html","title":"class - LoadHistoryItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_HISTORY_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryItemsSucceeded.html":{"url":"classes/LoadHistoryItemsSucceeded.html","title":"class - LoadHistoryItemsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryItemsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: HistoryEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    HistoryEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     HistoryEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_HISTORY_ITEMS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadItems.html":{"url":"classes/LoadItems.html","title":"class - LoadItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemIds\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadMoreComponent.html":{"url":"components/LoadMoreComponent.html","title":"component - LoadMoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadMoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/load-more/load-more.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-load-more\n            \n\n            \n                styleUrls\n                load-more.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./load-more.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AMOUNT_TO_LOAD\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadMoreEntries\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/load-more/load-more.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadMoreEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadMoreEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AMOUNT_TO_LOAD\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AMOUNT_TO_LOAD:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/display.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-tracker-load-more',\n  templateUrl: './load-more.component.html',\n  styleUrls: ['./load-more.component.scss']\n})\nexport class LoadMoreComponent implements OnInit {\n\n  AMOUNT_TO_LOAD = 4;\n  constructor(private store: Store) { }\n\n  loadMoreEntries() {\n    this.store.dispatch(new actions.IncrementDaysToShow(this.AMOUNT_TO_LOAD));\n  }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Load More\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Load More'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadMoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadOptions.html":{"url":"classes/LoadOptions.html","title":"class - LoadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/platforms.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/platforms.actions.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOAD_OPTIONS = '[Platforms] Load Options';\nexport class LoadOptions implements Action {\n  readonly type = LOAD_OPTIONS;\n  constructor() { }\n}\n\nexport const LOAD_OPTIONS_SUCCEEDED = '[Platforms] Load Options Succeeded';\nexport class LoadOptionsSucceeded implements Action {\n  readonly type = LOAD_OPTIONS_SUCCEEDED;\n  constructor(public platforms: string[]) { }\n}\n\nexport type All = LoadOptions |\n  LoadOptionsSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadOptionsSucceeded.html":{"url":"classes/LoadOptionsSucceeded.html","title":"class - LoadOptionsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadOptionsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/platforms.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platforms\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platforms: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/platforms.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platforms\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platforms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platforms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_OPTIONS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOAD_OPTIONS = '[Platforms] Load Options';\nexport class LoadOptions implements Action {\n  readonly type = LOAD_OPTIONS;\n  constructor() { }\n}\n\nexport const LOAD_OPTIONS_SUCCEEDED = '[Platforms] Load Options Succeeded';\nexport class LoadOptionsSucceeded implements Action {\n  readonly type = LOAD_OPTIONS_SUCCEEDED;\n  constructor(public platforms: string[]) { }\n}\n\nexport type All = LoadOptions |\n  LoadOptionsSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfile.html":{"url":"classes/LoadProfile.html","title":"class - LoadProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROFILE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfileSucceeded.html":{"url":"classes/LoadProfileSucceeded.html","title":"class - LoadProfileSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfileSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profile: Profile)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profile\n                                                  \n                                                        \n                                                                    Profile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profile:     Profile\n\n                    \n                \n                    \n                        \n                            Type :     Profile\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROFILE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProgressItems.html":{"url":"classes/LoadProgressItems.html","title":"class - LoadProgressItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProgressItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROGRESS_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProgressItemsSucceeded.html":{"url":"classes/LoadProgressItemsSucceeded.html","title":"class - LoadProgressItemsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProgressItemsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: ProgressEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    ProgressEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     ProgressEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROGRESS_ITEMS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadTimerInfo.html":{"url":"classes/LoadTimerInfo.html","title":"class - LoadTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LockedHistoryEntryComponent.html":{"url":"components/LockedHistoryEntryComponent.html","title":"component - LockedHistoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LockedHistoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-locked-history-entry\n            \n\n            \n                styleUrls\n                locked-history-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./locked-history-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                quickStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    HistoryListItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nquickStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    lock: faLock,\n    quickStart: faPlay\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faLock, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as timerActions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryListItem, TimerInfo } from '../../../../shared/models';\n\n@Component({\n  selector: 'app-tracker-locked-history-entry',\n  templateUrl: './locked-history-entry.component.html',\n  styleUrls: ['./locked-history-entry.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LockedHistoryEntryComponent implements OnInit {\n\n  @Input() item: HistoryListItem;\n  userId = '';\n  icons = {\n    lock: faLock,\n    quickStart: faPlay\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  quickStart() {\n    const timerInfo: TimerInfo = {\n      game: this.item.game,\n      platform: this.item.platform,\n      startTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new timerActions.SetTimerInfo(timerInfo));\n    this.timerService.setTimer(this.userId, timerInfo);\n  }\n}\n\n    \n\n    \n        \n  {{ item.game }}\n  {{ item.platform }}\n  \n    {{ item.startTime | date:'shortTime' }} - {{ item.endTime | date:'shortTime' }}\n    {{ item.startTime | elapsedTime:item.endTime }}\n  \n  \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ item.game }}  {{ item.platform }}      {{ item.startTime | date:\\'shortTime\\' }} - {{ item.endTime | date:\\'shortTime\\' }}    {{ item.startTime | elapsedTime:item.endTime }}                            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LockedHistoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn$\n                            \n                            \n                                message$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin\n                            \n                            \n                                facebookLogin\n                            \n                            \n                                googleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                twitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailLogin(event: EmailAuthEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    EmailAuthEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingIn$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingIn$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport authComponentSelectors, { State } from '../../reducers/root.reducer';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loggingIn$: Observable;\n  message$: Observable;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.store.dispatch(new userActions.GetUser());\n    this.loggingIn$ = this.store.select(authComponentSelectors.loggingIn);\n    this.message$ = this.store.select(authComponentSelectors.validationMessage);\n  }\n\n  googleLogin() {\n    this.store.dispatch(new userActions.GoogleLogin());\n  }\n\n  facebookLogin() {\n    this.store.dispatch(new userActions.FacebookLogin());\n  }\n\n  twitterLogin() {\n    this.store.dispatch(new userActions.TwitterLogin());\n  }\n\n  emailLogin(event: EmailAuthEvent) {\n    this.store.dispatch(new userActions.EmailLogin(event.email, event.password));\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot your password?\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot your password?  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOGOUT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkComplete.html":{"url":"classes/MarkComplete.html","title":"class - MarkComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: MarkCompletePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MarkCompletePayload\n\n                    \n                \n                    \n                        \n                            Type :     MarkCompletePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : MARK_COMPLETE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompleteEntity.html":{"url":"interfaces/MarkCompleteEntity.html","title":"interface - MarkCompleteEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompleteEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/mark-complete.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        showExtra\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExtra\n                                    \n                                \n                                \n                                    \n                                        showExtra:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/mark-complete.actions';\n\nexport interface MarkCompleteEntity {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\nexport interface State extends EntityState { }\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState();\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_SHOW_EXTRA: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          showExtra: action.showExtra\n        }\n      }, state);\n    }\n    case actions.SET_ENDTIME: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          endTime: action.endTime\n        }\n      }, state);\n    }\n    case actions.REMOVE: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.ADD_NEW_ITEM: {\n      return adapter.addOne(getMarkCompleteEntity(action.itemId), state);\n    }\n    case actions.LOAD_ITEMS: {\n      const items = action.itemIds.map(itemId => getMarkCompleteEntity(itemId));\n      return adapter.addAll(items, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getMarkCompleteEntity = (itemId: string): MarkCompleteEntity => {\n  return {\n    id: itemId,\n    showExtra: false,\n    endTime: 0\n  };\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompleteItem.html":{"url":"interfaces/MarkCompleteItem.html","title":"interface - MarkCompleteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompleteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/mark-complete.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        showExtra\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExtra\n                                    \n                                \n                                \n                                    \n                                        showExtra:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkCompleteItem {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompletePayload.html":{"url":"interfaces/MarkCompletePayload.html","title":"interface - MarkCompletePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompletePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkCompleteSucceeded.html":{"url":"classes/MarkCompleteSucceeded.html","title":"class - MarkCompleteSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkCompleteSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MarkCompletePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MarkCompletePayload\n\n                    \n                \n                    \n                        \n                            Type :     MarkCompletePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : MARK_COMPLETE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav/nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerRoute\n                            \n                            \n                                hideNavContents\n                            \n                            \n                                icons\n                            \n                            \n                                profileRoute\n                            \n                            \n                                routes\n                            \n                            \n                                trackerRoute\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trackerCaption\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/nav/nav.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trackerCaption\n                    \n                    \n                        \n                            Default value : 'Tracker'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bannerRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bannerRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: 'Track My Playtime',\n    router: ['app'],\n    trackingCategory: 'navBanner'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideNavContents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideNavContents:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    logout: faSignOutAlt,\n    menu: faBars,\n    close: faTimes\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: '',\n    router: ['app/profile'],\n    trackingCategory: 'navProfile'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     RouteEntry[]\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    caption: 'Dashboard',\n    router: ['app/dashboard'],\n    exact: true,\n    icon: faChartBar,\n    trackingCategory: 'navDashboard'\n  },\n  {\n    caption: 'Library',\n    router: ['app/library'],\n    exact: true,\n    icon: faList,\n    trackingCategory: 'navLibrary'\n  },\n  {\n    caption: 'Completion',\n    router: ['app/completion'],\n    exact: true,\n    icon: faClipboardList,\n    trackingCategory: 'navCompletion'\n  }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackerRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackerRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: 'Tracker',\n    router: ['app/tracker'],\n    exact: true,\n    icon: faClock,\n    trackingCategory: 'navTracker'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     UserInfo\n\n                    \n                \n                    \n                        \n                            Type :     UserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport {\n    faBars, faChartBar, faClipboardList, faList, faSignOutAlt, faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { UserService } from '../../features/auth/services/user.service';\n\nimport { UserInfo } from '../../features/auth/models';\nimport { RouteEntry } from '../../models';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavComponent implements OnInit {\n\n  @Input() trackerCaption = 'Tracker';\n  trackerRoute: RouteEntry = {\n    caption: 'Tracker',\n    router: ['app/tracker'],\n    exact: true,\n    icon: faClock,\n    trackingCategory: 'navTracker'\n  };\n  bannerRoute: RouteEntry = {\n    caption: 'Track My Playtime',\n    router: ['app'],\n    trackingCategory: 'navBanner'\n  };\n  profileRoute: RouteEntry = {\n    caption: '',\n    router: ['app/profile'],\n    trackingCategory: 'navProfile'\n  };\n  routes: RouteEntry[] = [{\n    caption: 'Dashboard',\n    router: ['app/dashboard'],\n    exact: true,\n    icon: faChartBar,\n    trackingCategory: 'navDashboard'\n  },\n  {\n    caption: 'Library',\n    router: ['app/library'],\n    exact: true,\n    icon: faList,\n    trackingCategory: 'navLibrary'\n  },\n  {\n    caption: 'Completion',\n    router: ['app/completion'],\n    exact: true,\n    icon: faClipboardList,\n    trackingCategory: 'navCompletion'\n  }\n  ];\n  hideNavContents = true;\n  userInfo: UserInfo;\n  icons = {\n    logout: faSignOutAlt,\n    menu: faBars,\n    close: faTimes\n  };\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n  toggleNav() {\n    this.hideNavContents = !this.hideNavContents;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      \n        {{ bannerRoute.caption }}\n        \n        \n      \n    \n\n    \n      \n        \n\n          \n            \n              \n            \n            {{ trackerRoute.caption }}\n            {{ trackerCaption }}\n          \n\n        \n        \n\n          \n            \n              \n            \n            {{ route.caption }}\n          \n\n        \n      \n    \n  \n\n  \n    \n      \n        \n        {{ userInfo.displayName }}\n      \n    \n\n    \n      Logout\n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ bannerRoute.caption }}                                                                                                        {{ trackerRoute.caption }}            {{ trackerCaption }}                                                                                      {{ route.caption }}                                                          {{ userInfo.displayName }}                    Logout                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgSelectValue.html":{"url":"interfaces/NgSelectValue.html","title":"interface - NgSelectValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgSelectValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotAuthenticated.html":{"url":"classes/NotAuthenticated.html","title":"class - NotAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NOT_AUTHENTICATED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PieChartConfig.html":{"url":"interfaces/PieChartConfig.html","title":"interface - PieChartConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PieChartConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GraphConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doughnut\n                                \n                                \n                                        explodeSlices\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doughnut\n                                    \n                                \n                                \n                                    \n                                        doughnut:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explodeSlices\n                                    \n                                \n                                \n                                    \n                                        explodeSlices:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformsEffects.html":{"url":"injectables/PlatformsEffects.html","title":"injectable - PlatformsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/platforms.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadOptions$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, platformsService: PlatformsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/platforms.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformsService\n                                                  \n                                                        \n                                                                    PlatformsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOptions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadOptions$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(platformsActions.LOAD_OPTIONS)\n      .pipe(\n        switchMap(() => this.platformsService.getPlatformsOptions()\n          .pipe(\n            map(data => new platformsActions.LoadOptionsSucceeded(data)),\n            catchError(err => of(new appActions.Error(platformsActions.LOAD_OPTIONS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/platforms.effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { PlatformsService } from '../services/platforms.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as platformsActions from '../../../shared/actions/platforms.actions';\n\n@Injectable()\nexport class PlatformsEffects {\n\n  constructor(private actions$: Actions, private platformsService: PlatformsService) { }\n\n  @Effect() loadOptions$ =\n    this.actions$\n      .ofType(platformsActions.LOAD_OPTIONS)\n      .pipe(\n        switchMap(() => this.platformsService.getPlatformsOptions()\n          .pipe(\n            map(data => new platformsActions.LoadOptionsSucceeded(data)),\n            catchError(err => of(new appActions.Error(platformsActions.LOAD_OPTIONS, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformsService.html":{"url":"injectables/PlatformsService.html","title":"injectable - PlatformsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/platforms.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                platformsCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatformsOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/platforms.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatformsOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatformsOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/platforms.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            platformsCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformsCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/platforms.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PlatformsService {\n\n  private platformsCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.platformsCollection = this.afs.collection('platforms');\n  }\n\n  getPlatformsOptions(): Observable {\n    const platformsItems = this.platformsCollection.valueChanges().pipe(first());\n    return platformsItems.pipe(map(items =>\n      items.sort((a, b) => a.index - b.index)\n        .map(item => item.option)));\n  }\n}\n\nexport interface FirestorePlatformsItem {\n  index: number;\n  option: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayingDisplayData.html":{"url":"interfaces/PlayingDisplayData.html","title":"interface - PlayingDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlayingDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/display-data.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endDates\n                                \n                                \n                                        item\n                                \n                                \n                                        markComplete\n                                \n                                \n                                        startEntryData\n                                \n                                \n                                        timePlayed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endDates\n                                    \n                                \n                                \n                                    \n                                        endDates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     ProgressItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProgressItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markComplete\n                                    \n                                \n                                \n                                    \n                                        markComplete:     MarkCompleteItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MarkCompleteItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryData\n                                    \n                                \n                                \n                                    \n                                        startEntryData:     HistoryListItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HistoryListItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timePlayed\n                                    \n                                \n                                \n                                    \n                                        timePlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompletedItem, HistoryListItem, ProgressItem } from '../../../shared/models';\n\nimport { MarkCompleteItem } from './';\n\nexport interface PlayingDisplayData {\n  item: ProgressItem;\n  startEntryData: HistoryListItem;\n  timePlayed: number;\n  endDates: number[];\n  markComplete: MarkCompleteItem;\n}\n\nexport interface CompletedDisplayData {\n  item: ProgressItem;\n  completedItem: CompletedItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayingItemComponent.html":{"url":"components/PlayingItemComponent.html","title":"component - PlayingItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlayingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/playing-item/playing-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-playing-item\n            \n\n            \n                styleUrls\n                playing-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playing-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markComplete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                setEndTime\n                            \n                            \n                                toggleShowExtra\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayData\n                            \n                            \n                                gameGroupings\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayData\n                    \n                    \n                            \n                            Type :    PlayingDisplayData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gameGroupings\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkComplete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEndTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEndTime(endTimeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endTimeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShowExtra\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShowExtra()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    complete: faCheck,\n    close: faTimes,\n    remove: faTrash\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faCheck, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as appActions from '../../../../actions/app.actions';\nimport * as progressActions from '../../../../shared/actions/progress.actions';\nimport * as markCompleteActions from '../../actions/mark-complete.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../../../shared/models';\nimport { PlayingDisplayData } from '../../models';\n\nimport { getEndItem } from '../../utils/playing.utils';\n\n@Component({\n  selector: 'app-completion-playing-item',\n  templateUrl: './playing-item.component.html',\n  styleUrls: ['./playing-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayingItemComponent implements OnInit {\n\n  @Input() displayData: PlayingDisplayData;\n  @Input() gameGroupings: HistoryGrouping[] = [];\n  userId = '';\n  icons = {\n    complete: faCheck,\n    close: faTimes,\n    remove: faTrash\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  toggleShowExtra() {\n    this.store.dispatch(new markCompleteActions.SetShowExtra(this.displayData.item.id, !this.displayData.markComplete.showExtra));\n  }\n\n  remove() {\n    this.store.dispatch(new progressActions.RemoveProgressItem(this.userId, this.displayData.item.id));\n  }\n\n  setEndTime(endTimeEl: HTMLSelectElement) {\n    const endTime = Number.parseInt(endTimeEl.value);\n    this.store.dispatch(new markCompleteActions.SetEndTime(this.displayData.item.id, endTime));\n  }\n\n  markComplete() {\n    const endItem = getEndItem(this.gameGroupings, this.displayData.startEntryData, this.displayData.markComplete.endTime);\n    if (endItem) {\n      this.store.dispatch(new progressActions.MarkComplete(this.userId, {\n        itemId: this.displayData.item.id,\n        endEntryId: endItem.id\n      }));\n    } else {\n      this.store.dispatch(new appActions.Error(progressActions.MARK_COMPLETE, 'No matching history item found.'));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ displayData.startEntryData.game }}\n        ({{ displayData.startEntryData.platform }})\n      \n      \n        Playtime: {{ displayData.timePlayed | time }}\n        Start: {{ displayData.startEntryData.startTime | date:'M/d/y - hh:mm a' }}\n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        End Time\n        {{ option | date:'M/d/y hh:mm a' }}\n      \n    \n    \n      Mark Completed\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ displayData.startEntryData.game }}        ({{ displayData.startEntryData.platform }})                    Playtime: {{ displayData.timePlayed | time }}        Start: {{ displayData.startEntryData.startTime | date:\\'M/d/y - hh:mm a\\' }}                                                                                                    End Time        {{ option | date:\\'M/d/y hh:mm a\\' }}                    Mark Completed      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PluralizePipe.html":{"url":"pipes/PluralizePipe.html","title":"pipe - PluralizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PluralizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/pluralize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pluralize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, singlularWord: string, pluralWord: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/pluralize.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        singlularWord\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pluralWord\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'pluralize' })\nexport class PluralizePipe implements PipeTransform {\n  transform(value: number, singlularWord: string, pluralWord: string): string {\n    if (value === 1) {\n      return singlularWord;\n    }\n    return pluralWord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/models/profile.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editName\n                            \n                            \n                                icons\n                            \n                            \n                                message\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendResetPasswordLink\n                            \n                            \n                                setEditName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/profile.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendResetPasswordLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendResetPasswordLink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditName(editName: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editName\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editName:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    edit: faEdit\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     UserInfo\n\n                    \n                \n                    \n                        \n                            Type :     UserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../auth/services/user.service';\n\nimport * as userActions from '../auth/actions/user.actions';\n\nimport { State as AuthState } from '../auth/reducers/root.reducer';\n\nimport { UserInfo } from '../auth/models';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  userInfo: UserInfo;\n  message = '';\n  editName = false;\n  icons = {\n    edit: faEdit\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  sendResetPasswordLink() {\n    this.store.dispatch(new userActions.ResetPassword(this.userInfo.email));\n    this.message = `A password reset email has been sent to ${this.userInfo.email}`;\n  }\n\n  setEditName(editName: boolean) {\n    this.editName = editName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        About\n\n        \n          \n            Display Name: {{ userInfo.displayName }}\n            \n              \n            \n          \n\n          \n        \n\n        Email: {{ userInfo.email }}\n      \n    \n\n    \n      Account\n\n      Reset Password\n      {{ message }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          About                              Display Name: {{ userInfo.displayName }}                                                                          Email: {{ userInfo.email }}                    Account      Reset Password      {{ message }}      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileEffects.html":{"url":"injectables/ProfileEffects.html","title":"injectable - ProfileEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/effects/profile.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadProfile$\n                            \n                            \n                                setDisplayName$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/effects/profile.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProfile$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadProfile$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(profileActions.LOAD_PROFILE)\n      .pipe(\n        map(action => action as profileActions.LoadProfile),\n        switchMap(action => this.profileService.getProfile(action.userId)\n          .pipe(\n            map(data => new profileActions.LoadProfileSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.LOAD_PROFILE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/effects/profile.effects.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setDisplayName$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(profileActions.SET_PROFILE_DISPLAYNAME)\n      .pipe(\n        map(action => action as profileActions.SetProfileDisplayName),\n        switchMap(action => this.profileService.setDisplayName(action.userId, action.displayName)\n          .pipe(\n            map(data => new profileActions.SetProfileDisplayNameSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.SET_PROFILE_DISPLAYNAME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/effects/profile.effects.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { ProfileService } from '../services/profile.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as profileActions from '../actions/profile.actions';\n\n@Injectable()\nexport class ProfileEffects {\n\n  constructor(private actions$: Actions, private profileService: ProfileService) { }\n\n  @Effect() loadProfile$ =\n    this.actions$\n      .ofType(profileActions.LOAD_PROFILE)\n      .pipe(\n        map(action => action as profileActions.LoadProfile),\n        switchMap(action => this.profileService.getProfile(action.userId)\n          .pipe(\n            map(data => new profileActions.LoadProfileSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.LOAD_PROFILE, err.message))))));\n\n  @Effect() setDisplayName$ =\n    this.actions$\n      .ofType(profileActions.SET_PROFILE_DISPLAYNAME)\n      .pipe(\n        map(action => action as profileActions.SetProfileDisplayName),\n        switchMap(action => this.profileService.setDisplayName(action.userId, action.displayName)\n          .pipe(\n            map(data => new profileActions.SetProfileDisplayNameSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.SET_PROFILE_DISPLAYNAME, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nEditDisplayNameComponent\n\nEditDisplayNameComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nEditDisplayNameComponent->ProfileModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditDisplayNameComponent\n                            \n                            \n                                ProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport {\n    EditDisplayNameComponent\n} from './components/edit-display-name/edit-display-name.component';\nimport { ProfileComponent } from './profile.component';\n\nimport { ProfileEffects } from './effects/profile.effects';\n\nimport { ProfileService } from './services/profile.service';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    StoreModule.forFeature('profile', reducers),\n    EffectsModule.forFeature([ProfileEffects]),\n  ],\n  declarations: [\n    ProfileComponent,\n    EditDisplayNameComponent\n  ],\n  providers: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                profileCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                setDisplayName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/services/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetProfile(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisplayName(userId: string, displayName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        displayName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            profileCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Profile } from '../models';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.profileCollection = this.afs.collection('profile');\n  }\n\n  getProfile(userId: string): Observable {\n    const profileDoc = this.profileCollection.doc(userId).valueChanges().pipe(first());\n    return profileDoc.pipe(map(profile => {\n      ...profile\n    }));\n  }\n\n  setDisplayName(userId: string, displayName: string): Observable {\n    this.profileCollection.doc(userId).set({ displayName }, { merge: true });\n    return of(displayName);\n  }\n}\n\nexport interface FirestoreProfileItem {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     fromProfile.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromProfile.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromProfile from './profile.reducer';\n\nimport { Profile } from '../models';\n\nexport interface ProfileState {\n  info: fromProfile.State;\n}\n\nexport interface State {\n  profile: ProfileState;\n}\n\nexport const reducers: ActionReducerMap = {\n  info: fromProfile.reducer\n};\n\nexport const _selectProfileState = createFeatureSelector('profile');\nexport const _selectInfo = createSelector(_selectProfileState, state => state.info as Profile);\n\nconst profileSelectors = {\n  info: _selectInfo\n};\n\nexport default profileSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressCollection.html":{"url":"interfaces/ProgressCollection.html","title":"interface - ProgressCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     FirestoreProgressItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirestoreProgressItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressEffects.html":{"url":"injectables/ProgressEffects.html","title":"injectable - ProgressEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProgressEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/effects/progress.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadProgressItems$\n                            \n                            \n                                markCompleted$\n                            \n                            \n                                removeProgressItem$\n                            \n                            \n                                saveAddPlayingSucceeded$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, progressService: ProgressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/effects/progress.effects.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                    ProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProgressItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadProgressItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.LOAD_PROGRESS_ITEMS)\n      .pipe(\n        map(action => action as progressActions.LoadProgressItems),\n        switchMap(action => this.progressService.getProgressList(action.userId)\n          .pipe(\n            mergeMap(entities => [\n              new progressActions.LoadProgressItemsSucceeded(entities),\n              new markCompleteActions.LoadItems(entities.filter(entity => entity.endEntryId === '').map(entity => entity.id))\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.LOAD_PROGRESS_ITEMS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markCompleted$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markCompleted$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.MARK_COMPLETE)\n      .pipe(\n        map(action => action as progressActions.MarkComplete),\n        switchMap(action => this.progressService.markCompleted(action.userId, action.payload)\n          .pipe(\n            mergeMap(data => [\n              new progressActions.MarkCompleteSucceeded(data),\n              new markCompleteActions.Remove(data.itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.MARK_COMPLETE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeProgressItem$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeProgressItem$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.REMOVE_PROGRESS_ITEM)\n      .pipe(\n        map(action => action as progressActions.RemoveProgressItem),\n        switchMap(action => this.progressService.remove(action.userId, action.itemId)\n          .pipe(\n            mergeMap(itemId => [\n              new progressActions.RemoveProgressItemSucceeded(itemId),\n              new markCompleteActions.Remove(itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.REMOVE_PROGRESS_ITEM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAddPlayingSucceeded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveAddPlayingSucceeded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(addPlayingActions.SAVE_SUCCEEDED)\n      .pipe(\n        map(action => action as addPlayingActions.SaveSucceeded),\n        map(action => action.item),\n        mergeMap(item => [\n          new progressActions.AddNewProgressItem(item),\n          new markCompleteActions.AddNewItem(item.id)\n        ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProgressService } from '../services/progress.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as progressActions from '../../../shared/actions/progress.actions';\nimport * as addPlayingActions from '../actions/add-playing.actions';\nimport * as markCompleteActions from '../actions/mark-complete.actions';\n\n@Injectable()\nexport class ProgressEffects {\n\n  constructor(private actions$: Actions, private progressService: ProgressService) { }\n\n  @Effect() loadProgressItems$ =\n    this.actions$\n      .ofType(progressActions.LOAD_PROGRESS_ITEMS)\n      .pipe(\n        map(action => action as progressActions.LoadProgressItems),\n        switchMap(action => this.progressService.getProgressList(action.userId)\n          .pipe(\n            mergeMap(entities => [\n              new progressActions.LoadProgressItemsSucceeded(entities),\n              new markCompleteActions.LoadItems(entities.filter(entity => entity.endEntryId === '').map(entity => entity.id))\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.LOAD_PROGRESS_ITEMS, err.message))))));\n\n  @Effect() saveAddPlayingSucceeded$ =\n    this.actions$\n      .ofType(addPlayingActions.SAVE_SUCCEEDED)\n      .pipe(\n        map(action => action as addPlayingActions.SaveSucceeded),\n        map(action => action.item),\n        mergeMap(item => [\n          new progressActions.AddNewProgressItem(item),\n          new markCompleteActions.AddNewItem(item.id)\n        ]));\n\n  @Effect() markCompleted$ =\n    this.actions$\n      .ofType(progressActions.MARK_COMPLETE)\n      .pipe(\n        map(action => action as progressActions.MarkComplete),\n        switchMap(action => this.progressService.markCompleted(action.userId, action.payload)\n          .pipe(\n            mergeMap(data => [\n              new progressActions.MarkCompleteSucceeded(data),\n              new markCompleteActions.Remove(data.itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.MARK_COMPLETE, err.message))))));\n\n  @Effect() removeProgressItem$ =\n    this.actions$\n      .ofType(progressActions.REMOVE_PROGRESS_ITEM)\n      .pipe(\n        map(action => action as progressActions.RemoveProgressItem),\n        switchMap(action => this.progressService.remove(action.userId, action.itemId)\n          .pipe(\n            mergeMap(itemId => [\n              new progressActions.RemoveProgressItemSucceeded(itemId),\n              new markCompleteActions.Remove(itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.REMOVE_PROGRESS_ITEM, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressEntity.html":{"url":"interfaces/ProgressEntity.html","title":"interface - ProgressEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/progress.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/progress.actions';\n\nexport interface ProgressEntity {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_PROGRESS_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_PROGRESS_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_PROGRESS_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_PROGRESS_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.MARK_COMPLETE_SUCCEEDED: {\n      const { itemId: id, ...changes } = action.payload;\n      return adapter.updateOne({\n        id,\n        changes\n      }, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressItem.html":{"url":"interfaces/ProgressItem.html","title":"interface - ProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressService.html":{"url":"injectables/ProgressService.html","title":"injectable - ProgressService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProgressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                progressCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewProgressItem\n                            \n                            \n                                getProgressList\n                            \n                            \n                                    Private\n                                getUserItemCollection\n                            \n                            \n                                markCompleted\n                            \n                            \n                                remove\n                            \n                            \n                                saveAddPlaying\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/services/progress.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNewProgressItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNewProgressItem(addPlaying: AddPlaying)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                        \n                                                                    AddPlaying\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FirestoreProgressItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProgressList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetProgressList(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserItemCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserItemCollection(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkCompleted(userId: string, payload: MarkCompletePayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(userId: string, itemId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAddPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveAddPlaying(addPlaying: AddPlaying)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                        \n                                                                    AddPlaying\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            progressCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn$\n                            \n                            \n                                message$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailSignUp\n                            \n                            \n                                facebookSignUp\n                            \n                            \n                                googleSignUp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                twitterSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailSignUp(event: EmailAuthEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    EmailAuthEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ntwitterSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingIn$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingIn$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport authComponentSelectors, { State } from '../../reducers/root.reducer';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  loggingIn$: Observable;\n  message$: Observable;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.loggingIn$ = this.store.select(authComponentSelectors.loggingIn);\n    this.message$ = this.store.select(authComponentSelectors.validationMessage);\n  }\n\n  googleSignUp() {\n    this.store.dispatch(new userActions.GoogleLogin());\n  }\n\n  facebookSignUp() {\n    this.store.dispatch(new userActions.FacebookLogin());\n  }\n\n  twitterSignUp() {\n    this.store.dispatch(new userActions.TwitterLogin());\n  }\n\n  emailSignUp(event: EmailAuthEvent) {\n    this.store.dispatch(new userActions.SignUp(event.email, event.password));\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Remove.html":{"url":"classes/Remove.html","title":"class - Remove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveHistoryItem.html":{"url":"classes/RemoveHistoryItem.html","title":"class - RemoveHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_HISTORY_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveHistoryItemSucceeded.html":{"url":"classes/RemoveHistoryItemSucceeded.html","title":"class - RemoveHistoryItemSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveHistoryItemSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_HISTORY_ITEM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProgressItem.html":{"url":"classes/RemoveProgressItem.html","title":"class - RemoveProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_PROGRESS_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProgressItemSucceeded.html":{"url":"classes/RemoveProgressItemSucceeded.html","title":"class - RemoveProgressItemSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProgressItemSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_PROGRESS_ITEM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:27\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassword.html":{"url":"classes/ResetPassword.html","title":"class - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_PASSWORD\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetTimer.html":{"url":"classes/ResetTimer.html","title":"class - ResetTimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetTimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_TIMER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteEntry.html":{"url":"interfaces/RouteEntry.html","title":"interface - RouteEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        caption\n                                \n                                \n                                            Optional\n                                        exact\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        router\n                                \n                                \n                                        trackingCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                    \n                                \n                                \n                                    \n                                        exact:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     any[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackingCategory\n                                    \n                                \n                                \n                                    \n                                        trackingCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport interface RouteEntry {\n  caption: string;\n  router: any[] | string;\n  exact?: boolean;\n  icon?: IconDefinition;\n  trackingCategory: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateUrl.html":{"url":"interfaces/RouterStateUrl.html","title":"interface - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        params\n                                \n                                \n                                        queryParams\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Save.html":{"url":"classes/Save.html","title":"class - Save","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Save\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPlaying\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addPlaying: AddPlaying)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                  \n                                                        \n                                                                    AddPlaying\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addPlaying:     AddPlaying\n\n                    \n                \n                    \n                        \n                            Type :     AddPlaying\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveSucceeded.html":{"url":"classes/SaveSucceeded.html","title":"class - SaveSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: ProgressEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    ProgressEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     ProgressEntity\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveTimerInfo.html":{"url":"classes/SaveTimerInfo.html","title":"class - SaveTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info: AddTimerInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     AddTimerInfo\n\n                    \n                \n                    \n                        \n                            Type :     AddTimerInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveTimerInfoSucceeded.html":{"url":"classes/SaveTimerInfoSucceeded.html","title":"class - SaveTimerInfoSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveTimerInfoSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: HistoryEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    HistoryEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     HistoryEntity\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_TIMER_INFO_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAttemptingLogin.html":{"url":"classes/SetAttemptingLogin.html","title":"class - SetAttemptingLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAttemptingLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/status.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attemptingLogin\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attemptingLogin: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/status.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attemptingLogin\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            attemptingLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attemptingLogin:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ATTEMPTING_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_ATTEMPTING_LOGIN = '[Status] Set Attempting Login';\nexport class SetAttemptingLogin implements Action {\n  readonly type = SET_ATTEMPTING_LOGIN;\n  constructor(public attemptingLogin: boolean) { }\n}\n\nexport const SET_VALIDATION_MESSAGE = '[Status] Set Validation Message';\nexport class SetValidationMessage implements Action {\n  readonly type = SET_VALIDATION_MESSAGE;\n  constructor(public validationMessage: string) { }\n}\n\nexport type All = SetAttemptingLogin | SetValidationMessage;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetEndTime.html":{"url":"classes/SetEndTime.html","title":"class - SetEndTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetEndTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endTime\n                            \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string, endTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ENDTIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGame.html":{"url":"classes/SetGame.html","title":"class - SetGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGame-1.html":{"url":"classes/SetGame-1.html","title":"class - SetGame-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLastMonth.html":{"url":"classes/SetLastMonth.html","title":"class - SetLastMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLastMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAST_MONTH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLastWeek.html":{"url":"classes/SetLastWeek.html","title":"class - SetLastWeek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLastWeek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAST_WEEK\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPlatform.html":{"url":"classes/SetPlatform.html","title":"class - SetPlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPlatform-1.html":{"url":"classes/SetPlatform-1.html","title":"class - SetPlatform-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileDisplayName.html":{"url":"classes/SetProfileDisplayName.html","title":"class - SetProfileDisplayName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileDisplayName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PROFILE_DISPLAYNAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileDisplayNameSucceeded.html":{"url":"classes/SetProfileDisplayNameSucceeded.html","title":"class - SetProfileDisplayNameSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileDisplayNameSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PROFILE_DISPLAYNAME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowExtra.html":{"url":"classes/SetShowExtra.html","title":"class - SetShowExtra","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowExtra\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Public\n                                showExtra\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string, showExtra: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        showExtra\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showExtra\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showExtra:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_EXTRA\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStartTime.html":{"url":"classes/SetStartTime.html","title":"class - SetStartTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStartTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_START_TIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStartTime-1.html":{"url":"classes/SetStartTime-1.html","title":"class - SetStartTime-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStartTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_STARTTIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetThisMonth.html":{"url":"classes/SetThisMonth.html","title":"class - SetThisMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetThisMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_THIS_MONTH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetThisWeek.html":{"url":"classes/SetThisWeek.html","title":"class - SetThisWeek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetThisWeek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_THIS_WEEK\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTimerInfo.html":{"url":"classes/SetTimerInfo.html","title":"class - SetTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info: TimerInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                    TimerInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     TimerInfo\n\n                    \n                \n                    \n                        \n                            Type :     TimerInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetValidationMessage.html":{"url":"classes/SetValidationMessage.html","title":"class - SetValidationMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetValidationMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/status.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                validationMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/status.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessage\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VALIDATION_MESSAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validationMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_ATTEMPTING_LOGIN = '[Status] Set Attempting Login';\nexport class SetAttemptingLogin implements Action {\n  readonly type = SET_ATTEMPTING_LOGIN;\n  constructor(public attemptingLogin: boolean) { }\n}\n\nexport const SET_VALIDATION_MESSAGE = '[Status] Set Validation Message';\nexport class SetValidationMessage implements Action {\n  readonly type = SET_VALIDATION_MESSAGE;\n  constructor(public validationMessage: string) { }\n}\n\nexport type All = SetAttemptingLogin | SetValidationMessage;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetVisibleTab.html":{"url":"classes/SetVisibleTab.html","title":"class - SetVisibleTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetVisibleTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/tab.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tab\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tab: TabType)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/tab.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                  \n                                                        \n                                                                    TabType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab:     TabType\n\n                    \n                \n                    \n                        \n                            Type :     TabType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/tab.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VISIBLE_TAB\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/tab.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { TabType } from '../models';\n\nexport const SET_VISIBLE_TAB = '[Tab] Set Visible Tab';\nexport class SetVisibleTab implements Action {\n    readonly type = SET_VISIBLE_TAB;\n    constructor(public tab: TabType) { }\n}\n\nexport type All = SetVisibleTab;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nElapsedTimePipe\n\nElapsedTimePipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nElapsedTimePipe->SharedModule\n\n\n\n\n\nPluralizePipe\n\nPluralizePipe\n\nSharedModule -->\n\nPluralizePipe->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nTimePipe\n\nTimePipe\n\nSharedModule -->\n\nTimePipe->SharedModule\n\n\n\n\n\nElapsedTimePipe \n\nElapsedTimePipe \n\nElapsedTimePipe  -->\n\nSharedModule->ElapsedTimePipe \n\n\n\n\n\nPluralizePipe \n\nPluralizePipe \n\nPluralizePipe  -->\n\nSharedModule->PluralizePipe \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nTimePipe \n\nTimePipe \n\nTimePipe  -->\n\nSharedModule->TimePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ElapsedTimePipe\n                            \n                            \n                                PluralizePipe\n                            \n                            \n                                SpinnerComponent\n                            \n                            \n                                TimePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ElapsedTimePipe\n                            \n                            \n                                    PluralizePipe\n                            \n                            \n                                    SpinnerComponent\n                            \n                            \n                                    TimePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { SpinnerComponent } from './components/spinner/spinner.component';\n\nimport { ElapsedTimePipe } from './pipes/elapsed-time.pipe';\nimport { PluralizePipe } from './pipes/pluralize.pipe';\nimport { TimePipe } from './pipes/time.pipe';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('shared', reducers),\n  ],\n  declarations: [\n    ElapsedTimePipe,\n    TimePipe,\n    SpinnerComponent,\n    PluralizePipe\n  ],\n  exports: [\n    ElapsedTimePipe,\n    TimePipe,\n    SpinnerComponent,\n    PluralizePipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SharedState.html":{"url":"interfaces/SharedState.html","title":"interface - SharedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SharedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        history\n                                \n                                \n                                        platforms\n                                \n                                \n                                        progress\n                                \n                                \n                                        timer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:     fromHistory.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromHistory.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                    \n                                \n                                \n                                    \n                                        platforms:     fromPlatforms.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPlatforms.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:     fromProgress.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromProgress.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timer\n                                    \n                                \n                                \n                                    \n                                        timer:     fromTimer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTimer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromHistory from './history.reducer';\nimport * as fromPlatforms from './platforms.reducer';\nimport * as fromProgress from './progress.reducer';\nimport * as fromTimer from './timer.reducer';\n\nimport { HistoryListItem, ProgressItem, TimerInfo } from '../models';\n\nimport { formatDate } from '../utils/date.utils';\nimport { getUniqueFrom } from '../utils/history-filter.utils';\nimport { getHistoryGroupingList, getHistoryListItemsMap } from '../utils/history.utils';\n\nexport interface SharedState {\n  history: fromHistory.State;\n  platforms: fromPlatforms.State;\n  progress: fromProgress.State;\n  timer: fromTimer.State;\n}\n\nexport interface State {\n  shared: SharedState;\n}\n\nexport const reducers: ActionReducerMap = {\n  history: fromHistory.reducer,\n  platforms: fromPlatforms.reducer,\n  progress: fromProgress.reducer,\n  timer: fromTimer.reducer\n};\n\nexport const _selectSharedState = createFeatureSelector('shared');\nexport const _selectHistory = createSelector(_selectSharedState, state => state.history);\nexport const _selectPlatforms = createSelector(_selectSharedState, state => state.platforms);\nexport const _selectProgress = createSelector(_selectSharedState, state => state.progress);\nexport const _selectTimer = createSelector(_selectSharedState, state => state.timer);\n\nexport const { selectAll: _selectAllProgress } = fromProgress.adapter.getSelectors(_selectProgress);\nexport const _selectPlayingProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId === '')\n    .map(entity => entity as ProgressItem));\nexport const _selectCompletedProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId !== '')\n    .map(entity => entity as ProgressItem));\n\nexport const { selectAll: _selectAllHistory } = fromHistory.adapter.getSelectors(_selectHistory);\nexport const _selectHistoryItems = createSelector(_selectAllHistory, _selectAllProgress,\n  (historyEntries, progress) => historyEntries.map(\n    historyEntry => {\n      ...historyEntry,\n      dateRange: [\n        new Date(historyEntry.startTime),\n        new Date(historyEntry.endTime),\n      ],\n      locked: progress.some(x => x.startEntryId === historyEntry.id || x.endEntryId === historyEntry.id)\n    }));\nexport const _selectSortedHistoryItems = createSelector(_selectHistoryItems, items => items.sort((a, b) => b.startTime - a.startTime));\nexport const _selectHistoryGroupingsByDate = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => formatDate(item.dateRange[0]));\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByPlatform = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.platform);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByGame = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.game);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryLoading = createSelector(_selectHistory, history => history.loading);\nexport const _selectTrackedGames = createSelector(_selectSortedHistoryItems, items => getUniqueFrom(items, item => item.game));\n\nexport const _selectPlatformsOptions = createSelector(_selectPlatforms, platforms => platforms.options);\nexport const _selectPlatformsLoaded = createSelector(_selectPlatformsOptions, platformOptions => platformOptions.length !== 0);\n\nexport const _selectTimerInfo = createSelector(_selectTimer, timer => timer as TimerInfo);\n\nexport const _selectUserDataLoaded = createSelector(_selectHistory, _selectProgress, _selectPlatformsLoaded,\n  (history, progress, platformsLoaded) => !history.loading && !progress.loading && platformsLoaded);\n\nconst sharedSelectors = {\n  historyGroupingsByDate: _selectHistoryGroupingsByDate,\n  historyGroupingsByPlatform: _selectHistoryGroupingsByPlatform,\n  historyGroupingsByGame: _selectHistoryGroupingsByGame,\n  historyLoading: _selectHistoryLoading,\n  historyTrackedGames: _selectTrackedGames,\n  platformsOptions: _selectPlatformsOptions,\n  progressPlaying: _selectPlayingProgress,\n  progressCompleted: _selectCompletedProgress,\n  timerInfo: _selectTimerInfo,\n  userDataLoaded: _selectUserDataLoaded\n};\n\nexport default sharedSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUp.html":{"url":"classes/SignUp.html","title":"class - SignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SIGNUP\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/spinner/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shared-spinner\n            \n\n            \n                styleUrls\n                spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/spinner/spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/spinner/spinner.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shared-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/error.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/app.actions';\n\nexport interface State {\n  action: string;\n  message: string;\n}\n\nconst initialState: State = {\n  action: '',\n  message: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.APP_ERROR: {\n      return {\n        ...state,\n        action: action.action,\n        message: action.message\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        router\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     fromError.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromError.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     fromRouter.RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromRouter.RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-10.html":{"url":"interfaces/State-10.html","title":"interface - State-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/add-playing.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/add-playing.actions';\n\nexport interface State {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nconst initialState: State = {\n  game: '',\n  platform: '',\n  startTime: 0\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_GAME: {\n      return {\n        ...state,\n        game: action.game,\n        platform: '',\n        startTime: 0\n      };\n    }\n    case actions.SET_PLATFORM: {\n      return {\n        ...state,\n        platform: action.platform,\n        startTime: 0\n      };\n    }\n    case actions.SET_STARTTIME: {\n      return {\n        ...state,\n        startTime: action.startTime\n      };\n    }\n    case actions.RESET: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-11.html":{"url":"interfaces/State-11.html","title":"interface - State-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/mark-complete.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/mark-complete.actions';\n\nexport interface MarkCompleteEntity {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\nexport interface State extends EntityState { }\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState();\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_SHOW_EXTRA: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          showExtra: action.showExtra\n        }\n      }, state);\n    }\n    case actions.SET_ENDTIME: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          endTime: action.endTime\n        }\n      }, state);\n    }\n    case actions.REMOVE: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.ADD_NEW_ITEM: {\n      return adapter.addOne(getMarkCompleteEntity(action.itemId), state);\n    }\n    case actions.LOAD_ITEMS: {\n      const items = action.itemIds.map(itemId => getMarkCompleteEntity(itemId));\n      return adapter.addAll(items, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getMarkCompleteEntity = (itemId: string): MarkCompleteEntity => {\n  return {\n    id: itemId,\n    showExtra: false,\n    endTime: 0\n  };\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-12.html":{"url":"interfaces/State-12.html","title":"interface - State-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        completion\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completion\n                                    \n                                \n                                \n                                    \n                                        completion:     CompletionState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompletionState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromPlaying from './add-playing.reducer';\nimport * as fromMarkComplete from './mark-complete.reducer';\nimport * as fromTab from './tab.reducer';\n\nimport { AddPlayingInfo } from '../models';\n\nexport interface CompletionState {\n  addPlaying: fromPlaying.State;\n  markComplete: fromMarkComplete.State;\n  tab: fromTab.State;\n}\n\nexport interface State {\n  completion: CompletionState;\n}\n\nexport const reducers: ActionReducerMap = {\n  addPlaying: fromPlaying.reducer,\n  markComplete: fromMarkComplete.reducer,\n  tab: fromTab.reducer\n};\n\nexport const _selectCompletionState = createFeatureSelector('completion');\nexport const _selectPlaying = createSelector(_selectCompletionState, state => state.addPlaying);\nexport const _selectMarkComplete = createSelector(_selectCompletionState, state => state.markComplete);\nexport const _selectTab = createSelector(_selectCompletionState, state => state.tab);\n\nexport const _selectAddPlayingInfo = createSelector(_selectPlaying, playing => playing as AddPlayingInfo);\n\nexport const { selectEntities: _selectMarkCompleteEntities } = fromMarkComplete.adapter.getSelectors(_selectMarkComplete);\n\nexport const _selectVisibleTab = createSelector(_selectTab, tab => tab.tab);\n\nconst completionSelectors = {\n  addPlayingInfo: _selectAddPlayingInfo,\n  markCompleteEntities: _selectMarkCompleteEntities,\n  visibleTab: _selectVisibleTab\n};\n\nexport default completionSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-13.html":{"url":"interfaces/State-13.html","title":"interface - State-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/tab.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tab\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                    \n                                \n                                \n                                    \n                                        tab:     TabType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TabType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/tab.actions';\n\nimport { TabType } from '../models';\n\nexport interface State {\n  tab: TabType;\n}\n\nconst initialState: State = {\n  tab: 'PLAYING'\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_VISIBLE_TAB: {\n      return {\n        ...state,\n        tab: action.tab\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-14.html":{"url":"interfaces/State-14.html","title":"interface - State-14","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/date-range.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endDay\n                                \n                                \n                                        startDay\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endDay\n                                    \n                                \n                                \n                                    \n                                        endDay:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDay\n                                    \n                                \n                                \n                                    \n                                        startDay:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     DateRangeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateRangeType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { endOfMonth, endOfWeek, startOfMonth, startOfWeek, subDays } from 'date-fns';\n\nimport * as actions from '../actions/date-range.actions';\n\nimport { DateRangeType } from '../models';\n\nexport interface State {\n  startDay: Date;\n  endDay: Date;\n  type: DateRangeType;\n}\n\nconst getState = (startDay: Date, endDay: Date, type: DateRangeType): State => {\n  return {\n    startDay,\n    endDay,\n    type\n  };\n};\n\nconst now = new Date();\nconst startWeek = startOfWeek(now);\nconst endWeek = endOfWeek(now);\nconst initialState: State = getState(startWeek, endWeek, 'THIS_WEEK');\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_THIS_WEEK: {\n      return initialState;\n    }\n    case actions.SET_LAST_WEEK: {\n      const startThisWeek = startOfWeek(now);\n      const endLastWeek = subDays(startThisWeek, 1);\n      const startLastWeek = startOfWeek(endLastWeek);\n      return getState(startLastWeek, endLastWeek, 'LAST_WEEK');\n    }\n    case actions.SET_THIS_MONTH: {\n      const startMonth = startOfMonth(now);\n      const endMonth = endOfMonth(now);\n      return getState(startMonth, endMonth, 'THIS_MONTH');\n    }\n    case actions.SET_LAST_MONTH: {\n      const startThisMonth = startOfMonth(now);\n      const endLastMonth = subDays(startThisMonth, 1);\n      const startLastMonth = startOfMonth(endLastMonth);\n      return getState(startLastMonth, endLastMonth, 'LAST_MONTH');\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-15.html":{"url":"interfaces/State-15.html","title":"interface - State-15","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     DashboardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DashboardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { eachDay } from 'date-fns';\n\nimport * as fromDateRange from './date-range.reducer';\n\nexport interface DashboardState {\n  dateRange: fromDateRange.State;\n}\n\nexport interface State {\n  dashboard: DashboardState;\n}\n\nexport const reducers: ActionReducerMap = {\n  dateRange: fromDateRange.reducer\n};\n\nexport const _selectDashboardFeature = createFeatureSelector('dashboard');\nexport const _selectDateRange = createSelector(_selectDashboardFeature, state => state.dateRange);\n\nexport const _selectDateList = createSelector(_selectDateRange, dateRange => {\n  return eachDay(dateRange.startDay, dateRange.endDay);\n});\nexport const _selectRangeType = createSelector(_selectDateRange, dateRange => dateRange.type);\n\nconst dashboardSelectors = {\n  dateList: _selectDateList,\n  rangeType: _selectRangeType\n};\n\nexport default dashboardSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-16.html":{"url":"interfaces/State-16.html","title":"interface - State-16","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/profile.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/profile.actions';\n\nexport interface State {\n  displayName: string;\n}\n\nconst initialState: State = {\n  displayName: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.LOAD_PROFILE_SUCCEEDED: {\n      return {\n        ...state,\n        ...action.profile\n      };\n    }\n    case actions.SET_PROFILE_DISPLAYNAME_SUCCEEDED: {\n      return {\n        ...state,\n        displayName: action.displayName\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-17.html":{"url":"interfaces/State-17.html","title":"interface - State-17","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     ProfileState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProfileState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromProfile from './profile.reducer';\n\nimport { Profile } from '../models';\n\nexport interface ProfileState {\n  info: fromProfile.State;\n}\n\nexport interface State {\n  profile: ProfileState;\n}\n\nexport const reducers: ActionReducerMap = {\n  info: fromProfile.reducer\n};\n\nexport const _selectProfileState = createFeatureSelector('profile');\nexport const _selectInfo = createSelector(_selectProfileState, state => state.info as Profile);\n\nconst profileSelectors = {\n  info: _selectInfo\n};\n\nexport default profileSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-18.html":{"url":"interfaces/State-18.html","title":"interface - State-18","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/display.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entriesToShow\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entriesToShow\n                                    \n                                \n                                \n                                    \n                                        entriesToShow:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/display.actions';\n\nexport interface State {\n  entriesToShow: number;\n}\n\nconst initialState: State = {\n  entriesToShow: 4\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.INCREMENT_DAYS_TO_SHOW: {\n      return {\n        ...state,\n        entriesToShow: state.entriesToShow + action.amount\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-19.html":{"url":"interfaces/State-19.html","title":"interface - State-19","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tracker\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tracker\n                                    \n                                \n                                \n                                    \n                                        tracker:     TrackerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TrackerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromDisplay from './display.reducer';\n\nexport interface TrackerState {\n  display: fromDisplay.State;\n}\n\nexport interface State {\n  tracker: TrackerState;\n}\n\nexport const reducers: ActionReducerMap = {\n  display: fromDisplay.reducer\n};\n\nexport const _selectTrackerState = createFeatureSelector('tracker');\nexport const _selectDisplay = createSelector(_selectTrackerState, state => state.display);\n\nexport const _selectEntriesToShow = createSelector(_selectDisplay, display => display.entriesToShow);\n\nconst trackerSelectors = {\n  entriesToShow: _selectEntriesToShow\n};\n\nexport default trackerSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/history.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/history.actions';\n\nimport { UpdatePayload } from '../models';\n\nexport interface HistoryEntity {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_HISTORY_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_HISTORY_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_HISTORY_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_HISTORY_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.UPDATE_GAME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_PLATFORM_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_ELAPSED_TIME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getUpdatedState = (payload: UpdatePayload, currentState: State): State => {\n  const { itemId: id, ...changes } = payload;\n  return adapter.updateOne({\n    id,\n    changes\n  }, currentState);\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/platforms.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/platforms.actions';\n\nexport interface State {\n  options: string[];\n}\n\nconst initialState: State = {\n  options: []\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.LOAD_OPTIONS_SUCCEEDED: {\n      return {\n        ...state,\n        options: action.platforms\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/progress.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/progress.actions';\n\nexport interface ProgressEntity {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_PROGRESS_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_PROGRESS_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_PROGRESS_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_PROGRESS_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.MARK_COMPLETE_SUCCEEDED: {\n      const { itemId: id, ...changes } = action.payload;\n      return adapter.updateOne({\n        id,\n        changes\n      }, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        shared\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        shared\n                                    \n                                \n                                \n                                    \n                                        shared:     SharedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SharedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromHistory from './history.reducer';\nimport * as fromPlatforms from './platforms.reducer';\nimport * as fromProgress from './progress.reducer';\nimport * as fromTimer from './timer.reducer';\n\nimport { HistoryListItem, ProgressItem, TimerInfo } from '../models';\n\nimport { formatDate } from '../utils/date.utils';\nimport { getUniqueFrom } from '../utils/history-filter.utils';\nimport { getHistoryGroupingList, getHistoryListItemsMap } from '../utils/history.utils';\n\nexport interface SharedState {\n  history: fromHistory.State;\n  platforms: fromPlatforms.State;\n  progress: fromProgress.State;\n  timer: fromTimer.State;\n}\n\nexport interface State {\n  shared: SharedState;\n}\n\nexport const reducers: ActionReducerMap = {\n  history: fromHistory.reducer,\n  platforms: fromPlatforms.reducer,\n  progress: fromProgress.reducer,\n  timer: fromTimer.reducer\n};\n\nexport const _selectSharedState = createFeatureSelector('shared');\nexport const _selectHistory = createSelector(_selectSharedState, state => state.history);\nexport const _selectPlatforms = createSelector(_selectSharedState, state => state.platforms);\nexport const _selectProgress = createSelector(_selectSharedState, state => state.progress);\nexport const _selectTimer = createSelector(_selectSharedState, state => state.timer);\n\nexport const { selectAll: _selectAllProgress } = fromProgress.adapter.getSelectors(_selectProgress);\nexport const _selectPlayingProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId === '')\n    .map(entity => entity as ProgressItem));\nexport const _selectCompletedProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId !== '')\n    .map(entity => entity as ProgressItem));\n\nexport const { selectAll: _selectAllHistory } = fromHistory.adapter.getSelectors(_selectHistory);\nexport const _selectHistoryItems = createSelector(_selectAllHistory, _selectAllProgress,\n  (historyEntries, progress) => historyEntries.map(\n    historyEntry => {\n      ...historyEntry,\n      dateRange: [\n        new Date(historyEntry.startTime),\n        new Date(historyEntry.endTime),\n      ],\n      locked: progress.some(x => x.startEntryId === historyEntry.id || x.endEntryId === historyEntry.id)\n    }));\nexport const _selectSortedHistoryItems = createSelector(_selectHistoryItems, items => items.sort((a, b) => b.startTime - a.startTime));\nexport const _selectHistoryGroupingsByDate = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => formatDate(item.dateRange[0]));\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByPlatform = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.platform);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByGame = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.game);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryLoading = createSelector(_selectHistory, history => history.loading);\nexport const _selectTrackedGames = createSelector(_selectSortedHistoryItems, items => getUniqueFrom(items, item => item.game));\n\nexport const _selectPlatformsOptions = createSelector(_selectPlatforms, platforms => platforms.options);\nexport const _selectPlatformsLoaded = createSelector(_selectPlatformsOptions, platformOptions => platformOptions.length !== 0);\n\nexport const _selectTimerInfo = createSelector(_selectTimer, timer => timer as TimerInfo);\n\nexport const _selectUserDataLoaded = createSelector(_selectHistory, _selectProgress, _selectPlatformsLoaded,\n  (history, progress, platformsLoaded) => !history.loading && !progress.loading && platformsLoaded);\n\nconst sharedSelectors = {\n  historyGroupingsByDate: _selectHistoryGroupingsByDate,\n  historyGroupingsByPlatform: _selectHistoryGroupingsByPlatform,\n  historyGroupingsByGame: _selectHistoryGroupingsByGame,\n  historyLoading: _selectHistoryLoading,\n  historyTrackedGames: _selectTrackedGames,\n  platformsOptions: _selectPlatformsOptions,\n  progressPlaying: _selectPlayingProgress,\n  progressCompleted: _selectCompletedProgress,\n  timerInfo: _selectTimerInfo,\n  userDataLoaded: _selectUserDataLoaded\n};\n\nexport default sharedSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-6.html":{"url":"interfaces/State-6.html","title":"interface - State-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/timer.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/timer.actions';\n\nexport interface State {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nconst initialState: State = {\n  game: '',\n  platform: '',\n  startTime: 0\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.RESET_TIMER: {\n      return initialState;\n    }\n    case actions.SET_GAME: {\n      return {\n        ...state,\n        game: action.game\n      };\n    }\n    case actions.SET_PLATFORM: {\n      return {\n        ...state,\n        platform: action.platform\n      };\n    }\n    case actions.SET_START_TIME: {\n      return {\n        ...state,\n        startTime: action.startTime\n      };\n    }\n    case actions.SET_TIMER_INFO: {\n      return {\n        ...state,\n        ...action.info\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-7.html":{"url":"interfaces/State-7.html","title":"interface - State-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromStatus from './status.reducer';\nimport * as fromUser from './user.reducer';\n\nimport { User } from '../models';\n\nexport interface AuthState {\n  user: fromUser.State;\n  status: fromStatus.State;\n}\n\nexport interface State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: fromUser.reducer,\n  status: fromStatus.reducer\n};\n\nexport const _selectAuthState = createFeatureSelector('auth');\nexport const _selectUser = createSelector(_selectAuthState, state => state.user);\nexport const _selectStatus = createSelector(_selectAuthState, state => state.status);\n\nexport const _selectUserLoggedIn = createSelector(_selectUser, user => user.uid !== '');\nexport const _selectUserData = createSelector(_selectUser, user => user as User);\n\nexport const _selectStatusLoggingIn = createSelector(_selectStatus, status => status.attemptingLogin);\nexport const _selectStatusValidationMessage = createSelector(_selectStatus, status => status.validationMessage);\n\nconst authComponentSelectors = {\n  isUserLoggedIn: _selectUserLoggedIn,\n  user: _selectUserData,\n  loggingIn: _selectStatusLoggingIn,\n  validationMessage: _selectStatusValidationMessage\n};\n\nexport default authComponentSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-8.html":{"url":"interfaces/State-8.html","title":"interface - State-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/status.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attemptingLogin\n                                \n                                \n                                        validationMessage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attemptingLogin\n                                    \n                                \n                                \n                                    \n                                        attemptingLogin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationMessage\n                                    \n                                \n                                \n                                    \n                                        validationMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/status.actions';\n\nexport interface State {\n  attemptingLogin: boolean;\n  validationMessage: string;\n}\n\nconst initialState: State = {\n  attemptingLogin: false,\n  validationMessage: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_ATTEMPTING_LOGIN: {\n      return {\n        ...state,\n        attemptingLogin: action.attemptingLogin\n      };\n    }\n    case actions.SET_VALIDATION_MESSAGE: {\n      return {\n        ...state,\n        validationMessage: action.validationMessage\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-9.html":{"url":"interfaces/State-9.html","title":"interface - State-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/user.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        providerId\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerId\n                                    \n                                \n                                \n                                    \n                                        providerId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/user.actions';\n\nexport interface State {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nconst initialState: State = {\n  uid: '',\n  displayName: '',\n  email: '',\n  photoURL: '',\n  providerId: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.AUTHENTICATED: {\n      return {\n        ...state,\n        ...action.user\n      };\n    }\n    case actions.NOT_AUTHENTICATED: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusEffects.html":{"url":"injectables/StatusEffects.html","title":"injectable - StatusEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatusEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/status.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error$\n                            \n                            \n                                login$\n                            \n                            \n                                postLogin$\n                            \n                            \n                                routeNavigate$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/status.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(appActions.APP_ERROR)\n      .pipe(\n        map(action => action as appActions.Error),\n        mergeMap(action => {\n          const validationMessage = getValidationMessage(action as Error);\n          return [\n            new statusActions.SetAttemptingLogin(false),\n            new statusActions.SetValidationMessage(validationMessage)\n          ];\n        })\n      )\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.EMAIL_LOGIN,\n        userActions.SIGNUP,\n        userActions.GOOGLE_LOGIN,\n        userActions.FACEBOOK_LOGIN,\n        userActions.TWITTER_LOGIN)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(true)\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.AUTHENTICATED, userActions.NOT_AUTHENTICATED)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(false)\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeNavigate$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeNavigate$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(fromRouter.ROUTER_NAVIGATION)\n      .pipe(mergeMap(() => [\n        new statusActions.SetValidationMessage('')\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\nimport * as fromRouter from '@ngrx/router-store';\n\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as statusActions from '../actions/status.actions';\nimport * as userActions from '../actions/user.actions';\n\nimport { Error } from '../../../models';\n\nimport { getValidationMessage } from '../utils/validation.utils';\n\n@Injectable()\nexport class StatusEffects {\n\n  constructor(private actions$: Actions) { }\n\n  @Effect() error$ =\n    this.actions$\n      .ofType(appActions.APP_ERROR)\n      .pipe(\n        map(action => action as appActions.Error),\n        mergeMap(action => {\n          const validationMessage = getValidationMessage(action as Error);\n          return [\n            new statusActions.SetAttemptingLogin(false),\n            new statusActions.SetValidationMessage(validationMessage)\n          ];\n        })\n      );\n\n  @Effect() routeNavigate$ =\n    this.actions$\n      .ofType(fromRouter.ROUTER_NAVIGATION)\n      .pipe(mergeMap(() => [\n        new statusActions.SetValidationMessage('')\n      ]));\n\n  @Effect() login$ =\n    this.actions$\n      .ofType(userActions.EMAIL_LOGIN,\n        userActions.SIGNUP,\n        userActions.GOOGLE_LOGIN,\n        userActions.FACEBOOK_LOGIN,\n        userActions.TWITTER_LOGIN)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(true)\n      ]));\n\n  @Effect() postLogin$ =\n    this.actions$\n      .ofType(userActions.AUTHENTICATED, userActions.NOT_AUTHENTICATED)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(false)\n      ]));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/tabs/tabs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-tabs\n            \n\n            \n                styleUrls\n                tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setVisibleTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                completedCount\n                            \n                            \n                                playingCount\n                            \n                            \n                                visibleTab\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/tabs/tabs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        completedCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playingCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleTab\n                    \n                    \n                            \n                            Type :    TabType\n\n                            \n                        \n                            Default value : 'PLAYING'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVisibleTab\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVisibleTab(tab: TabType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/tab.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { TabType } from '../../models';\n\n@Component({\n  selector: 'app-completion-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsComponent implements OnInit {\n\n  @Input() visibleTab: TabType = 'PLAYING';\n  @Input() playingCount = 0;\n  @Input() completedCount = 0;\n  constructor(private store: Store) { }\n\n  ngOnInit() { }\n\n  setVisibleTab(tab: TabType) {\n    this.store.dispatch(new actions.SetVisibleTab(tab));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ playingCount }} in Progress\n    \n  \n\n  \n    \n      {{ completedCount }} Completed\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ playingCount }} in Progress                  {{ completedCount }} Completed      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeDateGraphComponent.html":{"url":"components/TimeDateGraphComponent.html","title":"component - TimeDateGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeDateGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-date-graph\n            \n\n            \n                styleUrls\n                time-date-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-date-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    BarGraphConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { BarGraphConfig, GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-date-graph',\n  templateUrl: './time-date-graph.component.html',\n  styleUrls: ['./time-date-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeDateGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: BarGraphConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeDateGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeGameGraphComponent.html":{"url":"components/TimeGameGraphComponent.html","title":"component - TimeGameGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeGameGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-game-graph\n            \n\n            \n                styleUrls\n                time-game-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-game-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    BarGraphConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { BarGraphConfig, GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-game-graph',\n  templateUrl: './time-game-graph.component.html',\n  styleUrls: ['./time-game-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeGameGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: BarGraphConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeGameGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/time.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(timeInSeconds: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/time.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInSeconds\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatTime } from '../../shared/utils/date.utils';\n\n@Pipe({ name: 'time' })\nexport class TimePipe implements PipeTransform {\n\n  transform(timeInSeconds: number): string {\n    return formatTime(timeInSeconds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimePlatformGraphComponent.html":{"url":"components/TimePlatformGraphComponent.html","title":"component - TimePlatformGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimePlatformGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-platform-graph\n            \n\n            \n                styleUrls\n                time-platform-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-platform-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    PieChartConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { GraphDataItem, PieChartConfig } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-platform-graph',\n  templateUrl: './time-platform-graph.component.html',\n  styleUrls: ['./time-platform-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimePlatformGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: PieChartConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimePlatformGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/timer/timer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-timer\n            \n\n            \n                styleUrls\n                timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimer\n                            \n                            \n                                getCurrentTimeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDateTimePicker\n                            \n                            \n                                resetGame\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                            \n                                startTimer\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                elapsedTime\n                            \n                            \n                                game\n                            \n                            \n                                info\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/timer/timer.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        elapsedTime\n                    \n                    \n                        \n                            Default value : '00:00:00'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | NgSelectValue | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        info\n                    \n                    \n                            \n                            Type :    TimerInfo\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTimeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTimeDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Date\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDateTimePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDateTimePicker(el: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(startTimeEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    start: faPlayCircle,\n    stop: faStopCircle,\n    cancel: faBan\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faBan, faPlayCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as actions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { AddTimerInfo, NgSelectValue, TimerInfo } from '../../../../shared/models';\n\nimport { getValueFromNgSelect } from '../../../../shared/utils/ng-select.utils';\n\n@Component({\n  selector: 'app-tracker-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimerComponent implements OnInit {\n\n  @Input() info: TimerInfo;\n  @Input() elapsedTime = '00:00:00';\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  @Input() game: string | NgSelectValue | null = null;\n  userId = '';\n  icons = {\n    start: faPlayCircle,\n    stop: faStopCircle,\n    cancel: faBan\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  startTimer() {\n    const now = this.timerService.getNowTime();\n    this.store.dispatch(new actions.SetStartTime(now));\n    this.timerService.setTimer(this.userId, {\n      ...this.info,\n      startTime: now\n    });\n  }\n\n  stopTimer() {\n    const info = {\n      userId: this.userId,\n      game: this.info.game,\n      platform: this.info.platform,\n      startTime: this.info.startTime,\n      endTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new actions.SaveTimerInfo(info));\n    this.timerService.resetTimer(this.userId);\n  }\n\n  cancelTimer() {\n    this.store.dispatch(new actions.CancelTimer());\n    this.timerService.resetTimer(this.userId);\n  }\n\n  setGame() {\n    if (this.game) {\n      const game = getValueFromNgSelect(this.game);\n      this.store.dispatch(new actions.SetGame(game));\n      if (this.info.startTime !== 0) {\n        this.timerService.setGame(this.userId, game);\n      }\n    }\n  }\n\n  resetGame() {\n    this.store.dispatch(new actions.SetGame(''));\n    if (this.info.startTime !== 0) {\n      this.timerService.setGame(this.userId, '');\n    }\n  }\n\n  setPlatform(platformEl: HTMLSelectElement) {\n    const platform = platformEl.value;\n    this.store.dispatch(new actions.SetPlatform(platform));\n    if (this.info.startTime !== 0) {\n      this.timerService.setPlatform(this.userId, platform);\n    }\n  }\n\n  setStartTime(startTimeEl: HTMLInputElement) {\n    if (startTimeEl.value) {\n      const startTime = new Date(startTimeEl.value).getTime();\n      this.store.dispatch(new actions.SetStartTime(startTime));\n      if (this.info.startTime !== 0) {\n        this.timerService.setStartTime(this.userId, startTime);\n      }\n    }\n  }\n\n  openDateTimePicker(el: HTMLInputElement) {\n    if (this.info.startTime !== 0) {\n      el.click();\n    }\n  }\n\n  getCurrentTimeDate(): Date {\n    const now = this.timerService.getNowTime();\n    return new Date(now);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    {{ elapsedTime }}\n\n    \n      \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}            {{ elapsedTime }}                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerEffects.html":{"url":"injectables/TimerEffects.html","title":"injectable - TimerEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/timer.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimer$\n                            \n                            \n                                loadTimerInfo$\n                            \n                            \n                                saveTimerInfo$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, historyService: HistoryService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/timer.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                    HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelTimer$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.CANCEL_TIMER)\n      .pipe(map(() => new timerActions.ResetTimer()))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTimerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadTimerInfo$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.LOAD_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.LoadTimerInfo),\n        map(action => action.userId),\n        switchMap(userId => this.timerService.getTimerInfo(userId)\n          .pipe(\n            map(data => new timerActions.SetTimerInfo(data)),\n            catchError(err => of(new appActions.Error(timerActions.LOAD_TIMER_INFO, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveTimerInfo$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfo),\n        map(action => action.info),\n        switchMap(addTimerInfo => this.historyService.saveTimerInfo(addTimerInfo)\n          .pipe(\n            mergeMap(item => [\n              new timerActions.SaveTimerInfoSucceeded(item),\n              new timerActions.ResetTimer()\n            ]),\n            catchError(err => of(new appActions.Error(timerActions.SAVE_TIMER_INFO, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { HistoryService } from '../services/history.service';\nimport { TimerService } from '../services/timer.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\n\n@Injectable()\nexport class TimerEffects {\n\n  constructor(private actions$: Actions, private historyService: HistoryService, private timerService: TimerService) { }\n\n  @Effect() saveTimerInfo$ =\n    this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfo),\n        map(action => action.info),\n        switchMap(addTimerInfo => this.historyService.saveTimerInfo(addTimerInfo)\n          .pipe(\n            mergeMap(item => [\n              new timerActions.SaveTimerInfoSucceeded(item),\n              new timerActions.ResetTimer()\n            ]),\n            catchError(err => of(new appActions.Error(timerActions.SAVE_TIMER_INFO, err.message))))));\n\n  @Effect() cancelTimer$ =\n    this.actions$\n      .ofType(timerActions.CANCEL_TIMER)\n      .pipe(map(() => new timerActions.ResetTimer()));\n\n  @Effect() loadTimerInfo$ =\n    this.actions$\n      .ofType(timerActions.LOAD_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.LoadTimerInfo),\n        map(action => action.userId),\n        switchMap(userId => this.timerService.getTimerInfo(userId)\n          .pipe(\n            map(data => new timerActions.SetTimerInfo(data)),\n            catchError(err => of(new appActions.Error(timerActions.LOAD_TIMER_INFO, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimerInfo.html":{"url":"interfaces/TimerInfo.html","title":"interface - TimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/timer.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimerInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddTimerInfo {\n  userId: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/timer.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timerCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNowTime\n                            \n                            \n                                getTimerInfo\n                            \n                            \n                                resetTimer\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                            \n                                setTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/timer.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNowTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNowTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTimerInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTimerInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetTimer(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame(userId: string, game: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        game\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(userId: string, platform: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        platform\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(userId: string, startTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTimer(userId: string, info: TimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        info\n                                                        \n                                                                    TimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { TimerInfo } from '../../../shared/models';\n\n@Injectable()\nexport class TimerService {\n\n  private timerCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.timerCollection = this.afs.collection('timer');\n  }\n\n  setTimer(userId: string, info: TimerInfo) {\n    this.timerCollection.doc(userId).set({\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime\n    });\n  }\n\n  setGame(userId: string, game: string) {\n    this.timerCollection.doc(userId).set({ game }, { merge: true });\n  }\n\n  setPlatform(userId: string, platform: string) {\n    this.timerCollection.doc(userId).set({ platform }, { merge: true });\n  }\n\n  setStartTime(userId: string, startTime: number) {\n    this.timerCollection.doc(userId).set({ startTime }, { merge: true });\n  }\n\n  resetTimer(userId: string) {\n    this.timerCollection.doc(userId).set({\n      game: '',\n      platform: '',\n      startTime: 0\n    });\n  }\n\n  getTimerInfo(userId: string): Observable {\n    const timerDoc = this.timerCollection.doc(userId).valueChanges().pipe(first());\n    return timerDoc.pipe(map(timer => {\n      ...timer\n    }));\n  }\n\n  getNowTime(): number {\n    return new Date().getTime();\n  }\n}\n\nexport interface FirestoreTimerItem {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackerComponent.html":{"url":"components/TrackerComponent.html","title":"component - TrackerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrackerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/tracker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker\n            \n\n            \n                styleUrls\n                tracker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elapsedTime$\n                            \n                            \n                                game$\n                            \n                            \n                                historyGroupings$\n                            \n                            \n                                platformsOptions$\n                            \n                            \n                                showLoadMoreButton$\n                            \n                            \n                                timerInfo$\n                            \n                            \n                                trackedGames$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trackerStore: Store, sharedStore: Store, elapsedTimeService: ElapsedTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/tracker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackerStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedTimeService\n                                                  \n                                                        \n                                                                    ElapsedTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elapsedTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elapsedTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            historyGroupings$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyGroupings$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformsOptions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformsOptions$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLoadMoreButton$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showLoadMoreButton$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerInfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackedGames$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackedGames$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ElapsedTimeService } from '../../shared/services/elapsed-time.service';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport trackerSelectors, { State as TrackerState } from './reducers/root.reducer';\n\nimport { HistoryGrouping, NgSelectValue, TimerInfo } from '../../shared/models';\n\nimport { hasMoreToDisplay, takeFrom } from './utils/display.utils';\n\n@Component({\n  selector: 'app-tracker',\n  templateUrl: './tracker.component.html',\n  styleUrls: ['./tracker.component.scss']\n})\nexport class TrackerComponent implements OnInit {\n\n  timerInfo$: Observable;\n  platformsOptions$: Observable;\n  game$: Observable;\n  elapsedTime$: Observable;\n\n  historyGroupings$: Observable;\n  showLoadMoreButton$: Observable;\n\n  trackedGames$: Observable;\n  constructor(private trackerStore: Store,\n    private sharedStore: Store,\n    private elapsedTimeService: ElapsedTimeService) { }\n\n  ngOnInit() {\n    this.timerInfo$ = this.sharedStore.select(sharedSelectors.timerInfo);\n    this.game$ = this.timerInfo$.pipe(map(info => info.game ? info.game : null));\n    this.elapsedTime$ = this.elapsedTimeService.getElapsedTime('00:00:00');\n\n    const historyGroupings = this.sharedStore.select(sharedSelectors.historyGroupingsByDate);\n    const entriesToShow = this.trackerStore.select(trackerSelectors.entriesToShow);\n    const filteredGroupings = takeFrom(historyGroupings, entriesToShow);\n\n    this.historyGroupings$ = filteredGroupings;\n    this.showLoadMoreButton$ = hasMoreToDisplay(historyGroupings, filteredGroupings);\n\n    this.trackedGames$ = this.sharedStore.select(sharedSelectors.historyTrackedGames);\n    this.platformsOptions$ = this.sharedStore.select(sharedSelectors.platformsOptions);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n\n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackerModule.html":{"url":"modules/TrackerModule.html","title":"module - TrackerModule","body":"\n                   \n\n\n\n\n  Modules\n  TrackerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackerModule\n\n\n\ncluster_TrackerModule_declarations\n\n\n\ncluster_TrackerModule_imports\n\n\n\ncluster_TrackerModule_providers\n\n\n\n\nHistoryComponent\n\nHistoryComponent\n\n\n\nTrackerModule\n\nTrackerModule\n\nTrackerModule -->\n\nHistoryComponent->TrackerModule\n\n\n\n\n\nHistoryEntryComponent\n\nHistoryEntryComponent\n\nTrackerModule -->\n\nHistoryEntryComponent->TrackerModule\n\n\n\n\n\nLoadMoreComponent\n\nLoadMoreComponent\n\nTrackerModule -->\n\nLoadMoreComponent->TrackerModule\n\n\n\n\n\nLockedHistoryEntryComponent\n\nLockedHistoryEntryComponent\n\nTrackerModule -->\n\nLockedHistoryEntryComponent->TrackerModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nTrackerModule -->\n\nTimerComponent->TrackerModule\n\n\n\n\n\nTrackerComponent\n\nTrackerComponent\n\nTrackerModule -->\n\nTrackerComponent->TrackerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackerModule -->\n\nSharedModule->TrackerModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nTrackerModule -->\n\nElapsedTimeService->TrackerModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nTrackerModule -->\n\nHistoryService->TrackerModule\n\n\n\n\n\nPlatformsService\n\nPlatformsService\n\nTrackerModule -->\n\nPlatformsService->TrackerModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nTrackerModule -->\n\nTimerService->TrackerModule\n\n\n\n\n\nUserService\n\nUserService\n\nTrackerModule -->\n\nUserService->TrackerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tracker/tracker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HistoryComponent\n                            \n                            \n                                HistoryEntryComponent\n                            \n                            \n                                LoadMoreComponent\n                            \n                            \n                                LockedHistoryEntryComponent\n                            \n                            \n                                TimerComponent\n                            \n                            \n                                TrackerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ElapsedTimeService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     PlatformsService\n                            \n                            \n                                     TimerService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { HistoryEntryComponent } from './components/history-entry/history-entry.component';\nimport { HistoryComponent } from './components/history/history.component';\nimport { LoadMoreComponent } from './components/load-more/load-more.component';\nimport {\n    LockedHistoryEntryComponent\n} from './components/locked-history-entry/locked-history-entry.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { TrackerComponent } from './tracker.component';\n\nimport { HistoryEffects } from './effects/history.effects';\nimport { PlatformsEffects } from './effects/platforms.effects';\nimport { TimerEffects } from './effects/timer.effects';\n\nimport { ElapsedTimeService } from '../../shared/services/elapsed-time.service';\nimport { UserService } from '../auth/services/user.service';\nimport { HistoryService } from './services/history.service';\nimport { PlatformsService } from './services/platforms.service';\nimport { TimerService } from './services/timer.service';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    NgSelectModule,\n    FormsModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    SharedModule,\n    StoreModule.forFeature('tracker', reducers),\n    EffectsModule.forFeature([\n      TimerEffects,\n      HistoryEffects,\n      PlatformsEffects\n    ]),\n  ],\n  declarations: [\n    TrackerComponent,\n    TimerComponent,\n    HistoryComponent,\n    HistoryEntryComponent,\n    LoadMoreComponent,\n    LockedHistoryEntryComponent\n  ],\n  providers: [\n    HistoryService,\n    PlatformsService,\n    UserService,\n    TimerService,\n    ElapsedTimeService\n  ]\n})\nexport class TrackerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackerState.html":{"url":"interfaces/TrackerState.html","title":"interface - TrackerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrackerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     fromDisplay.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDisplay.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromDisplay from './display.reducer';\n\nexport interface TrackerState {\n  display: fromDisplay.State;\n}\n\nexport interface State {\n  tracker: TrackerState;\n}\n\nexport const reducers: ActionReducerMap = {\n  display: fromDisplay.reducer\n};\n\nexport const _selectTrackerState = createFeatureSelector('tracker');\nexport const _selectDisplay = createSelector(_selectTrackerState, state => state.display);\n\nexport const _selectEntriesToShow = createSelector(_selectDisplay, display => display.entriesToShow);\n\nconst trackerSelectors = {\n  entriesToShow: _selectEntriesToShow\n};\n\nexport default trackerSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwitterLogin.html":{"url":"classes/TwitterLogin.html","title":"class - TwitterLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwitterLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : TWITTER_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UUIDConfig.html":{"url":"interfaces/UUIDConfig.html","title":"interface - UUIDConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UUIDConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  firebase: FirebaseConfig;\n  uuid: UUIDConfig;\n  googleTagManager: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\ninterface UUIDConfig {\n  domain: string;\n  namespace: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElapsedTime.html":{"url":"classes/UpdateElapsedTime.html","title":"class - UpdateElapsedTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElapsedTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemTimesPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemTimesPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemTimesPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_ELAPSED_TIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElapsedTimeSucceeded.html":{"url":"classes/UpdateElapsedTimeSucceeded.html","title":"class - UpdateElapsedTimeSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElapsedTimeSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemTimesPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemTimesPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemTimesPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_ELAPSED_TIME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGame.html":{"url":"classes/UpdateGame.html","title":"class - UpdateGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemGamePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemGamePayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemGamePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameSucceeded.html":{"url":"classes/UpdateGameSucceeded.html","title":"class - UpdateGameSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemGamePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemGamePayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemGamePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_GAME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemGamePayload.html":{"url":"interfaces/UpdateHistoryItemGamePayload.html","title":"interface - UpdateHistoryItemGamePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemGamePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemPlatformPayload.html":{"url":"interfaces/UpdateHistoryItemPlatformPayload.html","title":"interface - UpdateHistoryItemPlatformPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemPlatformPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemId\n                                \n                                \n                                        platform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemTimesPayload.html":{"url":"interfaces/UpdateHistoryItemTimesPayload.html","title":"interface - UpdateHistoryItemTimesPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemTimesPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        itemId\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlatform.html":{"url":"classes/UpdatePlatform.html","title":"class - UpdatePlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemPlatformPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemPlatformPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlatformSucceeded.html":{"url":"classes/UpdatePlatformSucceeded.html","title":"class - UpdatePlatformSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlatformSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemPlatformPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemPlatformPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_PLATFORM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        providerId\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerId\n                                    \n                                \n                                \n                                    \n                                        providerId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nexport interface UserInfo {\n  displayName: string;\n  email: string;\n  imgSrc: string;\n  provider: Provider;\n}\n\nexport type Provider = '' | 'PASSWORD' | 'GOOGLE' | 'FACEBOOK' | 'TWITTER';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/user.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin$\n                            \n                            \n                                facebookLogin$\n                            \n                            \n                                getUser$\n                            \n                            \n                                googleLogin$\n                            \n                            \n                                logout$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signUp$\n                            \n                            \n                                twitterLogin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthenticatedAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/user.effects.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthenticatedAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthenticatedAction(authData: AuthUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authData\n                                                        \n                                                                    AuthUser\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     userActions.Authenticated\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.EMAIL_LOGIN)\n      .pipe(\n        map(action => action as userActions.EmailLogin),\n        switchMap(action => this.authService.signInWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.EMAIL_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        facebookLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.FACEBOOK_LOGIN)\n      .pipe(\n        map(action => action as userActions.FacebookLogin),\n        switchMap(() => this.authService.signInWithFacebook()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.FACEBOOK_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.GET_USER)\n      .pipe(\n        map(action => action as userActions.GetUser),\n        switchMap(() => this.authService.getAuthState()\n          .pipe(\n            map(authData => {\n              if (authData) {\n                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'app';\n                this.router.navigate([returnUrl]);\n                return this.getAuthenticatedAction(authData);\n              }\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.GET_USER, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.GOOGLE_LOGIN)\n      .pipe(\n        map(action => action as userActions.GoogleLogin),\n        switchMap(() => this.authService.signInWithGoogle()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.GOOGLE_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logout$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.LOGOUT)\n      .pipe(\n        map(action => action as userActions.Logout),\n        switchMap(() => this.authService.signOut()\n          .pipe(\n            map(() => {\n              this.router.navigate(['login']);\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.LOGOUT, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPassword$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.RESET_PASSWORD)\n      .pipe(\n        map(action => action as userActions.ResetPassword),\n        switchMap(action => this.authService.resetPassword(action.email)\n          .pipe(catchError(err => of(new appActions.Error(userActions.RESET_PASSWORD, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUp$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signUp$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.SIGNUP)\n      .pipe(\n        map(action => action as userActions.SignUp),\n        switchMap(action => this.authService.signUpWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.SIGNUP, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        twitterLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.TWITTER_LOGIN)\n      .pipe(\n        map(action => action as userActions.TwitterLogin),\n        switchMap(() => this.authService.signInWithTwitter()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.TWITTER_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { User as AuthUser } from '@firebase/auth-types';\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as userActions from '../actions/user.actions';\n\nimport { User } from '../models';\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  @Effect() getUser$ =\n    this.actions$\n      .ofType(userActions.GET_USER)\n      .pipe(\n        map(action => action as userActions.GetUser),\n        switchMap(() => this.authService.getAuthState()\n          .pipe(\n            map(authData => {\n              if (authData) {\n                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'app';\n                this.router.navigate([returnUrl]);\n                return this.getAuthenticatedAction(authData);\n              }\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.GET_USER, err.message))))));\n\n  @Effect() googleLogin$ =\n    this.actions$\n      .ofType(userActions.GOOGLE_LOGIN)\n      .pipe(\n        map(action => action as userActions.GoogleLogin),\n        switchMap(() => this.authService.signInWithGoogle()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.GOOGLE_LOGIN, err.message))))));\n\n  @Effect() facebookLogin$ =\n    this.actions$\n      .ofType(userActions.FACEBOOK_LOGIN)\n      .pipe(\n        map(action => action as userActions.FacebookLogin),\n        switchMap(() => this.authService.signInWithFacebook()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.FACEBOOK_LOGIN, err.message))))));\n\n  @Effect() twitterLogin$ =\n    this.actions$\n      .ofType(userActions.TWITTER_LOGIN)\n      .pipe(\n        map(action => action as userActions.TwitterLogin),\n        switchMap(() => this.authService.signInWithTwitter()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.TWITTER_LOGIN, err.message))))));\n\n  @Effect() logout$ =\n    this.actions$\n      .ofType(userActions.LOGOUT)\n      .pipe(\n        map(action => action as userActions.Logout),\n        switchMap(() => this.authService.signOut()\n          .pipe(\n            map(() => {\n              this.router.navigate(['login']);\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.LOGOUT, err.message))))));\n\n  @Effect() signUp$ =\n    this.actions$\n      .ofType(userActions.SIGNUP)\n      .pipe(\n        map(action => action as userActions.SignUp),\n        switchMap(action => this.authService.signUpWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.SIGNUP, err.message))))));\n\n  @Effect() emailLogin$ =\n    this.actions$\n      .ofType(userActions.EMAIL_LOGIN)\n      .pipe(\n        map(action => action as userActions.EmailLogin),\n        switchMap(action => this.authService.signInWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.EMAIL_LOGIN, err.message))))));\n\n  @Effect() resetPassword$ =\n    this.actions$\n      .ofType(userActions.RESET_PASSWORD)\n      .pipe(\n        map(action => action as userActions.ResetPassword),\n        switchMap(action => this.authService.resetPassword(action.email)\n          .pipe(catchError(err => of(new appActions.Error(userActions.RESET_PASSWORD, err.message))))));\n\n  private getAuthenticatedAction(authData: AuthUser): userActions.Authenticated {\n    const providerData = authData.providerData[0];\n    const user = {\n      uid: authData.uid,\n      displayName: authData.displayName,\n      email: authData.email,\n      photoURL: authData.photoURL,\n      providerId: providerData ? providerData.providerId : ''\n    };\n    return new userActions.Authenticated(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:     Provider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nexport interface UserInfo {\n  displayName: string;\n  email: string;\n  imgSrc: string;\n  provider: Provider;\n}\n\nexport type Provider = '' | 'PASSWORD' | 'GOOGLE' | 'FACEBOOK' | 'TWITTER';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserInfo\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/user.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, Observable } from 'rxjs';\n\nimport * as userActions from '../actions/user.actions';\n\nimport profileComponentSelectors, {\n    State as ProfileState\n} from '../../profile/reducers/root.reducer';\nimport authComponentSelectors, { State } from '../reducers/root.reducer';\n\nimport { Profile } from '../../profile/models';\nimport { User, UserInfo } from '../models';\n\nimport {\n    getDisplayName, getEmail, getImgSrc, getProviderFrom\n} from '../../profile/utils/userinfo.utils';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private store: Store, private profileStore: Store) { }\n\n  getUser(): Observable {\n    return this.store.select(authComponentSelectors.user);\n  }\n\n  getUserInfo(): Observable {\n    const user$ = this.getUser();\n    const profile$ = this.profileStore.select(profileComponentSelectors.info);\n\n    return combineLatest(user$, profile$, (user: User, profile: Profile) => {\n      return {\n        displayName: getDisplayName(user, profile),\n        email: getEmail(user),\n        imgSrc: getImgSrc(user),\n        provider: getProviderFrom(user.providerId)\n      };\n    });\n  }\n\n  logout(): void {\n    this.store.dispatch(new userActions.Logout());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.7\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : 6.1.7\n        \n            @angular/compiler : 6.1.7\n        \n            @angular/core : 6.1.7\n        \n            @angular/forms : 6.1.7\n        \n            @angular/http : 6.1.7\n        \n            @angular/platform-browser : 6.1.7\n        \n            @angular/platform-browser-dynamic : 6.1.7\n        \n            @angular/router : 6.1.7\n        \n            @fortawesome/angular-fontawesome : ^0.1.1\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.4\n        \n            @fortawesome/free-brands-svg-icons : ^5.3.1\n        \n            @fortawesome/free-regular-svg-icons : ^5.3.1\n        \n            @fortawesome/free-solid-svg-icons : ^5.3.1\n        \n            @ng-select/ng-select : ^2.7.1\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/entity : ^6.1.0\n        \n            @ngrx/router-store : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngrx/store-devtools : ^6.1.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @swimlane/ngx-datatable : ^13.1.0\n        \n            angularfire2 : ^5.0.0-rc.12\n        \n            angulartics2 : ^6.3.0\n        \n            core-js : ^2.5.7\n        \n            date-fns : ^1.29.0\n        \n            firebase : ^5.4.2\n        \n            insert-analytics-elements : ^0.0.4\n        \n            ng-pick-datetime : ^6.0.16\n        \n            rxjs : ^6.3.2\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearState   (src/.../clear.meta.reducer.ts)\n                        \n                        \n                            reducer   (src/.../display.reducer.ts)\n                        \n                        \n                            reducer   (src/.../history.reducer.ts)\n                        \n                        \n                            reducer   (src/.../platforms.reducer.ts)\n                        \n                        \n                            reducer   (src/.../progress.reducer.ts)\n                        \n                        \n                            reducer   (src/.../timer.reducer.ts)\n                        \n                        \n                            reducer   (src/.../status.reducer.ts)\n                        \n                        \n                            reducer   (src/.../error.reducer.ts)\n                        \n                        \n                            reducer   (src/.../add-playing.reducer.ts)\n                        \n                        \n                            reducer   (src/.../mark-complete.reducer.ts)\n                        \n                        \n                            reducer   (src/.../tab.reducer.ts)\n                        \n                        \n                            reducer   (src/.../date-range.reducer.ts)\n                        \n                        \n                            reducer   (src/.../profile.reducer.ts)\n                        \n                        \n                            reducer   (src/.../user.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/meta.reducers/clear.meta.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clearState\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearState(reducer: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/tracker/reducers/display.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/history.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/platforms.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/progress.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/timer.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/auth/reducers/status.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/reducers/error.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/add-playing.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/mark-complete.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/tab.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/dashboard/reducers/date-range.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/profile/reducers/profile.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/auth/reducers/user.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTrackMyPlaytime\n\n\n\nA time tracker app specific to video games.\nDetailed information on the application structure can be found here: https://mzrimsek.github.io/track-my-playtime/\nTechnologies\n\nAngular (via angular-cli)\nRxJS\nRedux (via NGRX)\nFirebase (via AngularFire2)\nTravisCI\nFontAwesome (via angular-fontawesome)\nGoogle Analytics (via Angulartics2)\nD3 (via ngx-charts)\nCompoDoc\n\nDevelopment\n\nStart the dev server: ng serve\nRun karma tests: ng test\nRun karma tests in headless mode: npm run test:mocha\nRun karma tests in headless mode the fun way: npm run test:nyan\n\nContributors\n\nssnjrthegr8 - Made the awesome logo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Mike Zrimsek\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompletionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompletionModule\n\n\n\ncluster_CompletionModule_declarations\n\n\n\ncluster_CompletionModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackerModule\n\n\n\ncluster_TrackerModule_declarations\n\n\n\ncluster_TrackerModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nHeaderComponent->LibraryModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompletionModule\n\nCompletionModule\n\nAppModule -->\n\nCompletionModule->AppModule\n\n\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nCompletionModule -->\n\nSharedModule->CompletionModule\n\n\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\nLibraryModule -->\n\nSharedModule->LibraryModule\n\n\n\n\n\nTrackerModule\n\nTrackerModule\n\nTrackerModule -->\n\nSharedModule->TrackerModule\n\n\n\n\n\nElapsedTimePipe \n\nElapsedTimePipe \n\nElapsedTimePipe  -->\n\nSharedModule->ElapsedTimePipe \n\n\n\n\n\nPluralizePipe \n\nPluralizePipe \n\nPluralizePipe  -->\n\nSharedModule->PluralizePipe \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nTimePipe \n\nTimePipe \n\nTimePipe  -->\n\nSharedModule->TimePipe \n\n\n\nAppModule -->\n\nTrackerModule->AppModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nAppModule -->\n\nElapsedTimeService->AppModule\n\n\n\nTrackerModule -->\n\nElapsedTimeService->TrackerModule\n\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAddPlayingComponent\n\nAddPlayingComponent\n\nCompletionModule -->\n\nAddPlayingComponent->CompletionModule\n\n\n\n\n\nCompletedItemComponent\n\nCompletedItemComponent\n\nCompletionModule -->\n\nCompletedItemComponent->CompletionModule\n\n\n\n\n\nCompletionComponent\n\nCompletionComponent\n\nCompletionModule -->\n\nCompletionComponent->CompletionModule\n\n\n\n\n\nPlayingItemComponent\n\nPlayingItemComponent\n\nCompletionModule -->\n\nPlayingItemComponent->CompletionModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nCompletionModule -->\n\nTabsComponent->CompletionModule\n\n\n\n\n\nProgressService\n\nProgressService\n\nCompletionModule -->\n\nProgressService->CompletionModule\n\n\n\n\n\nUserService\n\nUserService\n\nCompletionModule -->\n\nUserService->CompletionModule\n\n\n\nTrackerModule -->\n\nUserService->TrackerModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nGraphTooltipComponent\n\nGraphTooltipComponent\n\nDashboardModule -->\n\nGraphTooltipComponent->DashboardModule\n\n\n\n\n\nTimeDateGraphComponent\n\nTimeDateGraphComponent\n\nDashboardModule -->\n\nTimeDateGraphComponent->DashboardModule\n\n\n\n\n\nTimeGameGraphComponent\n\nTimeGameGraphComponent\n\nDashboardModule -->\n\nTimeGameGraphComponent->DashboardModule\n\n\n\n\n\nTimePlatformGraphComponent\n\nTimePlatformGraphComponent\n\nDashboardModule -->\n\nTimePlatformGraphComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nLibraryComponent\n\nLibraryComponent\n\nLibraryModule -->\n\nLibraryComponent->LibraryModule\n\n\n\n\n\nEditDisplayNameComponent\n\nEditDisplayNameComponent\n\nProfileModule -->\n\nEditDisplayNameComponent->ProfileModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nElapsedTimePipe\n\nElapsedTimePipe\n\nSharedModule -->\n\nElapsedTimePipe->SharedModule\n\n\n\n\n\nPluralizePipe\n\nPluralizePipe\n\nSharedModule -->\n\nPluralizePipe->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nTimePipe\n\nTimePipe\n\nSharedModule -->\n\nTimePipe->SharedModule\n\n\n\n\n\nHistoryComponent\n\nHistoryComponent\n\nTrackerModule -->\n\nHistoryComponent->TrackerModule\n\n\n\n\n\nHistoryEntryComponent\n\nHistoryEntryComponent\n\nTrackerModule -->\n\nHistoryEntryComponent->TrackerModule\n\n\n\n\n\nLoadMoreComponent\n\nLoadMoreComponent\n\nTrackerModule -->\n\nLoadMoreComponent->TrackerModule\n\n\n\n\n\nLockedHistoryEntryComponent\n\nLockedHistoryEntryComponent\n\nTrackerModule -->\n\nLockedHistoryEntryComponent->TrackerModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nTrackerModule -->\n\nTimerComponent->TrackerModule\n\n\n\n\n\nTrackerComponent\n\nTrackerComponent\n\nTrackerModule -->\n\nTrackerComponent->TrackerModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nTrackerModule -->\n\nHistoryService->TrackerModule\n\n\n\n\n\nPlatformsService\n\nPlatformsService\n\nTrackerModule -->\n\nPlatformsService->TrackerModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nTrackerModule -->\n\nTimerService->TrackerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    64 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    69 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            All   (src/.../app.actions.ts)\n                        \n                        \n                            All   (src/.../display.actions.ts)\n                        \n                        \n                            All   (src/.../platforms.actions.ts)\n                        \n                        \n                            All   (src/.../progress.actions.ts)\n                        \n                        \n                            All   (src/.../timer.actions.ts)\n                        \n                        \n                            All   (src/.../profile.actions.ts)\n                        \n                        \n                            All   (src/.../date-range.actions.ts)\n                        \n                        \n                            All   (src/.../tab.actions.ts)\n                        \n                        \n                            All   (src/.../mark-complete.actions.ts)\n                        \n                        \n                            All   (src/.../status.actions.ts)\n                        \n                        \n                            All   (src/.../user.actions.ts)\n                        \n                        \n                            All   (src/.../history.actions.ts)\n                        \n                        \n                            All   (src/.../add-playing.actions.ts)\n                        \n                        \n                            ColorSetName   (src/.../colorScheme.utils.ts)\n                        \n                        \n                            DateRangeType   (src/.../date-range.models.ts)\n                        \n                        \n                            GraphDataModifier   (src/.../graph-data.utils.ts)\n                        \n                        \n                            HistoryListItemKeyFunction   (src/.../history.utils.ts)\n                        \n                        \n                            HistoryListItemMap   (src/.../history.utils.ts)\n                        \n                        \n                            HistoryListItemsMap   (src/.../history.utils.ts)\n                        \n                        \n                            Provider   (src/.../user.models.ts)\n                        \n                        \n                            TabType   (src/.../tabs.models.ts)\n                        \n                        \n                            UpdatePayload   (src/.../history.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/actions/app.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     Error\n\n                    \n                \n            \n        \n\n    src/app/features/tracker/actions/display.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     IncrementDaysToShow\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/platforms.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     LoadOptions | LoadOptionsSucceeded\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/progress.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     AddNewProgressItem | LoadProgressItems | LoadProgressItemsSucceeded | RemoveProgressItem | RemoveProgressItemSucceeded | MarkComplete | MarkCompleteSucceeded\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/timer.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     ResetTimer | SetGame | SetPlatform | SetStartTime | SaveTimerInfo | SaveTimerInfoSucceeded | CancelTimer | LoadTimerInfo | SetTimerInfo\n\n                    \n                \n            \n        \n\n    src/app/features/profile/actions/profile.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     LoadProfile | LoadProfileSucceeded | SetProfileDisplayName | SetProfileDisplayNameSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/actions/date-range.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetThisWeek | SetLastWeek | SetThisMonth | SetLastMonth\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/tab.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetVisibleTab\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/mark-complete.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetShowExtra | SetEndTime | Remove | LoadItems | AddNewItem\n\n                    \n                \n            \n        \n\n    src/app/features/auth/actions/status.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetAttemptingLogin | SetValidationMessage\n\n                    \n                \n            \n        \n\n    src/app/features/auth/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     GetUser | Authenticated | NotAuthenticated | GoogleLogin | FacebookLogin | TwitterLogin | Logout | SignUp | EmailLogin | ResetPassword\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/history.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     AddNewHistoryItem | LoadHistoryItems | LoadHistoryItemsSucceeded | RemoveHistoryItem | RemoveHistoryItemSucceeded | UpdateGame | UpdateGameSucceeded | UpdatePlatform | UpdatePlatformSucceeded | UpdateElapsedTime | UpdateElapsedTimeSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/add-playing.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetGame | SetPlatform | SetStartTime | Reset | Save | SaveSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/utils/colorScheme.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorSetName\n                    \n                \n                \n                    \n                        ColorSetName:     \"vivid\" | \"natural\" | \"cool\" | \"fire\" | \"solar\" | \"air\" | \"aqua\" | \"flame\" | \"ocean\" | \"forest\" | \"horizon\" | \"neons\" | \"picnic\" | \"night\" | \"nightLights\" | \"default\"\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/models/date-range.models.ts\n    \n        \n            \n                \n                    \n                        \n                        DateRangeType\n                    \n                \n                \n                    \n                        DateRangeType:     \"THIS_WEEK\" | \"LAST_WEEK\" | \"THIS_MONTH\" | \"LAST_MONTH\"\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/utils/graph-data.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        GraphDataModifier\n                    \n                \n                \n                    \n                        GraphDataModifier:     function\n\n                    \n                \n            \n        \n\n    src/app/shared/utils/history.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        HistoryListItemKeyFunction\n                    \n                \n                \n                    \n                        HistoryListItemKeyFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HistoryListItemMap\n                    \n                \n                \n                    \n                        HistoryListItemMap:     Map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HistoryListItemsMap\n                    \n                \n                \n                    \n                        HistoryListItemsMap:     Map\n\n                    \n                \n            \n        \n\n    src/app/features/auth/models/user.models.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                \n                    \n                        Provider:     \"\" | \"PASSWORD\" | \"GOOGLE\" | \"FACEBOOK\" | \"TWITTER\"\n\n                    \n                \n            \n        \n\n    src/app/features/completion/models/tabs.models.ts\n    \n        \n            \n                \n                    \n                        \n                        TabType\n                    \n                \n                \n                    \n                        TabType:     \"PLAYING\" | \"COMPLETED\"\n\n                    \n                \n            \n        \n\n    src/app/shared/models/history.models.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdatePayload\n                    \n                \n                \n                    \n                        UpdatePayload:     UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
