var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AddNewHistoryItem.html",[0,0.013,1,2.787]],["body/classes/AddNewHistoryItem.html",[0,0.024,1,3.824,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,2.046,12,2.264,13,0.246,14,0.492,15,2.826,16,3.613,17,0.783,18,5.87,19,0.637,20,0.005,21,0.53,22,0.594,23,4.031,24,0.408,25,0.602,26,4.05,27,0.28,28,0.514,29,1.883,30,3.103,31,3.103,32,3.103,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,3.434,41,1.231,42,3.156,43,2.427,44,0.77,45,3.434,46,2.696,47,3.242,48,3.434,49,2.307,50,3.156,51,1.789,52,3.434,53,3.242,54,3.434,55,4.935,56,1.106,57,3.002,58,3.436,59,3.434,60,3.242,61,3.434,62,1.077,63,3.002,64,3.434,65,3.242,66,3.434,67,3.334,68,1.509,69,3.002,70,3.434,71,3.242,72,0.003,73,0.003]],["title/classes/AddNewItem.html",[0,0.013,74,3.391]],["body/classes/AddNewItem.html",[0,0.023,2,0.046,3,0.046,4,0.04,6,1.316,7,1.344,8,0.114,9,0.303,10,2.258,11,1.545,12,2.222,13,0.247,14,0.642,17,0.904,19,0.831,20,0.005,21,0.691,22,0.775,24,0.532,25,0.786,27,0.212,28,0.671,34,0.076,35,0.874,37,1.279,38,1.65,39,2.23,41,1.103,44,0.855,49,3.505,51,2.945,68,1.351,72,0.004,73,0.004,74,5.37,75,5.993,76,3.687,77,3.534,78,7.072,79,5.258,80,5.875,81,5.2,82,4.561,83,2.678,84,2.685,85,3.687,86,3.687,87,4.753,88,3.4,89,2.031,90,5.2,91,3.4,92,4.572,93,2.181,94,1.262,95,5.2,96,4.753]],["title/classes/AddNewProgressItem.html",[0,0.013,97,3.148]],["body/classes/AddNewProgressItem.html",[0,0.024,2,0.041,3,0.041,4,0.036,6,1.335,7,1.355,8,0.103,9,0.283,10,2.165,11,2.114,12,2.24,13,0.247,14,0.58,15,3.332,17,0.858,19,0.751,20,0.005,21,0.625,22,0.7,24,0.481,25,0.71,27,0.306,28,0.607,33,0.804,34,0.076,35,0.895,37,1.156,38,1.492,39,2.285,41,1.385,43,2.277,44,0.762,46,2.529,49,2.594,51,2.011,58,2.688,72,0.003,73,0.003,82,3.375,83,1.982,97,4.731,98,3.073,99,4.362,100,6.6,101,4.752,102,5.096,103,3.194,104,4.077,105,5.25,106,4.435,107,3.983,108,4.435,109,4.118,110,4.435,111,3.983,112,4.435,113,4.118,114,4.435,115,3.375,116,4.435,117,4.118]],["title/interfaces/AddPlaying.html",[118,0.357,119,2.645]],["body/interfaces/AddPlaying.html",[2,0.063,3,0.063,4,0.056,8,0.157,9,0.372,13,0.218,20,0.005,34,0.067,43,2.889,44,0.9,56,1.367,62,1.331,72,0.004,73,0.004,94,1.741,118,0.656,119,4.549,120,6.499,121,6.499,122,5.629,123,4.875,124,2.383]],["title/components/AddPlayingComponent.html",[125,1.195,126,1.852]],["body/components/AddPlayingComponent.html",[0,0.006,2,0.051,3,0.021,4,0.019,6,0.573,7,0.725,8,0.053,9,0.171,11,0.873,13,0.207,14,0.3,17,0.996,19,0.799,20,0.005,21,0.845,22,1.071,24,0.698,25,1.03,27,0.333,28,0.313,33,0.415,34,0.019,35,0.63,36,1.542,37,2.047,41,0.515,43,1.93,44,0.67,56,1.519,62,1.438,68,1.652,72,0.002,73,0.003,83,2.182,94,0.96,119,2.653,122,1.435,123,3.401,124,1.662,125,1.522,126,2.142,127,0.948,128,0.948,129,0.948,130,0.948,131,8.905,132,7.978,133,2.454,134,1.955,135,0.901,136,1.997,137,1.997,138,3.769,139,3.468,140,2.111,141,1.544,142,5.061,143,1.544,144,3.999,145,3.65,146,1.237,147,2.254,148,5.836,149,5.836,150,2.67,151,1.829,152,1.829,153,4.026,154,1.917,155,4.187,156,1.255,157,2.757,158,3.908,159,2.454,160,2.454,161,3.773,162,2.454,163,2.96,164,2.454,165,2.454,166,2.454,167,2.454,168,2.454,169,1.408,170,2.572,171,2.454,172,2.454,173,2.454,174,3.582,175,5.067,176,2.454,177,2.03,178,3.582,179,2.454,180,2.198,181,2.413,182,5.061,183,2.454,184,2.454,185,1.225,186,0.529,187,1.435,188,1.435,189,1.355,190,1.481,191,1.481,192,1.435,193,1.904,194,1.904,195,0.508,196,1.018,197,1.198,198,2.454,199,2.454,200,2.454,201,0.737,202,0.872,203,1.649,204,2.687,205,1.531,206,3.104,207,3.612,208,2.198,209,2.03,210,2.198,211,2.454,212,2.198,213,2.198,214,2.804,215,2.454,216,2.198,217,2.454,218,2.454,219,2.454,220,2.03,221,1.952,222,2.03,223,3.308,224,1.171,225,2.83,226,1.1,227,1.171,228,1.146,229,2.726,230,1.909,231,1.829,232,1.255,233,1.792,234,1.531,235,1.198,236,3.585,237,2.045,238,2.975,239,3.698,240,3.442,241,2.413,242,2.804,243,1.394,244,2.03,245,3.059,246,2.94,247,3.456,248,2.208,249,4.155,250,1.804,251,3.549,252,1.804,253,1.481,254,2.96,255,1.435,256,3.104,257,3.308,258,1.171,259,1.531,260,1.649,261,2.848,262,1.649,263,1.804,264,1.255,265,1.255,266,1.225,267,2.416,268,1.255,269,2.15,270,3.308,271,3.308,272,0.806,273,1.544,274,1.544,275,2.254,276,0.948,277,2.03,278,0.948,279,0.901,280,0.948,281,0.901,282,1.987,283,0.948,284,0.901,285,1.544,286,0.886,287,0.948,288,0.886,289,0.948,290,0.901,291,0.782,292,0.948,293,0.948,294,0.886,295,0.948,296,0.948,297,0.901,298,2.212,299,0.932,300,0.948,301,1.742,302,1.955,303,0.932,304,0.901,305,2.489,306,0.948,307,0.901,308,1.544,309,0.886,310,0.948,311,0.886,312,0.948,313,0.901,314,0.948,315,0.901,316,0.844,317,0.886,318,0.948,319,0.901,320,0.948,321,0.901,322,0.886,323,0.948,324,0.886,325,0.948,326,0.901,327,0.916,328,0.948,329,0.901,330,0.948,331,0.901,332,1.955,333,0.901,334,0.901,335,0.901,336,0.948,337,0.886,338,0.948]],["title/injectables/AddPlayingEffects.html",[339,1.584,340,4.175]],["body/injectables/AddPlayingEffects.html",[0,0.015,2,0.05,3,0.05,4,0.044,7,1.394,8,0.125,9,0.322,13,0.144,14,0.703,17,0.849,19,0.909,20,0.005,21,0.756,22,0.848,24,0.583,25,0.86,27,0.388,34,0.044,38,2.78,72,0.004,73,0.004,186,1.24,191,3.473,192,3.366,193,4.466,194,4.466,201,1.728,202,2.044,258,4.228,339,2.623,340,6.211,341,8.356,342,5.754,343,3.473,344,6.204,345,5.754,346,4.684,347,7.507,348,4.423,349,5.726,350,7.507,351,7.507,352,7.507,353,7.507,354,7.507,355,7.507,356,7.507,357,5.045,358,5.045,359,7.507,360,5.045,361,3.268,362,5.213,363,5.754,364,3.016,365,2.148,366,3.867,367,2.344,368,4.231,369,3.867,370,2.387,371,4.761,372,5.155]],["title/interfaces/AddPlayingInfo.html",[118,0.357,123,3.391]],["body/interfaces/AddPlayingInfo.html",[2,0.062,3,0.062,4,0.055,8,0.155,9,0.368,13,0.231,20,0.005,34,0.066,43,2.14,44,0.897,56,1.803,62,1.755,72,0.004,73,0.004,94,2.212,118,0.651,119,3.736,120,6.386,121,6.386,122,4.17,123,5.771,124,3.142]],["title/interfaces/AddTimerInfo.html",[118,0.357,373,2.581]],["body/interfaces/AddTimerInfo.html",[2,0.059,3,0.059,4,0.052,8,0.148,9,0.358,13,0.242,20,0.005,34,0.064,43,2.828,44,0.907,56,1.821,62,1.773,72,0.004,73,0.004,93,3.907,94,2.391,118,0.638,124,3.174,373,4.27,374,6.098,375,3.114]],["title/components/AppComponent.html",[125,1.195,279,1.852]],["body/components/AppComponent.html",[0,0.009,2,0.032,3,0.032,4,0.028,6,0.776,8,0.078,9,0.232,11,0.79,13,0.163,14,0.442,17,0.875,19,0.572,20,0.005,21,0.854,22,0.533,27,0.364,28,0.462,34,0.028,35,0.355,36,1.652,37,0.88,41,1.137,56,0.682,62,0.664,68,1.67,72,0.003,73,0.003,83,2.321,89,2.093,125,1.83,126,1.328,127,1.398,128,1.398,129,1.398,130,1.398,134,2.51,135,1.328,138,3.927,139,3.619,140,1.188,141,2.093,143,2.093,146,1.676,147,2.788,154,1.188,157,2.887,169,1.327,170,1.351,186,0.78,195,0.749,201,1.087,202,2.309,224,1.727,225,2.347,226,3.235,227,1.727,228,2.532,229,3.93,231,2.973,233,1.622,235,1.766,236,1.655,237,2.772,238,2.058,266,1.807,272,1.188,273,2.093,274,2.788,275,2.788,276,1.398,278,1.398,279,2.65,280,1.398,281,1.328,282,2.39,283,1.398,284,1.328,285,2.093,286,1.307,287,1.398,288,1.307,289,1.398,290,1.328,291,1.153,292,1.398,293,1.398,294,1.307,295,1.398,296,1.398,297,1.328,298,2.66,299,1.374,300,1.398,301,2.236,302,2.51,303,1.374,304,1.328,305,2.93,306,1.398,307,1.328,308,2.093,309,1.307,310,1.398,311,1.307,312,1.398,313,1.328,314,1.398,315,1.328,316,1.245,317,1.307,318,1.398,319,1.328,320,1.398,321,1.328,322,1.307,323,1.398,324,1.307,325,1.398,326,1.328,327,1.351,328,1.398,329,1.328,330,1.398,331,1.328,332,2.51,333,1.328,334,1.328,335,1.328,336,1.398,337,1.307,338,1.398,365,1.351,376,3.618,377,4.207,378,6.499,379,5.42,380,7.217,381,5.971,382,7.217,383,2.66,384,5.249,385,6.499,386,5.602,387,5.654,388,5.42,389,3.801,390,3.618,391,3.618,392,3.696,393,3.618,394,2.994,395,2.808,396,2.257,397,3.618,398,3.242,399,3.242,400,3.618,401,2.808,402,2.808,403,2.34,404,2.257,405,2.66,406,2.432,407,3.242,408,3.618,409,3.618,410,3.618,411,5.42,412,3.618,413,3.618,414,3.618,415,3.618,416,3.618,417,3.618,418,2.055,419,2.841,420,3.242,421,4.099,422,3.618,423,3.618,424,3.242,425,3.271,426,2.994,427,2.432,428,1.727,429,1.655,430,2.994,431,2.808,432,3.242]],["title/modules/AppModule.html",[433,2.133,434,3.916]],["body/modules/AppModule.html",[0,0.01,2,0.036,3,0.036,4,0.032,20,0.005,27,0.414,28,0.765,34,0.046,72,0.003,73,0.003,139,1.473,157,1.659,186,0.894,196,1.721,272,1.362,279,3.496,301,2.932,319,3.128,364,2.174,384,2.587,387,5.726,394,4.958,395,3.219,401,3.219,402,3.219,406,5.494,407,3.716,433,2.533,434,7.992,435,2.356,436,4.246,437,4.246,438,3.849,439,3.716,440,3.716,441,3.716,442,3.716,443,3.716,444,6.264,445,6.264,446,6.264,447,6.264,448,6.264,449,6.264,450,6.264,451,5.316,452,6.264,453,3.617,454,1.383,455,2.426,456,4.147,457,3.505,458,4.147,459,3.431,460,5.993,461,3.716,462,5.993,463,2.29,464,5.993,465,5.993,466,4.147,467,4.406,468,2.908,469,2.787,470,3.049,471,5.993,472,4.147,473,2.908,474,2.787,475,4.147,476,3.716,477,3.716,478,4.147,479,4.147,480,4.147,481,4.147,482,4.147,483,4.147,484,4.147,485,3.049,486,4.147,487,3.431,488,4.147,489,4.651,490,3.716,491,5.993,492,4.147,493,4.406,494,1.822,495,4.147,496,4.147,497,4.147,498,4.147,499,4.147,500,4.147,501,4.147,502,4.147]],["title/modules/AppRoutingModule.html",[433,2.133,444,3.71]],["body/modules/AppRoutingModule.html",[0,0.015,2,0.05,3,0.05,4,0.044,20,0.005,27,0.407,34,0.058,35,0.566,72,0.004,73,0.004,83,1.735,125,2.306,139,2.053,186,1.245,286,2.718,288,2.718,291,1.841,298,1.988,303,2.193,305,2.086,309,2.718,311,2.718,317,2.718,322,2.718,324,2.718,337,2.718,396,3.604,433,2.442,444,5.534,457,4.403,489,5.842,490,5.176,503,5.777,504,5.176,505,6.744,506,5.053,507,5.777,508,5.777,509,5.777,510,5.777,511,5.777,512,5.777,513,5.777,514,5.777,515,8.9,516,2.955,517,4.78,518,5.176,519,5.777,520,5.777,521,5.176,522,5.777,523,5.777,524,5.777]],["title/injectables/AuthEffects.html",[339,1.584,525,4.175]],["body/injectables/AuthEffects.html",[0,0.015,2,0.052,3,0.052,4,0.046,7,1.404,8,0.129,9,0.329,13,0.149,14,0.726,17,0.868,19,0.939,20,0.005,21,0.781,22,0.876,24,0.602,25,0.888,27,0.4,34,0.046,38,3.133,72,0.004,73,0.004,186,1.281,201,1.785,339,2.664,343,3.588,346,4.784,348,3.83,349,4.958,361,3.377,362,5.296,364,3.116,367,2.422,368,4.371,370,2.466,525,6.344,526,5.945,527,4.953,528,5.945,529,6.87,530,6.87,531,6.87,532,7.668,533,7.668,534,7.668,535,7.668,536,7.668,537,5.945,538,4.919,539,4.919,540,5.326,541,5.326,542,4.614,543,4.614,544,4.371,545,4.169,546,3.844,547,5.326,548,4.919,549,5.945]],["title/components/AuthFormComponent.html",[125,1.195,281,1.852]],["body/components/AuthFormComponent.html",[0,0.007,2,0.023,3,0.023,4,0.02,6,0.599,8,0.056,9,0.179,11,1.148,13,0.194,14,0.317,17,1.009,19,0.41,20,0.005,21,0.691,22,0.382,24,0.532,25,0.785,27,0.267,33,0.439,34,0.02,36,1.274,37,0.631,38,1.892,41,0.544,44,0.37,56,0.489,62,0.476,68,1.351,72,0.002,73,0.002,83,1.986,125,1.566,126,0.952,127,1.002,128,1.002,129,1.002,130,1.002,134,2.03,135,0.952,136,2.089,137,2.089,138,3.795,139,3.491,140,0.852,141,1.615,143,1.615,145,3.756,146,1.293,147,2.329,153,3.63,154,0.852,169,1.351,170,2.469,181,2.524,185,1.295,186,0.559,187,1.517,189,1.432,201,0.779,225,2.388,226,3.468,227,2.509,228,3.474,229,3.474,230,3.157,231,3.234,233,2.356,234,1.618,235,1.266,236,3.655,237,2.139,238,1.588,239,2.565,240,2.625,241,1.565,243,1.473,247,1.395,248,1.432,254,1.517,255,1.517,256,2.013,259,3.279,260,3.532,261,2.565,264,1.326,265,1.326,266,1.295,267,1.238,268,1.326,269,1.395,272,0.852,273,1.615,274,2.731,275,2.329,276,1.002,278,1.002,279,0.952,280,1.002,281,2.213,282,2.84,283,1.002,284,0.952,285,1.615,286,0.937,287,1.002,288,0.937,289,1.002,290,0.952,291,0.826,292,1.002,293,1.002,294,0.937,295,1.002,296,1.002,297,0.952,298,2.276,299,0.985,300,1.002,301,1.809,302,2.03,303,0.985,304,0.952,305,2.553,306,1.002,307,0.952,308,1.615,309,0.937,310,1.002,311,0.937,312,1.002,313,0.952,314,1.002,315,0.952,316,0.892,317,0.937,318,1.002,319,0.952,320,1.002,321,0.952,322,0.937,323,1.002,324,0.937,325,1.002,326,0.952,327,0.968,328,1.002,329,0.952,330,1.002,331,0.952,332,2.03,333,0.952,334,0.952,335,0.952,336,1.002,337,0.937,338,1.002,419,3.16,421,2.376,425,3.172,426,3.46,427,1.743,428,2.878,429,2.758,438,1.295,550,9.015,551,8.077,552,2.594,553,5.925,554,5.256,555,4.182,556,6.029,557,6.029,558,6.029,559,6.029,560,6.029,561,3.864,562,4.126,563,7.185,564,6.663,565,5.256,566,5.256,567,5.256,568,5.256,569,2.594,570,5.402,571,2.594,572,3.747,573,2.447,574,2.594,575,2.594,576,2.594,577,4.052,578,7.78,579,2.594,580,2.594,581,2.594,582,2.594,583,2.594,584,2.594,585,2.594,586,2.594,587,2.594,588,5.402,589,2.594,590,3.242,591,5.256,592,3.242,593,5.256,594,3.242,595,5.256,596,2.594,597,2.013,598,1.907,599,2.324,600,1.907,601,2.594,602,2.324,603,1.954,604,3.747,605,2.324,606,1.997,607,2.594,608,2.594,609,2.594,610,2.594,611,2.594,612,2.594,613,2.594,614,2.594,615,1.819,616,3.46,617,1.907,618,2.146,619,1.618,620,3.747,621,1.819,622,2.324,623,5.487,624,2.609,625,2.688,626,2.609,627,1.517,628,2.594]],["title/guards/AuthGuard.html",[489,3.916,629,4.175]],["body/guards/AuthGuard.html",[0,0.015,2,0.052,3,0.052,4,0.046,6,0.861,8,0.13,13,0.194,14,0.733,17,0.873,19,1.219,20,0.005,21,1.015,22,1.137,27,0.385,28,0.767,34,0.046,72,0.004,73,0.004,146,2.387,156,3.072,157,3.813,169,1.839,186,1.295,195,1.864,196,2.492,201,1.804,202,2.134,282,1.858,339,2.423,348,3,365,2.242,367,2.447,370,2.492,384,6.047,392,3.748,396,3.748,489,5.992,518,8.066,573,3.514,629,4.97,630,6.007,631,6.007,632,7.72,633,9.003,634,6.987,635,6.007,636,6.007,637,6.007,638,4.213,639,6.007,640,6.007,641,6.007,642,4.663,643,5.382,644,6.007,645,3.514,646,6.007]],["title/modules/AuthModule.html",[433,2.133,445,3.71]],["body/modules/AuthModule.html",[0,0.013,2,0.047,3,0.047,4,0.041,20,0.005,27,0.413,28,0.681,34,0.055,72,0.004,73,0.004,186,1.15,196,2.214,272,1.753,281,3.386,282,1.65,294,3.331,317,3.331,324,3.331,364,2.797,433,3.019,435,3.031,436,4.859,437,3.22,438,4.021,445,7.461,453,4.311,454,1.78,455,3.122,457,4.178,467,5.252,468,3.742,469,3.586,470,3.924,474,3.586,477,4.781,494,3.138,525,5.909,551,4.781,647,4.781,648,4.781,649,4.781,650,4.781,651,6.782,652,6.782,653,5.336,654,4.618,655,3.329,656,5.336,657,5.336,658,4.781,659,4.415,660,4.781,661,5.336,662,5.336,663,5.336,664,5.909,665,5.336,666,5.909,667,5.336,668,4.781,669,5.909,670,7.143,671,5.336,672,5.336,673,4.415]],["title/modules/AuthRoutingModule.html",[433,2.133,651,3.71]],["body/modules/AuthRoutingModule.html",[0,0.018,2,0.063,3,0.063,4,0.055,20,0.005,27,0.388,34,0.066,35,0.707,72,0.004,73,0.004,125,1.709,186,1.555,294,3.124,396,4.503,433,3.051,457,5.061,504,6.467,505,7.751,506,5.592,515,6.467,651,6.361,658,6.467,659,5.972,660,6.467,674,7.218,675,7.218,676,7.218]],["title/injectables/AuthService.html",[339,1.584,652,3.71]],["body/injectables/AuthService.html",[0,0.012,2,0.04,3,0.04,4,0.035,8,0.1,13,0.203,14,0.563,17,1.099,19,1.278,20,0.005,21,1.063,22,1.192,27,0.327,34,0.035,35,0.731,38,2.343,44,0.877,72,0.003,73,0.003,146,2,169,2.079,186,0.994,201,1.386,202,3.339,339,2.343,365,1.723,392,4.397,438,3.728,461,4.134,603,3.487,606,4.415,652,4.754,677,4.615,678,4.239,679,8.088,680,4.239,681,3.389,682,6.466,683,8.088,684,8.088,685,8.088,686,8.088,687,6.466,688,4.239,689,4.615,690,8.088,691,4.615,692,6.466,693,4.615,694,8.826,695,4.615,696,4.615,697,6.466,698,4.615,699,6.466,700,4.615,701,4.615,702,4.615,703,4.615,704,4.615,705,6.466,706,4.615,707,4.615,708,3.236,709,4.615,710,4.615,711,4.615,712,4.615,713,4.615,714,4.615,715,4.615,716,4.615,717,4.615,718,4.615,719,7.464,720,4.615,721,4.615]],["title/interfaces/AuthState.html",[118,0.357,722,3.916]],["body/interfaces/AuthState.html",[2,0.051,3,0.051,4,0.045,8,0.126,9,0.324,13,0.189,20,0.005,24,0.589,27,0.359,28,0.742,33,0.983,34,0.077,35,0.966,72,0.004,73,0.004,118,0.593,195,1.738,205,3.626,282,1.798,494,2.554,561,4.274,638,5.299,722,6.517,723,5.208,724,7.466,725,4.781,726,7.523,727,7.523,728,3.961,729,3.047,730,3.047,731,5.208,732,5.208,733,5.208,734,5.208,735,5.208,736,5.208,737,5.208,738,5.208,739,5.208,740,6.77,741,5.208,742,5.208,743,5.208,744,6.77,745,6.77,746,6.77,747,6.77,748,6.77,749,5.208,750,6.77,751,5.208,752,5.208,753,4.076]],["title/classes/Authenticated.html",[0,0.013,527,2.787]],["body/classes/Authenticated.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.366,7,1.38,8,0.095,9,0.268,10,2.093,12,2.281,13,0.248,14,1.092,17,0.823,19,0.695,20,0.005,21,0.579,22,0.649,24,0.446,25,0.658,27,0.253,28,0.562,33,0.745,34,0.077,35,0.924,39,1.981,44,0.74,72,0.003,73,0.003,282,2.915,454,1.468,516,4.051,527,5.047,590,2.367,592,2.367,594,2.367,603,3.7,606,3.473,678,3.278,680,3.278,681,3.278,688,3.278,725,4.598,754,2.575,755,4.402,756,6.254,757,4.402,758,3.774,759,3.363,760,3.774,761,3.552,762,3.774,763,4.499,764,3.774,765,3.774,766,4.385,767,4.499,768,3.774,769,3.363,770,3.774]],["title/interfaces/BarGraphConfig.html",[118,0.357,771,3.263]],["body/interfaces/BarGraphConfig.html",[2,0.051,3,0.051,4,0.044,8,0.126,9,0.323,13,0.247,20,0.005,21,0.762,25,0.867,34,0.068,44,0.862,72,0.004,73,0.004,89,4.006,94,2.266,118,0.651,245,4.397,771,4.88,772,4.502,773,6.23,774,6.532,775,6.532,776,6.532,777,6.532,778,6.532,779,6.532,780,6.532,781,6.532,782,6.532,783,3.526,784,3.501,785,4.265,786,4.265,787,4.265,788,3.751,789,4.265,790,4.265,791,4.068,792,4.502,793,3.898,794,4.265,795,4.265,796,4.265]],["title/classes/CancelTimer.html",[0,0.013,797,2.787]],["body/classes/CancelTimer.html",[0,0.024,2,0.079,3,0.04,4,0.035,6,1.364,7,1.379,8,0.1,9,0.277,11,1.008,12,2.279,13,0.245,14,0.987,16,2.682,17,0.732,20,0.005,24,0.467,25,0.69,27,0.301,28,0.589,29,2.156,33,0.781,34,0.077,35,0.921,39,2.266,41,0.968,43,1.386,44,0.66,46,1.539,56,1.219,62,1.186,68,1.186,72,0.003,73,0.003,84,3.071,94,1.108,124,1.516,150,2.958,151,2.958,152,2.958,221,2.252,232,5.039,258,3.087,373,3.307,375,2.958,454,1.539,797,4.122,798,2.785,799,6.466,800,4.657,801,4.034,802,3.672,803,3.389,804,3.389,805,4.034,806,4.034,807,3.571,808,4.034,809,3.672,810,2.699,811,4.034,812,3.672,813,4.034,814,3.782]],["title/interfaces/CompletedDisplayData.html",[118,0.357,815,3.71]],["body/interfaces/CompletedDisplayData.html",[2,0.061,3,0.061,4,0.053,8,0.151,9,0.363,11,2.125,13,0.212,20,0.005,27,0.342,34,0.065,72,0.004,73,0.004,94,2.034,115,3.566,118,0.645,197,3.403,815,6.23,816,6.246,817,6.246,818,7.085,819,6.291,820,4.812,821,6.576,822,5.126,823,6.246,824,5.126,825,6.246]],["title/interfaces/CompletedItem.html",[118,0.357,818,3.538]],["body/interfaces/CompletedItem.html",[2,0.058,3,0.058,4,0.051,8,0.145,9,0.353,13,0.241,20,0.005,34,0.069,44,0.904,51,2.031,56,1.762,62,1.715,72,0.004,73,0.004,93,3.878,94,2.425,104,3.583,118,0.661,122,3.898,124,3.07,818,5.779,819,4.309,824,6.873,826,5.513,827,2.871,828,5.142]],["title/components/CompletedItemComponent.html",[125,1.195,284,1.852]],["body/components/CompletedItemComponent.html",[0,0.008,2,0.052,3,0.028,4,0.024,6,0.702,7,0.965,8,0.069,9,0.21,11,1.472,13,0.169,14,0.387,17,0.872,19,0.5,20,0.005,21,0.787,22,0.467,24,0.496,25,0.732,27,0.335,28,0.404,33,0.536,34,0.024,36,1.492,37,0.771,41,0.664,43,2.023,44,0.433,49,3.157,56,1.128,62,0.898,68,1.98,72,0.002,73,0.002,83,2.818,91,3.166,125,1.725,126,1.162,127,1.223,128,1.891,129,1.223,130,1.223,134,2.313,135,1.162,136,2.446,137,2.446,138,3.878,139,3.567,140,1.04,141,1.891,143,1.891,145,4.138,146,1.514,147,2.602,153,3.289,154,1.04,156,1.619,157,3.082,158,4.319,169,1,170,1.828,181,2.955,185,1.581,186,0.682,187,1.852,188,2.865,189,1.749,190,1.911,195,0.656,196,1.314,201,0.951,202,1.125,203,2.128,204,2.128,205,1.976,207,1.66,221,2.39,222,4.052,223,5.575,224,1.512,225,2.782,226,3.6,227,1.512,228,1.479,230,1.512,233,1.419,235,2.923,236,1.449,237,1.619,238,1.859,239,3.556,240,2.99,243,1.799,248,1.749,261,3.76,262,2.128,263,2.328,267,1.512,272,1.04,273,1.891,274,2.602,275,2.602,276,1.223,277,4.052,278,1.223,279,1.162,280,1.223,281,1.162,282,2.253,283,1.223,284,2.474,285,1.891,286,1.144,287,1.223,288,1.144,289,1.223,290,1.162,291,1.009,292,1.223,293,1.223,294,1.144,295,1.223,296,1.223,297,1.162,298,2.507,299,1.202,300,1.223,301,2.06,302,2.313,303,1.202,304,1.162,305,2.782,306,1.223,307,1.162,308,1.891,309,1.144,310,1.223,311,1.144,312,1.223,313,1.162,314,1.223,315,1.162,316,1.09,317,1.144,318,1.223,319,1.162,320,1.223,321,1.162,322,1.144,323,1.223,324,1.144,325,1.223,326,1.162,327,1.182,328,1.223,329,1.162,330,1.223,331,1.162,332,2.313,333,1.162,334,1.162,335,1.162,336,1.223,337,1.144,338,1.223,419,2.567,428,1.512,429,1.449,542,2.458,543,2.458,619,1.976,625,3.062,627,1.852,815,4.402,829,8.032,830,7.196,831,2.837,832,5.364,833,4.387,834,5.364,835,3.167,836,3.167,837,2.837,838,3.167,839,4.954,840,3.167,841,3.167,842,2.837,843,2.837,844,4.897,845,4.897,846,3.601,847,4.897,848,4.897,849,4.897,850,2.328,851,1.976,852,2.221,853,2.328,854,1.911,855,1.911,856,2.458,857,2.458,858,2.62,859,2.837,860,2.328,861,3.291,862,2.62,863,2.458]],["title/components/CompletionComponent.html",[125,1.195,286,1.822]],["body/components/CompletionComponent.html",[0,0.008,2,0.052,3,0.028,4,0.024,6,0.703,8,0.069,9,0.21,11,0.694,13,0.218,14,0.388,17,1.003,19,0.502,20,0.005,21,0.789,22,0.468,27,0.358,28,0.406,33,0.537,34,0.024,35,0.588,36,1.496,37,0.773,41,0.667,56,1.737,62,0.583,68,1.542,72,0.002,73,0.002,83,2.615,105,2.64,123,4.904,125,1.728,126,1.166,127,1.227,128,1.227,129,1.227,130,1.227,134,2.317,135,1.166,138,3.879,139,3.569,140,1.044,141,1.896,143,1.896,146,1.518,147,2.607,154,1.044,157,3.217,161,2.054,163,4.268,169,1.226,170,1.186,186,0.685,195,1.016,196,1.318,197,1.551,201,0.954,202,1.129,206,3.811,224,1.517,225,1.773,226,2.201,229,2.294,230,1.517,231,2.246,233,1.424,236,1.453,237,1.625,238,1.864,247,1.708,264,1.625,265,1.625,266,1.587,267,2.344,268,1.625,272,1.044,273,1.896,274,2.317,275,2.607,276,1.227,278,1.227,279,1.166,280,1.227,281,1.166,282,2.257,283,1.227,284,1.166,285,1.896,286,2.437,287,1.227,288,1.147,289,1.227,290,1.166,291,1.012,292,1.227,293,1.227,294,1.147,295,1.227,296,1.227,297,1.166,298,2.511,299,1.206,300,1.227,301,2.065,302,2.317,303,1.206,304,1.166,305,2.786,306,1.227,307,1.166,308,1.896,309,1.147,310,1.227,311,1.147,312,1.227,313,1.166,314,1.227,315,1.166,316,1.093,317,1.147,318,1.227,319,1.166,320,1.227,321,1.166,322,1.147,323,1.227,324,1.147,325,1.227,326,1.166,327,1.186,328,1.227,329,1.166,330,1.227,331,1.166,332,2.317,333,1.166,334,1.166,335,1.166,336,1.227,337,1.147,338,1.227,365,1.186,367,1.294,370,1.318,383,2.336,389,3.443,392,4.369,403,2.054,404,1.982,405,2.336,419,1.665,429,2.246,624,3.063,625,2.511,626,1.982,815,5.365,822,5.365,864,3.177,865,6,866,4.91,867,6.75,868,6.75,869,5.239,870,6,871,4.91,872,3.177,873,3.177,874,3.177,875,3.177,876,3.177,877,3.177,878,3.177,879,3.177,880,3.177,881,2.629,882,2.629,883,2.466,884,2.336,885,3.177,886,3.177,887,3.177,888,2.629,889,3.177,890,3.177,891,3.177,892,2.629,893,5.376,894,2.629,895,3.177,896,3.177,897,3.177,898,6,899,3.177,900,3.177,901,4.536,902,3.177,903,4.91,904,4.399,905,3.177,906,3.177,907,3.177,908,2.228,909,3.177,910,3.177,911,3.177,912,3.177,913,3.443,914,3.177,915,3.177,916,3.177,917,3.177,918,3.177,919,3.177,920,3.177,921,2.135,922,2.054]],["title/modules/CompletionModule.html",[433,2.133,446,3.71]],["body/modules/CompletionModule.html",[0,0.013,2,0.044,3,0.044,4,0.038,20,0.005,27,0.413,28,0.639,34,0.052,72,0.003,73,0.003,126,3.324,132,4.488,158,4.869,186,1.08,190,3.023,196,2.078,249,3.239,272,1.645,284,3.324,286,3.269,321,3.324,329,3.324,340,5.662,344,5.854,364,2.626,371,4.145,433,2.893,435,2.845,436,4.705,437,3.023,438,3.893,446,7.505,451,5.649,453,4.13,454,1.671,455,2.931,457,4.004,467,5.032,468,3.513,469,3.367,470,3.684,474,3.367,485,3.684,494,3.007,598,3.684,654,4.425,655,3.126,669,5.662,673,4.145,830,4.488,923,4.488,924,4.488,925,5.01,926,4.488,927,5.01,928,6.132,929,3.513,930,4.145,931,5.01,932,5.01,933,5.01,934,5.01,935,6.844,936,5.01,937,4.488,938,5.01,939,5.01,940,5.01,941,5.662,942,5.01,943,5.032,944,5.01,945,5.01]],["title/interfaces/CompletionState.html",[118,0.357,883,3.916]],["body/interfaces/CompletionState.html",[2,0.049,3,0.049,4,0.043,8,0.123,9,0.318,13,0.208,20,0.005,24,0.573,27,0.369,28,0.723,33,0.958,34,0.077,35,0.961,37,1.378,72,0.004,73,0.004,82,2.896,83,1.701,115,4.674,118,0.586,119,4.791,123,5.572,140,2.44,195,1.822,494,2.488,728,3.894,729,2.968,730,2.968,869,4.395,882,6.147,883,6.435,913,3.971,946,5.074,947,6.897,948,7.429,949,7.429,950,7.429,951,5.074,952,5.074,953,5.074,954,5.074,955,5.074,956,5.074,957,5.074,958,5.074,959,5.074,960,5.074,961,5.074,962,5.074,963,7.429,964,5.074,965,5.074,966,5.074,967,5.074,968,5.074,969,6.656,970,5.074,971,5.074,972,6.656,973,5.074,974,6.656,975,5.074,976,5.074]],["title/classes/CustomRouterStateSerializer.html",[0,0.013,493,3.71]],["body/classes/CustomRouterStateSerializer.html",[0,0.019,2,0.05,3,0.05,4,0.044,6,1.071,8,0.124,13,0.143,17,0.647,19,0.904,20,0.005,21,0.752,22,0.843,24,0.579,27,0.37,28,0.73,33,0.968,34,0.072,35,0.922,44,0.506,72,0.004,73,0.004,118,0.529,146,2.313,157,2.288,169,1.527,195,1.725,377,4.439,384,4.665,396,3.569,473,4.011,493,5.498,494,2.513,506,5.028,634,6.858,642,6.467,728,3.92,729,2.998,730,2.998,977,4.732,978,7.478,979,6.187,980,5.72,981,6.187,982,6.467,983,7.782,984,4.439,985,4.732,986,4.732,987,6.162,988,4.732,989,4.732,990,4.732,991,4.732,992,4.732,993,4.732,994,6.187,995,4.732,996,6.187,997,6.893,998,4.732,999,4.732,1000,6.187]],["title/components/DashboardComponent.html",[125,1.195,288,1.822]],["body/components/DashboardComponent.html",[0,0.006,2,0.021,3,0.021,4,0.018,6,0.561,8,0.052,9,0.168,13,0.205,14,0.292,17,0.945,19,0.378,20,0.005,21,0.654,22,0.353,24,0.642,25,0.948,27,0.331,28,0.306,33,0.405,34,0.018,35,0.564,36,1.194,37,0.583,41,0.502,56,1.196,62,0.913,68,2.185,72,0.002,73,0.002,83,1.905,125,1.502,126,0.879,127,2.45,128,0.925,129,0.925,130,0.925,134,1.922,135,0.879,138,3.758,139,3.457,140,2.084,141,1.514,143,1.514,146,1.212,147,2.221,154,2.084,157,2.877,169,0.489,170,0.894,186,0.516,195,0.811,196,0.993,201,0.719,202,2.555,224,1.143,225,1.415,229,1.831,230,1.143,231,3.116,233,2.23,234,3.588,235,3.791,236,1.793,237,2.545,238,1.488,264,1.224,265,1.224,266,1.196,267,2.375,268,1.224,272,0.786,273,1.514,274,1.514,275,2.221,276,0.925,278,0.925,279,0.879,280,0.925,281,0.879,282,1.962,283,0.925,284,0.879,285,1.514,286,0.865,287,0.925,288,2.077,289,0.925,290,0.879,291,0.763,292,0.925,293,0.925,294,0.865,295,0.925,296,0.925,297,0.879,298,2.673,299,2.408,300,0.925,301,1.712,302,1.922,303,0.909,304,0.879,305,2.46,306,0.925,307,0.879,308,1.514,309,0.865,310,0.925,311,0.865,312,0.925,313,0.879,314,0.925,315,0.879,316,0.824,317,0.865,318,0.925,319,0.879,320,0.925,321,0.879,322,0.865,323,0.925,324,0.865,325,0.925,326,0.879,327,0.894,328,0.925,329,0.879,330,0.925,331,0.879,332,1.922,333,0.879,334,0.879,335,0.879,336,0.925,337,0.865,338,0.925,365,0.894,367,0.975,370,0.993,383,1.76,389,2.748,392,3.89,403,1.548,404,1.494,405,1.76,418,5.176,419,3.934,429,1.793,573,4.675,624,1.494,625,4.272,626,3.104,627,2.911,645,4.887,771,5.167,773,5.262,774,2.882,775,2.882,776,2.882,777,2.882,778,2.882,779,2.882,780,2.882,781,5.009,782,5.009,784,1.445,785,2.882,786,2.882,787,2.882,788,2.534,789,2.882,790,2.882,791,2.748,793,3.865,794,2.882,795,2.882,796,2.882,851,2.445,860,2.882,861,3.865,892,1.981,894,1.981,921,1.609,922,1.548,1001,2.394,1002,4.976,1003,3.919,1004,5.751,1005,5.751,1006,4.924,1007,5.751,1008,5.751,1009,5.751,1010,5.751,1011,5.751,1012,3.718,1013,4.976,1014,2.394,1015,2.394,1016,5.751,1017,4.458,1018,3.919,1019,2.394,1020,5.751,1021,4.758,1022,2.394,1023,2.394,1024,2.394,1025,3.919,1026,2.394,1027,2.394,1028,2.394,1029,2.394,1030,2.394,1031,2.394,1032,1.981,1033,1.858,1034,1.981,1035,2.394,1036,2.394,1037,2.394,1038,2.394,1039,2.394,1040,2.394,1041,4.758,1042,2.394,1043,2.394,1044,2.145,1045,2.394,1046,2.394,1047,2.394,1048,2.394,1049,2.394,1050,2.394,1051,2.394,1052,2.394,1053,2.394,1054,2.394,1055,2.394,1056,2.394,1057,1.76,1058,2.394,1059,1.255,1060,2.394,1061,2.394,1062,8.949,1063,4.033,1064,7.505,1065,2.145,1066,6.812,1067,7.484,1068,4.464,1069,4.976,1070,1.981]],["title/modules/DashboardModule.html",[433,2.133,447,3.71]],["body/modules/DashboardModule.html",[0,0.014,2,0.048,3,0.048,4,0.042,20,0.005,27,0.408,28,0.699,34,0.056,56,1.37,62,1.334,72,0.004,73,0.004,154,2.388,186,1.181,196,2.273,272,1.8,288,3.356,297,3.412,301,3.198,331,3.412,333,3.412,334,3.412,433,3.073,435,3.112,436,4.923,437,3.307,438,2.736,447,7.532,451,5.798,453,4.387,454,1.827,455,3.205,457,4.252,474,3.682,485,4.029,487,4.533,494,3.194,654,4.7,655,3.418,1071,4.909,1072,4.909,1073,5.479,1074,5.479,1075,7.269,1076,4.533,1077,4.533,1078,5.479,1079,4.909,1080,5.479,1081,8.158,1082,6.332,1083,8.158,1084,5.479,1085,5.479]],["title/interfaces/DashboardState.html",[118,0.357,1033,3.916]],["body/interfaces/DashboardState.html",[2,0.055,3,0.055,4,0.049,8,0.137,9,0.342,13,0.159,20,0.005,24,0.641,27,0.353,28,0.807,34,0.076,35,0.946,72,0.004,73,0.004,118,0.618,154,2.62,169,1.292,195,1.651,298,2.177,494,2.779,728,4.181,729,3.316,730,3.316,1032,6.6,1033,6.782,1041,5.234,1086,5.667,1087,6.118,1088,7.829,1089,5.667,1090,4.91,1091,5.667,1092,5.667,1093,5.667,1094,5.667,1095,5.667,1096,5.667,1097,5.667,1098,5.667,1099,7.147,1100,7.147,1101,5.667,1102,5.667,1103,7.147,1104,5.667,1105,5.234]],["title/interfaces/Dictionary.html",[118,0.357,1106,3.916]],["body/interfaces/Dictionary.html",[2,0.065,3,0.065,4,0.057,8,0.161,17,0.838,20,0.005,34,0.072,44,0.857,72,0.004,73,0.004,118,0.685,161,4.787,827,4.036,1106,6.818,1107,6.126,1108,7.268,1109,7.404,1110,5.747,1111,4.976,1112,6.126]],["title/components/EditDisplayNameComponent.html",[125,1.195,290,1.852]],["body/components/EditDisplayNameComponent.html",[0,0.009,2,0.03,3,0.03,4,0.026,6,0.743,7,0.898,8,0.074,9,0.222,11,0.745,13,0.189,14,0.417,17,0.933,19,0.819,20,0.005,21,1.084,22,0.764,24,0.345,25,0.51,27,0.333,28,0.435,34,0.026,35,0.334,36,1.58,37,0.83,38,1.071,41,0.716,43,2.104,44,0.555,56,0.643,62,0.626,68,1.612,72,0.003,73,0.003,83,2.263,125,1.784,126,1.252,127,1.318,128,1.318,129,1.318,130,1.318,134,2.422,135,1.252,136,2.589,137,2.589,138,3.906,139,3.593,140,1.121,141,2.003,143,2.003,145,4.28,146,1.603,147,2.706,153,1.665,154,1.121,156,1.745,157,3.174,158,4.435,169,1.281,170,2.341,181,3.129,185,1.704,186,0.735,187,1.996,188,1.996,189,1.884,190,2.059,195,0.706,196,1.415,201,1.024,202,1.212,203,2.293,204,2.293,205,2.129,207,1.788,224,1.629,225,3.61,226,2.324,227,1.629,228,2.422,233,1.529,235,1.665,238,1.968,261,3.419,262,2.293,272,1.121,273,2.003,274,2.003,275,2.706,276,1.318,278,1.318,279,1.252,280,1.318,281,1.252,282,2.33,283,1.318,284,1.252,285,2.003,286,1.232,287,1.318,288,1.232,289,1.318,290,2.572,291,1.998,292,3.362,293,1.318,294,1.232,295,1.318,296,1.318,297,1.252,298,2.593,299,1.295,300,1.318,301,2.158,302,2.422,303,1.295,304,1.252,305,2.865,306,1.318,307,1.252,308,2.003,309,1.232,310,1.318,311,1.232,312,1.318,313,1.252,314,1.318,315,1.252,316,1.174,317,1.232,318,1.318,319,1.252,320,1.318,321,1.252,322,1.232,323,1.318,324,1.232,325,1.318,326,1.252,327,1.274,328,1.318,329,1.252,330,1.318,331,1.252,332,2.422,333,1.252,334,1.252,335,1.252,336,1.318,337,1.232,338,1.318,428,1.629,429,1.561,548,2.823,564,6.276,577,2.293,578,6.276,810,3.669,863,2.648,1113,8.498,1114,7.613,1115,3.412,1116,6.272,1117,5.185,1118,7.006,1119,4.29,1120,6.272,1121,3.412,1122,3.412,1123,3.412,1124,3.412,1125,5.185,1126,5.189,1127,3.412,1128,3.412,1129,6.272,1130,5.619,1131,5.189,1132,3.412,1133,3.412,1134,2.823,1135,3.412,1136,2.788,1137,5.185,1138,3.412,1139,3.412]],["title/pipes/ElapsedTimePipe.html",[348,2.52,1140,3.916]],["body/pipes/ElapsedTimePipe.html",[0,0.017,2,0.06,3,0.06,4,0.053,6,0.992,13,0.174,17,0.783,19,1.093,20,0.005,21,1.196,22,1.02,27,0.341,34,0.053,44,0.746,72,0.004,73,0.004,94,2.37,135,2.541,146,2.14,169,1.723,186,1.492,348,4.544,1034,5.727,1140,6.547,1141,8.435,1142,6.921,1143,6.979,1144,4.853,1145,8.435,1146,9.471,1147,6.921,1148,6.921,1149,6.979,1150,6.201,1151,6.921]],["title/injectables/ElapsedTimeService.html",[339,1.584,387,3.391]],["body/injectables/ElapsedTimeService.html",[0,0.014,2,0.049,3,0.049,4,0.044,8,0.123,9,0.319,13,0.208,14,0.693,17,0.997,19,1.175,20,0.005,21,0.978,22,1.096,27,0.386,28,0.724,33,0.96,34,0.044,35,0.729,38,1.781,44,0.734,72,0.004,73,0.004,94,1.362,146,2.301,157,3.524,169,1.868,186,1.223,196,2.354,201,1.704,339,2.605,365,2.118,367,2.311,370,2.354,375,4.184,383,4.172,387,5,389,5.216,392,4.263,403,3.669,404,3.54,881,4.695,1150,5.084,1152,9.146,1153,5.674,1154,9.564,1155,8.809,1156,7.439,1157,7.439,1158,5.674,1159,7.439,1160,5.674,1161,7.439,1162,5.674,1163,4.695,1164,8.3,1165,5.674,1166,4.695,1167,5.084,1168,5.674,1169,5.674,1170,5.674]],["title/interfaces/EmailAuthEvent.html",[118,0.357,600,3.71]],["body/interfaces/EmailAuthEvent.html",[2,0.065,3,0.065,4,0.057,8,0.162,9,0.379,13,0.222,20,0.005,34,0.057,44,0.89,72,0.004,73,0.004,118,0.625,600,6.499,603,4.541,606,4.64,1171,7.482]],["title/classes/EmailLogin.html",[0,0.013,769,2.713]],["body/classes/EmailLogin.html",[0,0.024,2,0.038,3,0.038,4,0.033,6,1.36,7,1.374,8,0.093,9,0.264,10,2.28,12,2.271,13,0.249,14,1.084,17,0.887,19,0.68,20,0.005,21,0.566,22,0.634,24,0.436,25,0.643,27,0.249,28,0.549,33,0.728,34,0.077,35,0.919,39,1.96,44,0.856,72,0.003,73,0.003,282,2.901,454,1.435,516,4.009,527,4.765,590,2.314,592,2.314,594,2.314,603,4.244,606,4.336,678,3.225,680,3.225,681,3.225,688,3.225,725,3.742,754,2.517,758,3.714,759,3.309,760,3.714,761,3.495,762,3.714,763,4.452,764,3.714,765,3.714,766,4.347,767,4.46,768,4.335,769,3.863,770,3.714,1172,3.56,1173,6.153,1174,6.153]],["title/interfaces/Environment.html",[118,0.357,406,3.391]],["body/interfaces/Environment.html",[2,0.059,3,0.059,4,0.052,8,0.146,9,0.356,13,0.235,20,0.005,34,0.052,44,0.906,72,0.004,73,0.004,89,3.474,118,0.663,406,5.579,708,6.582,788,4.359,1175,5.578,1176,7.765,1177,7.765,1178,7.285,1179,7.285,1180,7.285,1181,5.578,1182,5.578,1183,5.578,1184,5.578,1185,5.578,1186,5.578,1187,5.578]],["title/classes/Error.html",[0,0.013,987,3.391]],["body/classes/Error.html",[0,0.02,2,0.056,3,0.056,4,0.049,6,1.156,7,1.426,8,0.14,9,0.346,10,2.513,12,2.086,13,0.25,14,0.786,17,1.045,19,1.017,20,0.005,21,0.846,22,0.949,24,0.652,25,0.962,27,0.26,28,0.822,34,0.068,35,0.631,39,1.61,44,0.895,72,0.004,73,0.004,139,2.288,343,3.886,562,6.053,987,6.206,1188,5.769,1189,8.067,1190,8.067,1191,8.81]],["title/classes/FacebookLogin.html",[0,0.013,678,2.645]],["body/classes/FacebookLogin.html",[0,0.024,2,0.04,3,0.04,4,0.035,6,1.374,7,1.387,8,0.098,9,0.274,10,1.688,12,2.293,13,0.246,14,1.124,17,0.723,20,0.005,24,0.459,25,0.678,27,0.258,28,0.579,33,0.767,34,0.078,35,0.93,39,2.007,44,0.748,72,0.003,73,0.003,282,2.934,454,1.512,516,4.104,527,4.847,590,2.438,592,2.438,594,2.438,603,3.749,606,3.529,678,3.875,680,3.347,681,3.347,688,3.347,725,3.831,754,2.652,758,3.854,759,3.434,760,3.854,761,3.627,762,3.854,763,4.558,764,4.462,765,3.854,766,4.434,767,4.549,768,3.854,769,3.434,770,3.854,1192,6.387]],["title/interfaces/FirebaseConfig.html",[118,0.357,1179,3.916]],["body/interfaces/FirebaseConfig.html",[2,0.057,3,0.057,4,0.05,8,0.142,9,0.349,13,0.244,20,0.005,34,0.05,44,0.926,72,0.004,73,0.004,89,2.521,118,0.656,406,4.387,708,4.577,788,4.22,1175,5.4,1176,5.4,1177,5.4,1178,5.066,1179,6.88,1180,6.315,1181,7.677,1182,7.677,1183,7.677,1184,7.677,1185,7.677,1186,7.677,1187,5.4]],["title/interfaces/FirestoreHistoryItem.html",[118,0.357,1193,3.916]],["body/interfaces/FirestoreHistoryItem.html",[0,0.012,2,0.04,3,0.077,4,0.035,8,0.099,9,0.275,11,0.997,13,0.22,16,2.661,20,0.005,27,0.365,30,2.875,31,2.875,32,2.875,34,0.049,35,0.862,44,0.891,51,2.452,56,1.738,58,3.582,62,1.692,72,0.003,73,0.003,93,3.826,94,2.111,118,0.524,124,3.029,169,1.915,186,0.983,197,2.227,201,1.37,202,2.636,339,2.014,365,1.703,367,1.859,370,1.893,373,3.794,392,3.969,463,2.52,827,3.892,901,3.067,908,3.2,1193,6.582,1194,3.775,1195,3.644,1196,4.214,1197,2.592,1198,3.775,1199,3.2,1200,3.2,1201,2.95,1202,4.979,1203,2.592,1204,3.775,1205,3.775,1206,3.775,1207,3.775,1208,3.2,1209,3.775,1210,3.775,1211,3.775,1212,3.775,1213,3.2,1214,3.775,1215,3.775,1216,3.775,1217,3.775,1218,3.2,1219,3.2,1220,3.775,1221,5.202,1222,5.202,1223,3.775,1224,3.775,1225,3.775,1226,3.775,1227,3.355,1228,3.775,1229,3.775,1230,3.2,1231,3.775,1232,3.775,1233,3.775,1234,3.775,1235,3.775,1236,3.775,1237,3.775]],["title/interfaces/FirestorePlatformsItem.html",[118,0.357,1238,4.175]],["body/interfaces/FirestorePlatformsItem.html",[0,0.016,2,0.057,3,0.057,4,0.05,8,0.207,9,0.348,13,0.203,20,0.005,22,1.365,27,0.374,34,0.062,35,0.637,44,0.783,72,0.004,73,0.004,94,2.123,118,0.573,169,1.327,186,1.4,201,1.951,202,2.309,339,2.547,365,2.425,367,2.647,370,2.696,392,3.564,463,3.589,1057,4.778,1195,4.608,1196,4.608,1197,3.691,1203,3.691,1238,6.712,1239,5.821,1240,4.556,1241,5.821,1242,5.821,1243,5.821,1244,5.821,1245,5.821,1246,5.821,1247,5.821,1248,5.043,1249,5.821,1250,5.821,1251,5.821,1252,5.821]],["title/interfaces/FirestoreProfileItem.html",[118,0.357,1253,4.175]],["body/interfaces/FirestoreProfileItem.html",[0,0.016,2,0.056,3,0.056,4,0.049,8,0.138,9,0.344,13,0.16,20,0.005,27,0.383,33,1.08,34,0.062,35,0.625,44,0.856,72,0.004,73,0.004,118,0.567,169,1.639,186,1.375,201,1.916,202,2.267,291,2.556,339,2.518,365,2.382,367,2.6,370,2.648,392,3.855,463,3.525,645,3.733,1136,5.206,1195,4.556,1196,4.556,1197,3.625,1203,3.625,1253,6.637,1254,5.718,1255,4.475,1256,5.718,1257,5.718,1258,5.718,1259,5.718,1260,5.718,1261,5.718,1262,5.718,1263,5.718,1264,5.718,1265,4.692,1266,5.718]],["title/interfaces/FirestoreProgressItem.html",[118,0.357,1267,3.916]],["body/interfaces/FirestoreProgressItem.html",[0,0.013,2,0.046,3,0.046,4,0.041,8,0.115,9,0.305,11,1.159,13,0.201,20,0.005,27,0.386,33,0.898,34,0.055,35,0.841,44,0.89,51,2.168,58,2.898,72,0.004,73,0.004,99,3.832,104,3.826,105,2.854,118,0.567,119,4.208,122,5.233,169,1.881,186,1.144,197,2.59,201,1.594,202,2.528,339,2.234,344,3.431,365,1.981,367,2.162,370,2.202,392,3.93,463,2.931,827,3.968,828,5.869,1195,4.042,1196,4.56,1197,3.014,1199,3.721,1200,3.721,1203,3.014,1208,3.721,1213,3.721,1218,3.721,1219,3.721,1221,3.721,1222,3.721,1230,3.721,1267,6.658,1268,4.391,1269,3.311,1270,5.523,1271,4.391,1272,4.391,1273,4.391,1274,4.391,1275,4.391,1276,4.391,1277,4.391,1278,4.391,1279,4.391,1280,4.391,1281,4.391,1282,4.391,1283,4.391,1284,4.391,1285,4.391,1286,4.391]],["title/interfaces/FirestoreTimerItem.html",[118,0.357,1287,4.175]],["body/interfaces/FirestoreTimerItem.html",[0,0.014,2,0.063,3,0.048,4,0.042,8,0.119,9,0.311,13,0.205,20,0.005,27,0.365,34,0.056,35,0.537,38,1.72,44,0.893,56,1.815,62,1.767,72,0.004,73,0.004,94,2.17,118,0.514,124,3.163,169,1.485,186,1.181,197,2.674,201,1.645,202,1.947,232,2.802,339,2.282,365,2.045,367,2.232,370,2.273,375,3.326,392,3.194,463,3.026,645,4.772,901,3.682,908,3.842,1059,2.872,1166,4.533,1195,4.129,1196,4.129,1197,3.112,1203,3.112,1227,4.029,1265,5.998,1287,6.014,1288,4.909,1289,3.418,1290,4.909,1291,4.909,1292,4.909,1293,4.909,1294,8.101,1295,4.909,1296,4.909,1297,4.909,1298,4.909,1299,4.909,1300,4.909,1301,4.909,1302,4.909,1303,4.909]],["title/components/ForgotPasswordComponent.html",[125,1.195,294,1.822]],["body/components/ForgotPasswordComponent.html",[0,0.008,2,0.028,3,0.028,4,0.025,6,0.709,8,0.07,9,0.212,11,1.081,13,0.151,14,0.392,17,0.829,19,0.507,20,0.005,21,0.794,22,0.473,24,0.325,25,0.48,27,0.313,28,0.41,34,0.025,35,0.314,36,1.508,37,0.781,41,0.673,44,0.438,56,0.605,62,0.589,68,1.552,72,0.002,73,0.002,83,2.201,125,1.736,126,1.178,127,1.239,128,1.239,129,1.239,130,1.239,134,2.332,135,1.178,138,3.883,139,3.572,140,1.054,141,1.911,143,1.911,146,1.53,147,2.621,153,1.566,154,1.054,156,1.641,157,3.098,169,1.011,170,1.847,186,0.692,195,0.664,196,1.331,201,0.964,202,1.14,207,1.682,225,2.45,226,3.471,227,2.362,228,3.425,229,3.771,230,3.499,231,3.543,233,2.706,234,2.002,235,1.566,236,3.813,237,1.641,238,1.878,239,2.947,240,3.016,241,1.937,243,1.823,247,1.726,248,1.772,254,1.877,255,1.877,256,2.491,259,3.767,260,3.325,261,2.947,264,1.641,265,1.641,266,1.603,267,1.532,268,1.641,269,1.726,272,1.054,273,1.911,274,2.831,275,2.621,276,1.239,278,1.239,279,1.178,280,1.239,281,1.178,282,2.577,283,1.239,284,1.178,285,1.911,286,1.159,287,1.239,288,1.159,289,1.239,290,1.178,291,1.023,292,1.239,293,1.239,294,2.45,295,3.484,296,1.239,297,1.178,298,2.523,299,1.218,300,1.239,301,2.078,302,2.332,303,1.218,304,1.178,305,2.797,306,1.239,307,1.178,308,1.911,309,1.159,310,1.239,311,1.159,312,1.239,313,1.178,314,1.239,315,1.178,316,1.104,317,1.159,318,1.239,319,1.178,320,1.239,321,1.178,322,1.159,323,1.239,324,1.159,325,1.239,326,1.178,327,1.198,328,1.239,329,1.178,330,1.239,331,1.178,332,2.332,333,1.178,334,1.178,335,1.178,336,1.239,337,1.159,338,1.239,419,3.165,421,2.81,425,3.644,426,4.996,427,2.157,428,2.882,429,2.762,454,2.014,546,2.075,553,2.875,562,4.832,570,6.08,572,5.41,588,6.08,597,2.491,598,2.36,602,2.875,603,3.17,604,2.875,605,2.875,606,4.082,615,2.25,616,4.094,617,2.36,618,2.655,619,2.002,620,4.433,621,2.25,622,2.875,623,6.011,624,2.002,625,2.53,626,2.002,627,1.877,659,6.408,681,3.557,1304,7.745,1305,3.209,1306,6.038,1307,4.948,1308,6.786,1309,4.948,1310,3.209,1311,3.209,1312,3.209,1313,2.157,1314,3.209,1315,3.209,1316,3.209,1317,3.209,1318,2.491,1319,2.875]],["title/classes/GetUser.html",[0,0.013,759,2.713]],["body/classes/GetUser.html",[0,0.024,2,0.04,3,0.04,4,0.035,6,1.374,7,1.387,8,0.098,9,0.274,10,1.688,12,2.293,13,0.246,14,1.124,17,0.723,20,0.005,24,0.459,25,0.678,27,0.258,28,0.579,33,0.767,34,0.078,35,0.93,39,2.007,44,0.748,72,0.003,73,0.003,282,2.934,454,1.512,516,4.104,527,4.847,590,2.438,592,2.438,594,2.438,603,3.749,606,3.529,678,3.347,680,3.347,681,3.347,688,3.347,725,3.831,754,2.652,758,4.462,759,3.976,760,3.854,761,3.627,762,3.854,763,4.558,764,3.854,765,3.854,766,4.434,767,4.549,768,3.854,769,3.434,770,3.854,1320,6.387]],["title/classes/GoogleLogin.html",[0,0.013,680,2.645]],["body/classes/GoogleLogin.html",[0,0.024,2,0.04,3,0.04,4,0.035,6,1.374,7,1.387,8,0.098,9,0.274,10,1.688,12,2.293,13,0.246,14,1.124,17,0.723,20,0.005,24,0.459,25,0.678,27,0.258,28,0.579,33,0.767,34,0.078,35,0.93,39,2.007,44,0.748,72,0.003,73,0.003,282,2.934,454,1.512,516,4.104,527,4.847,590,2.438,592,2.438,594,2.438,603,3.749,606,3.529,678,3.347,680,3.875,681,3.347,688,3.347,725,3.831,754,2.652,758,3.854,759,3.434,760,3.854,761,3.627,762,4.462,763,4.558,764,3.854,765,3.854,766,4.434,767,4.549,768,3.854,769,3.434,770,3.854,1321,6.387]],["title/interfaces/GraphConfig.html",[118,0.357,773,3.538]],["body/interfaces/GraphConfig.html",[2,0.053,3,0.053,4,0.047,8,0.133,9,0.335,13,0.244,20,0.005,21,0.805,25,0.915,34,0.07,44,0.802,72,0.004,73,0.004,89,3.991,94,2.176,118,0.662,245,4.096,771,3.959,772,4.752,773,6.358,774,4.502,775,4.502,776,4.502,777,4.502,778,4.502,779,4.502,780,4.502,781,4.502,782,4.502,784,3.695,785,6.666,786,6.328,787,6.666,788,3.959,789,6.666,790,6.666,791,6.358,792,4.752,793,4.115,794,4.502,795,4.502,796,4.502,1322,7.814]],["title/interfaces/GraphDataItem.html",[118,0.357,784,3.045]],["body/interfaces/GraphDataItem.html",[2,0.056,3,0.056,4,0.05,8,0.14,9,0.347,13,0.203,20,0.005,21,1.216,25,1.382,34,0.071,44,0.859,72,0.004,73,0.004,89,3.931,94,2.332,118,0.673,245,4.24,771,4.182,772,5.02,773,6.19,774,4.756,775,4.756,776,4.756,777,4.756,778,4.756,779,4.756,780,4.756,781,4.756,782,4.756,784,4.882,785,4.756,786,4.756,787,4.756,788,4.182,789,4.756,790,4.756,791,4.536,792,5.02,793,4.347,794,4.756,795,4.756,796,4.756]],["title/components/GraphTooltipComponent.html",[125,1.195,297,1.852]],["body/components/GraphTooltipComponent.html",[0,0.011,2,0.036,3,0.036,4,0.032,6,0.863,8,0.091,11,0.912,13,0.105,14,0.863,17,0.799,20,0.005,21,0.929,25,0.624,27,0.243,33,1.308,34,0.032,36,1.836,37,1.016,41,0.876,56,0.787,62,0.766,68,2.107,72,0.003,73,0.003,83,2.462,125,1.941,126,1.534,127,1.613,128,1.613,129,1.613,130,1.613,134,2.729,135,1.534,136,3.009,137,3.009,138,3.973,139,3.655,140,1.372,141,2.327,143,2.327,146,1.863,147,2.987,153,3.775,154,1.372,169,0.853,170,1.559,185,2.086,186,0.9,225,2.175,226,2.7,227,1.994,228,2.814,233,1.872,238,2.287,239,3.448,240,3.009,243,2.373,272,1.372,273,2.327,274,2.729,275,2.987,276,1.613,278,1.613,279,1.534,280,1.613,281,1.534,282,2.535,283,1.613,284,1.534,285,2.327,286,1.509,287,1.613,288,1.509,289,1.613,290,1.534,291,1.331,292,1.613,293,1.613,294,1.509,295,1.613,296,1.613,297,2.839,298,3.03,299,3.421,300,1.613,301,2.431,302,2.729,303,1.586,304,1.534,305,3.084,306,1.613,307,1.534,308,2.327,309,1.509,310,1.613,311,1.509,312,1.613,313,1.534,314,1.613,315,1.534,316,1.438,317,1.509,318,1.613,319,1.534,320,1.613,321,1.534,322,1.509,323,1.613,324,1.509,325,1.613,326,1.534,327,1.559,328,1.613,329,1.534,330,1.613,331,1.534,332,2.729,333,1.534,334,1.534,335,1.534,336,1.613,337,1.509,338,1.613,419,2.19,428,1.994,429,1.911,784,4.264,854,2.521,855,2.521,1079,6.928,1323,7.733,1324,4.177,1325,7.065,1326,7.065,1327,6.024,1328,6.024,1329,4.177,1330,6.024,1331,6.024,1332,4.177,1333,4.177]],["title/components/HeaderComponent.html",[125,1.195,301,1.736]],["body/components/HeaderComponent.html",[0,0.01,2,0.035,3,0.035,4,0.031,6,0.843,8,0.088,11,0.884,14,0.847,17,0.666,20,0.005,21,0.774,27,0.238,34,0.031,36,1.794,37,0.985,41,0.849,56,0.763,62,0.743,68,1.784,72,0.003,73,0.003,83,2.431,125,1.917,126,1.486,127,1.563,128,1.563,129,1.563,130,1.563,134,2.68,135,1.486,138,3.964,139,3.646,140,1.329,141,2.274,143,2.274,146,1.821,147,2.943,154,1.329,169,0.827,170,1.511,186,0.872,225,2.506,226,2.639,227,1.932,228,1.891,229,3.56,230,3.313,231,3.486,233,2.639,235,2.874,236,1.852,238,2.235,247,2.177,253,2.443,259,2.525,261,2.874,264,2.07,265,2.07,266,2.021,267,1.932,268,2.07,269,3.166,272,1.329,273,2.274,274,2.274,275,2.943,276,1.563,278,1.563,279,1.486,280,1.563,281,1.486,282,2.504,283,1.563,284,1.486,285,2.274,286,1.462,287,1.563,288,1.462,289,1.563,290,1.486,291,1.29,292,1.563,293,1.563,294,1.462,295,1.563,296,1.563,297,1.486,298,2.786,299,1.537,300,1.563,301,2.907,302,2.68,303,1.537,304,1.486,305,3.051,306,1.563,307,1.486,308,2.274,309,1.462,310,1.563,311,1.462,312,1.563,313,1.486,314,1.563,315,1.486,316,1.393,317,1.462,318,1.563,319,1.486,320,1.563,321,1.486,322,1.462,323,1.563,324,1.462,325,1.563,326,1.486,327,1.511,328,1.563,329,1.486,330,1.563,331,1.486,332,2.68,333,1.486,334,1.486,335,1.486,336,1.563,337,1.462,338,1.563,361,2.299,421,2.299,425,3.553,428,1.932,429,1.852,431,3.142,516,3.897,517,4.871,615,2.838,617,5.603,619,2.525,621,5.925,625,3.897,767,3.166,852,2.838,853,2.976,860,4.329,861,3.957,922,3.807,1334,4.048,1335,5.742,1336,4.871,1337,4.048,1338,4.048,1339,4.871,1340,5.888,1341,3.349]],["title/components/HeaderComponent-1.html",[125,0.999,301,1.452,418,2.396]],["body/components/HeaderComponent-1.html",[0,0.008,2,0.029,3,0.029,4,0.025,6,0.723,7,0.471,8,0.071,13,0.154,14,0.402,17,0.839,19,0.797,20,0.005,21,0.904,22,1.013,24,0.621,25,0.754,27,0.316,28,0.42,33,0.557,34,0.025,36,1.537,37,0.801,41,0.69,56,0.62,62,0.604,68,1.906,72,0.003,73,0.003,83,2.226,125,1.756,126,1.208,127,1.271,128,2.369,129,1.271,130,1.271,134,2.369,135,1.208,136,2.519,137,2.519,138,3.893,139,3.581,140,1.081,141,1.948,143,1.948,146,1.56,147,2.655,153,3.619,154,1.081,156,1.683,157,3.129,169,1.03,170,1.883,175,4.509,185,1.643,186,0.709,195,0.681,196,1.365,201,0.988,207,3.886,224,1.571,225,1.821,229,2.865,230,1.571,231,3.145,233,1.475,235,1.606,236,1.505,238,1.915,239,4.483,240,4.196,241,3.044,242,3.537,243,1.869,246,2.419,247,3.298,248,1.817,249,3.261,252,2.419,253,3.044,254,2.95,255,1.925,261,2.462,264,1.683,265,1.683,266,1.643,267,3.282,268,1.683,269,1.769,272,1.081,273,1.948,274,1.948,275,2.655,276,1.271,278,1.271,279,1.208,280,1.271,281,1.208,282,2.293,283,1.271,284,1.208,285,1.948,286,1.188,287,1.271,288,1.188,289,1.271,290,1.208,291,1.048,292,1.271,293,1.271,294,1.188,295,1.271,296,1.271,297,1.208,298,3.077,299,1.249,300,1.271,301,2.692,302,2.369,303,1.249,304,1.208,305,2.825,306,1.271,307,1.208,308,1.948,309,1.188,310,1.271,311,1.188,312,1.271,313,1.208,314,1.271,315,1.208,316,1.132,317,1.188,318,1.271,319,1.208,320,1.271,321,1.208,322,1.188,323,1.271,324,1.188,325,1.271,326,1.208,327,1.228,328,1.271,329,1.208,330,1.271,331,1.208,332,2.369,333,1.208,334,1.208,335,1.208,336,1.271,337,1.188,338,1.271,386,3.915,418,1.869,421,1.869,425,1.986,621,5.485,625,1.683,854,1.986,855,1.986,856,3.915,861,2.211,1006,4.76,1012,4.794,1021,4.173,1059,2.644,1105,5.074,1335,5.074,1336,4.173,1342,3.29,1343,5.044,1344,5.044,1345,5.074,1346,3.29,1347,3.29,1348,5.044,1349,3.29,1350,3.29,1351,2.948,1352,2.948,1353,1.643,1354,3.29,1355,3.434,1356,5.044,1357,6.875,1358,2.722,1359,3.29,1360,2.722,1361,3.29,1362,2.722,1363,3.29,1364,5.055,1365,5.055,1366,5.055,1367,2.948,1368,5.044,1369,2.948,1370,2.722,1371,6.133,1372,2.722]],["title/components/HeaderComponent-2.html",[125,0.999,301,1.452,1068,3.274]],["body/components/HeaderComponent-2.html",[0,0.01,2,0.036,3,0.036,4,0.032,6,0.856,8,0.09,14,0.857,17,0.794,20,0.005,21,0.785,24,0.418,25,0.617,27,0.241,34,0.032,36,1.82,37,1.005,41,0.866,56,0.778,62,0.758,68,1.804,72,0.003,73,0.003,83,2.451,125,1.933,126,1.516,127,1.595,128,2.307,129,1.595,130,1.595,134,2.711,135,1.516,136,2.983,137,2.983,138,3.97,139,3.652,140,1.356,141,2.307,143,2.307,146,1.847,147,2.971,153,3.754,154,1.356,169,0.843,170,1.541,185,2.062,186,0.89,224,1.971,225,1.491,231,3.519,236,1.889,238,2.268,239,4.152,240,3.841,264,2.112,265,2.112,266,2.062,267,3.351,268,2.112,272,1.356,273,2.307,274,2.307,275,2.971,276,1.595,278,1.595,279,1.516,280,1.595,281,1.516,282,2.524,283,1.595,284,1.516,285,2.307,286,1.491,287,1.595,288,1.491,289,1.595,290,1.516,291,1.316,292,1.595,293,1.595,294,1.491,295,1.595,296,1.595,297,1.516,298,3.019,299,1.568,300,1.595,301,2.928,302,2.711,303,3.098,304,1.516,305,3.072,306,1.595,307,1.516,308,2.307,309,1.491,310,1.595,311,1.491,312,1.595,313,1.516,314,1.595,315,1.516,316,1.421,317,1.491,318,1.595,319,1.516,320,1.595,321,1.516,322,1.491,323,1.595,324,1.491,325,1.595,326,1.516,327,1.541,328,1.595,329,1.516,330,1.595,331,1.516,332,2.711,333,1.516,334,1.516,335,1.516,336,1.595,337,1.491,338,1.595,386,4.637,621,5.966,854,2.492,855,2.492,856,3.205,1021,4.943,1059,3.131,1068,3.205,1335,5.807,1336,4.943,1367,3.699,1372,3.416,1373,4.129,1374,8.773,1375,5.974,1376,4.129,1377,4.129,1378,4.129]],["title/interfaces/HistoryCollection.html",[118,0.357,1202,3.916]],["body/interfaces/HistoryCollection.html",[0,0.012,2,0.042,3,0.067,4,0.037,8,0.105,9,0.286,11,1.802,13,0.121,16,2.77,20,0.005,27,0.371,30,2.993,31,2.993,32,2.993,34,0.051,35,0.877,44,0.859,51,2.514,56,1.632,58,3.648,62,1.589,72,0.003,73,0.003,93,3.593,94,1.603,118,0.541,124,2.844,169,1.939,186,1.041,197,2.359,201,1.451,202,2.718,339,2.096,365,1.804,367,1.968,370,2.005,373,3.912,392,4.033,463,2.669,827,3.555,901,3.248,908,3.389,1193,6.95,1194,3.998,1195,3.792,1196,4.345,1197,2.745,1198,3.998,1199,3.389,1200,3.389,1201,3.124,1202,5.937,1203,2.745,1204,3.998,1205,3.998,1206,3.998,1207,3.998,1208,3.389,1209,3.998,1210,3.998,1211,3.998,1212,3.998,1213,3.389,1214,3.998,1215,3.998,1216,3.998,1217,3.998,1218,3.389,1219,3.389,1220,3.998,1221,5.364,1222,5.364,1223,3.998,1224,3.998,1225,3.998,1226,3.998,1227,3.553,1228,3.998,1229,3.998,1230,3.389,1231,3.998,1232,3.998,1233,3.998,1234,3.998,1235,3.998,1236,3.998,1237,3.998]],["title/components/HistoryComponent.html",[125,1.195,304,1.852]],["body/components/HistoryComponent.html",[0,0.009,2,0.032,3,0.032,4,0.028,6,0.783,8,0.079,13,0.164,14,0.799,17,0.879,20,0.005,21,0.719,24,0.663,25,0.978,27,0.264,34,0.028,36,2.645,37,0.891,41,0.768,44,0.642,56,0.69,62,0.671,68,1.996,72,0.003,73,0.003,83,2.333,125,1.839,126,1.344,127,1.414,128,1.414,129,1.414,130,1.414,134,2.527,135,1.344,136,2.73,137,2.73,138,3.931,139,3.616,140,1.202,141,2.111,143,2.111,146,1.691,147,2.803,153,3.977,154,1.202,163,3.828,169,0.748,170,1.366,185,1.828,186,0.789,197,1.786,224,1.747,225,1.974,226,1.64,227,1.747,228,1.71,229,3.391,230,2.61,231,2.994,232,1.872,233,2.933,235,3.543,236,1.674,238,2.075,239,1.786,261,1.786,264,1.872,265,1.872,266,1.828,267,2.61,268,1.872,269,2.94,272,1.202,273,2.111,274,2.111,275,2.803,276,1.414,278,1.414,279,1.344,280,1.414,281,1.344,282,2.402,283,1.414,284,1.344,285,2.111,286,1.322,287,1.414,288,1.322,289,1.414,290,1.344,291,1.166,292,1.414,293,1.414,294,1.322,295,1.414,296,1.414,297,1.344,298,2.673,299,1.39,300,1.414,301,2.252,302,2.527,303,1.39,304,2.665,305,3.135,306,1.414,307,1.344,308,2.111,309,1.322,310,1.414,311,1.322,312,1.414,313,1.344,314,1.414,315,1.344,316,1.259,317,1.322,318,1.414,319,1.344,320,1.414,321,1.344,322,1.322,323,1.414,324,1.322,325,1.414,326,1.344,327,1.366,328,1.414,329,1.344,330,1.414,331,1.344,332,2.527,333,1.344,334,1.344,335,1.344,336,1.414,337,1.322,338,1.414,421,2.079,428,1.747,429,1.674,624,5.269,625,3.712,626,2.283,627,3.198,852,2.566,853,2.691,854,2.209,855,2.209,904,7.777,921,2.46,922,2.366,1379,3.66,1380,6.544,1381,5.467,1382,4.589,1383,5.079,1384,5.467,1385,3.66,1386,3.66,1387,3.66,1388,5.467,1389,5.467,1390,5.467,1391,5.467,1392,4.523,1393,5.467,1394,4.243,1395,3.279,1396,3.279,1397,3.66]],["title/injectables/HistoryEffects.html",[339,1.584,1398,4.175]],["body/injectables/HistoryEffects.html",[0,0.01,2,0.034,3,0.034,4,0.03,7,1.406,8,0.084,9,0.244,13,0.097,14,0.471,17,0.972,19,0.609,20,0.005,21,0.507,22,0.568,24,0.841,25,1.241,27,0.356,34,0.03,38,2.947,42,4.005,50,4.005,57,3.808,63,3.808,69,3.808,72,0.003,73,0.003,186,0.831,191,2.328,192,2.256,201,1.158,202,1.37,339,2.118,343,2.328,346,5.858,348,4.985,349,6.186,357,6.15,358,6.15,360,6.15,361,4.718,362,5.917,364,2.022,365,1.44,366,2.592,367,1.571,369,2.592,370,1.6,538,3.191,539,3.191,544,2.836,545,2.705,809,4.23,1201,5.553,1398,4.702,1399,3.857,1400,3.857,1401,5.684,1402,5.684,1403,7.102,1404,5.684,1405,4.411,1406,5.684,1407,5.684,1408,3.857,1409,5.684,1410,5.684,1411,5.684,1412,4.411,1413,5.684,1414,5.684,1415,5.684,1416,3.857,1417,5.684,1418,5.684,1419,5.684,1420,3.857,1421,5.684,1422,5.684,1423,5.684,1424,6.447,1425,8.306,1426,5.684,1427,5.684,1428,3.857,1429,5.684,1430,5.684,1431,5.684,1432,5.684,1433,5.684,1434,3.857,1435,5.684,1436,5.684,1437,5.684,1438,5.684,1439,5.684,1440,3.857,1441,3.191]],["title/interfaces/HistoryEntity.html",[16,2.093,118,0.357]],["body/interfaces/HistoryEntity.html",[2,0.045,3,0.045,4,0.04,7,1.002,8,0.112,9,0.3,13,0.222,16,2.902,20,0.005,24,0.524,27,0.32,33,0.875,34,0.065,35,0.869,41,1.781,44,0.852,51,1.576,56,1.6,58,2.849,62,1.558,72,0.004,73,0.004,89,1.998,93,3.522,94,2.194,118,0.56,124,2.788,169,1.968,195,2.074,245,2.711,573,4.091,645,3.026,783,2.417,827,3.938,1353,2.583,1355,4.667,1442,4.28,1443,4.905,1444,4.905,1445,4.905,1446,3.476,1447,4.634,1448,4.522,1449,3.627,1450,3.577,1451,3.627,1452,2.583,1453,2.645,1454,2.645,1455,4.634,1456,4.015,1457,4.634,1458,4.634,1459,5.429,1460,4.015,1461,4.634,1462,3.627,1463,4.634,1464,7.1,1465,4.634,1466,4.634,1467,4.634,1468,6.266,1469,4.905,1470,3.627]],["title/components/HistoryEntryComponent.html",[125,1.195,307,1.852]],["body/components/HistoryEntryComponent.html",[0,0.006,2,0.019,3,0.019,4,0.017,6,0.523,7,0.991,8,0.048,9,0.156,11,1.512,13,0.194,14,0.268,17,0.954,19,0.861,20,0.005,21,0.858,22,0.962,24,0.613,25,0.904,27,0.321,28,0.28,30,0.984,31,0.984,32,0.984,34,0.017,35,0.678,36,2.48,37,0.534,38,1.145,41,0.46,43,1.637,44,0.641,49,2.72,51,1.426,56,1.366,57,2.789,58,2.66,62,1.27,63,1.865,67,1.246,68,1.678,69,1.865,72,0.002,73,0.002,83,1.817,91,1.419,93,1.513,124,1.537,125,1.433,126,0.806,127,0.848,128,0.848,129,0.848,130,0.848,134,1.808,135,0.806,136,1.822,137,1.822,138,3.715,139,3.417,140,0.721,141,1.409,143,1.409,145,3.437,146,1.128,147,2.106,153,3.671,154,1.198,156,1.122,157,2.612,158,3.722,161,3.526,169,1.414,170,2.583,175,3.441,177,1.816,181,2.201,185,1.096,186,0.473,187,1.284,188,2.134,189,1.212,190,1.324,195,0.454,196,0.91,197,1.071,201,0.659,202,1.296,203,1.475,204,1.475,205,1.369,207,3.172,209,1.816,221,1.071,224,1.048,225,2.939,226,2.444,227,2.603,228,3.051,229,2.547,230,2.234,231,2.141,233,1.635,234,2.92,235,1.071,236,3.723,237,1.122,238,2.628,239,3.786,240,3.619,241,1.324,242,2.558,243,1.246,244,1.816,245,2.453,246,2.682,247,3.722,248,2.585,249,3.526,250,2.682,251,1.539,252,1.613,253,2.825,254,2.134,255,2.134,257,3.018,259,3.402,261,2.662,262,1.475,263,1.613,264,1.122,265,1.122,266,1.096,267,2.603,268,1.122,269,1.961,270,3.018,271,3.018,272,0.721,273,1.409,274,1.808,275,2.106,276,0.848,278,0.848,279,0.806,280,0.848,281,0.806,282,1.872,283,0.848,284,0.806,285,1.409,286,0.792,287,0.848,288,0.792,289,0.848,290,0.806,291,0.699,292,0.848,293,0.848,294,0.792,295,0.848,296,0.848,297,0.806,298,2.083,299,0.833,300,0.848,301,1.611,302,1.808,303,0.833,304,0.806,305,2.617,306,0.848,307,2.002,308,1.409,309,0.792,310,0.848,311,0.792,312,0.848,313,0.806,314,0.848,315,0.806,316,0.755,317,0.792,318,0.848,319,0.806,320,0.848,321,0.806,322,0.792,323,0.848,324,0.792,325,0.848,326,0.806,327,0.819,328,0.848,329,0.806,330,0.848,331,0.806,332,1.808,333,0.806,334,0.806,335,0.806,336,0.848,337,0.792,338,0.848,375,2.495,419,1.15,428,1.741,429,1.669,538,1.816,539,1.816,544,1.613,545,1.539,619,2.276,627,1.284,820,2.658,839,3.873,850,1.613,851,2.92,857,1.703,929,2.558,1111,3.146,1126,5.403,1289,4.318,1382,3.282,1383,3.633,1471,8.56,1472,7.669,1473,1.966,1474,5.422,1475,4.193,1476,3.268,1477,3.268,1478,6.738,1479,2.194,1480,2.194,1481,2.194,1482,2.194,1483,1.966,1484,2.194,1485,3.268,1486,2.194,1487,1.966,1488,2.194,1489,2.194,1490,3.647,1491,2.194,1492,2.194,1493,2.194,1494,3.647,1495,2.194,1496,4.193,1497,2.194,1498,2.194,1499,1.613,1500,1.966,1501,1.966,1502,1.966,1503,5.453,1504,1.966,1505,2.194,1506,2.194,1507,1.966,1508,1.966,1509,1.816,1510,1.966,1511,1.816,1512,2.194,1513,2.194,1514,2.194,1515,2.194,1516,2.194,1517,2.194,1518,2.194,1519,2.194,1520,1.966,1521,4.885,1522,3.268,1523,3.268,1524,3.268,1525,3.873,1526,1.816,1527,1.966,1528,1.966,1529,1.816,1530,1.966,1531,3.268,1532,1.966,1533,1.816,1534,3.268]],["title/interfaces/HistoryGrouping.html",[118,0.357,163,2.952]],["body/interfaces/HistoryGrouping.html",[2,0.055,3,0.055,4,0.049,8,0.138,9,0.343,13,0.231,20,0.005,30,3.591,31,3.591,32,3.591,34,0.074,44,0.898,51,2.671,56,1.51,62,1.47,72,0.004,73,0.004,89,2.459,93,3.323,94,2.357,118,0.684,124,2.631,154,2.631,163,4.686,214,6.45,316,2.191,820,5.224,827,2.744,1012,5.947,1087,3.973,1448,4.117,1535,4.465,1536,6.763]],["title/interfaces/HistoryListItem.html",[118,0.357,820,2.866]],["body/interfaces/HistoryListItem.html",[2,0.052,3,0.052,4,0.046,8,0.129,9,0.329,13,0.246,20,0.005,30,3.446,31,3.446,32,3.446,34,0.073,44,0.906,51,2.592,56,1.752,62,1.705,72,0.004,73,0.004,89,3.285,93,3.856,94,2.378,118,0.672,124,3.053,154,3.125,163,3.492,214,4.186,316,3.091,820,4.831,827,3.87,1012,3.86,1087,5.604,1448,3.86,1535,4.186,1536,4.389]],["title/injectables/HistoryService.html",[339,1.584,1201,3.263]],["body/injectables/HistoryService.html",[0,0.009,2,0.057,3,0.057,4,0.028,8,0.08,9,0.236,11,0.808,13,0.23,14,0.451,16,2.731,17,1.04,19,1.431,20,0.005,21,1.191,22,1.335,27,0.342,30,3.27,31,3.27,32,3.27,34,0.042,35,0.802,36,1.127,43,2.456,44,0.887,51,2.493,56,1.47,57,2.817,58,3.791,62,1.431,63,2.817,69,2.817,72,0.003,73,0.003,93,3.237,94,1.322,118,0.389,124,2.562,146,1.704,169,1.993,186,0.797,197,1.805,201,1.11,202,3.162,339,2.066,365,1.38,367,1.506,370,1.534,373,4.333,392,4.133,463,2.042,807,3.043,827,3.143,901,2.485,908,2.593,1193,6.576,1194,3.059,1195,4.144,1196,4.646,1197,2.1,1198,3.059,1199,2.593,1200,2.593,1201,3.562,1202,6.055,1203,3.129,1204,3.059,1205,3.059,1206,4.558,1207,3.059,1208,2.593,1209,3.059,1210,3.059,1211,3.059,1212,4.558,1213,2.593,1214,3.059,1215,3.059,1216,3.059,1217,4.558,1218,2.593,1219,2.593,1220,4.558,1221,4.617,1222,4.617,1223,4.558,1224,4.558,1225,4.558,1226,3.059,1227,2.719,1228,3.059,1229,3.059,1230,3.863,1231,3.059,1232,4.558,1233,3.059,1234,3.059,1235,3.059,1236,3.059,1237,3.059,1537,5.509,1538,5.509,1539,5.509,1540,5.509,1541,4.935,1542,2.719,1543,5.509,1544,3.698,1545,3.698,1546,3.698,1547,3.698,1548,3.698,1549,3.698,1550,3.698,1551,3.698,1552,3.698]],["title/components/HomeComponent.html",[125,1.195,309,1.822]],["body/components/HomeComponent.html",[0,0.009,2,0.031,3,0.031,4,0.027,6,0.768,8,0.077,9,0.23,11,1.171,13,0.089,14,0.786,17,0.729,20,0.005,21,0.704,24,0.361,25,0.533,27,0.216,34,0.027,36,1.633,37,0.867,41,0.748,44,0.474,56,1.578,62,1.409,68,2.151,72,0.003,73,0.003,82,2.741,83,2.514,125,1.819,126,1.309,127,1.377,128,1.377,129,1.377,130,1.377,134,2.488,135,1.309,138,3.921,139,3.607,140,1.171,141,2.07,143,2.07,146,1.657,147,2.767,154,1.171,169,0.728,170,1.331,186,0.768,225,2.587,226,3.616,227,3.419,228,3.588,229,2.504,230,2.558,231,1.631,233,1.598,236,3.691,237,3.294,238,2.035,239,3.144,240,2.677,251,2.499,261,1.74,264,1.823,265,1.823,266,1.78,267,1.702,268,1.823,269,4.339,272,1.171,273,2.07,274,2.966,275,2.767,276,1.377,278,1.377,279,1.309,280,1.377,281,1.309,282,2.375,283,1.377,284,1.309,285,2.07,286,1.287,287,1.377,288,1.287,289,1.377,290,1.309,291,1.136,292,1.377,293,1.377,294,1.287,295,1.377,296,1.377,297,1.309,298,2.643,299,2.445,300,1.377,301,2.216,302,2.488,303,1.353,304,1.309,305,2.914,306,1.377,307,1.309,308,2.07,309,2.587,310,1.377,311,1.287,312,1.377,313,1.309,314,1.377,315,1.309,316,1.227,317,1.287,318,1.377,319,1.309,320,1.377,321,1.309,322,1.287,323,1.377,324,1.287,325,1.377,326,1.309,327,1.331,328,1.377,329,1.309,330,1.377,331,1.309,332,2.488,333,1.309,334,1.309,335,1.309,336,1.377,337,1.287,338,1.377,419,4.026,428,2.558,429,2.452,615,2.499,625,2.741,626,2.224,846,5.267,850,5.932,852,2.499,854,2.151,855,2.151,1063,2.499,1144,3.758,1339,5.927,1392,5.927,1553,3.564,1554,7.163,1555,6.441,1556,5.359,1557,8.613,1558,5.359,1559,3.564,1560,4.802,1561,5.359,1562,4.802,1563,5.359,1564,4.434,1565,5.359,1566,4.802,1567,5.359,1568,5.359,1569,5.359,1570,5.359,1571,5.359,1572,4.802,1573,5.359,1574,3.564,1575,5.359,1576,4.802,1577,3.564,1578,3.193,1579,3.564,1580,3.564,1581,3.193,1582,3.564,1583,3.564,1584,3.564,1585,3.564,1586,3.193,1587,3.564]],["title/modules/HomeModule.html",[433,2.133,448,3.71]],["body/modules/HomeModule.html",[0,0.018,2,0.061,3,0.061,4,0.054,20,0.005,27,0.384,34,0.065,72,0.004,73,0.004,186,1.513,272,2.307,309,3.578,433,3.597,435,3.989,436,5.526,437,4.239,438,3.508,448,7.286,453,5.136,454,2.342,455,4.108,457,4.978,654,5.503,655,4.382,1588,6.292,1589,6.292,1590,7.023,1591,7.023]],["title/interfaces/IHasId.html",[118,0.357,1110,3.916]],["body/interfaces/IHasId.html",[2,0.064,3,0.064,4,0.056,8,0.159,9,0.374,13,0.184,20,0.005,34,0.072,44,0.873,72,0.004,73,0.004,118,0.682,161,4.738,827,4.25,1106,5.688,1107,6.063,1108,6.063,1110,6.776,1111,4.925,1112,6.063]],["title/classes/IncrementDaysToShow.html",[0,0.013,1592,4.175]],["body/classes/IncrementDaysToShow.html",[0,0.021,2,0.058,3,0.058,4,0.051,6,1.182,7,1.283,8,0.145,9,0.354,10,2.181,12,2.121,13,0.249,14,0.815,17,1.013,19,1.055,20,0.005,21,0.878,22,0.984,24,0.676,25,0.998,27,0.27,28,0.853,34,0.069,35,0.655,39,1.67,72,0.004,73,0.004,85,4.684,94,2.307,225,2.412,1592,7.41,1593,5.984,1594,9.612,1595,6.68,1596,8.253,1597,6.68,1598,8.957,1599,6.68,1600,6.68]],["title/components/LibraryComponent.html",[125,1.195,311,1.822]],["body/components/LibraryComponent.html",[0,0.009,2,0.032,3,0.032,4,0.028,6,0.79,8,0.08,9,0.236,13,0.165,14,0.452,17,0.926,19,0.585,20,0.005,21,0.866,22,0.546,24,0.375,25,1.166,27,0.352,28,0.473,33,0.626,34,0.028,35,0.363,36,1.68,37,0.901,41,0.777,56,0.698,62,0.679,68,1.693,72,0.003,73,0.003,83,2.344,94,1.324,125,1.848,126,1.359,127,1.43,128,1.43,129,1.43,130,1.43,134,2.545,135,1.359,138,3.934,139,3.619,140,1.216,141,2.13,143,2.13,146,1.705,147,2.819,154,1.216,155,3.063,157,2.92,169,1.126,170,2.058,186,0.798,195,0.766,201,1.112,224,1.767,225,1.337,229,3.41,230,2.632,231,1.694,233,1.66,236,2.523,237,1.893,238,2.093,247,1.991,264,1.893,265,1.893,266,1.849,267,2.632,268,1.893,272,1.216,273,2.13,274,2.13,275,2.819,276,1.43,278,1.43,279,1.359,280,1.43,281,1.359,282,2.414,283,1.43,284,1.359,285,2.13,286,1.337,287,1.43,288,1.337,289,1.43,290,1.359,291,1.18,292,1.43,293,1.43,294,1.337,295,1.43,296,1.43,297,1.359,298,2.686,299,1.406,300,1.43,301,2.267,302,2.545,303,2.501,304,1.359,305,2.955,306,1.43,307,1.359,308,2.13,309,1.337,310,1.43,311,2.636,312,1.43,313,1.359,314,1.43,315,1.359,316,1.274,317,1.337,318,1.43,319,1.359,320,1.43,321,1.359,322,1.337,323,1.43,324,1.337,325,1.43,326,1.359,327,1.382,328,1.43,329,1.359,330,1.43,331,1.359,332,2.545,333,1.359,334,1.359,335,1.359,336,1.43,337,1.337,338,1.43,365,1.382,383,2.722,389,3.867,392,3.207,403,2.394,404,2.31,405,2.722,429,2.523,577,3.706,623,2.874,624,2.31,625,1.893,626,2.31,851,3.44,892,3.063,894,3.063,921,2.488,922,2.394,1578,3.317,1601,3.703,1602,6.589,1603,5.514,1604,6.458,1605,7.3,1606,7.3,1607,6.589,1608,6.589,1609,5.514,1610,3.703,1611,3.703,1612,3.703,1613,3.703,1614,3.703,1615,3.703,1616,3.703,1617,3.703,1618,3.703,1619,3.703,1620,3.703,1621,3.703,1622,5.514,1623,3.703,1624,3.703,1625,3.703,1626,3.703,1627,5.514,1628,3.703,1629,3.317,1630,3.703,1631,5.514]],["title/interfaces/LibraryEntry.html",[118,0.357,1604,4.175]],["body/interfaces/LibraryEntry.html",[2,0.062,3,0.062,4,0.055,8,0.155,9,0.369,13,0.24,20,0.005,34,0.055,44,0.88,56,1.804,72,0.004,73,0.004,94,2.388,118,0.608,1012,6.19,1604,7.115,1632,7.146,1633,9.574,1634,9.574]],["title/modules/LibraryModule.html",[433,2.133,449,3.71]],["body/modules/LibraryModule.html",[0,0.016,2,0.056,3,0.056,4,0.049,20,0.005,27,0.402,34,0.062,72,0.004,73,0.004,186,1.388,272,2.115,301,3.339,311,3.504,433,3.41,435,3.657,436,5.317,437,3.886,438,3.216,449,7.435,451,6.053,453,4.869,454,2.148,455,3.767,457,4.719,485,4.735,487,5.328,654,5.216,655,4.017,1076,5.328,1635,5.769,1636,5.769,1637,6.439,1638,6.439,1639,8.067,1640,5.769,1641,6.439]],["title/classes/LoadHistoryItems.html",[0,0.013,42,2.713]],["body/classes/LoadHistoryItems.html",[0,0.024,1,3.242,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,1.902,12,2.264,13,0.246,14,0.492,16,2.872,17,0.783,19,0.637,20,0.005,21,0.53,22,0.594,24,0.408,25,0.602,26,3.434,27,0.28,28,0.514,29,1.883,30,3.103,31,3.103,32,3.103,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,4.05,41,1.231,42,3.723,43,2.733,44,0.829,45,3.434,46,2.696,47,3.242,48,3.434,49,2.307,50,3.156,51,1.789,52,3.434,53,3.242,54,3.434,55,4.935,56,1.106,57,3.002,58,3.436,59,3.434,60,3.242,61,3.434,62,1.077,63,3.002,64,3.434,65,3.242,66,3.434,67,3.334,68,1.509,69,3.002,70,3.434,71,3.242,72,0.003,73,0.003,1642,2.358,1643,5.87,1644,4.031]],["title/classes/LoadHistoryItemsSucceeded.html",[0,0.013,47,2.787]],["body/classes/LoadHistoryItemsSucceeded.html",[0,0.024,1,3.242,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,2.046,12,2.264,13,0.246,14,0.492,15,2.826,16,3.613,17,0.783,19,0.637,20,0.005,21,0.53,22,0.594,24,0.408,25,0.602,26,3.434,27,0.28,28,0.514,29,1.883,30,3.103,31,3.103,32,3.103,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,3.434,41,1.231,42,3.156,43,2.427,44,0.77,45,4.05,46,2.696,47,3.824,48,3.434,49,2.307,50,3.156,51,1.789,52,3.434,53,3.242,54,3.434,55,4.935,56,1.106,57,3.002,58,3.436,59,3.434,60,3.242,61,3.434,62,1.077,63,3.002,64,3.434,65,3.242,66,3.434,67,3.334,68,1.509,69,3.002,70,3.434,71,3.242,72,0.003,73,0.003,1645,5.87,1646,4.031]],["title/classes/LoadItems.html",[0,0.013,96,3.391]],["body/classes/LoadItems.html",[0,0.023,2,0.046,3,0.046,4,0.04,6,1.316,7,1.344,8,0.114,9,0.303,10,2.258,11,1.545,12,2.222,13,0.247,14,0.642,17,0.904,19,0.831,20,0.005,21,0.691,22,0.775,24,0.532,25,0.786,27,0.212,28,0.671,34,0.076,35,0.874,37,1.279,38,1.65,39,2.23,41,1.103,44,0.855,49,3.505,51,2.945,68,1.351,72,0.004,73,0.004,74,4.753,75,5.993,76,3.687,77,3.534,80,5.2,81,5.2,82,4.561,83,2.678,84,2.685,85,3.687,86,3.687,87,4.753,88,3.4,89,2.031,90,5.2,91,3.4,92,4.572,93,2.181,94,1.262,95,5.875,96,5.37,1647,7.072,1648,5.258]],["title/components/LoadMoreComponent.html",[125,1.195,313,1.852]],["body/components/LoadMoreComponent.html",[0,0.01,2,0.035,3,0.035,4,0.031,6,0.838,7,0.575,8,0.087,9,0.251,11,0.877,13,0.147,14,0.49,17,0.859,19,0.634,20,0.005,21,0.908,22,0.591,24,0.406,25,0.6,27,0.326,28,0.512,34,0.031,36,1.783,37,0.977,41,1.963,56,0.756,62,0.736,68,1.775,72,0.003,73,0.003,83,2.423,94,1.405,125,1.911,126,1.473,127,1.55,128,1.55,129,1.55,130,1.55,134,2.667,135,1.473,138,3.961,139,3.644,140,1.318,141,2.26,143,2.26,146,1.81,147,2.931,154,1.318,156,2.053,157,3.37,169,1.195,170,2.184,186,0.865,195,0.831,196,1.665,201,1.205,207,2.104,224,1.916,225,2.113,226,1.799,227,1.916,228,2.734,229,2.734,230,1.916,233,1.799,235,1.959,238,2.222,239,1.959,240,2.004,247,2.158,248,2.217,253,2.422,254,2.348,255,2.348,260,2.697,261,1.959,269,2.158,272,1.318,273,2.26,274,2.26,275,2.931,276,1.55,278,1.55,279,1.473,280,1.55,281,1.473,282,2.495,283,1.55,284,1.473,285,2.26,286,1.449,287,1.55,288,1.449,289,1.55,290,1.473,291,1.279,292,1.55,293,1.55,294,1.449,295,1.55,296,1.55,297,1.473,298,2.777,299,1.524,300,1.55,301,2.377,302,2.667,303,1.524,304,1.473,305,3.219,306,1.55,307,1.473,308,2.26,309,1.449,310,1.55,311,1.449,312,1.55,313,2.786,314,1.55,315,1.473,316,1.381,317,1.449,318,1.55,319,1.473,320,1.55,321,1.473,322,1.449,323,1.55,324,1.449,325,1.55,326,1.473,327,1.498,328,1.55,329,1.473,330,1.55,331,1.473,332,2.667,333,1.473,334,1.473,335,1.473,336,1.55,337,1.449,338,1.55,421,2.28,425,2.422,428,1.916,624,2.504,625,2.053,627,2.348,1649,8.069,1650,7.23,1651,4.014,1652,7.23,1653,6.906,1654,5.852,1655,7.59,1656,7.59,1657,5.852,1658,4.014,1659,4.014,1660,4.842,1661,3.596,1662,4.014,1663,3.321,1664,3.596]],["title/classes/LoadOptions.html",[0,0.013,1665,3.71]],["body/classes/LoadOptions.html",[0,0.023,2,0.058,3,0.058,4,0.051,6,1.278,7,1.336,8,0.144,9,0.352,12,2.208,13,0.245,14,1.089,17,0.929,20,0.005,22,1.209,24,0.67,25,0.989,27,0.267,28,0.845,34,0.074,35,0.804,39,1.655,41,1.722,44,0.585,46,2.207,62,1.636,72,0.004,73,0.004,1665,6.558,1666,5.475,1667,8.206,1668,7.991,1669,7.352,1670,6.369]],["title/classes/LoadOptionsSucceeded.html",[0,0.013,1670,3.916]],["body/classes/LoadOptionsSucceeded.html",[0,0.022,2,0.055,3,0.055,4,0.049,6,1.253,7,1.315,8,0.138,9,0.342,10,2.111,12,2.175,13,0.249,14,0.975,17,0.99,19,1.001,20,0.005,21,0.833,22,1.289,24,0.642,25,0.947,27,0.256,28,0.809,34,0.073,35,0.783,39,1.585,41,1.676,44,0.837,46,2.115,62,1.8,72,0.004,73,0.004,1665,5.874,1666,5.245,1668,7.157,1669,7.837,1670,6.789,1671,5.245,1672,7.989,1673,6.34]],["title/classes/LoadProfile.html",[0,0.013,1674,3.391]],["body/classes/LoadProfile.html",[0,0.023,2,0.049,3,0.049,4,0.043,6,1.304,7,1.339,8,0.121,9,0.315,10,2.176,12,2.213,13,0.248,14,0.682,17,0.932,19,0.882,20,0.005,21,0.734,22,0.823,24,0.566,25,0.835,27,0.297,28,0.713,33,0.945,34,0.075,35,0.858,39,2.189,41,1.545,43,2.806,44,0.855,46,2.456,72,0.004,73,0.004,84,2.795,291,3.117,1136,4.708,1642,3.268,1674,5.535,1675,4.107,1676,7.363,1677,6.392,1678,5.586,1679,5.715,1680,5.163,1681,5.715,1682,5.163,1683,5.715,1684,5.163]],["title/classes/LoadProfileSucceeded.html",[0,0.013,1680,3.538]],["body/classes/LoadProfileSucceeded.html",[0,0.023,2,0.049,3,0.049,4,0.043,6,1.304,7,1.339,8,0.121,9,0.315,10,2.176,12,2.213,13,0.248,14,0.682,17,0.932,19,0.882,20,0.005,21,0.734,22,0.823,24,0.566,25,0.835,27,0.297,28,0.713,33,0.945,34,0.075,35,0.858,39,2.189,41,1.545,43,2.211,44,0.775,46,2.456,72,0.004,73,0.004,84,2.795,291,3.261,1136,4.708,1674,4.948,1675,4.107,1677,5.715,1679,6.392,1680,5.775,1681,5.715,1682,5.163,1683,5.715,1684,5.163,1685,5.586,1686,7.363,1687,5.586]],["title/classes/LoadProgressItems.html",[0,0.013,107,3.045]],["body/classes/LoadProgressItems.html",[0,0.024,2,0.041,3,0.041,4,0.036,6,1.335,7,1.355,8,0.103,9,0.283,10,2.165,11,1.996,12,2.24,13,0.247,14,0.58,17,0.858,19,0.751,20,0.005,21,0.625,22,0.7,24,0.481,25,0.71,27,0.306,28,0.607,33,0.804,34,0.076,35,0.895,37,1.156,38,1.492,39,2.285,41,1.385,43,2.744,44,0.837,46,2.529,49,2.594,51,2.011,58,2.688,72,0.003,73,0.003,82,3.375,83,1.982,97,4.118,98,3.073,99,3.62,102,4.435,103,3.194,104,4.077,105,5.25,106,5.096,107,4.576,108,4.435,109,4.118,110,4.435,111,3.983,112,4.435,113,4.118,114,4.435,115,3.375,116,4.435,117,4.118,1642,2.78,1688,6.6,1689,4.752]],["title/classes/LoadProgressItemsSucceeded.html",[0,0.013,109,3.148]],["body/classes/LoadProgressItemsSucceeded.html",[0,0.024,2,0.041,3,0.041,4,0.036,6,1.335,7,1.355,8,0.103,9,0.283,10,2.165,11,2.114,12,2.24,13,0.247,14,0.58,15,3.332,17,0.858,19,0.751,20,0.005,21,0.625,22,0.7,24,0.481,25,0.71,27,0.306,28,0.607,33,0.804,34,0.076,35,0.895,37,1.156,38,1.492,39,2.285,41,1.385,43,2.277,44,0.762,46,2.529,49,2.594,51,2.011,58,2.688,72,0.003,73,0.003,82,3.375,83,1.982,97,4.118,98,3.073,99,4.362,102,4.435,103,3.194,104,4.077,105,5.25,106,4.435,107,3.983,108,5.096,109,4.731,110,4.435,111,3.983,112,4.435,113,4.118,114,4.435,115,3.375,116,4.435,117,4.118,1690,6.6,1691,4.752]],["title/classes/LoadTimerInfo.html",[0,0.013,812,2.866]],["body/classes/LoadTimerInfo.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,0.978,12,2.266,13,0.247,14,0.896,16,2.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,2.529,44,0.795,46,1.493,56,1.193,62,1.161,68,1.151,72,0.003,73,0.003,84,3.03,94,1.075,124,1.471,150,2.896,151,2.896,152,2.896,221,2.186,232,5.016,258,3.022,373,3.237,375,2.896,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.318,804,3.318,805,3.949,806,3.949,807,3.496,808,3.949,809,3.595,810,2.619,811,4.581,812,4.17,813,3.949,814,3.703,1642,2.619,1692,6.33,1693,4.478]],["title/components/LockedHistoryEntryComponent.html",[125,1.195,315,1.852]],["body/components/LockedHistoryEntryComponent.html",[0,0.007,2,0.024,3,0.024,4,0.021,6,0.627,7,0.975,8,0.06,9,0.188,11,1.662,13,0.156,14,0.335,17,0.821,19,0.434,20,0.005,21,0.718,22,0.404,24,0.443,25,0.654,27,0.329,28,0.35,34,0.021,35,0.269,36,2.957,37,0.668,41,0.576,43,1.871,44,0.387,56,1.174,62,1.002,68,1.749,72,0.002,73,0.002,83,2.043,124,0.902,125,1.611,126,1.008,127,1.06,128,1.06,129,1.06,130,1.06,134,2.108,135,1.008,136,2.186,137,2.186,138,3.82,139,3.514,140,0.902,141,1.691,143,1.691,145,3.865,146,1.354,147,2.406,153,3.04,154,0.902,156,1.404,157,2.901,158,4.091,169,0.894,170,1.634,181,2.642,185,1.371,186,0.592,187,1.606,188,2.561,189,1.516,190,1.657,195,0.568,196,1.139,197,1.34,201,0.824,202,1.555,203,1.845,204,1.845,205,1.713,207,1.439,224,1.31,225,3.015,226,2.792,227,2.974,228,3.388,229,2.91,230,2.606,231,2.002,233,1.962,234,1.713,235,1.34,236,3.899,237,1.404,238,2.583,239,4.357,240,4.333,241,1.657,242,3.069,243,1.559,244,2.271,245,1.439,247,2.354,248,1.516,250,4.014,251,1.925,253,1.657,257,3.622,259,3.886,261,3.04,262,1.845,264,1.404,265,1.404,266,1.371,267,2.974,268,1.404,272,0.902,273,1.691,274,2.108,275,2.406,276,1.06,278,1.06,279,1.008,280,1.06,281,1.008,282,2.104,283,1.06,284,1.008,285,1.691,286,0.991,287,1.06,288,0.991,289,1.06,290,1.008,291,0.875,292,1.06,293,1.06,294,0.991,295,1.06,296,1.06,297,1.008,298,2.342,299,1.042,300,1.06,301,1.879,302,2.108,303,1.042,304,1.008,305,2.853,306,1.06,307,1.008,308,1.691,309,0.991,310,1.06,311,0.991,312,1.06,313,1.008,314,1.06,315,2.287,316,3.072,317,0.991,318,1.06,319,1.008,320,1.06,321,1.008,322,0.991,323,1.06,324,0.991,325,1.06,326,1.008,327,1.025,328,1.06,329,1.008,330,1.06,331,1.008,332,2.108,333,1.008,334,1.008,335,1.008,336,1.06,337,0.991,338,1.06,375,2.85,419,1.439,428,2.09,429,2.002,544,2.018,545,1.925,619,2.731,627,1.606,820,3.101,850,2.018,851,3.406,857,2.131,1289,4.747,1473,2.459,1474,6.097,1475,4.891,1476,3.922,1478,7.295,1483,2.459,1496,4.891,1499,2.018,1507,2.459,1508,2.459,1509,2.271,1510,2.459,1511,2.271,1521,5.581,1522,3.922,1523,3.922,1524,3.922,1525,4.517,1526,2.271,1527,2.459,1532,4.891,1533,4.517,1534,3.922,1694,7.609,1695,6.817,1696,2.745,1697,2.745,1698,2.745,1699,5.459,1700,2.745,1701,2.745,1702,3.622,1703,3.622,1704,2.745]],["title/components/LoginComponent.html",[125,1.195,317,1.822]],["body/components/LoginComponent.html",[0,0.01,2,0.033,3,0.033,4,0.029,6,0.801,8,0.082,9,0.24,11,0.824,13,0.185,14,0.46,17,0.991,19,0.883,20,0.005,21,0.968,22,0.824,27,0.344,28,0.481,33,0.638,34,0.029,36,1.703,37,0.918,41,0.791,56,0.711,62,0.692,68,1.712,72,0.003,73,0.003,83,2.362,125,1.863,126,1.384,127,1.456,128,1.456,129,1.456,130,1.456,134,2.572,135,1.384,138,3.941,139,3.625,140,1.238,141,2.159,143,2.159,146,1.729,147,2.845,154,1.238,156,1.928,157,3.296,169,1.607,170,2.936,186,0.813,195,0.781,196,1.564,201,1.132,207,4.123,225,2.018,226,2.505,227,1.8,228,2.611,231,2.557,238,2.122,239,2.728,240,2.791,267,1.8,272,1.238,273,2.159,274,2.572,275,2.845,276,1.456,278,1.456,279,1.384,280,1.456,281,1.384,282,2.637,283,1.456,284,1.384,285,2.159,286,1.362,287,1.456,288,1.362,289,1.456,290,1.384,291,1.201,292,1.456,293,1.456,294,1.362,295,2.572,296,1.456,297,1.384,298,2.707,299,1.432,300,1.456,301,2.292,302,2.572,303,1.432,304,1.384,305,2.975,306,1.456,307,1.384,308,2.159,309,1.362,310,1.456,311,1.362,312,1.456,313,1.384,314,1.456,315,1.384,316,1.298,317,2.66,318,1.456,319,1.384,320,1.456,321,1.384,322,1.362,323,1.456,324,1.362,325,1.456,326,1.384,327,1.408,328,1.456,329,1.384,330,1.456,331,1.384,332,2.572,333,1.384,334,1.384,335,1.384,336,1.456,337,1.362,338,1.456,365,1.408,392,3.746,419,1.976,427,2.534,428,1.8,429,1.725,516,3.406,546,2.438,561,5.416,562,4.595,577,2.534,600,5.416,606,2.668,615,2.644,638,2.644,678,3.861,680,3.861,688,3.861,769,3.006,1313,2.534,1318,2.927,1705,3.771,1706,6.66,1707,5.589,1708,5.589,1709,5.589,1710,3.771,1711,3.771,1712,3.771,1713,3.771,1714,3.771,1715,3.771,1716,3.378,1717,3.378,1718,3.378,1719,3.378,1720,3.12,1721,3.12,1722,3.12,1723,3.771,1724,3.378]],["title/classes/Logout.html",[0,0.013,766,2.645]],["body/classes/Logout.html",[0,0.024,2,0.04,3,0.04,4,0.035,6,1.374,7,1.387,8,0.098,9,0.274,10,1.688,12,2.293,13,0.246,14,1.124,17,0.723,20,0.005,24,0.459,25,0.678,27,0.258,28,0.579,33,0.767,34,0.078,35,0.93,39,2.007,44,0.748,72,0.003,73,0.003,282,2.934,454,1.512,516,4.104,527,4.847,590,2.438,592,2.438,594,2.438,603,3.749,606,3.529,678,3.347,680,3.347,681,3.347,688,3.347,725,3.831,754,2.652,758,3.854,759,3.434,760,3.854,761,3.627,762,3.854,763,4.558,764,3.854,765,3.854,766,4.727,767,4.549,768,3.854,769,3.434,770,3.854,1725,6.387]],["title/classes/MarkComplete.html",[0,0.013,115,2.581]],["body/classes/MarkComplete.html",[0,0.023,2,0.04,3,0.04,4,0.036,6,1.326,7,1.348,8,0.101,9,0.278,10,2.336,11,1.982,12,2.228,13,0.247,14,0.566,17,0.917,19,0.732,20,0.005,21,0.609,22,0.683,24,0.47,25,0.693,27,0.302,28,0.592,33,0.784,34,0.076,35,0.889,37,1.128,38,1.455,39,2.269,41,1.361,43,2.725,44,0.832,46,2.496,49,2.55,51,1.977,58,3.696,72,0.003,73,0.003,82,3.318,83,1.948,97,4.048,98,2.998,99,3.572,102,4.36,103,3.116,104,4.88,105,5.227,106,4.36,107,3.915,108,4.36,109,4.048,110,4.36,111,3.915,112,4.36,113,4.048,114,5.029,115,3.827,116,4.36,117,4.048,1642,2.713,1726,6.488,1727,6.488]],["title/interfaces/MarkCompleteEntity.html",[118,0.357,913,3.538]],["body/interfaces/MarkCompleteEntity.html",[2,0.048,3,0.048,4,0.042,7,1.048,8,0.12,9,0.313,11,1.208,13,0.205,20,0.005,24,0.56,27,0.295,34,0.067,35,0.855,44,0.772,51,2.229,72,0.004,73,0.004,88,6.025,89,3.166,93,3.866,94,1.968,118,0.579,169,1.941,195,2.041,245,2.9,573,3.236,783,2.584,827,4.095,913,5.748,1059,2.9,1353,2.763,1355,4.53,1412,5.678,1443,5.13,1444,5.13,1445,5.13,1446,3.718,1449,3.879,1450,3.741,1451,3.879,1452,2.763,1453,2.829,1454,2.829,1462,3.879,1469,5.13,1470,5.13,1728,4.577,1729,4.577,1730,4.294,1731,4.294,1732,4.956,1733,4.956,1734,4.956,1735,4.956,1736,4.956,1737,4.956,1738,4.956,1739,4.956,1740,4.956,1741,4.956,1742,4.956,1743,4.956]],["title/interfaces/MarkCompleteItem.html",[118,0.357,821,3.916]],["body/interfaces/MarkCompleteItem.html",[2,0.064,3,0.064,4,0.056,8,0.158,9,0.373,13,0.233,20,0.005,34,0.056,44,0.823,72,0.004,73,0.004,88,6.232,89,3.594,93,3.999,94,2.234,118,0.615,821,6.756,827,4.153,1744,7.291,1745,7.291]],["title/interfaces/MarkCompletePayload.html",[104,2.713,118,0.357]],["body/interfaces/MarkCompletePayload.html",[2,0.061,3,0.061,4,0.054,8,0.152,9,0.364,13,0.213,20,0.005,34,0.07,44,0.91,51,2.898,56,1.32,62,1.285,72,0.004,73,0.004,93,2.907,94,2.196,104,4.57,118,0.672,122,4.098,124,2.301,818,4.913,819,4.53,824,5.151,826,5.796,827,3.019,828,6.078]],["title/classes/MarkCompleteSucceeded.html",[0,0.013,117,3.148]],["body/classes/MarkCompleteSucceeded.html",[0,0.024,2,0.041,3,0.041,4,0.036,6,1.335,7,1.355,8,0.103,9,0.283,10,2.165,11,1.996,12,2.24,13,0.247,14,0.58,17,0.858,19,0.751,20,0.005,21,0.625,22,0.7,24,0.481,25,0.71,27,0.306,28,0.607,33,0.804,34,0.076,35,0.895,37,1.156,38,1.492,39,2.285,41,1.385,43,2.277,44,0.762,46,2.529,49,2.594,51,2.011,58,3.629,72,0.003,73,0.003,82,3.375,83,1.982,97,4.118,98,3.073,99,3.62,102,4.435,103,3.194,104,4.913,105,5.25,106,4.435,107,3.983,108,4.435,109,4.118,110,4.435,111,3.983,112,4.435,113,4.118,114,4.435,115,3.375,116,5.096,117,4.731,1746,3.689,1747,6.6,1748,4.752]],["title/components/NavComponent.html",[125,1.195,319,1.852]],["body/components/NavComponent.html",[0,0.005,2,0.045,3,0.017,4,0.015,6,0.482,8,0.073,9,0.144,11,0.954,13,0.166,14,0.243,17,0.893,19,0.315,20,0.005,21,0.818,22,0.294,24,0.671,25,0.989,27,0.267,33,0.337,34,0.015,36,1.026,37,0.485,41,0.418,56,0.376,62,0.366,68,1.123,72,0.002,73,0.002,83,1.988,125,1.358,126,0.732,127,0.77,128,1.3,129,0.77,130,0.77,134,1.687,135,0.732,136,1.681,137,1.681,138,3.665,139,3.395,140,0.655,141,1.3,143,1.3,145,4.925,146,1.041,147,1.982,153,2.505,154,0.655,158,3.345,169,0.892,170,1.631,181,2.032,185,0.996,186,0.43,187,1.969,188,1.167,189,1.859,201,0.599,221,0.973,224,0.952,225,3.384,226,3.119,227,2.45,228,2.906,229,3.094,230,2.738,231,2.846,233,2.968,234,3.578,235,0.973,236,3.525,237,2.625,238,1.278,239,3.536,240,3.475,241,1.204,243,3.257,247,4.798,248,1.859,253,2.032,254,1.969,255,3.003,261,2.799,264,1.722,265,1.722,266,1.681,267,2.45,268,1.722,269,4.836,272,0.655,273,1.3,274,1.687,275,1.982,276,0.77,278,0.77,279,0.732,280,0.77,281,0.732,282,1.773,283,0.77,284,0.732,285,1.3,286,0.72,287,0.77,288,0.72,289,0.77,290,0.732,291,0.635,292,0.77,293,0.77,294,0.72,295,0.77,296,0.77,297,0.732,298,2.279,299,0.757,300,0.77,301,1.503,302,1.687,303,1.659,304,0.732,305,2.705,306,0.77,307,0.732,308,1.3,309,0.72,310,0.77,311,0.72,312,0.77,313,0.732,314,0.77,315,0.732,316,0.686,317,0.72,318,0.77,319,1.884,320,0.77,321,0.732,322,0.72,323,0.77,324,0.72,325,0.77,326,0.732,327,0.744,328,0.77,329,0.732,330,0.77,331,0.732,332,1.687,333,0.732,334,0.732,335,0.732,336,0.77,337,0.72,338,0.77,361,2.482,384,4.925,419,1.045,420,1.787,421,2.915,425,2.032,427,3.45,428,2.738,429,2.348,430,4.745,431,2.613,506,3.098,521,3.016,563,6.531,577,2.263,616,1.65,617,2.475,619,1.244,624,1.244,625,2.625,627,1.167,645,4.382,725,2.45,766,3.926,846,2.475,851,1.244,852,2.361,853,1.466,854,1.204,855,1.204,861,1.34,862,2.786,921,5.034,922,3.319,929,1.398,1059,1.045,1063,1.398,1131,3.615,1144,1.398,1339,2.786,1341,1.65,1370,5.479,1372,1.65,1392,2.786,1576,1.787,1586,1.787,1663,1.65,1664,1.787,1749,1.994,1750,4.369,1751,3.367,1752,5.133,1753,5.133,1754,5.133,1755,5.133,1756,5.08,1757,5.133,1758,5.735,1759,1.994,1760,1.994,1761,1.994,1762,1.994,1763,1.994,1764,1.994,1765,6.669,1766,7.072,1767,3.367,1768,1.994,1769,1.994,1770,4.369,1771,5.133,1772,4.369,1773,1.994,1774,3.367,1775,3.367,1776,1.994,1777,3.367,1778,6.234,1779,4.369,1780,3.367,1781,3.367,1782,4.369,1783,3.367,1784,3.367,1785,4.369,1786,3.367,1787,1.994,1788,4.369,1789,3.367,1790,1.994,1791,1.994,1792,1.787,1793,1.994,1794,1.994,1795,1.787,1796,1.787,1797,1.994,1798,3.367,1799,3.367,1800,3.367,1801,3.367,1802,3.016,1803,3.367,1804,1.65,1805,1.787,1806,1.994,1807,4.369,1808,1.994,1809,4.369,1810,3.016,1811,1.994,1812,3.367,1813,1.787,1814,1.994,1815,1.994,1816,1.994,1817,1.994,1818,1.787,1819,1.994,1820,3.367,1821,1.787,1822,1.994,1823,1.994,1824,1.787,1825,1.994]],["title/interfaces/NgSelectValue.html",[118,0.357,1111,3.391]],["body/interfaces/NgSelectValue.html",[2,0.063,3,0.063,4,0.055,8,0.157,9,0.371,13,0.181,20,0.005,22,1.275,34,0.071,44,0.869,72,0.004,73,0.004,118,0.679,161,5.991,827,3.728,1106,5.602,1107,5.972,1108,5.972,1110,5.602,1111,5.815,1112,7.948]],["title/classes/NotAuthenticated.html",[0,0.013,761,2.866]],["body/classes/NotAuthenticated.html",[0,0.024,2,0.04,3,0.04,4,0.035,6,1.374,7,1.387,8,0.098,9,0.274,10,1.688,12,2.293,13,0.246,14,1.124,17,0.723,20,0.005,24,0.459,25,0.678,27,0.258,28,0.579,33,0.767,34,0.078,35,0.93,39,2.007,44,0.748,72,0.003,73,0.003,282,2.934,454,1.512,516,4.104,527,4.847,590,2.438,592,2.438,594,2.438,603,3.749,606,3.529,678,3.347,680,3.347,681,3.347,688,3.347,725,3.831,754,2.652,758,3.854,759,3.434,760,4.462,761,4.199,762,3.854,763,4.558,764,3.854,765,3.854,766,4.434,767,4.549,768,3.854,769,3.434,770,3.854,1826,6.387]],["title/interfaces/PieChartConfig.html",[118,0.357,793,3.391]],["body/interfaces/PieChartConfig.html",[2,0.055,3,0.055,4,0.049,8,0.138,9,0.342,13,0.219,20,0.005,21,0.833,25,0.947,34,0.07,44,0.812,72,0.004,73,0.004,89,4.004,94,2.204,118,0.669,245,4.585,771,4.099,772,4.921,773,6.439,774,4.661,775,4.661,776,4.661,777,4.661,778,4.661,779,4.661,780,4.661,781,4.661,782,4.661,784,3.826,785,4.661,786,4.661,787,4.661,788,4.099,789,4.661,790,4.661,791,4.446,792,4.921,793,5.369,794,6.752,795,6.752,796,6.752]],["title/injectables/PlatformsEffects.html",[339,1.584,1827,4.175]],["body/injectables/PlatformsEffects.html",[0,0.015,2,0.053,3,0.053,4,0.047,7,1.37,8,0.132,9,0.333,13,0.153,14,0.743,17,0.881,19,0.961,20,0.005,21,0.8,22,0.896,24,0.616,25,0.909,27,0.393,34,0.047,38,2.443,72,0.004,73,0.004,186,1.311,191,3.672,192,3.559,201,1.827,202,2.162,339,2.693,343,3.672,346,4.856,348,4.517,357,5.23,358,5.23,360,5.23,361,3.456,362,5.354,364,3.189,365,2.271,366,4.089,367,2.478,369,5.767,370,2.524,540,5.451,541,5.451,1240,6.817,1405,6.04,1665,6.651,1827,6.439,1828,6.084,1829,6.084,1830,7.783,1831,7.783,1832,7.783,1833,7.783,1834,6.084,1835,5.451]],["title/injectables/PlatformsService.html",[339,1.584,1240,3.538]],["body/injectables/PlatformsService.html",[0,0.016,2,0.054,3,0.054,4,0.048,8,0.171,9,0.339,13,0.198,14,0.761,17,0.982,19,0.984,20,0.005,21,0.819,22,1.164,27,0.369,34,0.061,35,0.61,44,0.551,72,0.004,73,0.004,94,1.495,118,0.44,146,2.443,169,1.614,186,1.342,201,1.871,202,3.083,339,2.723,365,2.325,367,2.537,370,2.584,392,3.812,463,3.44,1057,4.58,1195,5.182,1196,5.182,1197,3.538,1203,4.487,1238,5.154,1239,5.581,1240,5.54,1241,8.175,1242,5.581,1243,5.581,1244,8.175,1245,5.581,1246,5.581,1247,5.581,1248,4.835,1249,5.581,1250,5.581,1251,5.581,1252,5.581,1542,4.58,1836,7.901,1837,6.229]],["title/interfaces/PlayingDisplayData.html",[118,0.357,822,3.71]],["body/interfaces/PlayingDisplayData.html",[2,0.058,3,0.058,4,0.051,8,0.144,9,0.352,11,2.095,13,0.24,20,0.005,27,0.332,34,0.063,72,0.004,73,0.004,94,2.346,115,4.773,118,0.631,197,3.238,815,4.877,816,5.943,817,5.943,818,6.261,819,6.202,820,5.301,821,7.243,822,6.042,823,8.361,824,6.862,825,8.361]],["title/components/PlayingItemComponent.html",[125,1.195,321,1.852]],["body/components/PlayingItemComponent.html",[0,0.006,2,0.045,3,0.022,4,0.019,6,0.585,7,0.849,8,0.055,9,0.175,11,1.423,13,0.175,14,0.308,17,0.92,19,0.646,20,0.005,21,0.779,22,0.874,24,0.522,25,0.77,27,0.342,28,0.322,33,0.426,34,0.019,35,0.4,36,1.571,37,0.613,41,0.529,43,1.781,44,0.362,49,2.888,51,0.768,56,0.972,62,0.75,68,1.968,72,0.002,73,0.003,82,2.09,83,2.588,86,1.767,91,2.642,92,2.642,93,2.139,115,3.032,125,1.543,126,0.925,127,0.973,128,1.578,129,0.973,130,0.973,134,1.991,135,0.925,136,2.041,137,2.041,138,3.782,139,3.479,140,2.598,141,1.578,143,1.578,145,3.702,146,1.264,147,2.29,153,3.181,154,0.828,155,4.265,156,1.289,157,2.792,158,3.952,163,3.015,169,1.331,170,2.433,175,3.79,181,2.467,185,1.259,186,0.543,187,1.474,188,2.391,189,1.392,190,1.521,191,1.521,192,1.474,195,0.522,196,1.046,197,1.23,201,0.757,202,0.896,203,1.694,204,1.694,205,1.573,207,3.416,220,2.085,221,1.995,222,3.381,223,4.906,224,1.203,225,2.857,226,3.431,227,1.203,228,1.178,229,3.434,230,2.831,231,1.153,233,2.31,235,2.894,236,2.981,237,3.032,238,2.251,239,3.587,240,2.574,241,1.521,242,2.866,243,3.368,245,1.321,246,1.853,247,3.188,248,2.847,249,1.63,250,1.853,252,1.853,253,1.521,254,3.015,255,2.391,256,1.956,260,1.694,261,3.587,262,1.694,263,1.853,267,1.203,269,1.355,272,0.828,273,1.578,274,2.29,275,2.29,276,0.973,277,3.381,278,0.973,279,0.925,280,0.973,281,0.925,282,2.015,283,0.973,284,0.925,285,1.578,286,0.91,287,0.973,288,0.91,289,0.973,290,0.925,291,0.803,292,0.973,293,0.973,294,0.91,295,0.973,296,0.973,297,0.925,298,2.243,299,0.957,300,0.973,301,1.774,302,1.991,303,0.957,304,0.925,305,2.52,306,0.973,307,0.925,308,1.578,309,0.91,310,0.973,311,0.91,312,0.973,313,0.925,314,0.973,315,0.925,316,0.867,317,0.91,318,0.973,319,0.925,320,0.973,321,2.177,322,0.91,323,0.973,324,0.91,325,0.973,326,0.925,327,0.941,328,0.973,329,0.925,330,0.973,331,0.925,332,1.991,333,0.925,334,0.925,335,0.925,336,0.973,337,0.91,338,0.973,419,2.142,421,2.321,425,1.521,427,1.694,428,1.951,429,1.87,542,1.956,543,1.956,619,2.55,625,3.333,627,1.474,822,3.79,828,1.573,831,2.258,832,4.618,833,3.662,834,4.618,837,2.258,839,4.265,842,2.258,843,3.662,846,3.005,850,1.853,851,1.573,852,2.866,853,1.853,854,1.521,855,1.521,856,1.956,857,1.956,858,2.085,859,2.258,860,3.005,861,3.464,862,4.265,863,1.956,937,7.449,1063,2.866,1130,4.618,1131,4.265,1581,2.258,1730,1.956,1731,1.956,1838,8.315,1839,5.93,1840,2.521,1841,2.521,1842,2.521,1843,2.521,1844,2.521,1845,2.521,1846,4.087,1847,2.521,1848,2.521,1849,2.521,1850,2.521,1851,2.258,1852,2.521,1853,2.521,1854,2.521,1855,2.521,1856,2.521,1857,2.521,1858,4.087,1859,2.521,1860,2.521,1861,2.521,1862,2.521,1863,2.521,1864,2.258,1865,4.087,1866,4.087,1867,4.087,1868,4.087,1869,2.521,1870,2.521]],["title/pipes/PluralizePipe.html",[348,2.52,1871,3.916]],["body/pipes/PluralizePipe.html",[0,0.017,2,0.06,3,0.06,4,0.052,6,0.98,13,0.171,17,0.774,19,1.08,20,0.005,21,1.19,22,1.008,25,1.251,27,0.276,34,0.052,44,0.891,72,0.004,73,0.004,94,2.173,135,2.511,146,2.115,169,1.849,186,1.474,348,4.52,418,3.884,1144,4.796,1149,6.928,1871,6.499,1872,6.839,1873,8.374,1874,8.374,1875,9.432,1876,9.432,1877,6.839]],["title/interfaces/Profile.html",[118,0.357,291,1.608]],["body/interfaces/Profile.html",[2,0.067,3,0.067,4,0.059,8,0.166,9,0.384,13,0.192,20,0.005,34,0.059,44,0.841,72,0.005,73,0.005,118,0.633,291,2.856,1136,5.267,1878,7.662]],["title/components/ProfileComponent.html",[125,1.195,322,1.822]],["body/components/ProfileComponent.html",[0,0.008,2,0.051,3,0.026,4,0.023,6,0.679,8,0.066,9,0.203,11,0.663,13,0.179,14,0.371,17,0.926,19,0.749,20,0.005,21,1.039,22,0.698,24,0.59,25,0.871,27,0.33,28,0.388,34,0.023,36,1.444,37,0.739,41,0.637,44,0.419,56,0.572,62,0.557,68,1.498,72,0.002,73,0.002,83,2.145,89,2.251,125,1.692,126,1.114,127,1.173,128,1.173,129,1.173,130,1.173,134,2.251,135,1.114,138,3.862,139,3.552,140,0.997,141,1.83,143,1.83,145,4.058,146,1.466,147,2.544,154,0.997,156,1.553,157,3.029,158,4.253,169,1.191,170,2.176,181,2.86,186,0.654,187,1.776,188,1.776,189,1.677,190,1.832,195,0.628,201,0.912,202,1.079,207,1.591,224,1.449,225,2.734,226,2.952,227,2.262,228,2.723,229,3.537,230,2.783,231,3.013,233,2.613,234,1.894,235,2.313,236,2.168,238,1.799,239,2.845,240,2.367,241,1.832,243,1.724,247,1.632,248,1.677,254,1.776,255,1.776,259,1.894,260,3.185,261,1.482,264,1.553,265,1.553,266,2.367,267,2.262,268,1.553,269,1.632,272,0.997,273,1.83,274,2.251,275,2.544,276,1.173,278,1.173,279,1.114,280,1.173,281,1.114,282,2.209,283,1.173,284,1.114,285,1.83,286,1.096,287,1.173,288,1.096,289,1.173,290,1.114,291,2.412,292,2.544,293,1.173,294,1.096,295,1.173,296,1.173,297,1.114,298,2.458,299,1.153,300,1.173,301,2.006,302,2.251,303,1.153,304,1.114,305,2.734,306,1.173,307,1.114,308,1.83,309,1.096,310,1.173,311,1.096,312,1.173,313,1.114,314,1.173,315,1.114,316,1.045,317,1.096,318,1.173,319,1.114,320,1.173,321,1.114,322,2.379,323,1.173,324,1.096,325,1.173,326,1.114,327,1.133,328,1.173,329,1.114,330,1.173,331,1.114,332,2.251,333,1.114,334,1.114,335,1.114,336,1.173,337,1.096,338,1.173,361,1.724,419,1.591,421,1.724,425,2.86,428,1.449,429,2.667,431,3.678,432,2.72,454,1.944,546,1.963,547,2.72,562,4.724,573,2.772,603,3.077,606,2.783,617,2.232,618,2.512,619,1.894,621,2.129,624,2.957,625,3.654,626,1.894,627,2.772,722,2.356,725,2.262,854,1.832,855,1.832,860,3.484,921,2.04,922,1.963,1067,2.72,1318,2.356,1319,2.72,1395,2.72,1396,2.72,1533,2.512,1572,5.223,1663,2.512,1756,5.896,1795,2.72,1796,2.72,1802,4.246,1879,3.036,1880,5.829,1881,4.739,1882,7.571,1883,6.587,1884,4.739,1885,3.036,1886,3.036,1887,3.036,1888,4.739,1889,3.036,1890,3.036,1891,5.829,1892,3.036,1893,3.036,1894,3.036,1895,3.036,1896,3.036,1897,3.036,1898,3.036,1899,3.036,1900,4.739,1901,3.036,1902,3.036,1903,3.036,1904,3.036]],["title/injectables/ProfileEffects.html",[339,1.584,1905,4.175]],["body/injectables/ProfileEffects.html",[0,0.014,2,0.047,3,0.047,4,0.041,7,1.404,8,0.116,9,0.307,13,0.134,14,0.654,17,0.913,19,0.846,20,0.005,21,0.704,22,0.789,24,0.725,25,1.07,27,0.381,34,0.041,38,2.703,72,0.004,73,0.004,186,1.154,191,3.233,192,3.133,201,1.608,202,1.903,339,2.532,343,3.233,346,5.372,348,4.785,349,5.567,357,5.787,358,5.787,360,5.787,361,4.067,362,5.599,364,2.807,365,1.999,366,3.6,367,2.182,369,3.6,370,2.222,548,4.432,1119,7.124,1134,4.432,1255,6.612,1403,6.683,1405,6.683,1674,5.787,1905,5.924,1906,5.356,1907,5.356,1908,7.16,1909,7.16,1910,7.16,1911,7.16,1912,7.16,1913,5.356,1914,7.16,1915,7.16,1916,7.16,1917,6.415,1918,7.16,1919,7.16,1920,5.356,1921,4.799]],["title/modules/ProfileModule.html",[433,2.133,450,3.71]],["body/modules/ProfileModule.html",[0,0.015,2,0.053,3,0.053,4,0.046,20,0.005,27,0.407,28,0.773,34,0.06,72,0.004,73,0.004,186,1.306,196,2.513,225,2.803,272,1.99,290,3.507,322,3.449,364,3.175,433,3.281,435,3.441,436,5.168,437,3.656,438,4.277,450,7.363,453,4.684,454,2.021,455,3.544,457,4.54,467,5.707,468,4.248,469,4.072,470,4.454,474,4.072,494,3.41,654,5.018,655,3.78,1114,5.428,1255,6.698,1905,5.012,1921,5.428,1922,5.428,1923,5.428,1924,5.428,1925,6.058,1926,6.058,1927,6.058,1928,6.058,1929,6.058,1930,6.058,1931,6.058]],["title/injectables/ProfileService.html",[339,1.584,1255,3.538]],["body/injectables/ProfileService.html",[0,0.014,2,0.05,3,0.05,4,0.044,8,0.124,9,0.32,13,0.221,14,0.696,17,0.998,19,1.314,20,0.005,21,1.093,22,1.225,27,0.37,33,0.964,34,0.057,35,0.558,43,2.24,44,0.877,72,0.004,73,0.004,118,0.403,146,2.307,169,1.802,186,1.228,201,1.711,202,2.954,291,2.376,339,2.61,365,2.127,367,2.321,370,2.363,392,4.023,463,3.146,645,3.333,1119,6.171,1136,4.924,1195,5.011,1196,5.011,1197,3.236,1203,4.236,1253,4.713,1254,5.104,1255,5.23,1256,7.904,1257,5.104,1258,5.104,1259,6.682,1260,5.104,1261,5.104,1262,5.104,1263,6.682,1264,5.104,1265,4.189,1266,5.104,1542,4.189,1932,7.459,1933,7.459,1934,5.697,1935,5.697]],["title/interfaces/ProfileState.html",[118,0.357,1936,3.916]],["body/interfaces/ProfileState.html",[2,0.086,3,0.058,4,0.051,8,0.145,9,0.353,13,0.167,20,0.005,24,0.675,27,0.361,28,0.851,33,1.127,34,0.075,35,0.916,72,0.004,73,0.004,118,0.632,195,1.706,291,2.851,494,2.928,728,4.32,729,3.493,730,3.493,1936,6.944,1937,5.97,1938,8.016,1939,5.97,1940,5.97,1941,5.97,1942,5.97,1943,5.97,1944,7.384,1945,5.97,1946,5.97,1947,7.384]],["title/interfaces/ProgressCollection.html",[118,0.357,1270,3.916]],["body/interfaces/ProgressCollection.html",[0,0.014,2,0.047,3,0.047,4,0.042,8,0.118,9,0.31,11,1.893,13,0.137,20,0.005,27,0.388,33,0.922,34,0.056,35,0.849,44,0.851,51,2.207,58,2.95,72,0.004,73,0.004,99,3.883,104,3.894,105,2.93,118,0.575,119,4.264,122,4.236,169,1.895,186,1.174,197,2.659,201,1.636,202,2.573,339,2.273,344,3.522,365,2.034,367,2.219,370,2.26,392,3.965,463,3.009,827,3.505,828,5.409,1195,4.113,1196,4.62,1197,3.094,1199,3.82,1200,3.82,1203,3.094,1208,3.82,1213,3.82,1218,3.82,1219,3.82,1221,3.82,1222,3.82,1230,3.82,1267,7.005,1268,4.507,1269,3.399,1270,6.314,1271,4.507,1272,4.507,1273,4.507,1274,4.507,1275,4.507,1276,4.507,1277,4.507,1278,4.507,1279,4.507,1280,4.507,1281,4.507,1282,4.507,1283,4.507,1284,4.507,1285,4.507,1286,4.507]],["title/injectables/ProgressEffects.html",[339,1.584,941,4.175]],["body/injectables/ProgressEffects.html",[0,0.011,2,0.036,3,0.036,4,0.032,7,1.389,8,0.09,9,0.258,13,0.104,14,0.509,17,0.927,19,0.658,20,0.005,21,0.547,22,0.614,24,0.782,25,1.154,27,0.371,34,0.032,38,3.082,72,0.003,73,0.003,107,4.661,111,4.661,115,3.95,186,0.898,191,2.514,192,2.437,193,3.233,194,3.233,201,1.251,202,1.48,339,2.214,343,2.514,344,5.687,346,5.618,348,4.842,349,6.022,357,5.735,358,5.735,360,5.735,361,4.386,362,5.724,364,2.183,365,1.555,366,2.799,367,1.697,368,3.063,369,2.799,370,1.728,371,3.446,372,3.732,542,3.233,543,3.233,941,4.974,1403,6.623,1412,4.666,1424,4.666,1730,3.233,1731,3.233,1851,3.732,1864,5.386,1948,4.165,1949,7.723,1950,4.165,1951,6.011,1952,6.011,1953,6.011,1954,6.011,1955,6.011,1956,6.011,1957,4.974,1958,4.974,1959,6.011,1960,6.011,1961,4.165,1962,6.011,1963,6.011,1964,6.011,1965,6.011,1966,6.011,1967,6.011,1968,4.165,1969,6.011,1970,6.011,1971,6.011,1972,6.011,1973,6.011,1974,6.011,1975,6.011,1976,4.165,1977,6.011,1978,6.011,1979,6.011,1980,5.386,1981,6.011,1982,6.011,1983,4.165]],["title/interfaces/ProgressEntity.html",[99,2.409,118,0.357]],["body/interfaces/ProgressEntity.html",[2,0.05,3,0.05,4,0.044,7,1.068,8,0.124,9,0.32,13,0.208,20,0.005,24,0.577,27,0.301,34,0.068,35,0.865,41,1.851,44,0.869,51,1.736,72,0.004,73,0.004,89,2.2,99,3.56,118,0.588,122,5.161,169,1.919,195,2.051,245,2.986,573,4.363,645,3.333,783,2.662,827,4.048,828,5.504,1353,2.845,1355,4.573,1424,4.422,1443,5.23,1444,5.23,1445,5.23,1446,3.829,1449,3.995,1450,3.814,1451,3.995,1452,2.845,1453,2.913,1454,2.913,1456,4.422,1459,5.789,1460,4.422,1462,3.995,1469,5.23,1470,3.995,1984,4.713,1985,5.104,1986,5.104,1987,5.104,1988,5.104,1989,5.104,1990,5.104]],["title/interfaces/ProgressItem.html",[118,0.357,819,3.263]],["body/interfaces/ProgressItem.html",[2,0.06,3,0.06,4,0.053,8,0.149,9,0.36,13,0.228,20,0.005,34,0.07,44,0.915,51,2.099,56,1.298,62,1.264,72,0.004,73,0.004,93,2.858,94,2.179,104,3.704,118,0.668,122,5.531,124,2.262,818,4.83,819,5.438,824,5.065,826,5.699,827,4.074,828,6.05]],["title/injectables/ProgressService.html",[339,1.584,344,3.263]],["body/injectables/ProgressService.html",[0,0.011,2,0.038,3,0.038,4,0.034,8,0.096,9,0.268,11,0.963,13,0.229,14,0.538,17,1.034,19,1.413,20,0.005,21,1.176,22,1.318,27,0.369,33,0.746,34,0.048,35,0.777,43,2.38,44,0.884,49,2.461,51,2.415,58,3.228,72,0.003,73,0.003,99,3.475,104,4.262,105,2.371,115,3.202,118,0.443,119,4.874,122,3.662,146,1.936,169,1.968,186,0.95,197,2.152,201,1.324,202,3.09,339,2.285,344,4.048,365,1.646,367,1.796,370,1.829,392,4.086,463,2.435,827,3.137,828,4.945,1195,4.502,1196,4.94,1197,2.504,1199,3.092,1200,3.092,1203,3.556,1208,3.092,1213,3.092,1218,3.092,1219,3.092,1221,3.092,1222,3.092,1230,4.39,1267,6.152,1268,3.648,1269,2.751,1270,6.497,1271,3.648,1272,3.648,1273,5.18,1274,3.648,1275,3.648,1276,3.648,1277,5.18,1278,3.648,1279,3.648,1280,3.648,1281,5.18,1282,5.18,1283,5.18,1284,3.648,1285,3.648,1286,3.648,1541,5.609,1542,3.242,1991,6.261,1992,6.261,1993,6.261,1994,6.261,1995,4.409,1996,4.409,1997,4.409,1998,4.409,1999,4.409,2000,4.409]],["title/components/RegisterComponent.html",[125,1.195,324,1.822]],["body/components/RegisterComponent.html",[0,0.01,2,0.033,3,0.033,4,0.029,6,0.811,8,0.083,9,0.243,11,0.838,13,0.186,14,0.468,17,0.996,19,0.894,20,0.005,21,0.976,22,0.834,27,0.346,28,0.49,33,0.649,34,0.029,36,1.725,37,0.933,41,0.805,56,0.723,62,0.704,68,1.729,72,0.003,73,0.003,83,2.379,125,1.876,126,1.408,127,1.482,128,1.482,129,1.482,130,1.482,134,2.598,135,1.408,138,3.946,139,3.63,140,1.26,141,2.186,143,2.186,146,1.751,147,2.869,154,1.26,156,1.962,157,3.316,169,1.618,170,2.957,186,0.827,195,0.794,196,1.592,201,1.152,207,3.893,225,2.044,226,2.537,227,1.831,228,2.645,231,2.59,238,2.149,272,1.26,273,2.186,274,2.598,275,2.869,276,1.482,278,1.482,279,1.408,280,1.482,281,1.408,282,2.652,283,1.482,284,1.408,285,2.186,286,1.385,287,1.482,288,1.385,289,1.482,290,1.408,291,1.222,292,1.482,293,1.482,294,1.385,295,1.482,296,1.482,297,1.408,298,2.726,299,1.456,300,1.482,301,2.315,302,2.598,303,1.456,304,1.408,305,2.994,306,1.482,307,1.408,308,2.186,309,1.385,310,1.482,311,1.385,312,1.482,313,1.408,314,1.482,315,1.408,316,1.32,317,1.385,318,1.482,319,1.408,320,1.482,321,1.408,322,1.385,323,1.482,324,2.682,325,1.482,326,1.408,327,1.432,328,1.482,329,1.408,330,1.482,331,1.408,332,2.598,333,1.408,334,1.408,335,1.408,336,1.482,337,1.385,338,1.482,365,1.432,392,3.767,419,2.011,427,2.578,428,1.831,429,1.755,517,5.566,546,2.48,561,5.461,562,4.634,577,2.578,600,5.461,615,2.69,638,2.69,1313,2.578,1318,2.978,1717,3.437,1718,3.437,1719,3.437,1720,3.174,1721,3.174,1722,3.174,1724,3.437,2001,3.836,2002,6.728,2003,5.661,2004,5.661,2005,7.428,2006,7.428,2007,7.428,2008,5.661,2009,5.661,2010,3.836,2011,3.836,2012,3.836,2013,3.836,2014,3.836,2015,3.836,2016,3.836]],["title/classes/Remove.html",[0,0.013,49,1.983]],["body/classes/Remove.html",[0,0.023,2,0.046,3,0.046,4,0.04,6,1.316,7,1.344,8,0.114,9,0.303,10,2.258,11,1.545,12,2.222,13,0.247,14,0.642,17,0.904,19,0.831,20,0.005,21,0.691,22,0.775,24,0.532,25,0.786,27,0.212,28,0.671,34,0.076,35,0.874,37,1.279,38,1.65,39,2.23,41,1.103,44,0.855,49,3.688,51,2.945,68,1.351,72,0.004,73,0.004,74,4.753,75,5.993,76,3.687,77,3.534,80,5.2,81,5.2,82,4.561,83,2.678,84,2.685,85,3.687,86,3.687,87,4.753,88,3.4,89,2.031,90,5.2,91,3.4,92,4.572,93,2.181,94,1.262,95,5.2,96,4.753,2017,7.072,2018,5.258]],["title/classes/RemoveHistoryItem.html",[0,0.013,50,2.713]],["body/classes/RemoveHistoryItem.html",[0,0.024,1,3.193,2,0.034,3,0.034,4,0.03,5,2.242,6,1.351,7,1.365,8,0.086,9,0.248,10,2.344,11,1.89,12,2.256,13,0.247,14,0.482,16,2.838,17,0.852,19,0.624,20,0.005,21,0.519,22,0.582,24,0.4,25,0.59,26,3.382,27,0.276,28,0.504,29,1.844,30,3.066,31,3.066,32,3.066,33,0.668,34,0.077,35,0.914,36,2.874,37,0.96,38,1.239,39,2.332,40,3.382,41,1.213,42,3.109,43,2.718,44,0.856,45,3.382,46,2.673,47,3.193,48,4.001,49,2.272,50,3.678,51,2.637,52,3.382,53,3.193,54,3.382,55,4.899,56,1.09,57,2.956,58,3.411,59,3.382,60,3.193,61,3.382,62,1.061,63,2.956,64,3.382,65,3.193,66,3.382,67,3.284,68,1.486,69,2.956,70,3.382,71,3.193,72,0.003,73,0.003,1642,2.309,2019,5.781,2020,5.781]],["title/classes/RemoveHistoryItemSucceeded.html",[0,0.013,53,2.787]],["body/classes/RemoveHistoryItemSucceeded.html",[0,0.024,1,3.242,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,1.902,12,2.264,13,0.246,14,0.492,16,2.872,17,0.783,19,0.637,20,0.005,21,0.53,22,0.594,24,0.408,25,0.602,26,3.434,27,0.28,28,0.514,29,1.883,30,3.103,31,3.103,32,3.103,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,3.434,41,1.231,42,3.156,43,2.427,44,0.829,45,3.434,46,2.696,47,3.242,48,3.434,49,2.307,50,3.156,51,2.571,52,4.05,53,3.824,54,3.434,55,4.935,56,1.106,57,3.002,58,3.436,59,3.434,60,3.242,61,3.434,62,1.077,63,3.002,64,3.434,65,3.242,66,3.434,67,3.334,68,1.509,69,3.002,70,3.434,71,3.242,72,0.003,73,0.003,77,2.709,2021,5.87,2022,4.031]],["title/classes/RemoveProgressItem.html",[0,0.013,111,3.045]],["body/classes/RemoveProgressItem.html",[0,0.023,2,0.04,3,0.04,4,0.036,6,1.326,7,1.348,8,0.101,9,0.278,10,2.336,11,1.982,12,2.228,13,0.247,14,0.566,17,0.917,19,0.732,20,0.005,21,0.609,22,0.683,24,0.47,25,0.693,27,0.302,28,0.592,33,0.784,34,0.076,35,0.889,37,1.128,38,1.455,39,2.269,41,1.361,43,2.725,44,0.867,46,2.496,49,2.55,51,2.765,58,2.643,72,0.003,73,0.003,82,3.318,83,1.948,97,4.048,98,2.998,99,3.572,102,4.36,103,3.116,104,4.024,105,5.227,106,4.36,107,3.915,108,4.36,109,4.048,110,5.029,111,4.516,112,4.36,113,4.048,114,4.36,115,3.318,116,4.36,117,4.048,1642,2.713,2023,6.488,2024,6.488]],["title/classes/RemoveProgressItemSucceeded.html",[0,0.013,113,3.148]],["body/classes/RemoveProgressItemSucceeded.html",[0,0.024,2,0.041,3,0.041,4,0.036,6,1.335,7,1.355,8,0.103,9,0.283,10,2.165,11,1.996,12,2.24,13,0.247,14,0.58,17,0.858,19,0.751,20,0.005,21,0.625,22,0.7,24,0.481,25,0.71,27,0.306,28,0.607,33,0.804,34,0.076,35,0.895,37,1.156,38,1.492,39,2.285,41,1.385,43,2.277,44,0.837,46,2.529,49,2.594,51,2.715,58,2.688,72,0.003,73,0.003,77,3.194,82,3.375,83,1.982,97,4.118,98,3.073,99,3.62,102,4.435,103,3.194,104,4.077,105,5.25,106,4.435,107,3.983,108,4.435,109,4.118,110,4.435,111,3.983,112,5.096,113,4.731,114,4.435,115,3.375,116,4.435,117,4.118,2025,6.6,2026,4.752]],["title/classes/Reset.html",[0,0.013,454,1.683]],["body/classes/Reset.html",[0,0.024,2,0.045,3,0.045,4,0.04,6,1.342,7,1.364,8,0.113,9,0.302,11,1.14,12,2.256,13,0.245,14,0.972,17,0.796,20,0.005,24,0.529,25,0.78,27,0.322,28,0.666,33,0.883,34,0.077,35,0.898,37,2.23,39,2.225,44,0.623,46,1.741,56,1.326,62,1.291,72,0.004,73,0.004,84,3.023,94,1.253,99,3.359,119,4.173,124,2.311,140,3.01,150,3.219,151,3.219,152,3.219,258,4.375,454,3.124,803,3.689,804,3.689,1269,3.257,2027,5.351,2028,3.508,2029,7.037,2030,4.935,2031,4.935,2032,4.55]],["title/classes/ResetPassword.html",[0,0.013,681,2.645]],["body/classes/ResetPassword.html",[0,0.024,2,0.038,3,0.038,4,0.034,6,1.366,7,1.38,8,0.095,9,0.268,10,2.093,12,2.281,13,0.248,14,1.092,17,0.823,19,0.695,20,0.005,21,0.579,22,0.649,24,0.446,25,0.658,27,0.253,28,0.562,33,0.745,34,0.077,35,0.924,39,1.981,44,0.822,72,0.003,73,0.003,282,2.915,454,1.468,516,4.051,527,4.801,590,2.367,592,2.367,594,2.367,603,4.269,606,3.473,678,3.278,680,3.278,681,3.813,688,3.278,725,3.781,754,2.575,758,3.774,759,3.363,760,3.774,761,3.552,762,3.774,763,4.499,764,3.774,765,3.774,766,4.385,767,4.499,768,3.774,769,3.363,770,4.39,1172,3.642,2033,6.254,2034,4.402]],["title/classes/ResetTimer.html",[0,0.013,802,2.866]],["body/classes/ResetTimer.html",[0,0.024,2,0.079,3,0.04,4,0.035,6,1.364,7,1.379,8,0.1,9,0.277,11,1.008,12,2.279,13,0.245,14,0.987,16,2.682,17,0.732,20,0.005,24,0.467,25,0.69,27,0.301,28,0.589,29,2.156,33,0.781,34,0.077,35,0.921,39,2.266,41,0.968,43,1.386,44,0.66,46,1.539,56,1.219,62,1.186,68,1.186,72,0.003,73,0.003,84,3.071,94,1.108,124,1.516,150,2.958,151,2.958,152,2.958,221,2.252,232,5.039,258,3.087,373,3.307,375,2.958,454,1.539,797,3.571,798,2.785,800,4.034,801,4.657,802,4.239,803,3.389,804,3.389,805,4.034,806,4.034,807,3.571,808,4.034,809,3.672,810,2.699,811,4.034,812,3.672,813,4.034,814,3.782,2035,6.466]],["title/interfaces/RouteEntry.html",[118,0.357,1765,4.175]],["body/interfaces/RouteEntry.html",[2,0.059,3,0.059,4,0.052,8,0.147,9,0.356,13,0.242,20,0.005,22,1.384,27,0.273,34,0.052,44,0.896,72,0.004,73,0.004,89,3.477,118,0.588,145,5.335,189,3.733,384,5.861,563,7.772,1765,6.878,1766,8.416,1778,8.416,2036,6.758,2037,9.394,2038,6.055,2039,6.055]],["title/interfaces/RouterStateUrl.html",[118,0.357,982,3.916]],["body/interfaces/RouterStateUrl.html",[0,0.014,2,0.049,3,0.049,4,0.044,6,0.813,8,0.123,9,0.319,13,0.208,20,0.005,24,0.575,27,0.369,28,0.724,33,0.96,34,0.072,35,0.92,44,0.734,72,0.004,73,0.004,118,0.587,157,2.27,169,1.159,195,1.718,377,4.404,384,4.641,396,3.54,473,3.979,493,4.172,494,2.493,506,5.009,634,5.774,642,7.284,728,3.899,729,2.974,730,2.974,977,4.695,979,4.695,981,4.695,982,6.442,983,8.353,984,4.404,985,4.695,986,4.695,987,6.147,988,4.695,989,4.695,990,4.695,991,4.695,992,4.695,993,4.695,994,6.155,995,4.695,996,6.155,997,7.765,998,4.695,999,4.695,1000,6.155]],["title/classes/Save.html",[0,0.013,258,2.409]],["body/classes/Save.html",[0,0.023,2,0.044,3,0.044,4,0.039,6,1.329,7,1.353,8,0.109,9,0.294,10,1.815,11,1.1,12,2.237,13,0.247,14,0.839,17,0.884,19,0.796,20,0.005,21,0.662,22,0.742,24,0.51,25,0.753,27,0.316,28,0.643,33,0.852,34,0.076,35,0.889,37,2.207,39,2.197,44,0.608,46,1.68,56,1.295,62,1.26,72,0.003,73,0.003,84,2.968,94,1.209,99,3.279,119,5.126,124,2.256,140,2.978,150,3.142,151,3.142,152,3.142,258,4.509,454,2.931,803,3.6,804,3.6,1269,3.142,2027,5.643,2028,3.385,2030,4.816,2031,4.816,2032,4.441,2040,5.036,2041,6.869,2042,5.036]],["title/classes/SaveSucceeded.html",[0,0.013,2032,3.263]],["body/classes/SaveSucceeded.html",[0,0.023,2,0.044,3,0.044,4,0.039,6,1.329,7,1.353,8,0.109,9,0.294,10,1.815,11,1.919,12,2.237,13,0.247,14,0.839,15,3.532,17,0.884,19,0.796,20,0.005,21,0.662,22,0.742,24,0.51,25,0.753,27,0.316,28,0.643,33,0.852,34,0.076,35,0.889,37,2.207,39,2.197,44,0.608,46,1.68,56,1.295,62,1.26,72,0.003,73,0.003,84,2.968,94,1.209,99,4.329,119,4.097,124,2.256,140,2.978,150,3.142,151,3.142,152,3.142,258,4.329,454,2.931,803,3.6,804,3.6,1269,3.142,2027,5.643,2028,3.385,2030,4.816,2031,5.481,2032,5.054,2043,6.869,2044,5.036]],["title/classes/SaveTimerInfo.html",[0,0.013,807,2.787]],["body/classes/SaveTimerInfo.html",[0,0.024,2,0.083,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,0.978,12,2.266,13,0.247,14,0.896,16,2.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,1.345,44,0.65,46,1.493,56,1.193,62,1.161,68,1.151,72,0.003,73,0.003,84,3.03,94,1.075,124,1.471,150,2.896,151,2.896,152,2.896,221,2.186,232,5.016,258,3.022,373,4.47,375,2.896,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.318,804,3.318,805,3.949,806,4.581,807,4.055,808,3.949,809,3.595,810,2.619,811,3.949,812,3.595,813,3.949,814,3.703,2045,4.012,2046,6.33,2047,4.478]],["title/classes/SaveTimerInfoSucceeded.html",[0,0.013,809,2.866]],["body/classes/SaveTimerInfoSucceeded.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,1.839,12,2.266,13,0.247,14,0.896,15,3.14,16,3.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,1.345,44,0.65,46,1.493,56,1.193,62,1.161,68,1.151,72,0.003,73,0.003,84,3.03,94,1.075,124,1.471,150,2.896,151,2.896,152,2.896,221,2.186,232,5.016,258,3.022,373,3.237,375,2.896,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.318,804,3.318,805,3.949,806,3.949,807,3.496,808,4.581,809,4.17,810,2.619,811,3.949,812,3.595,813,3.949,814,3.703,2048,6.33,2049,4.478]],["title/classes/SetAttemptingLogin.html",[0,0.013,2050,3.916]],["body/classes/SetAttemptingLogin.html",[0,0.022,2,0.055,3,0.055,4,0.048,6,1.249,7,1.312,8,0.137,9,0.341,10,2.102,12,2.169,13,0.248,14,0.769,17,0.987,19,0.995,20,0.005,21,0.828,22,0.928,24,0.638,25,0.941,27,0.254,28,0.804,34,0.072,35,0.78,39,1.989,44,0.557,72,0.004,73,0.004,84,3.02,89,3.649,516,3.221,562,3.929,597,4.888,724,6.175,753,4.416,763,3.577,2050,6.768,2051,5.211,2052,7.816,2053,6.298,2054,7.955,2055,6.298,2056,7.813,2057,7.127,2058,6.175]],["title/classes/SetEndTime.html",[0,0.013,92,3.263]],["body/classes/SetEndTime.html",[0,0.023,2,0.045,3,0.045,4,0.039,6,1.305,7,1.334,8,0.111,9,0.297,10,2.406,11,1.515,12,2.206,13,0.248,14,0.624,17,0.956,19,0.807,20,0.005,21,0.671,22,0.753,24,0.517,25,0.763,27,0.206,28,0.652,34,0.075,35,0.865,37,1.243,38,1.603,39,2.208,41,1.072,44,0.85,49,3.47,51,2.928,68,1.313,72,0.003,73,0.003,74,4.661,75,6.192,76,3.582,77,3.433,80,5.099,81,5.099,82,4.516,83,2.652,84,2.633,85,3.582,86,3.582,87,4.661,88,3.303,89,1.973,90,5.789,91,3.303,92,5.091,93,3.778,94,2.12,95,5.099,96,4.661,2059,6.935,2060,6.935]],["title/classes/SetGame.html",[0,0.013,150,2.308]],["body/classes/SetGame.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,0.978,12,2.266,13,0.247,14,0.896,16,2.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,1.345,44,0.795,46,1.493,56,1.647,62,1.161,68,1.151,72,0.003,73,0.003,84,3.03,94,1.075,124,1.471,150,3.359,151,2.896,152,2.896,221,2.186,232,5.016,258,3.022,373,3.237,375,2.896,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.849,804,3.318,805,3.949,806,3.949,807,3.496,808,3.949,809,3.595,810,2.619,811,3.949,812,3.595,813,3.949,814,3.703,2061,4.012,2062,6.33,2063,4.478]],["title/classes/SetGame-1.html",[0,0.011,150,1.93,418,2.396]],["body/classes/SetGame-1.html",[0,0.023,2,0.044,3,0.044,4,0.039,6,1.329,7,1.353,8,0.109,9,0.294,10,1.815,11,1.1,12,2.237,13,0.247,14,0.839,17,0.884,19,0.796,20,0.005,21,0.662,22,0.742,24,0.51,25,0.753,27,0.316,28,0.643,33,0.852,34,0.076,35,0.889,37,2.207,39,2.197,44,0.802,46,1.68,56,1.709,62,1.26,72,0.003,73,0.003,84,2.968,94,1.209,99,3.279,119,4.097,124,2.256,140,2.978,150,3.576,151,3.142,152,3.142,258,4.329,454,2.931,803,4.097,804,3.6,1269,3.142,2027,5.643,2028,3.385,2030,4.816,2031,4.816,2032,4.441,2061,4.512,2064,6.869,2065,5.036]],["title/classes/SetLastMonth.html",[0,0.013,2066,3.538]],["body/classes/SetLastMonth.html",[0,0.023,2,0.052,3,0.052,4,0.046,6,1.331,7,1.362,8,0.129,9,0.329,12,2.252,13,0.246,14,1.161,17,0.869,20,0.005,24,0.603,25,0.89,27,0.241,28,0.76,34,0.076,35,0.879,72,0.004,73,0.004,84,3.407,298,3.088,1364,5.646,1365,5.646,1366,5.646,2066,5.958,2067,6.247,2068,4.38,2069,7.678,2070,6.594,2071,5.96,2072,5.384,2073,5.96,2074,5.384,2075,5.96,2076,5.384]],["title/classes/SetLastWeek.html",[0,0.013,2074,3.538]],["body/classes/SetLastWeek.html",[0,0.023,2,0.052,3,0.052,4,0.046,6,1.331,7,1.362,8,0.129,9,0.329,12,2.252,13,0.246,14,1.161,17,0.869,20,0.005,24,0.603,25,0.89,27,0.241,28,0.76,34,0.076,35,0.879,72,0.004,73,0.004,84,3.407,298,3.088,1364,5.646,1365,5.646,1366,5.646,2066,5.384,2067,6.247,2068,4.38,2070,5.96,2071,5.96,2072,5.384,2073,6.594,2074,5.958,2075,5.96,2076,5.384,2077,7.678]],["title/classes/SetPlatform.html",[0,0.013,151,2.308]],["body/classes/SetPlatform.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,0.978,12,2.266,13,0.247,14,0.896,16,2.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,1.345,44,0.795,46,1.493,56,1.193,62,1.604,68,1.151,72,0.003,73,0.003,84,3.03,94,1.075,124,1.471,150,2.896,151,3.359,152,2.896,221,2.186,232,5.016,258,3.022,373,3.237,375,2.896,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.318,804,3.849,805,3.949,806,3.949,807,3.496,808,3.949,809,3.595,810,2.619,811,3.949,812,3.595,813,3.949,814,3.703,1671,3.705,2078,6.33,2079,4.478]],["title/classes/SetPlatform-1.html",[0,0.011,151,1.93,418,2.396]],["body/classes/SetPlatform-1.html",[0,0.023,2,0.044,3,0.044,4,0.039,6,1.329,7,1.353,8,0.109,9,0.294,10,1.815,11,1.1,12,2.237,13,0.247,14,0.839,17,0.884,19,0.796,20,0.005,21,0.662,22,0.742,24,0.51,25,0.753,27,0.316,28,0.643,33,0.852,34,0.076,35,0.889,37,2.207,39,2.197,44,0.802,46,1.68,56,1.295,62,1.664,72,0.003,73,0.003,84,2.968,94,1.209,99,3.279,119,4.097,124,2.256,140,2.978,150,3.142,151,3.576,152,3.142,258,4.329,454,2.931,803,3.6,804,4.097,1269,3.142,1671,4.167,2027,5.643,2028,3.385,2030,4.816,2031,4.816,2032,4.441,2080,6.869,2081,5.036]],["title/classes/SetProfileDisplayName.html",[0,0.013,1682,3.538]],["body/classes/SetProfileDisplayName.html",[0,0.023,2,0.047,3,0.047,4,0.042,6,1.291,7,1.328,8,0.118,9,0.31,10,2.382,12,2.195,13,0.248,14,0.663,17,0.979,19,0.857,20,0.005,21,0.713,22,0.8,24,0.55,25,0.811,27,0.292,28,0.693,33,0.918,34,0.075,35,0.848,39,2.165,41,1.515,43,2.783,44,0.882,46,2.409,72,0.004,73,0.004,84,2.742,291,3.099,1136,5.231,1642,3.175,1674,4.855,1675,3.99,1677,5.607,1679,5.607,1680,5.065,1681,6.302,1682,5.693,1683,5.607,1684,5.065,2082,7.224,2083,7.224]],["title/classes/SetProfileDisplayNameSucceeded.html",[0,0.013,1684,3.538]],["body/classes/SetProfileDisplayNameSucceeded.html",[0,0.023,2,0.049,3,0.049,4,0.043,6,1.304,7,1.339,8,0.121,9,0.315,10,2.176,12,2.213,13,0.248,14,0.682,17,0.932,19,0.882,20,0.005,21,0.734,22,0.823,24,0.566,25,0.835,27,0.297,28,0.713,33,0.945,34,0.075,35,0.858,39,2.189,41,1.545,43,2.211,44,0.855,46,2.456,72,0.004,73,0.004,84,2.795,291,3.117,1136,5.2,1674,4.948,1675,4.107,1677,5.715,1679,5.715,1680,5.163,1681,5.715,1682,5.163,1683,6.392,1684,5.775,2084,5.586,2085,7.363,2086,5.586]],["title/classes/SetShowExtra.html",[0,0.013,87,3.391]],["body/classes/SetShowExtra.html",[0,0.023,2,0.045,3,0.045,4,0.039,6,1.305,7,1.334,8,0.111,9,0.297,10,2.406,11,1.515,12,2.206,13,0.248,14,0.624,17,0.956,19,0.807,20,0.005,21,0.671,22,0.753,24,0.517,25,0.763,27,0.206,28,0.652,34,0.075,35,0.865,37,1.243,38,1.603,39,2.208,41,1.072,44,0.85,49,3.47,51,2.928,68,1.313,72,0.003,73,0.003,74,4.661,75,6.192,76,3.582,77,3.433,80,5.099,81,5.789,82,4.516,83,2.652,84,2.633,85,3.582,86,3.582,87,5.292,88,5.888,89,3.41,90,5.099,91,3.303,92,4.484,93,2.119,94,1.226,95,5.099,96,4.661,2087,6.935,2088,6.935]],["title/classes/SetStartTime.html",[0,0.013,152,2.308]],["body/classes/SetStartTime.html",[0,0.024,2,0.078,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,0.978,12,2.266,13,0.247,14,0.896,16,2.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,1.345,44,0.65,46,1.493,56,1.193,62,1.161,68,1.151,72,0.003,73,0.003,84,3.03,94,2.021,124,2.766,150,2.896,151,2.896,152,3.359,221,2.186,232,5.016,258,3.022,373,3.237,375,2.896,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.318,804,3.318,805,4.581,806,3.949,807,3.496,808,3.949,809,3.595,810,2.619,811,3.949,812,3.595,813,3.949,814,3.703,2089,4.012,2090,6.33,2091,4.478]],["title/classes/SetStartTime-1.html",[0,0.011,152,1.93,418,2.396]],["body/classes/SetStartTime-1.html",[0,0.023,2,0.044,3,0.044,4,0.039,6,1.329,7,1.353,8,0.109,9,0.294,10,1.815,11,1.1,12,2.237,13,0.247,14,0.839,17,0.884,19,0.796,20,0.005,21,0.662,22,0.742,24,0.51,25,0.753,27,0.316,28,0.643,33,0.852,34,0.076,35,0.889,37,2.207,39,2.197,44,0.608,46,1.68,56,1.295,62,1.26,72,0.003,73,0.003,84,2.968,94,2.109,99,3.279,119,4.097,124,2.978,140,2.978,150,3.142,151,3.142,152,3.576,258,4.329,454,2.931,803,3.6,804,3.6,1269,3.142,2027,5.643,2028,3.385,2030,5.481,2031,4.816,2032,4.441,2089,4.512,2092,6.869,2093,5.036]],["title/classes/SetThisMonth.html",[0,0.013,2076,3.538]],["body/classes/SetThisMonth.html",[0,0.023,2,0.052,3,0.052,4,0.046,6,1.331,7,1.362,8,0.129,9,0.329,12,2.252,13,0.246,14,1.161,17,0.869,20,0.005,24,0.603,25,0.89,27,0.241,28,0.76,34,0.076,35,0.879,72,0.004,73,0.004,84,3.407,298,3.088,1364,5.646,1365,5.646,1366,5.646,2066,5.384,2067,6.247,2068,4.38,2070,5.96,2071,5.96,2072,5.384,2073,5.96,2074,5.384,2075,6.594,2076,5.958,2094,7.678]],["title/classes/SetThisWeek.html",[0,0.013,2072,3.538]],["body/classes/SetThisWeek.html",[0,0.023,2,0.052,3,0.052,4,0.046,6,1.331,7,1.362,8,0.129,9,0.329,12,2.252,13,0.246,14,1.161,17,0.869,20,0.005,24,0.603,25,0.89,27,0.241,28,0.76,34,0.076,35,0.879,72,0.004,73,0.004,84,3.407,298,3.088,1364,5.646,1365,5.646,1366,5.646,2066,5.384,2067,6.247,2068,4.38,2070,5.96,2071,6.594,2072,5.958,2073,5.96,2074,5.384,2075,5.96,2076,5.384,2095,7.678]],["title/classes/SetTimerInfo.html",[0,0.013,814,2.952]],["body/classes/SetTimerInfo.html",[0,0.024,2,0.083,3,0.039,4,0.034,6,1.355,7,1.371,8,0.097,9,0.271,10,1.673,11,0.978,12,2.266,13,0.247,14,0.896,16,2.626,17,0.831,19,0.707,20,0.005,21,0.589,22,0.66,24,0.453,25,0.669,27,0.297,28,0.572,29,2.092,33,0.757,34,0.077,35,0.915,39,2.247,41,0.939,43,1.345,44,0.65,46,1.493,56,1.193,62,1.161,68,1.151,72,0.003,73,0.003,84,3.03,94,1.075,124,1.471,150,2.896,151,2.896,152,2.896,221,2.186,232,5.016,258,3.022,373,3.237,375,3.999,454,1.493,797,3.496,798,2.702,800,3.949,801,3.949,802,3.595,803,3.318,804,3.318,805,3.949,806,3.949,807,3.496,808,3.949,809,3.595,810,2.619,811,3.949,812,3.595,813,4.581,814,4.295,2045,4.012,2096,6.33,2097,4.478]],["title/classes/SetValidationMessage.html",[0,0.013,2058,3.916]],["body/classes/SetValidationMessage.html",[0,0.022,2,0.055,3,0.055,4,0.048,6,1.249,7,1.312,8,0.137,9,0.341,10,2.102,12,2.169,13,0.248,14,0.769,17,0.987,19,0.995,20,0.005,21,0.828,22,0.928,24,0.638,25,0.941,27,0.254,28,0.804,34,0.072,35,0.78,39,1.989,44,0.836,72,0.004,73,0.004,84,3.02,89,2.432,516,3.221,562,3.929,597,4.888,724,6.175,753,6.625,763,3.577,2050,6.175,2051,5.211,2052,5.211,2056,7.127,2057,7.813,2058,6.768,2098,6.298,2099,7.955,2100,6.298]],["title/classes/SetVisibleTab.html",[0,0.013,2101,3.916]],["body/classes/SetVisibleTab.html",[0,0.021,2,0.058,3,0.058,4,0.051,6,1.174,7,1.276,8,0.143,9,0.351,10,2.165,12,2.11,13,0.248,14,0.806,17,1.008,19,1.043,20,0.005,21,0.868,22,0.973,24,0.669,25,0.987,27,0.331,28,0.843,33,1.117,34,0.068,35,0.647,39,1.651,72,0.004,73,0.004,84,2.507,884,7.179,947,7.278,1529,5.463,2101,6.916,2102,5.915,2103,6.603,2104,8.194,2105,6.603,2106,8.91]],["title/modules/SharedModule.html",[433,2.133,451,3.148]],["body/modules/SharedModule.html",[0,0.014,2,0.05,3,0.05,4,0.044,20,0.005,27,0.397,28,0.733,34,0.068,72,0.004,73,0.004,186,1.238,196,2.382,272,1.886,326,3.693,433,3.169,435,3.262,436,5.038,437,3.466,438,2.868,451,6.385,453,4.525,454,1.915,455,3.359,457,4.386,474,3.859,494,3.294,654,4.848,655,3.583,943,7.396,1140,7.807,1871,7.807,2107,5.145,2108,5.145,2109,5.145,2110,5.743,2111,5.743,2112,5.743,2113,5.743,2114,5.743,2115,5.743,2116,5.743]],["title/interfaces/SharedState.html",[118,0.357,404,3.148]],["body/interfaces/SharedState.html",[2,0.034,3,0.034,4,0.03,8,0.084,9,0.244,11,1.965,13,0.187,20,0.005,24,0.391,27,0.363,28,0.492,33,0.652,34,0.077,35,0.987,36,2.617,38,1.784,62,1.524,72,0.003,73,0.003,105,4.619,118,0.477,169,1.379,195,1.644,232,4.393,316,1.327,327,1.44,375,3.088,381,3.191,403,3.675,404,4.211,494,1.695,728,2.979,729,2.022,730,2.022,819,4.364,820,2.191,888,3.191,1057,2.836,1059,2.022,1087,2.406,1163,3.191,1248,2.994,1382,2.705,1702,4.702,1703,3.191,1957,4.702,1958,4.702,2117,3.456,2118,6.047,2119,6.047,2120,6.047,2121,6.047,2122,3.456,2123,3.456,2124,3.456,2125,3.456,2126,3.456,2127,3.456,2128,3.456,2129,3.456,2130,3.456,2131,3.456,2132,3.456,2133,3.456,2134,3.456,2135,3.456,2136,3.456,2137,3.456,2138,3.456,2139,3.456,2140,3.456,2141,3.456,2142,3.456,2143,6.672,2144,3.456,2145,3.456,2146,3.456,2147,5.092,2148,3.456,2149,3.456,2150,3.456,2151,5.092,2152,5.092,2153,3.456,2154,5.092,2155,5.092,2156,6.672,2157,5.092,2158,5.092,2159,3.456,2160,3.456,2161,3.456,2162,3.456,2163,6.047,2164,3.456,2165,3.456,2166,3.456,2167,3.456,2168,3.456,2169,5.092,2170,3.456,2171,3.456,2172,3.456,2173,3.456,2174,3.456,2175,5.092,2176,6.672,2177,5.584,2178,6.047,2179,3.456,2180,6.047,2181,5.092,2182,5.092,2183,5.092,2184,5.092,2185,5.092,2186,5.092,2187,3.456,2188,5.092,2189,3.456,2190,3.456,2191,5.092,2192,3.456,2193,3.456,2194,3.456,2195,5.092,2196,3.456,2197,5.092,2198,5.092,2199,3.456,2200,3.456,2201,3.456,2202,3.456,2203,3.456,2204,3.456,2205,3.456,2206,3.456]],["title/classes/SignUp.html",[0,0.013,767,2.713]],["body/classes/SignUp.html",[0,0.024,2,0.038,3,0.038,4,0.033,6,1.36,7,1.374,8,0.093,9,0.264,10,2.28,12,2.271,13,0.249,14,1.084,17,0.887,19,0.68,20,0.005,21,0.566,22,0.634,24,0.436,25,0.643,27,0.249,28,0.549,33,0.728,34,0.077,35,0.919,39,1.96,44,0.856,72,0.003,73,0.003,282,2.901,454,1.435,516,4.009,527,4.765,590,2.314,592,2.314,594,2.314,603,4.244,606,4.336,678,3.225,680,3.225,681,3.225,688,3.225,725,3.742,754,2.517,758,3.714,759,3.309,760,3.714,761,3.495,762,3.714,763,4.452,764,3.714,765,3.714,766,4.347,767,4.776,768,3.714,769,3.309,770,3.714,1172,3.56,2207,6.153,2208,6.153]],["title/components/SpinnerComponent.html",[125,1.195,326,1.852]],["body/components/SpinnerComponent.html",[0,0.01,2,0.036,3,0.036,4,0.032,6,0.855,8,0.089,14,0.856,17,0.675,20,0.005,21,0.784,27,0.241,34,0.032,36,1.818,37,1.003,41,0.865,56,0.777,62,0.756,68,1.803,72,0.003,73,0.003,83,2.449,125,1.932,126,1.514,127,1.593,128,1.593,129,1.593,130,1.593,134,2.709,135,1.514,138,3.969,139,3.651,140,1.354,141,2.305,143,2.305,146,1.845,147,2.969,154,1.354,169,0.842,170,1.539,186,0.889,188,2.412,224,1.968,225,2.533,229,2.788,231,2.73,236,2.73,237,2.109,238,2.266,240,2.059,248,4.245,261,2.013,272,1.354,273,2.305,274,2.305,275,2.969,276,1.593,278,1.593,279,1.514,280,1.593,281,1.514,282,2.522,283,1.593,284,1.514,285,2.305,286,1.489,287,1.593,288,1.489,289,1.593,290,1.514,291,1.314,292,1.593,293,1.593,294,1.489,295,1.593,296,1.593,297,1.514,298,2.807,299,1.565,300,1.593,301,2.413,302,2.709,303,1.565,304,1.514,305,3.071,306,1.593,307,1.514,308,2.305,309,1.489,310,1.593,311,1.489,312,1.593,313,1.514,314,1.593,315,1.514,316,1.419,317,1.489,318,1.593,319,1.514,320,1.593,321,1.514,322,1.489,323,1.593,324,1.489,325,1.593,326,2.822,327,2.618,328,1.593,329,1.514,330,1.593,331,1.514,332,2.709,333,1.514,334,1.514,335,1.514,336,1.593,337,1.489,338,1.593,418,2.342,421,3.389,623,4.632,625,2.109,791,5.39,1059,3.128,1063,2.891,1065,3.694,1144,4.185,1369,3.694,1370,4.937,1804,4.937,1810,3.694,1824,5.347,2209,4.123,2210,9.151,2211,7.013,2212,5.968,2213,4.123,2214,4.123,2215,4.123,2216,5.968,2217,4.123,2218,5.968,2219,4.123,2220,4.123,2221,4.123,2222,4.123,2223,4.123,2224,7.013,2225,7.013,2226,4.123,2227,7.013,2228,4.123,2229,4.123,2230,4.123,2231,4.123,2232,4.123,2233,4.123,2234,4.123,2235,4.123]],["title/interfaces/State.html",[118,0.357,195,1.045]],["body/interfaces/State.html",[2,0.058,3,0.058,4,0.051,7,1.436,8,0.145,9,0.354,13,0.207,20,0.005,24,0.676,27,0.27,34,0.063,35,0.655,44,0.866,72,0.004,73,0.004,118,0.583,169,1.686,192,3.907,195,2.054,562,6.109,783,3.121,1353,3.336,1355,3.336,1450,4.221,1452,3.336,1453,3.416,1454,3.416,2236,5.984,2237,6.68,2238,6.68,2239,6.68]],["title/interfaces/State-1.html",[118,0.298,195,0.873,418,2.396]],["body/interfaces/State-1.html",[0,0.015,2,0.05,3,0.05,4,0.044,6,0.824,8,0.125,9,0.322,13,0.188,20,0.005,24,0.583,27,0.371,28,0.735,33,0.973,34,0.072,35,0.923,44,0.509,72,0.004,73,0.004,118,0.591,157,2.302,169,1.175,195,1.833,377,4.466,384,5.732,396,3.59,473,4.035,493,4.231,494,2.528,506,5.043,634,5.827,642,6.486,728,3.935,729,3.016,730,3.016,977,4.761,979,4.761,981,4.761,982,5.827,983,7.794,984,4.466,985,4.761,986,4.761,987,6.54,988,6.913,989,6.913,990,4.761,991,4.761,992,4.761,993,4.761,994,6.211,995,4.761,996,6.211,997,6.913,998,4.761,999,4.761,1000,6.211]],["title/interfaces/State-10.html",[118,0.298,195,0.873,851,2.632]],["body/interfaces/State-10.html",[2,0.059,3,0.059,4,0.052,7,1.196,8,0.148,9,0.358,13,0.171,20,0.005,24,0.689,27,0.337,33,1.151,34,0.064,35,0.667,72,0.004,73,0.004,118,0.59,140,2.236,169,1.705,195,2.062,783,3.18,884,6.924,947,7.232,1353,3.399,1355,3.399,1450,4.27,1452,3.399,1453,3.481,1454,3.481,2240,6.098,2241,6.098,2242,6.806,2243,6.806]],["title/interfaces/State-11.html",[118,0.298,195,0.873,2244,3.779]],["body/interfaces/State-11.html",[2,0.047,3,0.047,4,0.041,7,1.024,8,0.116,9,0.306,13,0.243,20,0.005,24,0.541,27,0.325,33,0.904,34,0.055,35,0.981,38,1.678,72,0.004,73,0.004,118,0.505,154,3.218,169,1.885,195,1.951,418,4.062,783,2.498,1006,6.961,1090,4.15,1345,4.423,1351,4.79,1352,4.79,1353,2.67,1355,4.297,1358,4.423,1360,4.423,1362,4.423,1450,4.121,1452,2.67,1453,2.734,1454,2.734,2245,4.79,2246,4.79,2247,9.229,2248,9.229,2249,5.346,2250,5.346,2251,5.346,2252,5.346,2253,5.346,2254,5.346,2255,4.79,2256,5.346,2257,7.151,2258,7.151,2259,5.346,2260,5.346,2261,5.346,2262,5.346,2263,5.346,2264,7.151,2265,5.346,2266,5.346,2267,5.346,2268,5.346,2269,5.346,2270,5.346,2271,7.151,2272,7.151,2273,5.346,2274,5.346,2275,5.346,2276,5.346,2277,7.151,2278,5.346,2279,5.346,2280,5.346,2281,5.346]],["title/interfaces/State-12.html",[118,0.298,195,0.873,2282,4.218]],["body/interfaces/State-12.html",[2,0.055,3,0.055,4,0.049,8,0.137,9,0.342,13,0.159,20,0.005,24,0.641,27,0.353,28,0.807,34,0.076,35,0.946,72,0.004,73,0.004,118,0.618,154,2.62,169,1.292,195,1.809,298,3.158,494,2.779,728,4.181,729,3.316,730,3.316,1032,6.6,1033,7.122,1041,5.234,1086,5.667,1087,5.725,1088,5.667,1089,5.667,1090,4.91,1091,5.667,1092,5.667,1093,5.667,1094,5.667,1095,5.667,1096,5.667,1097,5.667,1098,5.667,1099,7.147,1100,7.147,1101,5.667,1102,5.667,1103,7.147,1104,5.667,1105,5.234]],["title/interfaces/State-13.html",[118,0.298,195,0.873,2283,4.218]],["body/interfaces/State-13.html",[2,0.059,3,0.059,4,0.052,7,1.189,8,0.146,9,0.356,13,0.169,20,0.005,24,0.683,27,0.272,34,0.064,35,0.661,44,0.796,72,0.004,73,0.004,118,0.587,169,1.837,195,2.079,783,3.15,1134,5.578,1136,5.277,1353,3.367,1355,4.146,1450,4.245,1452,3.367,1453,3.448,1454,3.448,1917,6.041,2284,6.041,2285,6.742,2286,6.742,2287,6.742]],["title/interfaces/State-14.html",[118,0.298,195,0.873,2288,4.218]],["body/interfaces/State-14.html",[2,0.081,3,0.058,4,0.051,8,0.145,9,0.353,13,0.167,20,0.005,24,0.675,27,0.361,28,0.851,33,1.127,34,0.075,35,0.916,72,0.004,73,0.004,118,0.632,195,1.852,291,3.118,494,2.928,728,4.32,729,3.493,730,3.493,1936,7.255,1937,5.97,1938,5.97,1939,5.97,1940,5.97,1941,5.97,1942,5.97,1943,5.97,1944,7.384,1945,5.97,1946,5.97,1947,7.384]],["title/interfaces/State-15.html",[118,0.298,195,0.873,1564,3.49]],["body/interfaces/State-15.html",[2,0.051,3,0.051,4,0.045,8,0.128,9,0.327,13,0.148,20,0.005,24,0.597,27,0.361,28,0.753,33,0.997,34,0.077,35,0.969,72,0.004,73,0.004,118,0.598,195,1.851,205,3.679,282,2.765,494,2.591,561,4.335,638,5.348,722,6.938,723,5.283,724,6.938,725,4.669,726,5.283,727,5.283,728,3.998,729,3.09,730,3.09,731,5.283,732,5.283,733,5.283,734,5.283,735,5.283,736,5.283,737,5.283,738,5.283,739,5.283,740,6.833,741,5.283,742,5.283,743,5.283,744,6.833,745,6.833,746,6.833,747,6.833,748,6.833,749,5.283,750,6.833,751,5.283,752,5.283,753,4.135]],["title/interfaces/State-16.html",[118,0.298,195,0.873,2289,4.218]],["body/interfaces/State-16.html",[2,0.057,3,0.057,4,0.05,7,1.169,8,0.142,9,0.35,13,0.205,20,0.005,24,0.664,27,0.265,34,0.063,35,0.643,44,0.786,72,0.004,73,0.004,89,3.431,118,0.577,169,1.814,195,2.068,573,3.836,753,6.835,783,3.063,1353,3.275,1355,4.075,1450,4.173,1452,3.275,1453,3.353,1454,3.353,2052,8.064,2290,5.875,2291,5.875,2292,6.557,2293,6.557,2294,6.557,2295,6.557]],["title/interfaces/State-17.html",[118,0.298,195,0.873,2296,3.779]],["body/interfaces/State-17.html",[2,0.054,3,0.054,4,0.047,7,1.124,8,0.134,9,0.336,13,0.235,20,0.005,24,0.624,27,0.249,34,0.06,35,0.604,44,0.91,72,0.004,73,0.004,118,0.555,169,1.763,195,2.018,603,4.385,783,2.879,1136,5.047,1313,4.142,1353,3.078,1355,3.919,1450,4.415,1452,3.078,1453,3.152,1454,3.152,2297,5.521,2298,7.284,2299,7.284,2300,7.284,2301,6.162,2302,6.162,2303,6.162]],["title/interfaces/State-18.html",[118,0.298,195,0.873,2304,4.218]],["body/interfaces/State-18.html",[2,0.06,3,0.06,4,0.053,7,1.201,8,0.149,9,0.359,13,0.172,20,0.005,24,0.694,27,0.277,34,0.064,35,0.672,72,0.004,73,0.004,94,2.175,118,0.593,169,1.713,195,2.065,783,3.203,1353,3.424,1355,3.424,1450,4.289,1452,3.424,1453,3.506,1454,3.506,1660,5.672,1661,6.142,2305,6.142,2306,7.647,2307,6.855,2308,6.855,2309,6.855]],["title/interfaces/State-19.html",[118,0.298,195,0.873,2310,4.218]],["body/interfaces/State-19.html",[2,0.058,3,0.058,4,0.051,8,0.144,9,0.352,13,0.166,20,0.005,24,0.672,27,0.332,28,0.847,34,0.076,35,0.94,72,0.004,73,0.004,118,0.631,195,1.848,225,3.224,305,3.37,494,2.914,728,4.307,729,3.477,730,3.477,2306,5.148,2311,5.943,2312,7.243,2313,5.943,2314,5.943,2315,5.943,2316,5.943,2317,5.943,2318,5.943,2319,5.943,2320,5.943,2321,5.943,2322,7.362,2323,5.943,2324,5.943,2325,6.799]],["title/interfaces/State-2.html",[118,0.298,195,0.873,1068,3.274]],["body/interfaces/State-2.html",[2,0.047,3,0.047,4,0.042,7,1.035,8,0.118,9,0.31,13,0.136,16,2.252,20,0.005,24,0.55,27,0.328,33,0.918,34,0.066,35,0.883,41,1.985,44,0.718,51,1.654,56,1.023,58,2.942,62,0.996,72,0.004,73,0.004,89,3.136,93,2.252,94,1.734,118,0.574,124,1.783,169,1.987,195,2.097,245,3.786,573,4.226,645,3.175,783,2.536,827,3.498,1353,2.71,1355,4.724,1442,4.49,1443,5.065,1444,5.065,1445,5.693,1446,3.647,1447,4.862,1448,4.67,1449,3.806,1450,3.694,1451,3.806,1452,2.71,1453,2.776,1454,2.776,1455,4.862,1456,4.212,1457,4.862,1458,4.862,1459,5.607,1460,4.212,1461,4.862,1462,3.806,1463,4.862,1464,7.274,1465,4.862,1466,4.862,1467,4.862,1468,6.472,1469,5.065,1470,3.806]],["title/interfaces/State-3.html",[118,0.298,195,0.873,1070,3.49]],["body/interfaces/State-3.html",[2,0.06,3,0.06,4,0.053,7,1.205,8,0.149,9,0.36,13,0.173,20,0.005,22,1.453,24,0.698,27,0.278,34,0.065,35,0.675,44,0.803,72,0.004,73,0.004,118,0.594,169,1.718,195,2.067,783,3.218,1353,3.44,1355,3.44,1450,4.301,1452,3.44,1453,3.523,1454,3.523,2326,6.171,2327,6.888,2328,6.888,2329,5.699]],["title/interfaces/State-4.html",[118,0.298,195,0.873,1660,3.49]],["body/interfaces/State-4.html",[2,0.051,3,0.051,4,0.045,7,1.085,8,0.127,9,0.325,13,0.146,20,0.005,24,0.591,27,0.306,34,0.068,35,0.873,41,2.02,44,0.744,51,1.778,72,0.004,73,0.004,89,3.249,99,2.786,118,0.595,122,3.414,169,1.932,195,2.075,245,3.971,573,4.432,645,3.414,783,2.727,827,3.625,828,3.641,1353,2.915,1355,4.609,1424,4.53,1443,5.313,1444,5.313,1445,5.9,1446,3.922,1449,4.092,1450,3.875,1451,4.092,1452,2.915,1453,2.985,1454,2.985,1456,4.53,1459,5.881,1460,4.53,1462,4.092,1469,5.313,1470,4.092,1984,4.829,1985,5.229,1986,5.229,1987,5.229,1988,5.229,1989,5.229,1990,5.229]],["title/interfaces/State-5.html",[118,0.298,195,0.873,259,2.632]],["body/interfaces/State-5.html",[2,0.035,3,0.035,4,0.03,8,0.086,9,0.249,11,1.98,13,0.1,20,0.005,24,0.402,27,0.366,28,0.507,33,0.671,34,0.077,35,0.99,36,2.301,38,1.822,62,1.259,72,0.003,73,0.003,105,4.06,118,0.485,169,1.402,195,1.737,232,3.861,316,1.366,327,2.818,375,3.139,381,3.284,403,3.753,404,4.71,494,1.744,728,3.042,729,2.08,730,2.08,819,4.437,820,2.254,888,3.284,1057,2.918,1059,2.08,1087,2.476,1163,3.284,1248,3.081,1382,2.783,1702,4.802,1703,3.284,1957,4.802,1958,4.802,2117,3.556,2118,3.556,2119,3.556,2120,3.556,2121,3.556,2122,3.556,2123,3.556,2124,3.556,2125,3.556,2126,3.556,2127,3.556,2128,3.556,2129,3.556,2130,3.556,2131,3.556,2132,3.556,2133,3.556,2134,3.556,2135,3.556,2136,3.556,2137,3.556,2138,3.556,2139,3.556,2140,3.556,2141,3.556,2142,3.556,2143,6.764,2144,3.556,2145,3.556,2146,3.556,2147,5.2,2148,3.556,2149,3.556,2150,3.556,2151,5.2,2152,5.2,2153,3.556,2154,5.2,2155,5.2,2156,6.764,2157,5.2,2158,5.2,2159,3.556,2160,3.556,2161,3.556,2162,3.556,2163,6.148,2164,3.556,2165,3.556,2166,3.556,2167,3.556,2168,3.556,2169,5.2,2170,3.556,2171,3.556,2172,3.556,2173,3.556,2174,3.556,2175,5.2,2176,6.764,2177,5.677,2178,6.148,2179,3.556,2180,6.148,2181,5.2,2182,5.2,2183,5.2,2184,5.2,2185,5.2,2186,5.2,2187,3.556,2188,5.2,2189,3.556,2190,3.556,2191,5.2,2192,3.556,2193,3.556,2194,3.556,2195,5.2,2196,3.556,2197,5.2,2198,5.2,2199,3.556,2200,3.556,2201,3.556,2202,3.556,2203,3.556,2204,3.556,2205,3.556,2206,3.556]],["title/interfaces/State-6.html",[118,0.298,195,0.873,2330,4.218]],["body/interfaces/State-6.html",[2,0.053,3,0.053,4,0.046,7,1.112,8,0.131,9,0.333,13,0.215,20,0.005,24,0.613,27,0.245,34,0.06,35,0.594,44,0.845,56,1.8,62,1.752,72,0.004,73,0.004,94,2.056,118,0.549,124,3.137,169,1.951,195,2.073,783,2.83,1059,3.175,1353,3.026,1355,4.663,1450,4.38,1452,3.026,1453,3.098,1454,3.098,2329,5.012,2331,5.428,2332,6.058,2333,6.058,2334,5.428,2335,5.428,2336,5.428,2337,6.058,2338,5.428,2339,6.058,2340,5.428]],["title/interfaces/State-7.html",[118,0.298,195,0.873,2341,4.218]],["body/interfaces/State-7.html",[2,0.053,3,0.053,4,0.047,7,1.113,8,0.132,9,0.333,13,0.215,20,0.005,24,0.615,27,0.245,34,0.06,35,0.595,44,0.846,56,1.801,62,1.783,72,0.004,73,0.004,94,2.058,118,0.549,124,3.232,169,1.908,193,4.712,194,4.712,195,2.057,213,5.439,783,2.836,1059,4.493,1353,3.032,1355,4.514,1450,4.384,1452,3.032,1453,3.105,1454,3.105,2329,5.023,2334,5.439,2335,5.439,2336,5.439,2338,5.439,2342,5.439,2343,5.439,2344,6.071]],["title/interfaces/State-8.html",[118,0.298,195,0.873,858,3.49]],["body/interfaces/State-8.html",[2,0.05,3,0.05,4,0.044,7,1.078,11,1.262,20,0.005,24,0.585,27,0.304,34,0.068,35,0.869,44,0.666,51,2.294,72,0.004,73,0.004,88,5.413,89,2.231,93,3.473,94,1.387,118,0.592,169,1.962,195,2.071,245,3.945,573,3.38,783,2.699,827,3.822,913,5.278,1059,3.028,1353,2.885,1355,4.594,1412,5.842,1443,5.278,1444,5.278,1445,5.871,1446,3.883,1449,4.051,1450,3.849,1451,4.051,1452,2.885,1453,2.955,1454,2.955,1462,4.051,1469,5.278,1470,5.278,1728,4.78,1729,4.78,1730,4.484,1731,4.484,1732,5.176,1733,5.176,1734,5.176,1735,5.176,1736,5.176,1737,5.176,1738,5.176,1739,5.176,1740,5.176,1741,5.176,1742,5.176,1743,5.176]],["title/interfaces/State-9.html",[118,0.298,195,0.873,2345,4.218]],["body/interfaces/State-9.html",[2,0.051,3,0.051,4,0.045,8,0.126,9,0.324,13,0.146,20,0.005,24,0.59,27,0.372,28,0.743,33,0.985,34,0.077,35,0.966,37,1.417,72,0.004,73,0.004,82,2.979,83,2.672,115,3.87,118,0.594,119,3.966,123,5.649,140,2.485,195,1.909,494,2.559,728,3.966,729,3.053,730,3.053,869,4.521,882,6.26,883,6.906,913,4.084,946,5.218,947,6.18,948,5.218,949,5.218,950,5.218,951,5.218,952,5.218,953,5.218,954,5.218,955,5.218,956,5.218,957,5.218,958,5.218,959,5.218,960,5.218,961,5.218,962,5.218,963,7.53,964,5.218,965,5.218,966,5.218,967,5.218,968,5.218,969,6.779,970,5.218,971,5.218,972,6.779,973,5.218,974,6.779,975,5.218,976,5.218]],["title/injectables/StatusEffects.html",[339,1.584,664,4.175]],["body/injectables/StatusEffects.html",[0,0.012,2,0.042,3,0.042,4,0.037,7,1.342,8,0.106,9,0.287,13,0.122,14,0.594,17,0.982,19,0.769,20,0.005,21,0.639,22,0.717,24,0.838,25,1.236,27,0.384,33,0.823,34,0.037,35,0.657,38,3.021,72,0.003,73,0.003,157,1.946,169,1.37,186,1.048,191,2.936,192,2.846,201,1.461,339,2.41,343,2.936,346,5.845,348,3.35,349,4.337,361,4.7,362,5.933,364,2.55,367,1.982,368,3.577,370,2.018,473,3.412,516,4.232,529,6.01,531,6.01,546,3.146,664,5.55,753,4.704,984,3.776,987,6.18,1313,3.27,2291,4.359,2346,4.865,2347,8.275,2348,8.275,2349,4.865,2350,6.708,2351,6.708,2352,6.708,2353,8.275,2354,6.708,2355,4.865,2356,6.01,2357,6.01,2358,6.708,2359,6.708,2360,6.708,2361,8.974,2362,6.708,2363,4.865,2364,6.708,2365,4.865,2366,6.708,2367,6.708,2368,4.865,2369,4.865,2370,4.865,2371,4.865]],["title/components/TabsComponent.html",[125,1.195,329,1.852]],["body/components/TabsComponent.html",[0,0.009,2,0.033,3,0.033,4,0.029,6,0.799,7,0.539,8,0.082,13,0.167,14,0.459,17,0.931,19,0.881,20,0.005,21,0.967,22,0.822,24,0.673,25,0.994,27,0.332,28,0.48,33,0.636,34,0.029,36,1.7,37,0.915,41,0.789,56,0.709,62,0.69,68,1.709,72,0.003,73,0.003,83,2.684,105,3,125,1.861,126,1.381,127,1.453,128,1.453,129,1.453,130,1.453,134,2.568,135,1.381,136,2.786,137,2.786,138,3.94,139,3.624,140,2.184,141,2.155,143,2.155,146,1.725,147,2.841,153,4.017,154,1.235,156,1.923,157,3.293,169,1.139,170,2.082,185,1.878,186,0.81,195,0.779,196,1.56,201,1.129,207,1.971,224,1.795,225,2.014,226,1.686,229,3.437,230,1.795,233,1.686,235,1.836,236,2.552,237,2.853,238,2.118,239,1.836,253,2.27,254,2.2,255,2.2,261,1.836,269,2.022,272,1.235,273,2.155,274,2.155,275,2.841,276,1.453,278,1.453,279,1.381,280,1.453,281,1.381,282,2.43,283,1.453,284,1.381,285,2.155,286,1.358,287,1.453,288,1.358,289,1.453,290,1.381,291,1.198,292,1.453,293,1.453,294,1.358,295,1.453,296,1.453,297,1.381,298,2.704,299,1.428,300,1.453,301,2.288,302,2.568,303,1.428,304,1.381,305,2.972,306,1.453,307,1.381,308,2.155,309,1.358,310,1.453,311,1.358,312,1.453,313,1.381,314,1.453,315,1.381,316,1.294,317,1.358,318,1.453,319,1.381,320,1.453,321,1.381,322,1.358,323,1.453,324,1.358,325,1.453,326,1.381,327,1.404,328,1.453,329,2.701,330,1.453,331,1.381,332,2.568,333,1.381,334,1.381,335,1.381,336,1.453,337,1.358,338,1.453,386,4.33,421,3.168,425,2.27,854,2.27,855,2.27,869,5.161,884,6.052,947,5.777,1059,3.856,1341,3.112,2101,4.33,2241,3.369,2372,3.761,2373,6.65,2374,5.579,2375,7.857,2376,7.857,2377,5.579,2378,3.761,2379,3.761,2380,3.761,2381,5.579,2382,3.761,2383,3.761,2384,3.761]],["title/components/TimeDateGraphComponent.html",[125,1.195,331,1.852]],["body/components/TimeDateGraphComponent.html",[0,0.011,2,0.037,3,0.037,4,0.033,6,0.879,8,0.093,13,0.154,14,0.875,17,0.885,20,0.005,21,0.806,27,0.248,33,0.725,34,0.033,36,1.869,37,1.042,41,0.899,56,0.807,62,0.786,68,2.409,72,0.003,73,0.003,83,2.486,125,1.961,126,1.573,127,1.654,128,1.654,129,1.654,130,1.654,134,2.767,135,1.573,136,3.063,137,3.063,138,3.981,139,3.662,140,1.407,141,2.369,143,2.369,146,1.897,147,3.021,153,4.041,154,3.27,169,0.875,170,1.599,185,2.139,186,0.923,225,1.547,238,2.329,272,1.407,273,2.369,274,2.369,275,3.021,276,1.654,278,1.654,279,1.573,280,1.654,281,1.573,282,2.56,283,1.654,284,1.573,285,2.369,286,1.547,287,1.654,288,1.547,289,1.654,290,1.573,291,1.365,292,1.654,293,1.654,294,1.547,295,1.654,296,1.654,297,1.573,298,3.052,299,2.72,300,1.654,301,2.466,302,2.767,303,1.626,304,1.573,305,3.111,306,1.654,307,1.573,308,2.369,309,1.547,310,1.654,311,1.547,312,1.654,313,1.573,314,1.654,315,1.573,316,1.474,317,1.547,318,1.654,319,1.573,320,1.654,321,1.573,322,1.547,323,1.654,324,1.547,325,1.654,326,1.573,327,1.599,328,1.654,329,1.573,330,1.654,331,2.872,332,2.767,333,1.573,334,1.573,335,1.573,336,1.654,337,1.547,338,1.654,771,4.633,784,4.324,1082,6.426,1394,5.561,2385,6.85,2386,3.544,2387,5.928,2388,5.075,2389,5.928,2390,5.075,2391,3.544,2392,3.544]],["title/components/TimeGameGraphComponent.html",[125,1.195,333,1.852]],["body/components/TimeGameGraphComponent.html",[0,0.011,2,0.037,3,0.037,4,0.033,6,0.879,8,0.093,13,0.154,14,0.875,17,0.885,20,0.005,21,0.806,27,0.248,33,0.725,34,0.033,36,1.869,37,1.042,41,0.899,56,1.876,62,0.786,68,2.409,72,0.003,73,0.003,83,2.486,125,1.961,126,1.573,127,1.654,128,1.654,129,1.654,130,1.654,134,2.767,135,1.573,136,3.063,137,3.063,138,3.981,139,3.662,140,1.407,141,2.369,143,2.369,146,1.897,147,3.021,153,4.041,154,1.407,169,0.875,170,1.599,185,2.139,186,0.923,225,1.547,238,2.329,272,1.407,273,2.369,274,2.369,275,3.021,276,1.654,278,1.654,279,1.573,280,1.654,281,1.573,282,2.56,283,1.654,284,1.573,285,2.369,286,1.547,287,1.654,288,1.547,289,1.654,290,1.573,291,1.365,292,1.654,293,1.654,294,1.547,295,1.654,296,1.654,297,1.573,298,3.052,299,2.72,300,1.654,301,2.466,302,2.767,303,1.626,304,1.573,305,3.111,306,1.654,307,1.573,308,2.369,309,1.547,310,1.654,311,1.547,312,1.654,313,1.573,314,1.654,315,1.573,316,1.474,317,1.547,318,1.654,319,1.573,320,1.654,321,1.573,322,1.547,323,1.654,324,1.547,325,1.654,326,1.573,327,1.599,328,1.654,329,1.573,330,1.654,331,1.573,332,2.767,333,2.872,334,1.573,335,1.573,336,1.654,337,1.547,338,1.654,771,4.633,784,4.324,1082,6.426,1394,5.561,2385,6.85,2386,3.544,2387,5.928,2388,5.075,2389,5.928,2390,5.075,2391,3.544,2392,3.544]],["title/pipes/TimePipe.html",[348,2.52,943,3.71]],["body/pipes/TimePipe.html",[0,0.018,2,0.062,3,0.062,4,0.054,6,1.014,13,0.177,17,0.801,19,1.118,20,0.005,21,1.207,22,1.043,27,0.345,34,0.054,44,0.756,68,2.197,72,0.004,73,0.004,94,2.205,135,2.597,146,2.188,169,1.746,186,1.525,348,4.588,943,6.285,1017,6.339,1034,5.854,1144,4.961,1149,7.073,2393,7.075,2394,8.549,2395,7.075,2396,7.075,2397,7.075]],["title/components/TimePlatformGraphComponent.html",[125,1.195,334,1.852]],["body/components/TimePlatformGraphComponent.html",[0,0.011,2,0.037,3,0.037,4,0.033,6,0.879,8,0.093,13,0.154,14,0.875,17,0.885,20,0.005,21,0.806,27,0.248,33,0.725,34,0.033,36,1.869,37,1.042,41,0.899,56,0.807,62,1.827,68,2.409,72,0.003,73,0.003,83,2.486,125,1.961,126,1.573,127,1.654,128,1.654,129,1.654,130,1.654,134,2.767,135,1.573,136,3.063,137,3.063,138,3.981,139,3.662,140,1.407,141,2.369,143,2.369,146,1.897,147,3.021,153,4.041,154,1.407,169,0.875,170,1.599,185,2.139,186,0.923,225,1.547,238,2.329,272,1.407,273,2.369,274,2.369,275,3.021,276,1.654,278,1.654,279,1.573,280,1.654,281,1.573,282,2.56,283,1.654,284,1.573,285,2.369,286,1.547,287,1.654,288,1.547,289,1.654,290,1.573,291,1.365,292,1.654,293,1.654,294,1.547,295,1.654,296,1.654,297,1.573,298,3.052,299,2.72,300,1.654,301,2.466,302,2.767,303,1.626,304,1.573,305,3.111,306,1.654,307,1.573,308,2.369,309,1.547,310,1.654,311,1.547,312,1.654,313,1.573,314,1.654,315,1.573,316,1.474,317,1.547,318,1.654,319,1.573,320,1.654,321,1.573,322,1.547,323,1.654,324,1.547,325,1.654,326,1.573,327,1.599,328,1.654,329,1.573,330,1.654,331,1.573,332,2.767,333,1.573,334,2.872,335,1.573,336,1.654,337,1.547,338,1.654,784,4.324,793,4.816,1082,6.426,1394,5.561,2385,6.85,2386,3.544,2387,5.928,2388,5.075,2389,5.928,2390,5.075,2391,3.544,2392,3.544]],["title/components/TimerComponent.html",[125,1.195,335,1.852]],["body/components/TimerComponent.html",[0,0.006,2,0.053,3,0.019,4,0.017,6,0.52,7,1.036,8,0.079,9,0.156,11,1.018,13,0.194,14,0.266,17,1.002,19,0.858,20,0.005,21,0.856,22,0.96,24,0.66,25,0.973,27,0.313,28,0.279,34,0.017,35,0.638,36,1.107,37,0.531,38,1.14,41,0.458,43,1.812,44,0.64,56,1.415,62,1.326,68,1.674,72,0.002,73,0.002,83,1.812,93,0.906,124,2.375,125,1.429,126,0.801,127,0.843,128,0.843,129,0.843,130,0.843,134,1.801,135,0.801,136,1.814,137,1.814,138,3.712,139,3.415,140,0.717,141,1.402,143,1.402,145,3.427,146,1.123,147,2.099,150,2.486,151,1.661,152,1.661,153,3.779,154,1.785,156,1.116,157,2.605,158,3.713,161,3.514,169,1.623,170,2.802,174,3.253,175,3.428,177,1.806,178,3.253,180,1.956,181,2.192,185,1.09,186,0.47,187,1.277,188,1.277,189,1.205,190,1.317,195,0.452,196,0.906,197,1.065,201,0.655,202,1.29,203,1.467,204,2.44,205,1.362,206,1.694,207,3.619,208,1.956,209,1.806,210,1.956,212,1.956,216,1.956,221,2.276,224,1.042,225,2.796,226,2.436,227,2.226,228,3.043,229,2.539,230,1.733,231,2.486,232,3.331,233,1.628,234,2.909,235,1.065,236,4.09,237,1.857,238,2.621,239,3.179,240,2.714,241,2.192,242,2.546,243,1.24,245,2.444,246,2.67,247,3.245,248,2.006,249,2.348,250,1.605,251,1.531,252,1.605,253,3.28,254,3.53,255,3.53,259,2.266,261,3.179,262,1.467,263,1.605,264,1.857,265,1.857,266,1.814,267,2.594,268,1.857,269,1.953,270,3.004,271,3.004,272,0.717,273,1.402,274,1.402,275,2.099,276,0.843,278,0.843,279,0.801,280,0.843,281,0.801,282,1.866,283,0.843,284,0.801,285,1.402,286,0.788,287,0.843,288,0.788,289,0.843,290,0.801,291,0.695,292,0.843,293,0.843,294,0.788,295,0.843,296,0.843,297,0.801,298,2.076,299,0.829,300,0.843,301,1.605,302,1.801,303,0.829,304,0.801,305,2.611,306,0.843,307,0.801,308,1.402,309,0.788,310,0.843,311,0.788,312,0.843,313,0.801,314,0.843,315,0.801,316,0.751,317,0.788,318,0.843,319,0.801,320,0.843,321,0.801,322,0.788,323,0.843,324,0.788,325,0.843,326,0.801,327,0.815,328,0.843,329,0.801,330,0.843,331,0.801,332,1.801,333,0.801,334,0.801,335,1.995,336,0.843,337,0.788,338,0.843,373,1.116,375,2.133,424,3.253,428,2.226,429,2.76,545,1.531,625,1.116,626,1.362,797,3.002,810,2.728,851,2.266,863,1.694,921,1.467,922,1.411,1059,3.163,1063,1.531,1111,3.134,1126,5.389,1143,4.992,1289,4.308,1382,3.27,1383,3.619,1477,3.253,1485,3.253,1487,1.956,1499,1.605,1500,1.956,1501,1.956,1502,1.956,1504,1.956,1509,3.858,1511,1.806,1520,1.956,1525,3.004,1526,1.806,1528,1.956,1529,1.806,1530,1.956,1531,3.253,1564,1.806,1804,1.806,1805,1.956,1818,1.956,1821,1.956,2255,4.178,2398,2.183,2399,4.663,2400,3.631,2401,5.435,2402,5.435,2403,5.435,2404,2.183,2405,3.631,2406,2.183,2407,2.183,2408,2.183,2409,2.183,2410,2.183,2411,2.183,2412,2.183,2413,2.183,2414,2.183,2415,2.183,2416,2.183,2417,2.183,2418,2.183,2419,2.183,2420,2.183,2421,4.663,2422,4.663,2423,4.663,2424,4.663,2425,2.183,2426,2.183,2427,2.183,2428,2.183,2429,2.183,2430,6.513,2431,2.183,2432,3.631,2433,2.183,2434,3.631,2435,2.183,2436,2.183,2437,2.183,2438,2.183,2439,2.183,2440,2.183,2441,2.183]],["title/injectables/TimerEffects.html",[339,1.584,2442,4.175]],["body/injectables/TimerEffects.html",[0,0.012,2,0.042,3,0.042,4,0.037,7,1.377,8,0.105,9,0.286,13,0.121,14,0.591,17,0.934,19,0.765,20,0.005,21,0.636,22,0.713,24,0.775,25,1.144,27,0.378,34,0.037,38,2.937,72,0.003,73,0.003,186,1.043,191,2.921,192,2.832,201,1.454,202,2.375,339,2.403,343,2.921,346,5.59,348,4.673,349,6.05,357,5.549,358,5.549,360,5.549,361,4.349,362,5.729,364,2.537,365,1.807,366,3.253,367,1.972,368,3.559,369,3.253,370,2.008,544,3.559,545,3.394,797,4.56,807,4.56,812,4.69,1201,5.937,1289,5.729,1405,5.188,1441,4.005,1499,3.559,1980,5.989,2340,5.989,2442,5.53,2443,4.841,2444,4.841,2445,6.684,2446,6.684,2447,8.257,2448,4.841,2449,6.684,2450,6.684,2451,6.684,2452,6.684,2453,6.684,2454,6.684,2455,6.684,2456,4.841,2457,6.684,2458,6.684,2459,6.684,2460,6.684,2461,6.684,2462,6.684,2463,4.841]],["title/interfaces/TimerInfo.html",[118,0.357,375,2.308]],["body/interfaces/TimerInfo.html",[2,0.061,3,0.061,4,0.054,8,0.153,9,0.365,13,0.23,20,0.005,34,0.065,43,2.114,44,0.902,56,1.839,62,1.79,72,0.004,73,0.004,93,2.921,94,2.342,118,0.648,124,3.204,373,3.601,374,6.308,375,3.899]],["title/injectables/TimerService.html",[339,1.584,1289,3.148]],["body/injectables/TimerService.html",[0,0.011,2,0.069,3,0.039,4,0.034,8,0.096,9,0.269,13,0.229,14,0.541,17,1.053,19,1.415,20,0.005,21,1.177,22,1.32,27,0.339,34,0.048,35,0.434,38,1.39,43,2.616,44,0.905,56,1.688,62,1.643,72,0.003,73,0.003,94,2.091,118,0.313,124,2.942,146,1.943,150,2.874,151,2.874,152,2.874,169,1.902,170,3.13,186,0.954,197,2.162,201,1.33,202,2.593,232,2.265,339,2.291,365,1.653,367,1.804,370,1.838,375,3.633,392,3.207,463,2.446,645,4.27,802,3.568,901,2.977,908,3.106,1059,2.322,1166,3.665,1195,4.511,1196,4.511,1197,2.516,1203,3.568,1227,3.257,1265,5.367,1287,3.665,1288,3.968,1289,3.919,1290,7.116,1291,3.968,1292,3.968,1293,5.628,1294,7.513,1295,5.628,1296,5.628,1297,5.628,1298,5.628,1299,5.628,1300,3.968,1301,3.968,1302,3.968,1303,7.116,1542,3.257,2464,6.282,2465,6.282,2466,6.282,2467,4.429,2468,4.429,2469,4.429,2470,4.429,2471,4.429,2472,4.429,2473,4.429]],["title/components/TrackerComponent.html",[125,1.195,337,1.822]],["body/components/TrackerComponent.html",[0,0.009,2,0.031,3,0.031,4,0.027,6,0.768,8,0.077,9,0.23,13,0.216,14,0.435,17,0.997,19,0.563,20,0.005,21,0.847,22,0.525,27,0.356,28,0.455,34,0.027,35,0.631,36,1.633,37,0.867,41,1.124,56,1.447,62,0.654,68,1.655,72,0.003,73,0.003,83,2.306,125,1.819,126,1.309,127,1.377,128,1.377,129,1.377,130,1.377,134,2.488,135,1.309,138,3.921,139,3.607,140,1.171,141,2.07,143,2.07,146,1.657,147,2.767,154,1.171,157,3.349,161,2.305,163,4.72,169,0.728,170,1.331,186,0.768,195,1.109,196,1.479,197,1.74,201,1.07,202,1.904,206,2.766,225,1.935,226,1.598,228,1.665,238,2.035,260,2.395,272,1.171,273,2.07,274,2.07,275,2.767,276,1.377,278,1.377,279,1.309,280,1.377,281,1.309,282,2.375,283,1.377,284,1.309,285,2.07,286,1.287,287,1.377,288,1.287,289,1.377,290,1.309,291,1.136,292,1.377,293,1.377,294,1.287,295,1.377,296,1.377,297,1.309,298,2.643,299,1.353,300,1.377,301,2.216,302,2.488,303,1.353,304,1.309,305,3.11,306,1.377,307,1.309,308,2.07,309,1.287,310,1.377,311,1.287,312,1.377,313,1.309,314,1.377,315,1.309,316,1.227,317,1.287,318,1.377,319,1.309,320,1.377,321,1.309,322,1.287,323,1.377,324,1.287,325,1.377,326,1.309,327,1.331,328,1.377,329,1.309,330,1.377,331,1.309,332,2.488,333,1.309,334,1.309,335,1.309,336,1.377,337,2.587,338,1.377,365,1.331,367,1.452,370,1.479,375,3.513,387,5.626,389,4.516,392,4.343,401,2.766,402,2.766,403,2.305,404,2.224,405,2.621,428,1.702,429,2.452,893,3.193,901,3.602,1044,3.193,1111,2.395,1143,5.927,1167,3.193,1382,5.023,1383,5.56,1652,3.193,2306,4.16,2312,2.766,2325,2.949,2474,3.564,2475,6.441,2476,5.359,2477,7.163,2478,3.564,2479,5.359,2480,5.359,2481,3.564,2482,3.564,2483,3.564,2484,3.564,2485,3.564,2486,3.564,2487,3.564,2488,3.564,2489,3.564,2490,3.564,2491,3.564,2492,3.564,2493,3.564,2494,3.564,2495,3.564,2496,6.441,2497,3.564,2498,3.564,2499,3.564,2500,3.564,2501,3.564,2502,3.564,2503,3.564]],["title/modules/TrackerModule.html",[433,2.133,452,3.71]],["body/modules/TrackerModule.html",[0,0.011,2,0.039,3,0.039,4,0.035,20,0.005,27,0.414,28,0.574,34,0.049,36,1.935,72,0.003,73,0.003,158,4.707,186,0.969,190,2.715,196,1.866,249,2.909,272,1.478,304,3.214,307,3.214,313,3.214,315,3.214,335,3.214,337,3.161,364,2.358,387,5.883,401,3.492,402,3.492,433,2.685,435,2.555,436,4.443,437,2.715,438,3.676,451,5.462,452,7.561,453,3.833,454,1.5,455,2.632,457,3.715,467,4.67,468,3.155,469,3.023,470,3.308,474,3.023,485,3.308,494,2.79,598,3.308,654,4.106,655,2.807,669,5.255,673,3.722,928,5.69,929,4.454,930,3.722,1201,5.66,1240,6.139,1289,5.462,1398,5.255,1441,3.722,1472,4.03,1499,3.308,1650,4.03,1695,4.03,1827,5.255,1835,4.03,2442,5.255,2504,4.03,2505,4.03,2506,4.499,2507,4.03,2508,4.499,2509,6.351,2510,6.351,2511,4.03,2512,4.03,2513,4.499,2514,6.351,2515,4.499,2516,4.499,2517,4.499,2518,4.499,2519,4.499,2520,4.499,2521,4.499,2522,4.499,2523,4.499,2524,4.499]],["title/interfaces/TrackerState.html",[118,0.357,2312,3.916]],["body/interfaces/TrackerState.html",[2,0.058,3,0.058,4,0.051,8,0.144,9,0.352,13,0.166,20,0.005,24,0.672,27,0.332,28,0.847,34,0.076,35,0.94,72,0.004,73,0.004,118,0.631,195,1.701,225,3.53,305,2.395,494,2.914,728,4.307,729,3.477,730,3.477,2306,5.148,2311,5.943,2312,6.93,2313,5.943,2314,5.943,2315,7.999,2316,5.943,2317,5.943,2318,5.943,2319,5.943,2320,5.943,2321,5.943,2322,7.362,2323,5.943,2324,5.943,2325,6.799]],["title/classes/TwitterLogin.html",[0,0.013,688,2.645]],["body/classes/TwitterLogin.html",[0,0.024,2,0.04,3,0.04,4,0.035,6,1.374,7,1.387,8,0.098,9,0.274,10,1.688,12,2.293,13,0.246,14,1.124,17,0.723,20,0.005,24,0.459,25,0.678,27,0.258,28,0.579,33,0.767,34,0.078,35,0.93,39,2.007,44,0.748,72,0.003,73,0.003,282,2.934,454,1.512,516,4.104,527,4.847,590,2.438,592,2.438,594,2.438,603,3.749,606,3.529,678,3.347,680,3.347,681,3.347,688,3.875,725,3.831,754,2.652,758,3.854,759,3.434,760,3.854,761,3.627,762,3.854,763,4.558,764,3.854,765,4.462,766,4.434,767,4.549,768,3.854,769,3.434,770,3.854,2525,6.387]],["title/interfaces/UUIDConfig.html",[118,0.357,1180,3.916]],["body/interfaces/UUIDConfig.html",[2,0.061,3,0.061,4,0.053,8,0.151,9,0.363,13,0.212,20,0.005,34,0.053,44,0.917,72,0.004,73,0.004,89,2.693,118,0.671,406,4.686,708,4.889,788,6.139,1175,5.768,1176,5.768,1177,5.768,1178,5.411,1179,6.576,1180,7.084,1181,5.768,1182,5.768,1183,5.768,1184,5.768,1185,5.768,1186,5.768,1187,7.856]],["title/classes/UpdateElapsedTime.html",[0,0.013,69,2.581]],["body/classes/UpdateElapsedTime.html",[0,0.024,1,3.193,2,0.034,3,0.034,4,0.03,5,2.242,6,1.351,7,1.365,8,0.086,9,0.248,10,2.344,11,1.89,12,2.256,13,0.247,14,0.482,16,2.838,17,0.852,19,0.624,20,0.005,21,0.519,22,0.582,24,0.4,25,0.59,26,3.382,27,0.276,28,0.504,29,1.844,30,3.066,31,3.066,32,3.878,33,0.668,34,0.077,35,0.914,36,2.874,37,0.96,38,1.239,39,2.332,40,3.382,41,1.213,42,3.109,43,2.718,44,0.825,45,3.382,46,2.673,47,3.193,48,3.382,49,2.272,50,3.109,51,1.762,52,3.382,53,3.193,54,3.382,55,4.899,56,1.09,57,2.956,58,3.799,59,3.382,60,3.193,61,3.382,62,1.061,63,2.956,64,3.382,65,3.193,66,4.001,67,3.284,68,1.486,69,3.498,70,3.382,71,3.193,72,0.003,73,0.003,1642,2.309,2526,5.781,2527,5.781]],["title/classes/UpdateElapsedTimeSucceeded.html",[0,0.013,71,2.787]],["body/classes/UpdateElapsedTimeSucceeded.html",[0,0.024,1,3.242,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,1.902,12,2.264,13,0.246,14,0.492,16,2.872,17,0.783,19,0.637,20,0.005,21,0.53,22,0.594,24,0.408,25,0.602,26,3.434,27,0.28,28,0.514,29,1.883,30,3.103,31,3.103,32,3.903,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,3.434,41,1.231,42,3.156,43,2.427,44,0.77,45,3.434,46,2.696,47,3.242,48,3.434,49,2.307,50,3.156,51,1.789,52,3.434,53,3.242,54,3.434,55,4.935,56,1.106,57,3.002,58,3.766,59,3.434,60,3.242,61,3.434,62,1.077,63,3.002,64,3.434,65,3.242,66,3.434,67,3.334,68,1.509,69,3.002,70,4.05,71,3.824,72,0.003,73,0.003,1746,3.128,2528,5.87,2529,4.031]],["title/classes/UpdateGame.html",[0,0.013,57,2.581]],["body/classes/UpdateGame.html",[0,0.024,1,3.193,2,0.034,3,0.034,4,0.03,5,2.242,6,1.351,7,1.365,8,0.086,9,0.248,10,2.344,11,1.89,12,2.256,13,0.247,14,0.482,16,2.838,17,0.852,19,0.624,20,0.005,21,0.519,22,0.582,24,0.4,25,0.59,26,3.382,27,0.276,28,0.504,29,1.844,30,3.878,31,3.066,32,3.066,33,0.668,34,0.077,35,0.914,36,2.874,37,0.96,38,1.239,39,2.332,40,3.382,41,1.213,42,3.109,43,2.718,44,0.825,45,3.382,46,2.673,47,3.193,48,3.382,49,2.272,50,3.109,51,1.762,52,3.382,53,3.193,54,4.001,55,4.899,56,1.09,57,3.498,58,3.799,59,3.382,60,3.193,61,3.382,62,1.061,63,2.956,64,3.382,65,3.193,66,3.382,67,3.284,68,1.486,69,2.956,70,3.382,71,3.193,72,0.003,73,0.003,1642,2.309,2530,5.781,2531,5.781]],["title/classes/UpdateGameSucceeded.html",[0,0.013,60,2.787]],["body/classes/UpdateGameSucceeded.html",[0,0.024,1,3.242,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,1.902,12,2.264,13,0.246,14,0.492,16,2.872,17,0.783,19,0.637,20,0.005,21,0.53,22,0.594,24,0.408,25,0.602,26,3.434,27,0.28,28,0.514,29,1.883,30,3.903,31,3.103,32,3.103,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,3.434,41,1.231,42,3.156,43,2.427,44,0.77,45,3.434,46,2.696,47,3.242,48,3.434,49,2.307,50,3.156,51,1.789,52,3.434,53,3.242,54,3.434,55,4.935,56,1.106,57,3.002,58,3.766,59,4.05,60,3.824,61,3.434,62,1.077,63,3.002,64,3.434,65,3.242,66,3.434,67,3.334,68,1.509,69,3.002,70,3.434,71,3.242,72,0.003,73,0.003,1746,3.128,2532,5.87,2533,4.031]],["title/interfaces/UpdateHistoryItemGamePayload.html",[30,2.262,118,0.357]],["body/interfaces/UpdateHistoryItemGamePayload.html",[2,0.056,3,0.056,4,0.05,8,0.14,9,0.347,13,0.221,20,0.005,30,3.957,31,3.626,32,3.626,34,0.075,44,0.908,51,2.96,56,1.795,62,1.484,72,0.004,73,0.004,89,2.498,93,3.356,94,2.286,118,0.687,124,2.657,154,2.657,163,3.784,214,4.536,316,2.226,820,4.595,827,2.787,1012,4.182,1087,4.036,1448,4.182,1535,4.536,1536,4.756]],["title/interfaces/UpdateHistoryItemPlatformPayload.html",[31,2.262,118,0.357]],["body/interfaces/UpdateHistoryItemPlatformPayload.html",[2,0.056,3,0.056,4,0.05,8,0.14,9,0.347,13,0.221,20,0.005,30,3.626,31,3.957,32,3.626,34,0.075,44,0.908,51,2.96,56,1.525,62,1.747,72,0.004,73,0.004,89,2.498,93,3.356,94,2.286,118,0.687,124,2.657,154,2.657,163,3.784,214,4.536,316,2.226,820,4.595,827,2.787,1012,4.182,1087,4.036,1448,4.182,1535,4.536,1536,4.756]],["title/interfaces/UpdateHistoryItemTimesPayload.html",[32,2.262,118,0.357]],["body/interfaces/UpdateHistoryItemTimesPayload.html",[2,0.055,3,0.055,4,0.049,8,0.138,9,0.343,13,0.231,20,0.005,30,3.591,31,3.591,32,3.928,34,0.074,44,0.898,51,2.948,56,1.51,62,1.47,72,0.004,73,0.004,89,2.459,93,3.932,94,2.406,118,0.684,124,3.113,154,2.631,163,3.725,214,4.465,316,2.191,820,4.55,827,2.744,1012,4.117,1087,3.973,1448,4.117,1535,4.465,1536,4.682]],["title/classes/UpdatePlatform.html",[0,0.013,63,2.581]],["body/classes/UpdatePlatform.html",[0,0.024,1,3.193,2,0.034,3,0.034,4,0.03,5,2.242,6,1.351,7,1.365,8,0.086,9,0.248,10,2.344,11,1.89,12,2.256,13,0.247,14,0.482,16,2.838,17,0.852,19,0.624,20,0.005,21,0.519,22,0.582,24,0.4,25,0.59,26,3.382,27,0.276,28,0.504,29,1.844,30,3.066,31,3.878,32,3.066,33,0.668,34,0.077,35,0.914,36,2.874,37,0.96,38,1.239,39,2.332,40,3.382,41,1.213,42,3.109,43,2.718,44,0.825,45,3.382,46,2.673,47,3.193,48,3.382,49,2.272,50,3.109,51,1.762,52,3.382,53,3.193,54,3.382,55,4.899,56,1.09,57,2.956,58,3.799,59,3.382,60,3.193,61,4.001,62,1.061,63,3.498,64,3.382,65,3.193,66,3.382,67,3.284,68,1.486,69,2.956,70,3.382,71,3.193,72,0.003,73,0.003,1642,2.309,2534,5.781,2535,5.781]],["title/classes/UpdatePlatformSucceeded.html",[0,0.013,65,2.787]],["body/classes/UpdatePlatformSucceeded.html",[0,0.024,1,3.242,2,0.035,3,0.035,4,0.031,5,2.289,6,1.357,7,1.37,8,0.087,9,0.252,10,2.229,11,1.902,12,2.264,13,0.246,14,0.492,16,2.872,17,0.783,19,0.637,20,0.005,21,0.53,22,0.594,24,0.408,25,0.602,26,3.434,27,0.28,28,0.514,29,1.883,30,3.103,31,3.903,32,3.103,33,0.682,34,0.077,35,0.918,36,2.886,37,0.981,38,1.265,39,2.342,40,3.434,41,1.231,42,3.156,43,2.427,44,0.77,45,3.434,46,2.696,47,3.242,48,3.434,49,2.307,50,3.156,51,1.789,52,3.434,53,3.242,54,3.434,55,4.935,56,1.106,57,3.002,58,3.766,59,3.434,60,3.242,61,3.434,62,1.077,63,3.002,64,4.05,65,3.824,66,3.434,67,3.334,68,1.509,69,3.002,70,3.434,71,3.242,72,0.003,73,0.003,1746,3.128,2536,5.87,2537,4.031]],["title/interfaces/User.html",[118,0.357,725,2.409]],["body/interfaces/User.html",[2,0.057,3,0.057,4,0.05,8,0.143,9,0.35,13,0.244,20,0.005,34,0.068,44,0.922,72,0.004,73,0.004,118,0.628,438,4.441,590,3.534,592,3.534,594,3.534,603,4.47,606,3.137,725,3.9,1136,5.145,1756,4.609,2298,7.22,2299,7.22,2300,7.22,2538,5.438,2539,5.438]],["title/injectables/UserEffects.html",[339,1.584,666,4.175]],["body/injectables/UserEffects.html",[0,0.007,2,0.026,3,0.026,4,0.023,7,1.38,8,0.064,9,0.198,13,0.143,14,0.36,17,0.965,19,0.731,20,0.005,21,0.608,22,0.682,24,0.82,25,1.21,27,0.344,33,0.498,34,0.023,35,0.635,38,2.878,72,0.002,73,0.002,139,1.644,146,1.431,169,1.654,186,0.635,191,1.778,192,1.723,201,0.884,202,2.656,339,1.794,343,1.778,346,5.774,348,4.952,349,5.984,357,6.096,358,6.22,360,6.22,361,4.6,362,5.823,364,1.544,365,1.099,366,1.979,367,3.649,369,5.841,370,1.222,384,4.878,396,1.838,506,3.45,530,4.146,546,1.904,603,1.376,643,4.146,652,5.749,666,3.829,668,2.639,678,3.396,680,3.396,681,3.396,688,3.396,725,2.729,759,3.484,766,3.396,767,3.484,769,3.484,1136,1.584,1313,1.979,1403,5.802,1716,7.915,1720,3.829,1721,3.829,1722,3.829,2298,2.286,2299,2.286,2300,2.286,2356,4.146,2357,4.146,2540,2.945,2541,4.628,2542,6.479,2543,2.945,2544,4.628,2545,6.479,2546,2.945,2547,5.717,2548,4.628,2549,4.628,2550,6.479,2551,4.628,2552,2.945,2553,4.628,2554,4.628,2555,4.628,2556,2.945,2557,4.628,2558,4.628,2559,4.628,2560,4.628,2561,4.628,2562,4.628,2563,6.479,2564,4.628,2565,2.945,2566,4.628,2567,4.628,2568,4.628,2569,2.945,2570,4.628,2571,4.146,2572,4.628,2573,4.628,2574,4.628,2575,2.945,2576,4.628,2577,4.628,2578,4.628,2579,4.628,2580,4.628,2581,2.945,2582,4.628,2583,4.628,2584,4.628,2585,2.945,2586,4.628,2587,4.628,2588,4.628,2589,2.945,2590,2.945,2591,4.628,2592,2.945,2593,2.945,2594,2.945,2595,2.945,2596,2.945,2597,2.945,2598,2.945]],["title/interfaces/UserInfo.html",[118,0.357,1756,3.538]],["body/interfaces/UserInfo.html",[2,0.058,3,0.058,4,0.051,8,0.145,9,0.354,13,0.241,20,0.005,34,0.069,44,0.915,72,0.004,73,0.004,118,0.633,438,5.006,590,3.592,592,3.592,594,3.592,603,4.49,606,3.189,725,3.189,1136,5.169,1756,5.787,2298,5.184,2299,5.184,2300,5.184,2538,5.526,2539,7.74]],["title/injectables/UserService.html",[158,2.713,339,1.584]],["body/injectables/UserService.html",[0,0.014,2,0.049,3,0.049,4,0.043,8,0.121,13,0.14,14,0.683,17,0.991,19,0.884,20,0.005,21,0.736,22,0.825,27,0.395,28,0.714,33,0.947,34,0.043,35,0.722,72,0.004,73,0.004,146,2.28,156,2.862,157,3.915,158,3.964,169,1.91,170,2.752,186,1.206,195,1.526,196,2.322,201,1.681,202,1.989,207,2.934,291,2.979,339,2.588,365,2.089,392,4,438,2.795,546,3.619,603,2.615,638,3.925,725,4.183,759,4.712,766,4.592,881,4.631,1136,3.01,1313,3.761,1756,3.925,1936,4.344,2539,4.631,2571,5.014,2599,5.597,2600,8.762,2601,8.244,2602,5.597,2603,5.597,2604,5.597,2605,5.597,2606,5.597,2607,5.597,2608,5.597,2609,5.597,2610,5.597,2611,5.597,2612,5.597,2613,5.597,2614,5.597,2615,5.597,2616,5.597,2617,5.597,2618,5.597,2619,5.597,2620,5.597,2621,5.597]],["title/dependencies.html",[435,3.446,2622,4.218]],["body/dependencies.html",[20,0.005,28,0.988,72,0.004,73,0.004,145,4.855,154,1.981,157,2.413,186,1.3,187,5,188,3.529,189,4.98,238,2.29,249,3.901,364,3.162,365,2.252,394,6.404,395,6.008,396,3.764,398,5.405,399,5.405,435,3.426,459,4.991,468,4.23,469,4.054,473,4.23,476,5.405,598,4.436,599,5.405,655,3.764,708,4.23,929,5.428,930,4.991,1076,6.404,1077,4.991,1090,4.682,1178,4.682,1446,4.054,1640,5.405,1792,5.405,1813,5.405,2038,5.405,2039,6.935,2511,5.405,2512,5.405,2623,6.033,2624,10.007,2625,6.033,2626,6.033,2627,6.033,2628,6.033,2629,6.033,2630,6.033,2631,8.547,2632,6.033,2633,9.324,2634,6.033,2635,6.033,2636,6.033,2637,6.033,2638,6.033,2639,6.033,2640,6.033,2641,6.033,2642,6.033,2643,6.033,2644,6.033,2645,6.033]],["title/miscellaneous/functions.html",[783,2.834,2646,3.274]],["body/miscellaneous/functions.html",[7,1.49,8,0.118,19,1.594,20,0.005,21,1.326,22,1.487,72,0.004,73,0.004,195,2.078,494,4.577,783,2.545,1442,4.507,1452,5.014,1728,4.507,1729,5.992,1984,4.507,2236,4.881,2240,4.881,2245,4.881,2246,6.488,2284,4.881,2290,4.881,2297,4.881,2305,4.881,2326,4.881,2331,4.881,2342,4.881,2343,6.488,2646,4.228,2647,7.242,2648,5.448,2649,5.448,2650,5.448,2651,5.448,2652,5.448,2653,5.448,2654,4.881,2655,5.448,2656,5.448,2657,4.881,2658,5.448,2659,5.448,2660,5.448,2661,4.881,2662,5.448,2663,5.448]],["title/index.html",[8,0.092,221,2.059,2664,3.779]],["body/index.html",[20,0.004,56,1.28,68,1.745,72,0.004,73,0.004,139,2.413,220,5.618,221,3.314,305,2.452,365,2.535,430,5.618,459,5.618,469,5.603,708,4.761,846,4.993,929,5.846,1077,5.618,1560,6.084,1566,6.084,1629,6.084,2665,6.79,2666,6.79,2667,6.79,2668,6.79,2669,6.79,2670,6.79,2671,6.79,2672,6.79,2673,6.79,2674,9.022,2675,9.657,2676,6.79,2677,6.79,2678,6.79,2679,6.79,2680,6.79,2681,6.79,2682,6.79,2683,6.79,2684,6.79,2685,6.79,2686,9.657,2687,9.022,2688,9.409,2689,8.337,2690,8.337,2691,8.337,2692,6.79,2693,6.79,2694,6.79,2695,6.79,2696,6.79,2697,6.79,2698,6.79]],["title/license.html",[221,2.059,2664,3.779,2699,3.779]],["body/license.html",[4,0.049,7,0.922,20,0.004,72,0.004,73,0.004,438,3.216,455,3.767,577,4.328,861,4.328,1265,4.735,2699,5.769,2700,8.067,2701,8.81,2702,6.439,2703,6.439,2704,6.439,2705,6.439,2706,8.067,2707,6.439,2708,6.439,2709,6.439,2710,6.439,2711,8.067,2712,6.439,2713,9.235,2714,10.042,2715,6.439,2716,6.439,2717,8.067,2718,8.81,2719,6.439,2720,8.81,2721,8.067,2722,8.067,2723,6.439,2724,6.439,2725,6.439,2726,6.439,2727,6.439,2728,6.439,2729,6.439,2730,6.439,2731,6.439,2732,6.439,2733,6.439,2734,6.439,2735,8.067,2736,8.067,2737,6.439,2738,6.439,2739,8.067,2740,6.439,2741,6.439,2742,6.439,2743,6.439,2744,6.439,2745,6.439,2746,6.439,2747,6.439,2748,6.439,2749,6.439,2750,6.439,2751,6.439,2752,6.439,2753,6.439,2754,6.439,2755,6.439,2756,6.439,2757,6.439,2758,6.439,2759,6.439]],["title/modules.html",[433,2.907]],["body/modules.html",[20,0.004,72,0.004,73,0.004,189,5.634,299,3.245,395,7.917,433,2.991,434,5.491,444,5.202,445,5.202,446,5.202,447,5.202,448,5.202,449,5.202,450,5.202,451,4.414,452,5.202,651,5.202,1562,9.139,2760,10.304,2761,8.549]],["title/overview.html",[2762,6.162]],["body/overview.html",[0,0.009,20,0.005,34,0.029,72,0.003,73,0.003,118,0.263,125,0.881,126,2.426,158,3.936,251,2.61,272,1.222,279,3.117,281,2.426,284,2.426,286,2.387,288,2.387,290,2.426,294,2.387,297,2.426,301,2.692,304,2.426,307,2.426,309,2.387,311,2.387,313,2.426,315,2.426,317,2.387,319,2.426,321,2.426,322,2.387,324,2.387,326,3.117,329,2.426,331,2.426,333,2.426,334,2.426,335,2.426,337,2.387,339,1.168,344,4.273,348,1.859,387,4.919,406,4.442,418,2.114,433,2.34,434,7.896,435,2.114,436,2.246,437,2.246,438,1.859,439,3.334,440,3.334,441,3.334,442,3.334,443,3.334,444,4.859,445,7.046,446,7.217,447,7.14,448,5.752,449,6.554,450,6.554,451,6.124,452,7.416,453,3.341,454,1.241,455,2.177,506,2.246,629,3.079,647,3.334,648,3.334,649,3.334,650,3.334,651,4.859,652,4.859,923,3.334,924,3.334,926,3.334,943,6.243,1070,3.079,1071,3.334,1072,3.334,1140,6.59,1201,4.273,1240,4.634,1255,4.634,1289,4.123,1588,3.334,1589,3.334,1635,3.334,1636,3.334,1871,6.59,1922,3.334,1923,3.334,1924,3.334,2107,3.334,2108,3.334,2109,3.334,2244,4.959,2296,3.334,2504,3.334,2505,3.334,2507,3.334,2762,3.334,2763,3.722,2764,3.722]],["title/routes.html",[506,4.151]],["body/routes.html",[20,0.005,72,0.005,73,0.005,506,4.913]],["title/miscellaneous/typealiases.html",[2646,3.274,2765,6.066]],["body/miscellaneous/typealiases.html",[1,2.612,5,2.686,8,0.103,13,0.119,20,0.005,24,0.479,30,2.12,31,2.12,32,2.12,42,2.543,47,2.612,49,1.859,50,2.543,53,2.612,57,2.418,60,2.612,63,2.418,65,2.612,69,2.418,71,2.612,72,0.003,73,0.003,74,3.178,75,3.316,76,4.612,83,1.42,87,3.178,92,3.057,96,3.178,97,2.95,98,3.057,107,2.854,109,2.95,111,2.854,113,2.95,115,2.418,117,2.95,140,1.553,150,3.009,151,3.009,152,3.009,258,2.257,367,2.679,438,3.777,454,1.577,527,2.612,590,2.543,592,2.543,594,2.543,606,2.257,678,2.479,680,2.479,681,2.479,688,2.479,754,2.766,759,2.543,761,2.686,766,2.479,767,2.543,769,2.543,783,3.073,797,2.612,798,2.854,802,2.686,807,2.612,809,2.686,812,2.686,814,2.766,884,5.56,987,3.178,1006,5.869,1188,4.237,1345,3.912,1358,3.912,1360,3.912,1362,3.912,1448,4.889,1535,3.316,1592,3.912,1593,4.237,1665,3.477,1666,3.912,1670,3.67,1674,3.178,1675,3.477,1680,3.316,1682,3.316,1684,3.316,2027,3.178,2028,4.42,2032,3.057,2050,3.67,2051,3.912,2058,3.67,2066,3.316,2067,3.477,2068,4.836,2072,3.316,2074,3.316,2076,3.316,2101,3.67,2102,4.237,2177,6.257,2538,3.912,2646,3.67,2654,4.237,2657,5.892,2661,4.237,2766,4.729,2767,4.729,2768,4.729,2769,4.729,2770,4.729,2771,4.729,2772,4.729,2773,4.729,2774,4.729,2775,4.729,2776,4.729,2777,7.562,2778,4.729,2779,6.577,2780,7.562,2781,4.729,2782,6.577,2783,7.562,2784,7.562,2785,7.562,2786,4.729,2787,4.729,2788,4.729,2789,4.729,2790,4.729,2791,4.729,2792,4.729,2793,4.729,2794,4.729,2795,4.729,2796,4.729,2797,4.729,2798,4.729,2799,4.729,2800,4.729,2801,4.729,2802,4.729,2803,4.729,2804,4.729,2805,4.729,2806,4.729,2807,4.729,2808,4.729]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1059,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/MarkCompleteEntity.html":{},"components/NavComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["0.0.4",{"_index":2640,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":2232,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.3",{"_index":2230,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.3.0",{"_index":2629,"title":{},"body":{"dependencies.html":{}}}],["0.45",{"_index":2228,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.5",{"_index":2222,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.8.26",{"_index":2645,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":1580,"title":{},"body":{"components/HomeComponent.html":{}}}],["00:00:00",{"_index":2405,"title":{},"body":{"components/TimerComponent.html":{}}}],["0px",{"_index":234,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["1",{"_index":418,"title":{"components/HeaderComponent-1.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-1.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"pipes/PluralizePipe.html":{},"components/SpinnerComponent.html":{},"interfaces/State-11.html":{},"overview.html":{}}}],["1.1em",{"_index":1664,"title":{},"body":{"components/LoadMoreComponent.html":{},"components/NavComponent.html":{}}}],["1.2",{"_index":2219,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1.2.7",{"_index":2630,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":628,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["1.25em",{"_index":1372,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/NavComponent.html":{}}}],["1.29.0",{"_index":2638,"title":{},"body":{"dependencies.html":{}}}],["1.3em",{"_index":1333,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["1.5em",{"_index":1367,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["10",{"_index":851,"title":{"interfaces/State-10.html":{}},"body":{"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["10.0.0",{"_index":2634,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":237,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["100vh",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{}}}],["10px",{"_index":235,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["11",{"_index":2244,"title":{"interfaces/State-11.html":{}},"body":{"overview.html":{}}}],["12",{"_index":2282,"title":{"interfaces/State-12.html":{}},"body":{}}],["13",{"_index":2283,"title":{"interfaces/State-13.html":{}},"body":{}}],["14",{"_index":2288,"title":{"interfaces/State-14.html":{}},"body":{}}],["14.0.0",{"_index":2635,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1564,"title":{"interfaces/State-15.html":{}},"body":{"components/HomeComponent.html":{},"components/TimerComponent.html":{}}}],["15px",{"_index":617,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["16",{"_index":2289,"title":{"interfaces/State-16.html":{}},"body":{}}],["17",{"_index":2296,"title":{"interfaces/State-17.html":{}},"body":{"overview.html":{}}}],["18",{"_index":2304,"title":{"interfaces/State-18.html":{}},"body":{}}],["19",{"_index":2310,"title":{"interfaces/State-19.html":{}},"body":{}}],["1em",{"_index":1332,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["1px",{"_index":850,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["2",{"_index":1068,"title":{"components/HeaderComponent-2.html":{},"interfaces/State-2.html":{}},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-2.html":{}}}],["2.11.2",{"_index":2632,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":2637,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":622,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["20",{"_index":250,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["200px",{"_index":1901,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2018",{"_index":2703,"title":{},"body":{"license.html":{}}}],["20px",{"_index":624,"title":{},"body":{"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HistoryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["25",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/TimerComponent.html":{}}}],["25px",{"_index":1583,"title":{},"body":{"components/HomeComponent.html":{}}}],["2em",{"_index":1586,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["2px",{"_index":1533,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/ProfileComponent.html":{}}}],["3",{"_index":1070,"title":{"interfaces/State-3.html":{}},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["3.3.2",{"_index":2643,"title":{},"body":{"dependencies.html":{}}}],["3.5em",{"_index":1577,"title":{},"body":{"components/HomeComponent.html":{}}}],["30",{"_index":251,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["30px",{"_index":1339,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["33",{"_index":1069,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3600",{"_index":1018,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4",{"_index":1660,"title":{"interfaces/State-4.html":{}},"body":{"components/LoadMoreComponent.html":{},"interfaces/State-18.html":{}}}],["45",{"_index":244,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["45px",{"_index":1814,"title":{},"body":{"components/NavComponent.html":{}}}],["5",{"_index":259,"title":{"interfaces/State-5.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["5.1.0",{"_index":2627,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":2631,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":2639,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1063,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{}}}],["50px",{"_index":1817,"title":{},"body":{"components/NavComponent.html":{}}}],["51px",{"_index":2218,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["55",{"_index":1526,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["5px",{"_index":243,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["6",{"_index":2330,"title":{"interfaces/State-6.html":{}},"body":{}}],["6.1.2",{"_index":2633,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":2642,"title":{},"body":{"dependencies.html":{}}}],["60px",{"_index":1819,"title":{},"body":{"components/NavComponent.html":{}}}],["64",{"_index":2763,"title":{},"body":{"overview.html":{}}}],["64px",{"_index":2216,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["69",{"_index":2764,"title":{},"body":{"overview.html":{}}}],["6px",{"_index":1824,"title":{},"body":{"components/NavComponent.html":{},"components/SpinnerComponent.html":{}}}],["7",{"_index":2341,"title":{"interfaces/State-7.html":{}},"body":{}}],["7.0.0",{"_index":2641,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":2624,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":616,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NavComponent.html":{}}}],["75",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["7em",{"_index":1816,"title":{},"body":{"components/NavComponent.html":{}}}],["8",{"_index":858,"title":{"interfaces/State-8.html":{}},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["80",{"_index":1585,"title":{},"body":{"components/HomeComponent.html":{}}}],["80px",{"_index":1582,"title":{},"body":{"components/HomeComponent.html":{}}}],["85",{"_index":859,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["8px",{"_index":1811,"title":{},"body":{"components/NavComponent.html":{}}}],["9",{"_index":2345,"title":{"interfaces/State-9.html":{}},"body":{}}],["_rout",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_selectaddplayinginfo",{"_index":969,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["_selectallhistori",{"_index":2159,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectallprogress",{"_index":2152,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectauthst",{"_index":737,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selectcompletedprogress",{"_index":2158,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectcompletionst",{"_index":960,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["_selectdashboardfeatur",{"_index":1094,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["_selectdatelist",{"_index":1099,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["_selectdaterang",{"_index":1096,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["_selectdisplay",{"_index":2319,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selectentriestoshow",{"_index":2322,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selecterror",{"_index":994,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["_selecterrorst",{"_index":992,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["_selecthistori",{"_index":2142,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbyd",{"_index":2175,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbygam",{"_index":2182,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbyplatform",{"_index":2181,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistoryitem",{"_index":2161,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistoryload",{"_index":2183,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectinfo",{"_index":1944,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["_selectmarkcomplet",{"_index":965,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["_selectmarkcompleteent",{"_index":972,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["_selectplatform",{"_index":2145,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplatformsload",{"_index":2191,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplatformsopt",{"_index":2188,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplay",{"_index":962,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["_selectplayingprogress",{"_index":2154,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectprofilest",{"_index":1942,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["_selectprogress",{"_index":2147,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectrangetyp",{"_index":1103,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["_selectsharedst",{"_index":2140,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectsortedhistoryitem",{"_index":2171,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectstatu",{"_index":742,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selectstatusloggingin",{"_index":747,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selectstatusvalidationmessag",{"_index":750,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selecttab",{"_index":967,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["_selecttim",{"_index":2149,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttimerinfo",{"_index":2195,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttrackedgam",{"_index":2186,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttrackerst",{"_index":2317,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selectus",{"_index":739,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selectuserdata",{"_index":746,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selectuserdataload",{"_index":2197,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectuserloggedin",{"_index":744,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["_selectvisibletab",{"_index":974,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["a.index",{"_index":1249,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["a.starttim",{"_index":2174,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["abov",{"_index":2734,"title":{},"body":{"license.html":{}}}],["absolut",{"_index":2217,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["accent",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{}}}],["account",{"_index":1572,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["accru",{"_index":1575,"title":{},"body":{"components/HomeComponent.html":{}}}],["action",{"_index":7,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.act",{"_index":2238,"title":{},"body":{"interfaces/State.html":{}}}],["action.addplay",{"_index":351,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["action.amount",{"_index":2309,"title":{},"body":{"interfaces/State-18.html":{}}}],["action.attemptinglogin",{"_index":2293,"title":{},"body":{"interfaces/State-16.html":{}}}],["action.displaynam",{"_index":1917,"title":{},"body":{"injectables/ProfileEffects.html":{},"interfaces/State-13.html":{}}}],["action.endtim",{"_index":1735,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["action.gam",{"_index":2335,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["action.info",{"_index":2340,"title":{},"body":{"interfaces/State-6.html":{},"injectables/TimerEffects.html":{}}}],["action.item",{"_index":1979,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["action.itemid",{"_index":1412,"title":{},"body":{"injectables/HistoryEffects.html":{},"interfaces/MarkCompleteEntity.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-8.html":{}}}],["action.itemids.map(itemid",{"_index":1740,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["action.messag",{"_index":2239,"title":{},"body":{"interfaces/State.html":{}}}],["action.password",{"_index":2550,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload",{"_index":1424,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["action.platform",{"_index":2329,"title":{},"body":{"interfaces/State-3.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["action.profil",{"_index":2286,"title":{},"body":{"interfaces/State-13.html":{}}}],["action.showextra",{"_index":1733,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["action.starttim",{"_index":2338,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["action.tab",{"_index":2243,"title":{},"body":{"interfaces/State-10.html":{}}}],["action.typ",{"_index":1454,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["action.us",{"_index":2302,"title":{},"body":{"interfaces/State-17.html":{}}}],["action.userid",{"_index":2451,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["action.validationmessag",{"_index":2295,"title":{},"body":{"interfaces/State-16.html":{}}}],["actionreducermap",{"_index":728,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"interfaces/TrackerState.html":{}}}],["actions.add_new_history_item",{"_index":1455,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.add_new_item",{"_index":1737,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["actions.add_new_progress_item",{"_index":1986,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.al",{"_index":1453,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["actions.app_error",{"_index":2237,"title":{},"body":{"interfaces/State.html":{}}}],["actions.authent",{"_index":2301,"title":{},"body":{"interfaces/State-17.html":{}}}],["actions.canceltim",{"_index":2433,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.increment_days_to_show",{"_index":2307,"title":{},"body":{"interfaces/State-18.html":{}}}],["actions.incrementdaystoshow(this.amount_to_load",{"_index":1662,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["actions.load_history_item",{"_index":1457,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.load_history_items_succeed",{"_index":1458,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.load_item",{"_index":1739,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["actions.load_options_succeed",{"_index":2328,"title":{},"body":{"interfaces/State-3.html":{}}}],["actions.load_profile_succeed",{"_index":2285,"title":{},"body":{"interfaces/State-13.html":{}}}],["actions.load_progress_item",{"_index":1987,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.load_progress_items_succeed",{"_index":1988,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.mark_complete_succeed",{"_index":1990,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.not_authent",{"_index":2303,"title":{},"body":{"interfaces/State-17.html":{}}}],["actions.remov",{"_index":1736,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["actions.remove_history_item_succeed",{"_index":1461,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.remove_progress_item_succeed",{"_index":1989,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.reset",{"_index":213,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/State-7.html":{}}}],["actions.reset_tim",{"_index":2333,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.save(addplay",{"_index":218,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["actions.savetimerinfo(info",{"_index":2431,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.set_attempting_login",{"_index":2292,"title":{},"body":{"interfaces/State-16.html":{}}}],["actions.set_endtim",{"_index":1734,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["actions.set_gam",{"_index":2334,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["actions.set_last_month",{"_index":2275,"title":{},"body":{"interfaces/State-11.html":{}}}],["actions.set_last_week",{"_index":2262,"title":{},"body":{"interfaces/State-11.html":{}}}],["actions.set_platform",{"_index":2336,"title":{},"body":{"interfaces/State-6.html":{},"interfaces/State-7.html":{}}}],["actions.set_profile_displayname_succeed",{"_index":2287,"title":{},"body":{"interfaces/State-13.html":{}}}],["actions.set_show_extra",{"_index":1732,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["actions.set_start_tim",{"_index":2337,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.set_starttim",{"_index":2344,"title":{},"body":{"interfaces/State-7.html":{}}}],["actions.set_this_month",{"_index":2269,"title":{},"body":{"interfaces/State-11.html":{}}}],["actions.set_this_week",{"_index":2261,"title":{},"body":{"interfaces/State-11.html":{}}}],["actions.set_timer_info",{"_index":2339,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.set_validation_messag",{"_index":2294,"title":{},"body":{"interfaces/State-16.html":{}}}],["actions.set_visible_tab",{"_index":2242,"title":{},"body":{"interfaces/State-10.html":{}}}],["actions.setgam",{"_index":2435,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.setgame(gam",{"_index":208,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setlastmonth",{"_index":1363,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setlastweek",{"_index":1359,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setplatform(platform",{"_index":210,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setstarttime(now",{"_index":2427,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.setstarttime(starttim",{"_index":212,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setthismonth",{"_index":1361,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setthisweek",{"_index":1356,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setvisibletab(tab",{"_index":2383,"title":{},"body":{"components/TabsComponent.html":{}}}],["actions.update_elapsed_time_succeed",{"_index":1466,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.update_game_succeed",{"_index":1463,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.update_platform_succeed",{"_index":1465,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions/add",{"_index":193,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-7.html":{}}}],["actions/app.act",{"_index":192,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["actions/d",{"_index":1351,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{}}}],["actions/display.act",{"_index":1661,"title":{},"body":{"components/LoadMoreComponent.html":{},"interfaces/State-18.html":{}}}],["actions/history.act",{"_index":1447,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions/mark",{"_index":1730,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-8.html":{}}}],["actions/platforms.act",{"_index":2327,"title":{},"body":{"interfaces/State-3.html":{}}}],["actions/profile.act",{"_index":1134,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{},"interfaces/State-13.html":{}}}],["actions/progress.act",{"_index":1985,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions/status.act",{"_index":2291,"title":{},"body":{"interfaces/State-16.html":{},"injectables/StatusEffects.html":{}}}],["actions/tab.act",{"_index":2241,"title":{},"body":{"interfaces/State-10.html":{},"components/TabsComponent.html":{}}}],["actions/timer.act",{"_index":2332,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions/user.act",{"_index":1313,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-17.html":{},"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["activ",{"_index":1341,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/TabsComponent.html":{}}}],["activatedrout",{"_index":2542,"title":{},"body":{"injectables/UserEffects.html":{}}}],["activatedroutesnapshot",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active:hov",{"_index":2441,"title":{},"body":{"components/TimerComponent.html":{}}}],["actual_compon",{"_index":338,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["adapt",{"_index":1449,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["adapter.addall(action.item",{"_index":1460,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addall(item",{"_index":1742,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["adapter.addone(action.item",{"_index":1456,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addone(getmarkcompleteentity(action.itemid",{"_index":1738,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["adapter.getinitialst",{"_index":1451,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["adapter.removeone(action.itemid",{"_index":1462,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["adapter.updateon",{"_index":1470,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["add",{"_index":37,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime-1.html":{},"components/SpinnerComponent.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["add_new_history_item",{"_index":26,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["add_new_item",{"_index":80,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["add_new_progress_item",{"_index":102,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["addnewhistoryitem",{"_index":1,"title":{"classes/AddNewHistoryItem.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["addnewitem",{"_index":74,"title":{"classes/AddNewItem.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["addnewprogressitem",{"_index":97,"title":{"classes/AddNewProgressItem.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["addplay",{"_index":119,"title":{"interfaces/AddPlaying.html":{}},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/CompletionState.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-9.html":{}}}],["addplaying.startentryid",{"_index":1285,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["addplayingact",{"_index":372,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{}}}],["addplayingactions.reset",{"_index":356,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingactions.sav",{"_index":350,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingactions.savesucceed",{"_index":1978,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["addplayingactions.savesucceeded(newitem",{"_index":355,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingcompon",{"_index":126,"title":{"components/AddPlayingComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["addplayingeffect",{"_index":340,"title":{"injectables/AddPlayingEffects.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{}}}],["addplayinginfo",{"_index":123,"title":{"interfaces/AddPlayingInfo.html":{}},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["addtimerinfo",{"_index":373,"title":{"interfaces/AddTimerInfo.html":{}},"body":{"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{}}}],["adsens",{"_index":1823,"title":{},"body":{"components/NavComponent.html":{}}}],["af",{"_index":1203,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["afauth",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["air",{"_index":2795,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alias",{"_index":2766,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":227,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["allow",{"_index":1869,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["amount",{"_index":1594,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["amount_to_load",{"_index":1655,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["analyt",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["and/or",{"_index":2727,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2674,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2623,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2625,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":655,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":2626,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":186,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/fir",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/fire/auth",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angular/fire/firestor",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angular/form",{"_index":598,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/CompletionModule.html":{},"components/ForgotPasswordComponent.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2628,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfireauthmodul",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":1195,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfirestorecollect",{"_index":1196,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfirestoremodul",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["anim",{"_index":791,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/SpinnerComponent.html":{}}}],["apikey",{"_index":1181,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["app",{"_index":139,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["app.compon",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["app/complet",{"_index":1784,"title":{},"body":{"components/NavComponent.html":{}}}],["app/dashboard",{"_index":1777,"title":{},"body":{"components/NavComponent.html":{}}}],["app/librari",{"_index":1781,"title":{},"body":{"components/NavComponent.html":{}}}],["app/profil",{"_index":1774,"title":{},"body":{"components/NavComponent.html":{}}}],["app/track",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavComponent.html":{}}}],["app_error",{"_index":1191,"title":{},"body":{"classes/Error.html":{}}}],["appact",{"_index":191,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["appactions.error",{"_index":2351,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["appactions.error(actions.sav",{"_index":219,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["appactions.error(addplayingactions.sav",{"_index":359,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["appactions.error(historyactions.load_history_item",{"_index":1407,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.remove_history_item",{"_index":1415,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_elapsed_tim",{"_index":1427,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_gam",{"_index":1433,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_platform",{"_index":1439,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(platformsactions.load_opt",{"_index":1833,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["appactions.error(profileactions.load_profil",{"_index":1912,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["appactions.error(profileactions.set_profile_displaynam",{"_index":1919,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["appactions.error(progressactions.load_progress_item",{"_index":1960,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["appactions.error(progressactions.mark_complet",{"_index":1864,"title":{},"body":{"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["appactions.error(progressactions.remove_progress_item",{"_index":1975,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["appactions.error(timeractions.load_timer_info",{"_index":2455,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["appactions.error(timeractions.save_timer_info",{"_index":2462,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["appactions.error(useractions.email_login",{"_index":2551,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.facebook_login",{"_index":2555,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.get_us",{"_index":2564,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.google_login",{"_index":2568,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.logout",{"_index":2574,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.reset_password",{"_index":2580,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.signup",{"_index":2584,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.twitter_login",{"_index":2588,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appcompon",{"_index":279,"title":{"components/AppComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["appear",{"_index":252,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["applic",{"_index":2669,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":434,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":444,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":2796,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["argument",{"_index":1610,"title":{},"body":{"components/LibraryComponent.html":{}}}],["aris",{"_index":2758,"title":{},"body":{"license.html":{}}}],["around",{"_index":1815,"title":{},"body":{"components/NavComponent.html":{}}}],["associ",{"_index":2715,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":763,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["attemptinglogin",{"_index":2052,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-16.html":{}}}],["auth",{"_index":282,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-15.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{}}}],["auth/actions/user.act",{"_index":547,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ProfileComponent.html":{}}}],["auth/model",{"_index":1896,"title":{},"body":{"components/ProfileComponent.html":{}}}],["auth/reducers/root.reduc",{"_index":1895,"title":{},"body":{"components/ProfileComponent.html":{}}}],["auth/services/user.servic",{"_index":190,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{}}}],["authcomponentselector",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-15.html":{},"injectables/UserService.html":{}}}],["authdata",{"_index":2547,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.displaynam",{"_index":2594,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.email",{"_index":2595,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.photourl",{"_index":2596,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.providerdata[0",{"_index":2592,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.uid",{"_index":2593,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdomain",{"_index":1182,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["autheffect",{"_index":525,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{}}}],["authent",{"_index":527,"title":{"classes/Authenticated.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["authform",{"_index":556,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["authformcompon",{"_index":281,"title":{"components/AuthFormComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["authguard",{"_index":489,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authmodul",{"_index":445,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2748,"title":{},"body":{"license.html":{}}}],["authroutingmodul",{"_index":651,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":652,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserEffects.html":{},"overview.html":{}}}],["authstat",{"_index":722,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"components/ProfileComponent.html":{},"interfaces/State-15.html":{}}}],["authus",{"_index":2545,"title":{},"body":{"injectables/UserEffects.html":{}}}],["auto",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{}}}],["avail",{"_index":2761,"title":{},"body":{"modules.html":{}}}],["awesom",{"_index":2698,"title":{},"body":{"index.html":{}}}],["axistickformat",{"_index":774,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["b",{"_index":1057,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["b.index",{"_index":1250,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["b.starttim",{"_index":2173,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["b.valu",{"_index":1058,"title":{},"body":{"components/DashboardComponent.html":{}}}],["background",{"_index":229,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["backlog",{"_index":1573,"title":{},"body":{"components/HomeComponent.html":{}}}],["bad",{"_index":863,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["banner",{"_index":922,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/LibraryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["bannerrout",{"_index":1752,"title":{},"body":{"components/NavComponent.html":{}}}],["bannerroute.capt",{"_index":1799,"title":{},"body":{"components/NavComponent.html":{}}}],["bargraphbaseconfig",{"_index":1004,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bargraphconfig",{"_index":771,"title":{"interfaces/BarGraphConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{}}}],["base",{"_index":241,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["between",{"_index":853,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["bezier(0.5",{"_index":2221,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["block",{"_index":1370,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/NavComponent.html":{},"components/SpinnerComponent.html":{}}}],["bold",{"_index":855,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"classes/AddNewItem.html":{},"components/AppComponent.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/PieChartConfig.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"interfaces/RouteEntry.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-16.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"interfaces/UUIDConfig.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["bootstrap",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["border",{"_index":248,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{}}}],["bottom",{"_index":627,"title":{},"body":{"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{}}}],["box",{"_index":623,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LibraryComponent.html":{},"components/SpinnerComponent.html":{}}}],["brand",{"_index":599,"title":{},"body":{"components/AuthFormComponent.html":{},"dependencies.html":{}}}],["break",{"_index":1357,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["breakpoint",{"_index":268,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["brows",{"_index":2760,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["builder",{"_index":572,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["button",{"_index":260,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoadMoreComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TrackerComponent.html":{}}}],["c",{"_index":2702,"title":{},"body":{"license.html":{}}}],["calc(#{$smal",{"_index":1532,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["calc(#{$tim",{"_index":1397,"title":{},"body":{"components/HistoryComponent.html":{}}}],["canactiv",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(_rout",{"_index":632,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":810,"title":{},"body":{"classes/CancelTimer.html":{},"components/EditDisplayNameComponent.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{}}}],["cancel_tim",{"_index":800,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["canceltim",{"_index":797,"title":{"classes/CancelTimer.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["caption",{"_index":1766,"title":{},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["case",{"_index":1355,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["catcherror",{"_index":366,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":357,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["center",{"_index":228,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["chang",{"_index":1469,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["changedetect",{"_index":136,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["changedetectionstrategi",{"_index":185,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":137,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["charg",{"_index":2710,"title":{},"body":{"license.html":{}}}],["chart",{"_index":1077,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{},"index.html":{}}}],["child",{"_index":1396,"title":{},"body":{"components/HistoryComponent.html":{},"components/ProfileComponent.html":{}}}],["child(1",{"_index":2226,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(2",{"_index":2229,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(3",{"_index":2231,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["children",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["claim",{"_index":2751,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["clearstat",{"_index":2647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clearstate(reduc",{"_index":2663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cli",{"_index":2676,"title":{},"body":{"index.html":{}}}],["close",{"_index":862,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["cluster_appmodul",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":647,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":648,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":649,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":650,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_completionmodul",{"_index":923,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_completionmodule_declar",{"_index":924,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_completionmodule_import",{"_index":925,"title":{},"body":{"modules/CompletionModule.html":{}}}],["cluster_completionmodule_provid",{"_index":926,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":1071,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":1072,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":1073,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_homemodul",{"_index":1588,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":1589,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_librarymodul",{"_index":1635,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_declar",{"_index":1636,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_import",{"_index":1637,"title":{},"body":{"modules/LibraryModule.html":{}}}],["cluster_profilemodul",{"_index":1922,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1923,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_provid",{"_index":1924,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":2107,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":2108,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":2109,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackermodul",{"_index":2504,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["cluster_trackermodule_declar",{"_index":2505,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["cluster_trackermodule_import",{"_index":2506,"title":{},"body":{"modules/TrackerModule.html":{}}}],["cluster_trackermodule_provid",{"_index":2507,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["color",{"_index":261,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["colorschem",{"_index":787,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["colorsetnam",{"_index":2777,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["column",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["combinelatest",{"_index":881,"title":{},"body":{"components/CompletionComponent.html":{},"injectables/ElapsedTimeService.html":{},"injectables/UserService.html":{}}}],["combinelatest(currenttim",{"_index":1169,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["combinelatest(this.historygroup",{"_index":903,"title":{},"body":{"components/CompletionComponent.html":{}}}],["combinelatest(us",{"_index":2617,"title":{},"body":{"injectables/UserService.html":{}}}],["commonmodul",{"_index":654,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["complet",{"_index":83,"title":{},"body":{"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"components/SpinnerComponent.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["complete.act",{"_index":1731,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-8.html":{}}}],["complete.actions.t",{"_index":76,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["complete.actions.ts:11",{"_index":2059,"title":{},"body":{"classes/SetEndTime.html":{}}}],["complete.actions.ts:12",{"_index":2060,"title":{},"body":{"classes/SetEndTime.html":{}}}],["complete.actions.ts:17",{"_index":2017,"title":{},"body":{"classes/Remove.html":{}}}],["complete.actions.ts:18",{"_index":2018,"title":{},"body":{"classes/Remove.html":{}}}],["complete.actions.ts:23",{"_index":1647,"title":{},"body":{"classes/LoadItems.html":{}}}],["complete.actions.ts:24",{"_index":1648,"title":{},"body":{"classes/LoadItems.html":{}}}],["complete.actions.ts:29",{"_index":78,"title":{},"body":{"classes/AddNewItem.html":{}}}],["complete.actions.ts:30",{"_index":79,"title":{},"body":{"classes/AddNewItem.html":{}}}],["complete.actions.ts:5",{"_index":2087,"title":{},"body":{"classes/SetShowExtra.html":{}}}],["complete.actions.ts:6",{"_index":2088,"title":{},"body":{"classes/SetShowExtra.html":{}}}],["complete.models.t",{"_index":1745,"title":{},"body":{"interfaces/MarkCompleteItem.html":{}}}],["complete.reduc",{"_index":954,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["complete.reducer.t",{"_index":1729,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["completedcount",{"_index":2375,"title":{},"body":{"components/TabsComponent.html":{}}}],["completeddisplaydata",{"_index":815,"title":{"interfaces/CompletedDisplayData.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/PlayingDisplayData.html":{}}}],["completeditem",{"_index":818,"title":{"interfaces/CompletedItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{}}}],["completeditemcompon",{"_index":284,"title":{"components/CompletedItemComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["completedprogerssitem",{"_index":911,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completion'},{'nam",{"_index":287,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["completion.compon",{"_index":931,"title":{},"body":{"modules/CompletionModule.html":{}}}],["completion.component.html",{"_index":866,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completion.component.scss",{"_index":865,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completioncompon",{"_index":286,"title":{"components/CompletionComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["completionmodul",{"_index":446,"title":{"modules/CompletionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules.html":{},"overview.html":{}}}],["completionselector",{"_index":882,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["completionst",{"_index":883,"title":{"interfaces/CompletionState.html":{}},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["completionstor",{"_index":870,"title":{},"body":{"components/CompletionComponent.html":{}}}],["compodoc",{"_index":2681,"title":{},"body":{"index.html":{}}}],["compon",{"_index":125,"title":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthRoutingModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":276,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["components/add",{"_index":932,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/auth",{"_index":656,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/complet",{"_index":934,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/edit",{"_index":1926,"title":{},"body":{"modules/ProfileModule.html":{}}}],["components/forgot",{"_index":658,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/graph",{"_index":1078,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/header/header.compon",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{}}}],["components/histori",{"_index":2513,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/history/history.compon",{"_index":2515,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/load",{"_index":2516,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/lock",{"_index":2518,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/login/login.compon",{"_index":661,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/nav/nav.compon",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["components/play",{"_index":936,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/register/register.compon",{"_index":662,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/spinner/spinner.compon",{"_index":2111,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/tabs/tabs.compon",{"_index":938,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/tim",{"_index":1081,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/timer/timer.compon",{"_index":2519,"title":{},"body":{"modules/TrackerModule.html":{}}}],["condit",{"_index":2733,"title":{},"body":{"license.html":{}}}],["config",{"_index":2389,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["confirm",{"_index":1129,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["connect",{"_index":2759,"title":{},"body":{"license.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(act",{"_index":343,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"classes/Error.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["constructor(addplay",{"_index":2040,"title":{},"body":{"classes/Save.html":{}}}],["constructor(af",{"_index":1542,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["constructor(afauth",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(amount",{"_index":1595,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["constructor(attemptinglogin",{"_index":2053,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["constructor(build",{"_index":569,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["constructor(displaynam",{"_index":2084,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["constructor(email",{"_index":1172,"title":{},"body":{"classes/EmailLogin.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{}}}],["constructor(gam",{"_index":2061,"title":{},"body":{"classes/SetGame.html":{},"classes/SetGame-1.html":{}}}],["constructor(info",{"_index":2045,"title":{},"body":{"classes/SaveTimerInfo.html":{},"classes/SetTimerInfo.html":{}}}],["constructor(item",{"_index":15,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfoSucceeded.html":{}}}],["constructor(itemid",{"_index":77,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["constructor(payload",{"_index":1746,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["constructor(platform",{"_index":1671,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{}}}],["constructor(priv",{"_index":201,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(profil",{"_index":1685,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["constructor(publ",{"_index":39,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["constructor(sharedstor",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{}}}],["constructor(starttim",{"_index":2089,"title":{},"body":{"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{}}}],["constructor(stor",{"_index":156,"title":{},"body":{"components/AddPlayingComponent.html":{},"guards/AuthGuard.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/UserService.html":{}}}],["constructor(tab",{"_index":2103,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["constructor(trackerstor",{"_index":2478,"title":{},"body":{"components/TrackerComponent.html":{}}}],["constructor(us",{"_index":755,"title":{},"body":{"classes/Authenticated.html":{}}}],["constructor(userid",{"_index":1642,"title":{},"body":{"classes/LoadHistoryItems.html":{},"classes/LoadProfile.html":{},"classes/LoadProgressItems.html":{},"classes/LoadTimerInfo.html":{},"classes/MarkComplete.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveProgressItem.html":{},"classes/SetProfileDisplayName.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateGame.html":{},"classes/UpdatePlatform.html":{}}}],["constructor(userservic",{"_index":1759,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(validationmessag",{"_index":2098,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["content",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["contract",{"_index":2755,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2696,"title":{},"body":{"index.html":{}}}],["cool",{"_index":2792,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["copi",{"_index":2713,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2701,"title":{},"body":{"license.html":{}}}],["core",{"_index":2039,"title":{},"body":{"interfaces/RouteEntry.html":{},"dependencies.html":{}}}],["count",{"_index":2384,"title":{},"body":{"components/TabsComponent.html":{}}}],["createentityadapt",{"_index":1443,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["createfeatureselector",{"_index":729,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"interfaces/TrackerState.html":{}}}],["createfeatureselector('auth",{"_index":738,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["createfeatureselector('complet",{"_index":961,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["createfeatureselector('dashboard",{"_index":1095,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["createfeatureselector('error",{"_index":993,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["createfeatureselector('profil",{"_index":1943,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["createfeatureselector('shar",{"_index":2141,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createfeatureselector('track",{"_index":2318,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector",{"_index":730,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selectallhistori",{"_index":2162,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectallprogress",{"_index":2155,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectauthst",{"_index":740,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["createselector(_selectcompletionst",{"_index":963,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["createselector(_selectdashboardfeatur",{"_index":1097,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["createselector(_selectdaterang",{"_index":1100,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["createselector(_selectdisplay",{"_index":2323,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selecterrorst",{"_index":995,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["createselector(_selecthistori",{"_index":2184,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selecthistoryitem",{"_index":2172,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplatform",{"_index":2189,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplatformsopt",{"_index":2192,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplay",{"_index":970,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["createselector(_selectprofilest",{"_index":1945,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["createselector(_selectsharedst",{"_index":2143,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectsortedhistoryitem",{"_index":2176,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectstatu",{"_index":748,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["createselector(_selecttab",{"_index":975,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["createselector(_selecttim",{"_index":2196,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selecttrackerst",{"_index":2320,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selectus",{"_index":745,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["cubic",{"_index":2220,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["currentrout",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.indexof('/app",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["currentst",{"_index":1468,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["currenttim",{"_index":1154,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["cursor",{"_index":254,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["customrouterstateseri",{"_index":493,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"modules/AppModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["d3",{"_index":2680,"title":{},"body":{"index.html":{}}}],["damag",{"_index":2752,"title":{},"body":{"license.html":{}}}],["dark",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{}}}],["darken($background",{"_index":619,"title":{},"body":{"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{}}}],["dashboard",{"_index":298,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"components/SpinnerComponent.html":{},"interfaces/State-12.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["dashboard'},{'nam",{"_index":289,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["dashboard.compon",{"_index":1084,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":1003,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":1002,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":288,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":447,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardselector",{"_index":1032,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["dashboardst",{"_index":1033,"title":{"interfaces/DashboardState.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["dashboardstor",{"_index":1013,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data",{"_index":1394,"title":{},"body":{"components/HistoryComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["data.models.t",{"_index":817,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["data.util",{"_index":892,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["data.utils.t",{"_index":2782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databaseurl",{"_index":1183,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["datat",{"_index":1640,"title":{},"body":{"modules/LibraryModule.html":{},"dependencies.html":{}}}],["datatable.materi",{"_index":1630,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date",{"_index":154,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"dependencies.html":{}}}],["date().gettim",{"_index":1166,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["date(datestrings[0]).gettim",{"_index":1517,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["date(datestrings[1]).gettim",{"_index":1518,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["date(historyentry.endtim",{"_index":2166,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["date(historyentry.starttim",{"_index":2165,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["date(now",{"_index":2440,"title":{},"body":{"components/TimerComponent.html":{}}}],["date(starttimeel.value).gettim",{"_index":2438,"title":{},"body":{"components/TimerComponent.html":{}}}],["date:'m/d/i",{"_index":222,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["date:'mm/d/yyyi",{"_index":1627,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date:'shorttim",{"_index":1522,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["date:\\'m/d/i",{"_index":277,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["date:\\'mm/d/yyyi",{"_index":1631,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date:\\'shorttim",{"_index":1534,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["dategraphconfig",{"_index":1005,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datelist",{"_index":1041,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["daterang",{"_index":1087,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/SharedState.html":{},"interfaces/State-12.html":{},"interfaces/State-5.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["daterange.endday",{"_index":1102,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["daterange.typ",{"_index":1104,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["daterangeel",{"_index":1350,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["daterangeel.valu",{"_index":1354,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["daterangetyp",{"_index":1006,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{},"miscellaneous/typealiases.html":{}}}],["datestr",{"_index":1514,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["datestring.trim",{"_index":1516,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["datetim",{"_index":2512,"title":{},"body":{"modules/TrackerModule.html":{},"dependencies.html":{}}}],["day",{"_index":1600,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["deal",{"_index":2717,"title":{},"body":{"license.html":{}}}],["declar",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["decor",{"_index":361,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/HeaderComponent.html":{},"injectables/HistoryEffects.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["default",{"_index":24,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"interfaces/ProfileState.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["defin",{"_index":17,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":2227,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["deletehistoryitem",{"_index":1537,"title":{},"body":{"injectables/HistoryService.html":{}}}],["deletehistoryitem(userid",{"_index":1217,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["depend",{"_index":435,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail",{"_index":1566,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["dev",{"_index":2683,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2682,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dictionari",{"_index":1106,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["differ",{"_index":1565,"title":{},"body":{"components/HomeComponent.html":{}}}],["direct",{"_index":274,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["disabl",{"_index":256,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PlayingItemComponent.html":{}}}],["display",{"_index":225,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-19.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["display.entriestoshow",{"_index":2324,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["display.reduc",{"_index":2314,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["display:flex",{"_index":1527,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["display:non",{"_index":1806,"title":{},"body":{"components/NavComponent.html":{}}}],["displaydata",{"_index":834,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["displaydata.completeditem.endtim",{"_index":849,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.gam",{"_index":844,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.platform",{"_index":845,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.starttim",{"_index":848,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.timeplay",{"_index":847,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.startentrydata.gam",{"_index":1865,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.startentrydata.platform",{"_index":1866,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.startentrydata.starttim",{"_index":1868,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.timeplay",{"_index":1867,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaynam",{"_index":1136,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"interfaces/State-13.html":{},"interfaces/State-17.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["displaynameel",{"_index":1128,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["displaynameel.valu",{"_index":1137,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["distribut",{"_index":2725,"title":{},"body":{"license.html":{}}}],["div",{"_index":1065,"title":{},"body":{"components/DashboardComponent.html":{},"components/SpinnerComponent.html":{}}}],["div:nth",{"_index":2225,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["document",{"_index":2716,"title":{},"body":{"license.html":{}}}],["dom",{"_index":129,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["domain",{"_index":788,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["doughnut",{"_index":796,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["dynam",{"_index":1813,"title":{},"body":{"components/NavComponent.html":{},"dependencies.html":{}}}],["eachday",{"_index":1089,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["eachday(daterange.startday",{"_index":1101,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["edit",{"_index":292,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["editdisplaynamecompon",{"_index":290,"title":{"components/EditDisplayNameComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["editnam",{"_index":1882,"title":{},"body":{"components/ProfileComponent.html":{}}}],["effect",{"_index":362,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["effects/add",{"_index":939,"title":{},"body":{"modules/CompletionModule.html":{}}}],["effects/auth.effect",{"_index":663,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/history.effect",{"_index":2521,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/platforms.effect",{"_index":2522,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/profile.effect",{"_index":1929,"title":{},"body":{"modules/ProfileModule.html":{}}}],["effects/progress.effect",{"_index":942,"title":{},"body":{"modules/CompletionModule.html":{}}}],["effects/status.effect",{"_index":665,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/timer.effect",{"_index":2523,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/user.effect",{"_index":667,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodul",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{}}}],["effectsmodule.forfeatur",{"_index":673,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["effectsmodule.forfeature([profileeffect",{"_index":1931,"title":{},"body":{"modules/ProfileModule.html":{}}}],["effectsmodule.forroot",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":1487,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["el.click",{"_index":1520,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["elaps",{"_index":67,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["elapsedtim",{"_index":1143,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["elapsedtime:item.endtim",{"_index":1524,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["elapsedtimeel",{"_index":1492,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimeel.valu",{"_index":1513,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimeel.value.split('~').map(datestr",{"_index":1515,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimepip",{"_index":1140,"title":{"pipes/ElapsedTimePipe.html":{}},"body":{"pipes/ElapsedTimePipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["elapsedtimeservic",{"_index":387,"title":{"injectables/ElapsedTimeService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ElapsedTimeService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["element",{"_index":238,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"dependencies.html":{}}}],["elements/googletagmanag",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["ellipsi",{"_index":271,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["email",{"_index":603,"title":{},"body":{"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"interfaces/State-17.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["email_login",{"_index":768,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["emailauth",{"_index":565,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emailauthev",{"_index":600,"title":{"interfaces/EmailAuthEvent.html":{}},"body":{"components/AuthFormComponent.html":{},"interfaces/EmailAuthEvent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emaillogin",{"_index":769,"title":{"classes/EmailLogin.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["emaillogin(ev",{"_index":1709,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailsignup",{"_index":2004,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailsignup(ev",{"_index":2009,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emitemailauth",{"_index":557,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emitfacebookauth",{"_index":558,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emitfinishedit",{"_index":1118,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["emitgoogleauth",{"_index":559,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emittwitterauth",{"_index":560,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["end",{"_index":91,"title":{},"body":{"classes/AddNewItem.html":{},"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["enddat",{"_index":825,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["endday",{"_index":2247,"title":{},"body":{"interfaces/State-11.html":{}}}],["endentryid",{"_index":828,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/MarkCompletePayload.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-4.html":{}}}],["enditem",{"_index":1858,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["enditem.id",{"_index":1863,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["endlastmonth",{"_index":2277,"title":{},"body":{"interfaces/State-11.html":{}}}],["endlastweek",{"_index":2264,"title":{},"body":{"interfaces/State-11.html":{}}}],["endmonth",{"_index":2272,"title":{},"body":{"interfaces/State-11.html":{}}}],["endofmonth",{"_index":2249,"title":{},"body":{"interfaces/State-11.html":{}}}],["endofmonth(now",{"_index":2273,"title":{},"body":{"interfaces/State-11.html":{}}}],["endofweek",{"_index":2250,"title":{},"body":{"interfaces/State-11.html":{}}}],["endofweek(now",{"_index":2259,"title":{},"body":{"interfaces/State-11.html":{}}}],["endtim",{"_index":93,"title":{},"body":{"classes/AddNewItem.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressItem.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-2.html":{},"interfaces/State-8.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["endtimeel",{"_index":1848,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["endtimeinm",{"_index":1146,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["endweek",{"_index":2258,"title":{},"body":{"interfaces/State-11.html":{}}}],["entiti",{"_index":2156,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entities.filter(ent",{"_index":2157,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entity.endentryid",{"_index":1957,"title":{},"body":{"injectables/ProgressEffects.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entity.id",{"_index":1959,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["entityadapt",{"_index":1444,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["entityst",{"_index":1445,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["entri",{"_index":1474,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entriestoshow",{"_index":2306,"title":{},"body":{"interfaces/State-18.html":{},"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["entry'},{'nam",{"_index":308,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["entry.compon",{"_index":2514,"title":{},"body":{"modules/TrackerModule.html":{}}}],["entry.component.html",{"_index":1476,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.scss",{"_index":1475,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.t",{"_index":1473,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":1697,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:24",{"_index":1701,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":1700,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":1696,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":1481,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:30",{"_index":1482,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:31",{"_index":1483,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":1480,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:33",{"_index":1498,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":1497,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:35",{"_index":1698,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":1479,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:40",{"_index":1484,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:44",{"_index":1493,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:52",{"_index":1495,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:60",{"_index":1488,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:70",{"_index":1489,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:74",{"_index":1491,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:89",{"_index":1486,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry/histori",{"_index":1472,"title":{},"body":{"components/HistoryEntryComponent.html":{},"modules/TrackerModule.html":{}}}],["entry/lock",{"_index":1695,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"modules/TrackerModule.html":{}}}],["environ",{"_index":406,"title":{"interfaces/Environment.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{},"overview.html":{}}}],["environment.product",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["err.messag",{"_index":360,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["error",{"_index":987,"title":{"classes/Error.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Error.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"miscellaneous/typealiases.html":{}}}],["error.reduc",{"_index":986,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["evenli",{"_index":1581,"title":{},"body":{"components/HomeComponent.html":{},"components/PlayingItemComponent.html":{}}}],["event",{"_index":577,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["event.password",{"_index":1724,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["eventemitt",{"_index":578,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{}}}],["exact",{"_index":1778,"title":{},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["explodeslic",{"_index":795,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["express",{"_index":2741,"title":{},"body":{"license.html":{}}}],["extend",{"_index":245,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/PieChartConfig.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"components/TimerComponent.html":{}}}],["extra",{"_index":86,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["faban",{"_index":2424,"title":{},"body":{"components/TimerComponent.html":{}}}],["fabar",{"_index":1772,"title":{},"body":{"components/NavComponent.html":{}}}],["facebook",{"_index":592,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["facebook_login",{"_index":764,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["facebookauth",{"_index":566,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["facebooklogin",{"_index":678,"title":{"classes/FacebookLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["facebooksignup",{"_index":2005,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fachartbar",{"_index":1779,"title":{},"body":{"components/NavComponent.html":{}}}],["facheck",{"_index":1130,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/PlayingItemComponent.html":{}}}],["faclipboardlist",{"_index":1785,"title":{},"body":{"components/NavComponent.html":{}}}],["faclock",{"_index":1788,"title":{},"body":{"components/NavComponent.html":{}}}],["faedit",{"_index":1891,"title":{},"body":{"components/ProfileComponent.html":{}}}],["fafacebook",{"_index":593,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["fagoogl",{"_index":591,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["falist",{"_index":1782,"title":{},"body":{"components/NavComponent.html":{}}}],["falock",{"_index":1699,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["fals",{"_index":573,"title":{},"body":{"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-16.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["famili",{"_index":242,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["faplay",{"_index":1496,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["faplaycircl",{"_index":2421,"title":{},"body":{"components/TimerComponent.html":{}}}],["faplussquar",{"_index":182,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["fasignoutalt",{"_index":1770,"title":{},"body":{"components/NavComponent.html":{}}}],["fastopcircl",{"_index":2423,"title":{},"body":{"components/TimerComponent.html":{}}}],["fatim",{"_index":1131,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["fatrash",{"_index":839,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["fatwitt",{"_index":595,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["features/auth/auth.modul",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["features/auth/components/login/login.compon",{"_index":507,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/auth/components/register/register.compon",{"_index":508,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/auth/guards/auth.guard",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/auth/model",{"_index":1794,"title":{},"body":{"components/NavComponent.html":{}}}],["features/auth/services/user.servic",{"_index":1793,"title":{},"body":{"components/NavComponent.html":{}}}],["features/completion/completion.compon",{"_index":509,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/completion/completion.modul",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["features/dashboard/dashboard.compon",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/dashboard/dashboard.modul",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["features/home/home.compon",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/home/home.modul",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["features/library/library.compon",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/library/library.modul",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["features/profile/profile.compon",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/profile/profile.modul",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["features/tracker/tracker.compon",{"_index":514,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/tracker/tracker.modul",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["fff",{"_index":1579,"title":{},"body":{"components/HomeComponent.html":{}}}],["field",{"_index":1902,"title":{},"body":{"components/ProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"license.html":{}}}],["filter.util",{"_index":888,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["filteredgroup",{"_index":2496,"title":{},"body":{"components/TrackerComponent.html":{}}}],["filterplatform",{"_index":885,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterplatforms(group",{"_index":905,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterstarttim",{"_index":886,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterstarttimes(group",{"_index":907,"title":{},"body":{"components/CompletionComponent.html":{}}}],["findmatchinghistoryentri",{"_index":198,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["findmatchinghistoryentry(this.gamegroup",{"_index":215,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["finish",{"_index":1569,"title":{},"body":{"components/HomeComponent.html":{}}}],["finishedit",{"_index":1120,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["fire",{"_index":2793,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["firebas",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{},"dependencies.html":{},"index.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/app",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/auth",{"_index":2590,"title":{},"body":{"injectables/UserEffects.html":{}}}],["firebaseconfig",{"_index":1179,"title":{"interfaces/FirebaseConfig.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["firestorehistoryitem",{"_index":1193,"title":{"interfaces/FirestoreHistoryItem.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["firestoreplatformsitem",{"_index":1238,"title":{"interfaces/FirestorePlatformsItem.html":{}},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["firestoreprofileitem",{"_index":1253,"title":{"interfaces/FirestoreProfileItem.html":{}},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["firestoreprogressitem",{"_index":1267,"title":{"interfaces/FirestoreProgressItem.html":{}},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["firestoretimeritem",{"_index":1287,"title":{"interfaces/FirestoreTimerItem.html":{}},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["first",{"_index":1197,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["firstplay",{"_index":1633,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["fit",{"_index":2744,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1805,"title":{},"body":{"components/NavComponent.html":{},"components/TimerComponent.html":{}}}],["flame",{"_index":2797,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["flex",{"_index":226,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["fn",{"_index":1090,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"dependencies.html":{}}}],["follow",{"_index":2732,"title":{},"body":{"license.html":{}}}],["font",{"_index":239,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["fontawesom",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"index.html":{}}}],["fontawesomemodul",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{}}}],["forest",{"_index":2799,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["forgot",{"_index":295,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["forgotpassword",{"_index":675,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["forgotpasswordcompon",{"_index":294,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["form",{"_index":553,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["form'},{'nam",{"_index":283,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["form.compon",{"_index":657,"title":{},"body":{"modules/AuthModule.html":{}}}],["form.component.html",{"_index":555,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.scss",{"_index":554,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.t",{"_index":552,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:18",{"_index":575,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:19",{"_index":574,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:20",{"_index":576,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:21",{"_index":579,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:22",{"_index":581,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:23",{"_index":580,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:24",{"_index":582,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:25",{"_index":589,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:26",{"_index":596,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:30",{"_index":571,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:33",{"_index":587,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:46",{"_index":583,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:55",{"_index":585,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:59",{"_index":584,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:63",{"_index":586,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form/auth",{"_index":551,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/AuthModule.html":{}}}],["formatd",{"_index":2130,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["formatdate(item.daterange[0",{"_index":2179,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["formatelapsedtim",{"_index":1150,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{}}}],["formatelapsedtime(starttimeinm",{"_index":1151,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["formatelapsedtime(timerinfo.starttim",{"_index":1170,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["formattim",{"_index":1017,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/TimePipe.html":{}}}],["formattime(timeinsecond",{"_index":2397,"title":{},"body":{"pipes/TimePipe.html":{}}}],["formbuild",{"_index":570,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["formgroup",{"_index":588,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["formsmodul",{"_index":669,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["fortawesome/angular",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":2038,"title":{},"body":{"interfaces/RouteEntry.html":{},"dependencies.html":{}}}],["fortawesome/fre",{"_index":187,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["found",{"_index":220,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/PlayingItemComponent.html":{},"index.html":{}}}],["free",{"_index":2709,"title":{},"body":{"license.html":{}}}],["from(this.afauth.auth.createuserwithemailandpassword(email",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.sendpasswordresetemail(email",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signinwithemailandpassword(email",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signout",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.facebooklogin",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.googlelogin",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.twitterlogin",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["fromdaterang",{"_index":1091,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["fromdaterange.reduc",{"_index":1093,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["fromdaterange.st",{"_index":1088,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["fromdisplay",{"_index":2313,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromdisplay.reduc",{"_index":2316,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromdisplay.st",{"_index":2315,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromerror",{"_index":985,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromerror.reduc",{"_index":991,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromerror.st",{"_index":989,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromhistori",{"_index":2122,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.adapter.getselectors(_selecthistori",{"_index":2160,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.reduc",{"_index":2136,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.st",{"_index":2118,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["frommarkcomplet",{"_index":953,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["frommarkcomplete.adapter.getselectors(_selectmarkcomplet",{"_index":973,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["frommarkcomplete.reduc",{"_index":958,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["frommarkcomplete.st",{"_index":949,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromplatform",{"_index":2124,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplatforms.reduc",{"_index":2137,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplatforms.st",{"_index":2119,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplay",{"_index":951,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromplaying.reduc",{"_index":957,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromplaying.st",{"_index":948,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromprofil",{"_index":1939,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["fromprofile.reduc",{"_index":1941,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["fromprofile.st",{"_index":1938,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["fromprogress",{"_index":2126,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.adapter.getselectors(_selectprogress",{"_index":2153,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.reduc",{"_index":2138,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.st",{"_index":2120,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromrout",{"_index":984,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{}}}],["fromrouter.routerreduc",{"_index":990,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromrouter.routerreducerst",{"_index":988,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromrouter.routerstateseri",{"_index":998,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromstatu",{"_index":731,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["fromstatus.reduc",{"_index":736,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["fromstatus.st",{"_index":726,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["fromtab",{"_index":955,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromtab.reduc",{"_index":959,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromtab.st",{"_index":950,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["fromtim",{"_index":2128,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromtimer.reduc",{"_index":2139,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromtimer.st",{"_index":2121,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromus",{"_index":733,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["fromuser.reduc",{"_index":735,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["fromuser.st",{"_index":727,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["full",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fun",{"_index":2693,"title":{},"body":{"index.html":{}}}],["function",{"_index":783,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":2730,"title":{},"body":{"license.html":{}}}],["game",{"_index":56,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompletePayload.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressItem.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"index.html":{}}}],["gamecount",{"_index":1374,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["gamegraphconfig",{"_index":1007,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gamegroup",{"_index":155,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/LibraryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["get",{"_index":2664,"title":{"index.html":{},"license.html":{}},"body":{}}],["get_us",{"_index":758,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["getauthenticatedact",{"_index":2541,"title":{},"body":{"injectables/UserEffects.html":{}}}],["getauthenticatedaction(authdata",{"_index":2544,"title":{},"body":{"injectables/UserEffects.html":{}}}],["getauthst",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcompleteddisplaydataitem",{"_index":889,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getcompleteddisplaydataitems(completedprogerssitem",{"_index":918,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getcurrenttim",{"_index":1155,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getcurrenttimed",{"_index":2401,"title":{},"body":{"components/TimerComponent.html":{}}}],["getdisplaynam",{"_index":2609,"title":{},"body":{"injectables/UserService.html":{}}}],["getdisplayname(us",{"_index":2618,"title":{},"body":{"injectables/UserService.html":{}}}],["getelapsedtim",{"_index":1156,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getelapsedtime(inactivevalu",{"_index":1159,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getemail",{"_index":2610,"title":{},"body":{"injectables/UserService.html":{}}}],["getemail(us",{"_index":2619,"title":{},"body":{"injectables/UserService.html":{}}}],["getenditem",{"_index":1852,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["getenditem(this.gamegroup",{"_index":1859,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["getgraphdata",{"_index":1037,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getgraphdata(groupingsbyplatform",{"_index":1051,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gethistoryent",{"_index":1538,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistoryentity(histori",{"_index":1232,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["gethistorygroupinglist",{"_index":2133,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorygroupinglist(historylistitemsmap",{"_index":2180,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorylist",{"_index":1539,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistorylist(userid",{"_index":1206,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["gethistorylistitemsmap",{"_index":2134,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorylistitemsmap(item",{"_index":2178,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getimgsrc",{"_index":2611,"title":{},"body":{"injectables/UserService.html":{}}}],["getimgsrc(us",{"_index":2620,"title":{},"body":{"injectables/UserService.html":{}}}],["getmarkcompleteent",{"_index":1743,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["getmarkcompleteentity(itemid",{"_index":1741,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{}}}],["getnewhistoryitem",{"_index":1540,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getnewhistoryitem(info",{"_index":1225,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["getnewprogressitem",{"_index":1991,"title":{},"body":{"injectables/ProgressService.html":{}}}],["getnewprogressitem(addplay",{"_index":1283,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getnowtim",{"_index":1303,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["getnumentriestoshow",{"_index":1617,"title":{},"body":{"components/LibraryComponent.html":{}}}],["getnumentriestoshow(window.innerheight",{"_index":1626,"title":{},"body":{"components/LibraryComponent.html":{}}}],["getpaddedgraphdata",{"_index":1038,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpaddedgraphdata(groupingsbyd",{"_index":1049,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getplatformsopt",{"_index":1244,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["getplayingdisplaydataitem",{"_index":890,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getplayingdisplaydataitems(playingprogressitem",{"_index":916,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getprofil",{"_index":1932,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(userid",{"_index":1259,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["getprogresslist",{"_index":1992,"title":{},"body":{"injectables/ProgressService.html":{}}}],["getprogresslist(userid",{"_index":1273,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getproviderfrom",{"_index":2612,"title":{},"body":{"injectables/UserService.html":{}}}],["getproviderfrom(user.providerid",{"_index":2621,"title":{},"body":{"injectables/UserService.html":{}}}],["getsortedgraphdata",{"_index":1039,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getsortedgraphdata(groupingsbygam",{"_index":1053,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getstat",{"_index":2254,"title":{},"body":{"interfaces/State-11.html":{}}}],["getstate(startlastmonth",{"_index":2281,"title":{},"body":{"interfaces/State-11.html":{}}}],["getstate(startlastweek",{"_index":2268,"title":{},"body":{"interfaces/State-11.html":{}}}],["getstate(startmonth",{"_index":2274,"title":{},"body":{"interfaces/State-11.html":{}}}],["getstate(startweek",{"_index":2260,"title":{},"body":{"interfaces/State-11.html":{}}}],["gettimerinfo",{"_index":2464,"title":{},"body":{"injectables/TimerService.html":{}}}],["gettimerinfo(userid",{"_index":1299,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["getuniquefrom",{"_index":2131,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getuniquefrom(item",{"_index":2187,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getupdatedst",{"_index":1467,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["getupdatedstate(action.payload",{"_index":1464,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["getus",{"_index":759,"title":{"classes/GetUser.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getuserinfo",{"_index":2600,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseritemcollect",{"_index":1541,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ProgressService.html":{}}}],["getuseritemcollection(userid",{"_index":1230,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid",{"_index":1199,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid(addplaying.userid",{"_index":1284,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid(info.userid",{"_index":1226,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["getvalidationmessag",{"_index":2370,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["getvalidationmessage(act",{"_index":2352,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["getvaluefromngselect",{"_index":1500,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["getvaluefromngselect(this.gam",{"_index":1504,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["good",{"_index":262,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["googl",{"_index":590,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["google_login",{"_index":762,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["googleauth",{"_index":567,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["googlelogin",{"_index":680,"title":{"classes/GoogleLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["googlesignup",{"_index":2006,"title":{},"body":{"components/RegisterComponent.html":{}}}],["googletagmanag",{"_index":1176,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["gradient",{"_index":790,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["gradient(180deg",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["grant",{"_index":2708,"title":{},"body":{"license.html":{}}}],["graph",{"_index":299,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules.html":{}}}],["graph'},{'nam",{"_index":332,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["graph.compon",{"_index":1083,"title":{},"body":{"modules/DashboardModule.html":{}}}],["graph.component.html",{"_index":2388,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.scss",{"_index":2387,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.t",{"_index":2386,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:13",{"_index":2391,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:14",{"_index":2390,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:17",{"_index":2392,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph/tim",{"_index":1082,"title":{},"body":{"modules/DashboardModule.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graphconfig",{"_index":773,"title":{"interfaces/GraphConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["graphdataitem",{"_index":784,"title":{"interfaces/GraphDataItem.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"interfaces/PieChartConfig.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graphdatamodifi",{"_index":2780,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["graphtooltipcompon",{"_index":297,"title":{"components/GraphTooltipComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["grid",{"_index":1062,"title":{},"body":{"components/DashboardComponent.html":{}}}],["group",{"_index":904,"title":{},"body":{"components/CompletionComponent.html":{},"components/HistoryComponent.html":{}}}],["group.key",{"_index":1388,"title":{},"body":{"components/HistoryComponent.html":{}}}],["group.totaltim",{"_index":1389,"title":{},"body":{"components/HistoryComponent.html":{}}}],["groupings.map(item",{"_index":896,"title":{},"body":{"components/CompletionComponent.html":{}}}],["groupingsbyd",{"_index":1043,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupingsbygam",{"_index":1047,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupingsbyplatform",{"_index":1045,"title":{},"body":{"components/DashboardComponent.html":{}}}],["guard",{"_index":629,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["h1",{"_index":1584,"title":{},"body":{"components/HomeComponent.html":{}}}],["hasmoretodisplay",{"_index":2488,"title":{},"body":{"components/TrackerComponent.html":{}}}],["hasmoretodisplay(historygroup",{"_index":2499,"title":{},"body":{"components/TrackerComponent.html":{}}}],["header",{"_index":621,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/ProfileComponent.html":{}}}],["header'},{'nam",{"_index":302,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["header.component.html",{"_index":1336,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["header.component.scss",{"_index":1335,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["headercompon",{"_index":301,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["headless",{"_index":2689,"title":{},"body":{"index.html":{}}}],["height",{"_index":231,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{}}}],["here",{"_index":2671,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":2707,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":223,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["hidden",{"_index":1530,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["hide",{"_index":1822,"title":{},"body":{"components/NavComponent.html":{}}}],["hidenavcont",{"_index":1753,"title":{},"body":{"components/NavComponent.html":{}}}],["histori",{"_index":36,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["histories.map(histori",{"_index":1210,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history'},{'nam",{"_index":306,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["history.component.html",{"_index":1381,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":1380,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.endtim",{"_index":1237,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.gam",{"_index":1234,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.id",{"_index":1233,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.load",{"_index":2185,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["history.platform",{"_index":1235,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.reduc",{"_index":2123,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["history.starttim",{"_index":1236,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historyact",{"_index":538,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{}}}],["historyactions.addnewhistoryitem(action.item",{"_index":1419,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.loadhistoryitem",{"_index":1402,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.loadhistoryitems(action.user.uid",{"_index":533,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["historyactions.loadhistoryitemssucceeded(data",{"_index":1406,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.removehistoryitem",{"_index":1410,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.removehistoryitem(this.userid",{"_index":1512,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.removehistoryitemsucceeded(itemid",{"_index":1414,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateelapsedtim",{"_index":1422,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateelapsedtime(this.userid",{"_index":1519,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updateelapsedtimesucceeded(payload",{"_index":1426,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updategam",{"_index":1430,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updategame(this.userid",{"_index":1505,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updategamesucceeded(payload",{"_index":1432,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateplatform",{"_index":1436,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateplatform(this.userid",{"_index":1506,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updateplatformsucceeded(payload",{"_index":1438,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historycollect",{"_index":1202,"title":{"interfaces/HistoryCollection.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historycompon",{"_index":304,"title":{"components/HistoryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historyeffect",{"_index":1398,"title":{"injectables/HistoryEffects.html":{}},"body":{"injectables/HistoryEffects.html":{},"modules/TrackerModule.html":{}}}],["historyent",{"_index":16,"title":{"interfaces/HistoryEntity.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-2.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["historyentri",{"_index":2163,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentries.map",{"_index":2164,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentry.id",{"_index":2169,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentrycompon",{"_index":307,"title":{"components/HistoryEntryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historygroup",{"_index":163,"title":{"interfaces/HistoryGrouping.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/PlayingItemComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historygroupingsbyd",{"_index":2200,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historygroupingsbygam",{"_index":2202,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historygroupingsbyplatform",{"_index":2201,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyitem",{"_index":214,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historyitem.id",{"_index":217,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["historylist",{"_index":1207,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historylist.pipe(map(histori",{"_index":1209,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historylistitem",{"_index":820,"title":{"interfaces/HistoryListItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historylistitemkeyfunct",{"_index":2783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historylistitemmap",{"_index":2785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historylistitemsmap",{"_index":2177,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"miscellaneous/typealiases.html":{}}}],["historyload",{"_index":2203,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyservic",{"_index":1201,"title":{"injectables/HistoryService.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historytrackedgam",{"_index":2204,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["hold",{"_index":1570,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":2749,"title":{},"body":{"license.html":{}}}],["home",{"_index":1554,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":310,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["home.compon",{"_index":1591,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":1556,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1555,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":309,"title":{"components/HomeComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["homemodul",{"_index":448,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["horizon",{"_index":2800,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hostlisten",{"_index":1607,"title":{},"body":{"components/LibraryComponent.html":{}}}],["hostlistener('window:res",{"_index":1623,"title":{},"body":{"components/LibraryComponent.html":{}}}],["hover",{"_index":253,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["hover:en",{"_index":1870,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["hover:not(:dis",{"_index":618,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["html",{"_index":273,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["htmlinputel",{"_index":1126,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["htmlselectel",{"_index":175,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["https://mzrimsek.github.io/track",{"_index":2672,"title":{},"body":{"index.html":{}}}],["icon",{"_index":145,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteEntry.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["icondefinit",{"_index":2037,"title":{},"body":{"interfaces/RouteEntry.html":{}}}],["id",{"_index":827,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/Dictionary.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"interfaces/IHasId.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["ihasid",{"_index":1110,"title":{"interfaces/IHasId.html":{}},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["img",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["imgsrc",{"_index":2539,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":6,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-1.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["impli",{"_index":2742,"title":{},"body":{"license.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["inactivevalu",{"_index":1161,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["includ",{"_index":2720,"title":{},"body":{"license.html":{}}}],["increment",{"_index":1599,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["increment_days_to_show",{"_index":1598,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["incrementdaystoshow",{"_index":1592,"title":{"classes/IncrementDaysToShow.html":{}},"body":{"classes/IncrementDaysToShow.html":{},"miscellaneous/typealiases.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["infinit",{"_index":2223,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["info.endtim",{"_index":1228,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["info.gam",{"_index":901,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["info.platform",{"_index":908,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{}}}],["info.starttim",{"_index":1227,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{}}}],["inform",{"_index":2668,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":1371,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["initi",{"_index":257,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["initialst",{"_index":1450,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["inject",{"_index":339,"title":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/ElapsedTimeService.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inlin",{"_index":1369,"title":{},"body":{"components/HeaderComponent-1.html":{},"components/SpinnerComponent.html":{}}}],["input",{"_index":153,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["insert",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["insertanalyticsel",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["insertanalyticselements(environment.googletagmanag",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["interfac",{"_index":118,"title":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/AuthState.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/CompletionState.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"interfaces/EmailAuthEvent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/PieChartConfig.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/Profile.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/TimerInfo.html":{},"interfaces/TrackerState.html":{},"interfaces/UUIDConfig.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{}},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/AuthState.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"interfaces/EmailAuthEvent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/TrackerState.html":{},"interfaces/UUIDConfig.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"overview.html":{}}}],["interv",{"_index":1162,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["interval(1000).pipe(map",{"_index":1165,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["isuserloggedin",{"_index":752,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["ital",{"_index":856,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/PlayingItemComponent.html":{}}}],["item",{"_index":11,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"interfaces/State-8.html":{},"components/TimerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["item'},{'nam",{"_index":285,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["item.compon",{"_index":935,"title":{},"body":{"modules/CompletionModule.html":{}}}],["item.component.html",{"_index":833,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.scss",{"_index":832,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.t",{"_index":831,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.ts:22",{"_index":836,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:23",{"_index":841,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:24",{"_index":840,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:26",{"_index":835,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:27",{"_index":1841,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:28",{"_index":1842,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:29",{"_index":837,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.ts:30",{"_index":1850,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:33",{"_index":838,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:34",{"_index":1840,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:37",{"_index":1844,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:41",{"_index":1849,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:45",{"_index":1845,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:49",{"_index":1847,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:54",{"_index":1843,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.endtim",{"_index":1523,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["item.gam",{"_index":1702,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["item.key",{"_index":897,"title":{},"body":{"components/CompletionComponent.html":{}}}],["item.opt",{"_index":1252,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["item.platform",{"_index":1703,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["item.starttim",{"_index":1521,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["item/complet",{"_index":830,"title":{},"body":{"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{}}}],["item/play",{"_index":937,"title":{},"body":{"modules/CompletionModule.html":{},"components/PlayingItemComponent.html":{}}}],["itemid",{"_index":51,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["items.sort((a",{"_index":1248,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["js",{"_index":2636,"title":{},"body":{"dependencies.html":{}}}],["justifi",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["karma",{"_index":2687,"title":{},"body":{"index.html":{}}}],["key",{"_index":1536,"title":{},"body":{"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["keyfram",{"_index":2233,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["kind",{"_index":2740,"title":{},"body":{"license.html":{}}}],["label",{"_index":1112,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["last",{"_index":1365,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["last_month",{"_index":1362,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{},"miscellaneous/typealiases.html":{}}}],["last_week",{"_index":1358,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{},"miscellaneous/typealiases.html":{}}}],["lastplay",{"_index":1634,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["learn",{"_index":1567,"title":{},"body":{"components/HomeComponent.html":{}}}],["left",{"_index":860,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{}}}],["legend",{"_index":272,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["li",{"_index":1809,"title":{},"body":{"components/NavComponent.html":{}}}],["liabil",{"_index":2753,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2750,"title":{},"body":{"license.html":{}}}],["librari",{"_index":303,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["library'},{'nam",{"_index":312,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["library.compon",{"_index":1641,"title":{},"body":{"modules/LibraryModule.html":{}}}],["library.component.html",{"_index":1603,"title":{},"body":{"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":1602,"title":{},"body":{"components/LibraryComponent.html":{}}}],["librarycompon",{"_index":311,"title":{"components/LibraryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["libraryentri",{"_index":1604,"title":{"interfaces/LibraryEntry.html":{}},"body":{"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{}}}],["librarymodul",{"_index":449,"title":{"modules/LibraryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["licens",{"_index":2699,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":230,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["lighten($background",{"_index":620,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["lighten($neutr",{"_index":1704,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["limit",{"_index":2721,"title":{},"body":{"license.html":{}}}],["linear",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":1340,"title":{},"body":{"components/HeaderComponent.html":{}}}],["list",{"_index":1808,"title":{},"body":{"components/NavComponent.html":{}}}],["liter",{"_index":1322,"title":{},"body":{"interfaces/GraphConfig.html":{}}}],["load",{"_index":41,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_history_item",{"_index":40,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_history_items_succeed",{"_index":45,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_item",{"_index":95,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["load_opt",{"_index":1668,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{}}}],["load_options_succeed",{"_index":1669,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{}}}],["load_profil",{"_index":1677,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["load_profile_succeed",{"_index":1679,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["load_progress_item",{"_index":106,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["load_progress_items_succeed",{"_index":108,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["load_timer_info",{"_index":811,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["loadhistoryitem",{"_index":42,"title":{"classes/LoadHistoryItems.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistoryitemssucceed",{"_index":47,"title":{"classes/LoadHistoryItemsSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loaditem",{"_index":96,"title":{"classes/LoadItems.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["loadmorecompon",{"_index":313,"title":{"components/LoadMoreComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["loadmoreentri",{"_index":1656,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["loadopt",{"_index":1665,"title":{"classes/LoadOptions.html":{}},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"injectables/PlatformsEffects.html":{},"miscellaneous/typealiases.html":{}}}],["loadoptionssucceed",{"_index":1670,"title":{"classes/LoadOptionsSucceeded.html":{}},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprofil",{"_index":1674,"title":{"classes/LoadProfile.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"injectables/ProfileEffects.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprofilesucceed",{"_index":1680,"title":{"classes/LoadProfileSucceeded.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprogressitem",{"_index":107,"title":{"classes/LoadProgressItems.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/ProgressEffects.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprogressitemssucceed",{"_index":109,"title":{"classes/LoadProgressItemsSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadtimerinfo",{"_index":812,"title":{"classes/LoadTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["lock",{"_index":316,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["lockedhistoryentrycompon",{"_index":315,"title":{"components/LockedHistoryEntryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["loggingin",{"_index":561,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-15.html":{}}}],["login",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"classes/TwitterLogin.html":{}}}],["login'},{'nam",{"_index":318,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["login.component.html",{"_index":1707,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1706,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":317,"title":{"components/LoginComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["logo",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/NavComponent.html":{},"index.html":{}}}],["logout",{"_index":766,"title":{"classes/Logout.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["made",{"_index":1560,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["main",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/RegisterComponent.html":{}}}],["map",{"_index":367,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["map(act",{"_index":349,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["map(auth",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(authdata",{"_index":2559,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1405,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/TimerEffects.html":{}}}],["map(ent",{"_index":1958,"title":{},"body":{"injectables/ProgressEffects.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["map(item",{"_index":1251,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["map(itemid",{"_index":1413,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["map(payload",{"_index":1425,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["mapgroup",{"_index":1615,"title":{},"body":{"components/LibraryComponent.html":{}}}],["mapgroupings(gamegroup",{"_index":1621,"title":{},"body":{"components/LibraryComponent.html":{}}}],["margin",{"_index":625,"title":{},"body":{"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{}}}],["mark",{"_index":82,"title":{},"body":{"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/CompletionState.html":{},"components/HomeComponent.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-9.html":{}}}],["mark_complet",{"_index":114,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["mark_complete_succeed",{"_index":116,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["markcomplet",{"_index":115,"title":{"classes/MarkComplete.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletionState.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/State-9.html":{},"miscellaneous/typealiases.html":{}}}],["markcompleteact",{"_index":1851,"title":{},"body":{"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["markcompleteactions.addnewitem(item.id",{"_index":1982,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.loaditems(entities.filter(ent",{"_index":1956,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.remove(data.itemid",{"_index":1967,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.remove(itemid",{"_index":1974,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.setendtime(this.displaydata.item.id",{"_index":1857,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["markcompleteactions.setshowextra(this.displaydata.item.id",{"_index":1854,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["markcompleted(userid",{"_index":1281,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["markcompleteent",{"_index":913,"title":{"interfaces/MarkCompleteEntity.html":{}},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["markcompleteitem",{"_index":821,"title":{"interfaces/MarkCompleteItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/PlayingDisplayData.html":{}}}],["markcompletepayload",{"_index":104,"title":{"interfaces/MarkCompletePayload.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["markcompletesucceed",{"_index":117,"title":{"classes/MarkCompleteSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["match",{"_index":73,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":266,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["media",{"_index":264,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["medium",{"_index":1818,"title":{},"body":{"components/NavComponent.html":{},"components/TimerComponent.html":{}}}],["menu",{"_index":1771,"title":{},"body":{"components/NavComponent.html":{}}}],["merchant",{"_index":2743,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1265,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/ProfileService.html":{},"injectables/TimerService.html":{},"license.html":{}}}],["mergemap",{"_index":368,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{}}}],["mergemap(act",{"_index":531,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/StatusEffects.html":{}}}],["mergemap(data",{"_index":1965,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(ent",{"_index":1954,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(item",{"_index":1980,"title":{},"body":{"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{}}}],["mergemap(itemid",{"_index":1972,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(newitem",{"_index":354,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["messag",{"_index":562,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State.html":{}}}],["messagingsenderid",{"_index":1186,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["meta.reduc",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":135,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["metareduc",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["method",{"_index":146,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["mike",{"_index":2704,"title":{},"body":{"license.html":{}}}],["miscellan",{"_index":2646,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2700,"title":{},"body":{"license.html":{}}}],["mode",{"_index":2690,"title":{},"body":{"index.html":{}}}],["model",{"_index":33,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["model.nam",{"_index":1330,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["model.valu",{"_index":1331,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["modifi",{"_index":2723,"title":{},"body":{"license.html":{}}}],["modul",{"_index":433,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":1366,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["more",{"_index":1652,"title":{},"body":{"components/LoadMoreComponent.html":{},"components/TrackerComponent.html":{}}}],["more'},{'nam",{"_index":314,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["more.compon",{"_index":2517,"title":{},"body":{"modules/TrackerModule.html":{}}}],["more.component.html",{"_index":1654,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.scss",{"_index":1653,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.t",{"_index":1651,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:16",{"_index":1657,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:19",{"_index":1658,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:23",{"_index":1659,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more/load",{"_index":1650,"title":{},"body":{"components/LoadMoreComponent.html":{},"modules/TrackerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name'},{'nam",{"_index":293,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["name.compon",{"_index":1927,"title":{},"body":{"modules/ProfileModule.html":{}}}],["name.component.html",{"_index":1117,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.scss",{"_index":1116,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.t",{"_index":1115,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:20",{"_index":1122,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:21",{"_index":1133,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:22",{"_index":1132,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:25",{"_index":1121,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:28",{"_index":1124,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:32",{"_index":1123,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:36",{"_index":1127,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name/edit",{"_index":1114,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"modules/ProfileModule.html":{}}}],["namespac",{"_index":1187,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["natur",{"_index":2791,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nav",{"_index":921,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/HistoryComponent.html":{},"components/LibraryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["nav'},{'nam",{"_index":320,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["nav.component.html",{"_index":1751,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1750,"title":{},"body":{"components/NavComponent.html":{}}}],["navbann",{"_index":1767,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomplet",{"_index":1786,"title":{},"body":{"components/NavComponent.html":{}}}],["navcompon",{"_index":319,"title":{"components/NavComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["navdashboard",{"_index":1780,"title":{},"body":{"components/NavComponent.html":{}}}],["navlibrari",{"_index":1783,"title":{},"body":{"components/NavComponent.html":{}}}],["navprofil",{"_index":1775,"title":{},"body":{"components/NavComponent.html":{}}}],["navtrack",{"_index":1789,"title":{},"body":{"components/NavComponent.html":{}}}],["neon",{"_index":2801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["neutral",{"_index":263,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["new",{"_index":38,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/SharedState.html":{},"interfaces/State-11.html":{},"interfaces/State-5.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{}}}],["newitem",{"_index":1213,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["newstat",{"_index":1459,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["ng",{"_index":929,"title":{},"body":{"modules/CompletionModule.html":{},"components/HistoryEntryComponent.html":{},"components/NavComponent.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodul",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["ngoninit",{"_index":147,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["ngrx",{"_index":2678,"title":{},"body":{"index.html":{}}}],["ngrx/effect",{"_index":364,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":1446,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":28,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ngselectmodul",{"_index":928,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["ngselectvalu",{"_index":1111,"title":{"interfaces/NgSelectValue.html":{}},"body":{"interfaces/Dictionary.html":{},"components/HistoryEntryComponent.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["ngx",{"_index":1629,"title":{},"body":{"components/LibraryComponent.html":{},"index.html":{}}}],["ngxchartsmodul",{"_index":1075,"title":{},"body":{"modules/DashboardModule.html":{}}}],["ngxdatatablemodul",{"_index":1639,"title":{},"body":{"modules/LibraryModule.html":{}}}],["night",{"_index":2803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nightlight",{"_index":2804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["node_modules/@angular/form",{"_index":671,"title":{},"body":{"modules/AuthModule.html":{}}}],["none",{"_index":247,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["noninfring",{"_index":2747,"title":{},"body":{"license.html":{}}}],["not(:last",{"_index":1395,"title":{},"body":{"components/HistoryComponent.html":{},"components/ProfileComponent.html":{}}}],["not_authent",{"_index":760,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["notauthent",{"_index":761,"title":{"classes/NotAuthenticated.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["noth",{"_index":1390,"title":{},"body":{"components/HistoryComponent.html":{}}}],["notic",{"_index":2735,"title":{},"body":{"license.html":{}}}],["now",{"_index":2255,"title":{},"body":{"interfaces/State-11.html":{},"components/TimerComponent.html":{}}}],["npm",{"_index":2691,"title":{},"body":{"index.html":{}}}],["null",{"_index":161,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"interfaces/Dictionary.html":{},"components/HistoryEntryComponent.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["number",{"_index":94,"title":{},"body":{"classes/AddNewItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"pipes/PluralizePipe.html":{},"interfaces/ProgressItem.html":{},"classes/Remove.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"pipes/TimePipe.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["number.parseint(endtimeel.valu",{"_index":1856,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["number.parseint(starttimeel.valu",{"_index":211,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["numentriestoshow",{"_index":1605,"title":{},"body":{"components/LibraryComponent.html":{}}}],["object",{"_index":181,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["observ",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":2712,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":2798,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["of(displaynam",{"_index":1266,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["of(itemid",{"_index":1219,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(new",{"_index":358,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["of(newitem",{"_index":1280,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(payload",{"_index":1222,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(this.gethistoryentity(newitem",{"_index":1216,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["oftype(addplayingactions.sav",{"_index":347,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["oftype(addplayingactions.save_succeed",{"_index":1977,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(appactions.app_error",{"_index":2350,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["oftype(fromrouter.router_navig",{"_index":2366,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["oftype(historyactions.load_history_item",{"_index":1401,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.remove_history_item",{"_index":1409,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_elapsed_tim",{"_index":1421,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_gam",{"_index":1429,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_platform",{"_index":1435,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(platformsactions.load_opt",{"_index":1830,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["oftype(profileactions.load_profil",{"_index":1908,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["oftype(profileactions.set_profile_displaynam",{"_index":1914,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["oftype(progressactions.load_progress_item",{"_index":1951,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(progressactions.mark_complet",{"_index":1962,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(progressactions.remove_progress_item",{"_index":1969,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(timeractions.cancel_tim",{"_index":2445,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.load_timer_info",{"_index":2449,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.save_timer_info",{"_index":2457,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.save_timer_info_succeed",{"_index":1417,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(useractions.authent",{"_index":529,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/StatusEffects.html":{}}}],["oftype(useractions.email_login",{"_index":2356,"title":{},"body":{"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(useractions.facebook_login",{"_index":2553,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.get_us",{"_index":2557,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.google_login",{"_index":2566,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.logout",{"_index":2570,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.reset_password",{"_index":2576,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.signup",{"_index":2582,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.twitter_login",{"_index":2586,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oninit",{"_index":134,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["onres",{"_index":1624,"title":{},"body":{"components/LibraryComponent.html":{}}}],["opac",{"_index":857,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["opendatetimepick",{"_index":1477,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["opendatetimepicker(el",{"_index":1485,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["option",{"_index":22,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"interfaces/FirestorePlatformsItem.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"interfaces/RouteEntry.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"interfaces/State-3.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":2757,"title":{},"body":{"license.html":{}}}],["out",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"license.html":{},"overview.html":{}}}],["outlin",{"_index":246,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["output",{"_index":564,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{}}}],["over",{"_index":1563,"title":{},"body":{"components/HomeComponent.html":{}}}],["overal",{"_index":1393,"title":{},"body":{"components/HistoryComponent.html":{}}}],["overflow",{"_index":270,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["overview",{"_index":2762,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":2509,"title":{},"body":{"modules/TrackerModule.html":{}}}],["owlnativedatetimemodul",{"_index":2510,"title":{},"body":{"modules/TrackerModule.html":{}}}],["packag",{"_index":2622,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":233,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["param",{"_index":983,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["paramet",{"_index":19,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":2745,"title":{},"body":{"license.html":{}}}],["password",{"_index":606,"title":{},"body":{"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["password'},{'nam",{"_index":296,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["password.compon",{"_index":660,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.component.html",{"_index":1307,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.scss",{"_index":1306,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":1305,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1312,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1309,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1310,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1311,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":659,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordComponent.html":{}}}],["passwordform",{"_index":1308,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["path",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pathmatch",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":58,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/State-2.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["permiss",{"_index":2706,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2729,"title":{},"body":{"license.html":{}}}],["person",{"_index":2711,"title":{},"body":{"license.html":{}}}],["photourl",{"_index":2298,"title":{},"body":{"interfaces/State-17.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["pick",{"_index":2511,"title":{},"body":{"modules/TrackerModule.html":{},"dependencies.html":{}}}],["picker",{"_index":1528,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["picnic",{"_index":2802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["piechartconfig",{"_index":793,"title":{"interfaces/PieChartConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/TimePlatformGraphComponent.html":{}}}],["pipe",{"_index":348,"title":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"pipes/PluralizePipe.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"pipes/TimePipe.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{},"overview.html":{}}}],["pipe(catcherror(err",{"_index":2579,"title":{},"body":{"injectables/UserEffects.html":{}}}],["pipe(map",{"_index":2446,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["pipe(mergemap",{"_index":2361,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["pipes/elaps",{"_index":2112,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/pluralize.pip",{"_index":2114,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/time.pip",{"_index":2115,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1149,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}}}],["platform",{"_index":62,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompletePayload.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressItem.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["platformel",{"_index":177,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["platformel.valu",{"_index":209,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["platformgraphconfig",{"_index":1008,"title":{},"body":{"components/DashboardComponent.html":{}}}],["platformopt",{"_index":2193,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformoptions.length",{"_index":2194,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platforms.opt",{"_index":2190,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platforms.reduc",{"_index":2125,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformsact",{"_index":540,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PlatformsEffects.html":{}}}],["platformsactions.loadopt",{"_index":532,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["platformsactions.loadoptionssucceeded(data",{"_index":1832,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["platformscollect",{"_index":1241,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformseffect",{"_index":1827,"title":{"injectables/PlatformsEffects.html":{}},"body":{"injectables/PlatformsEffects.html":{},"modules/TrackerModule.html":{}}}],["platformsitem",{"_index":1245,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformsitems.pipe(map(item",{"_index":1247,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformsload",{"_index":2198,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformsopt",{"_index":1382,"title":{},"body":{"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["platformsservic",{"_index":1240,"title":{"injectables/PlatformsService.html":{}},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["play",{"_index":140,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"components/SpinnerComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["playing'},{'nam",{"_index":278,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["playing.act",{"_index":194,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-7.html":{}}}],["playing.actions.t",{"_index":2028,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["playing.actions.ts:10",{"_index":2065,"title":{},"body":{"classes/SetGame-1.html":{}}}],["playing.actions.ts:15",{"_index":2080,"title":{},"body":{"classes/SetPlatform-1.html":{}}}],["playing.actions.ts:16",{"_index":2081,"title":{},"body":{"classes/SetPlatform-1.html":{}}}],["playing.actions.ts:21",{"_index":2092,"title":{},"body":{"classes/SetStartTime-1.html":{}}}],["playing.actions.ts:22",{"_index":2093,"title":{},"body":{"classes/SetStartTime-1.html":{}}}],["playing.actions.ts:27",{"_index":2029,"title":{},"body":{"classes/Reset.html":{}}}],["playing.actions.ts:33",{"_index":2041,"title":{},"body":{"classes/Save.html":{}}}],["playing.actions.ts:34",{"_index":2042,"title":{},"body":{"classes/Save.html":{}}}],["playing.actions.ts:39",{"_index":2043,"title":{},"body":{"classes/SaveSucceeded.html":{}}}],["playing.actions.ts:40",{"_index":2044,"title":{},"body":{"classes/SaveSucceeded.html":{}}}],["playing.actions.ts:9",{"_index":2064,"title":{},"body":{"classes/SetGame-1.html":{}}}],["playing.compon",{"_index":933,"title":{},"body":{"modules/CompletionModule.html":{}}}],["playing.component.html",{"_index":144,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.scss",{"_index":142,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.t",{"_index":133,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:26",{"_index":164,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:27",{"_index":165,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:28",{"_index":162,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:29",{"_index":166,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:30",{"_index":167,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:31",{"_index":160,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:32",{"_index":184,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:33",{"_index":183,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:35",{"_index":159,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:38",{"_index":168,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:42",{"_index":173,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:49",{"_index":176,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:54",{"_index":179,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:59",{"_index":171,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:63",{"_index":172,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.effect",{"_index":940,"title":{},"body":{"modules/CompletionModule.html":{}}}],["playing.effects.t",{"_index":342,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.effects.ts:14",{"_index":345,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.effects.ts:18",{"_index":363,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.models.t",{"_index":121,"title":{},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{}}}],["playing.reduc",{"_index":952,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["playing.reducer.t",{"_index":2343,"title":{},"body":{"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["playing.util",{"_index":200,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing/add",{"_index":132,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/CompletionModule.html":{}}}],["playingcount",{"_index":2376,"title":{},"body":{"components/TabsComponent.html":{}}}],["playingdisplaydata",{"_index":822,"title":{"interfaces/PlayingDisplayData.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/CompletionComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{}}}],["playingitemcompon",{"_index":321,"title":{"components/PlayingItemComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["playingprogressitem",{"_index":909,"title":{},"body":{"components/CompletionComponent.html":{}}}],["playtim",{"_index":846,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"index.html":{}}}],["playtime').subscribe(titl",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["plural",{"_index":1873,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["pluralize:'game':'gam",{"_index":1377,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["pluralize:\\'game\\':\\'gam",{"_index":1378,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["pluralizepip",{"_index":1871,"title":{"pipes/PluralizePipe.html":{}},"body":{"pipes/PluralizePipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["pluralword",{"_index":1876,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["pointer",{"_index":255,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["portion",{"_index":2738,"title":{},"body":{"license.html":{}}}],["posit",{"_index":1804,"title":{},"body":{"components/NavComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{}}}],["postlogin",{"_index":2347,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["potentiald",{"_index":867,"title":{},"body":{"components/CompletionComponent.html":{}}}],["potentialplatform",{"_index":868,"title":{},"body":{"components/CompletionComponent.html":{}}}],["primari",{"_index":1525,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["privat",{"_index":202,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LockedHistoryEntryComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["product",{"_index":1177,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["profil",{"_index":291,"title":{"interfaces/Profile.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"components/SpinnerComponent.html":{},"interfaces/State-14.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["profile'},{'nam",{"_index":323,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["profile.compon",{"_index":1928,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.html",{"_index":1881,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1880,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.reduc",{"_index":1940,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["profile/actions/profile.act",{"_index":549,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["profile/model",{"_index":2608,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/reducers/root.reduc",{"_index":2607,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/utils/userinfo.util",{"_index":2613,"title":{},"body":{"injectables/UserService.html":{}}}],["profileact",{"_index":548,"title":{},"body":{"injectables/AuthEffects.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{}}}],["profileactions.loadprofil",{"_index":1909,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.loadprofile(action.user.uid",{"_index":536,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["profileactions.loadprofilesucceeded(data",{"_index":1911,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.setprofiledisplaynam",{"_index":1915,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.setprofiledisplayname(this.userid",{"_index":1138,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["profileactions.setprofiledisplaynamesucceeded(data",{"_index":1918,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profilecollect",{"_index":1256,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profilecompon",{"_index":322,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["profilecomponentselector",{"_index":2606,"title":{},"body":{"injectables/UserService.html":{}}}],["profiledoc",{"_index":1260,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profiledoc.pipe(map(profil",{"_index":1262,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profileeffect",{"_index":1905,"title":{"injectables/ProfileEffects.html":{}},"body":{"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{}}}],["profilemodul",{"_index":450,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1754,"title":{},"body":{"components/NavComponent.html":{}}}],["profileselector",{"_index":1947,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["profileservic",{"_index":1255,"title":{"injectables/ProfileService.html":{}},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profilest",{"_index":1936,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{},"injectables/UserService.html":{}}}],["profilestor",{"_index":2601,"title":{},"body":{"injectables/UserService.html":{}}}],["progress",{"_index":105,"title":{},"body":{"classes/AddNewProgressItem.html":{},"components/CompletionComponent.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{}}}],["progress.load",{"_index":2199,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progress.reduc",{"_index":2127,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progress.some(x",{"_index":2167,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progressact",{"_index":542,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["progressactions.addnewprogressitem(item",{"_index":1981,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.loadprogressitem",{"_index":1952,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.loadprogressitems(action.user.uid",{"_index":535,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["progressactions.loadprogressitemssucceeded(ent",{"_index":1955,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.markcomplet",{"_index":1963,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.markcomplete(this.userid",{"_index":1862,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["progressactions.markcompletesucceeded(data",{"_index":1966,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.removeprogressitem",{"_index":1970,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.removeprogressitem(this.userid",{"_index":842,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["progressactions.removeprogressitemsucceeded(itemid",{"_index":1973,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progresscollect",{"_index":1270,"title":{"interfaces/ProgressCollection.html":{}},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresscomplet",{"_index":2206,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progresseffect",{"_index":941,"title":{"injectables/ProgressEffects.html":{}},"body":{"modules/CompletionModule.html":{},"injectables/ProgressEffects.html":{}}}],["progressent",{"_index":99,"title":{"interfaces/ProgressEntity.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-4.html":{}}}],["progressitem",{"_index":819,"title":{"interfaces/ProgressItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progresslist",{"_index":1274,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresslist.pipe(map(progresslistitem",{"_index":1275,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresslistitems.map(progress",{"_index":1276,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progressplay",{"_index":2205,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progressservic",{"_index":344,"title":{"injectables/ProgressService.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"overview.html":{}}}],["projectid",{"_index":1184,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["promis",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["provid",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"license.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["providerdata",{"_index":2591,"title":{},"body":{"injectables/UserEffects.html":{}}}],["providerdata.providerid",{"_index":2597,"title":{},"body":{"injectables/UserEffects.html":{}}}],["providerid",{"_index":2299,"title":{},"body":{"interfaces/State-17.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["publish",{"_index":2724,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":2746,"title":{},"body":{"license.html":{}}}],["queryparam",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["quickstart",{"_index":1478,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["radiu",{"_index":1810,"title":{},"body":{"components/NavComponent.html":{},"components/SpinnerComponent.html":{}}}],["rang",{"_index":1368,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["range.act",{"_index":1352,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{}}}],["range.actions.t",{"_index":2068,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["range.actions.ts:11",{"_index":2077,"title":{},"body":{"classes/SetLastWeek.html":{}}}],["range.actions.ts:17",{"_index":2094,"title":{},"body":{"classes/SetThisMonth.html":{}}}],["range.actions.ts:23",{"_index":2069,"title":{},"body":{"classes/SetLastMonth.html":{}}}],["range.actions.ts:5",{"_index":2095,"title":{},"body":{"classes/SetThisWeek.html":{}}}],["range.models.t",{"_index":2779,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["range.reduc",{"_index":1092,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["range.reducer.t",{"_index":2246,"title":{},"body":{"interfaces/State-11.html":{},"miscellaneous/functions.html":{}}}],["rangetyp",{"_index":1105,"title":{},"body":{"interfaces/DashboardState.html":{},"components/HeaderComponent-1.html":{},"interfaces/State-12.html":{}}}],["reactiveformsmodul",{"_index":670,"title":{},"body":{"modules/AuthModule.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["redirectto",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-9.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":1452,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["reducers/history.reduc",{"_index":29,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/CancelTimer.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["reducers/progress.reduc",{"_index":103,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["reducers/root.reduc",{"_index":196,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserService.html":{}}}],["redux",{"_index":2677,"title":{},"body":{"index.html":{}}}],["regist",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":325,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["register.component.html",{"_index":2003,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2002,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":324,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["regular",{"_index":1792,"title":{},"body":{"components/NavComponent.html":{},"dependencies.html":{}}}],["rel",{"_index":2215,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["remov",{"_index":49,"title":{"classes/Remove.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["remove(userid",{"_index":1282,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["remove_history_item",{"_index":48,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["remove_history_item_succeed",{"_index":52,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["remove_progress_item",{"_index":110,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["remove_progress_item_succeed",{"_index":112,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["removehistoryitem",{"_index":50,"title":{"classes/RemoveHistoryItem.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removehistoryitemsucceed",{"_index":53,"title":{"classes/RemoveHistoryItemSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removeprogressitem",{"_index":111,"title":{"classes/RemoveProgressItem.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/ProgressEffects.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removeprogressitemsucceed",{"_index":113,"title":{"classes/RemoveProgressItemSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":454,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"modules/SharedModule.html":{},"classes/SignUp.html":{},"modules/TrackerModule.html":{},"classes/TwitterLogin.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["reset_password",{"_index":770,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["reset_tim",{"_index":801,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["resetgam",{"_index":2402,"title":{},"body":{"components/TimerComponent.html":{}}}],["resetinfo",{"_index":148,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["resetpassword",{"_index":681,"title":{"classes/ResetPassword.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["resetpassword(email",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["resettim",{"_index":802,"title":{"classes/ResetTimer.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["resettimer(userid",{"_index":1298,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["restrict",{"_index":2719,"title":{},"body":{"license.html":{}}}],["result",{"_index":72,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":169,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"components/NavComponent.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["returnurl",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserEffects.html":{}}}],["right",{"_index":861,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"license.html":{}}}],["root",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["root'},{'nam",{"_index":280,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["rootcomponentselector",{"_index":996,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["rotate(0deg",{"_index":2234,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(360deg",{"_index":2235,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rout",{"_index":506,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"components/NavComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{},"overview.html":{},"routes.html":{}}}],["route.capt",{"_index":1801,"title":{},"body":{"components/NavComponent.html":{}}}],["route.firstchild",{"_index":1000,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routeentri",{"_index":1765,"title":{"interfaces/RouteEntry.html":{}},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["routenavig",{"_index":2348,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["router",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"components/NavComponent.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{}}}],["routermodul",{"_index":505,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":676,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerst",{"_index":981,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstate.root",{"_index":999,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstateseri",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstateurl",{"_index":982,"title":{"interfaces/RouterStateUrl.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routing.modul",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module.t",{"_index":504,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["row",{"_index":1064,"title":{},"body":{"components/DashboardComponent.html":{}}}],["run",{"_index":2686,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":365,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/oper",{"_index":370,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{}}}],["save",{"_index":258,"title":{"classes/Save.html":{}},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["save_succeed",{"_index":2031,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["save_timer_info",{"_index":806,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["save_timer_info_succeed",{"_index":808,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["saveaddplay",{"_index":1993,"title":{},"body":{"injectables/ProgressService.html":{}}}],["saveaddplaying(addplay",{"_index":1277,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["saveaddplayingsucceed",{"_index":1949,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["saveplay",{"_index":149,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["savesucceed",{"_index":2032,"title":{"classes/SaveSucceeded.html":{}},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["savetimerinfo",{"_index":807,"title":{"classes/SaveTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["savetimerinfo(info",{"_index":1212,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["savetimerinfosucceed",{"_index":809,"title":{"classes/SaveTimerInfoSucceeded.html":{}},"body":{"classes/CancelTimer.html":{},"injectables/HistoryEffects.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["scalemax",{"_index":775,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["screen",{"_index":265,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["secondari",{"_index":1531,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["section",{"_index":1904,"title":{},"body":{"components/ProfileComponent.html":{}}}],["select",{"_index":249,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/CompletionModule.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["select.util",{"_index":1502,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["select/ng",{"_index":930,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["selectal",{"_index":2151,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["selectcolorschem",{"_index":1035,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectcolorscheme('cool",{"_index":1025,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectent",{"_index":971,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["selector",{"_index":138,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["self",{"_index":1663,"title":{},"body":{"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["sell",{"_index":2728,"title":{},"body":{"license.html":{}}}],["sendresetpasswordlink",{"_index":1883,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sent",{"_index":1319,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["serial",{"_index":978,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerst",{"_index":979,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["serv",{"_index":2685,"title":{},"body":{"index.html":{}}}],["server",{"_index":2684,"title":{},"body":{"index.html":{}}}],["services/auth.servic",{"_index":668,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UserEffects.html":{}}}],["services/history.servic",{"_index":1441,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["services/platforms.servic",{"_index":1835,"title":{},"body":{"injectables/PlatformsEffects.html":{},"modules/TrackerModule.html":{}}}],["services/profile.servic",{"_index":1921,"title":{},"body":{"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{}}}],["services/progress.servic",{"_index":371,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{},"injectables/ProgressEffects.html":{}}}],["services/timer.servic",{"_index":1499,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["set",{"_index":84,"title":{},"body":{"classes/AddNewItem.html":{},"classes/CancelTimer.html":{},"classes/LoadItems.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Remove.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{}}}],["set_attempting_login",{"_index":2056,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["set_endtim",{"_index":90,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["set_gam",{"_index":803,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{}}}],["set_last_month",{"_index":2070,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_last_week",{"_index":2073,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_platform",{"_index":804,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{}}}],["set_profile_displaynam",{"_index":1681,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["set_profile_displayname_succeed",{"_index":1683,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["set_show_extra",{"_index":81,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["set_start_tim",{"_index":805,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["set_starttim",{"_index":2030,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["set_this_month",{"_index":2075,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_this_week",{"_index":2071,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_timer_info",{"_index":813,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["set_validation_messag",{"_index":2057,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["set_visible_tab",{"_index":2106,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["setattemptinglogin",{"_index":2050,"title":{"classes/SetAttemptingLogin.html":{}},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["setdisplaynam",{"_index":1119,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{}}}],["setdisplayname(displaynameel",{"_index":1125,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["setdisplayname(userid",{"_index":1263,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["seteditnam",{"_index":1884,"title":{},"body":{"components/ProfileComponent.html":{}}}],["seteditname(editnam",{"_index":1888,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setendtim",{"_index":92,"title":{"classes/SetEndTime.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["setendtime(endtimeel",{"_index":1846,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["setgam",{"_index":150,"title":{"classes/SetGame.html":{},"classes/SetGame-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setgame(userid",{"_index":1295,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setlastmonth",{"_index":2066,"title":{"classes/SetLastMonth.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setlastweek",{"_index":2074,"title":{"classes/SetLastWeek.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setnumentriestoshow",{"_index":1606,"title":{},"body":{"components/LibraryComponent.html":{}}}],["setplatform",{"_index":151,"title":{"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setplatform(platformel",{"_index":174,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["setplatform(userid",{"_index":1296,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setprofiledisplaynam",{"_index":1682,"title":{"classes/SetProfileDisplayName.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["setprofiledisplaynamesucceed",{"_index":1684,"title":{"classes/SetProfileDisplayNameSucceeded.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["setshowextra",{"_index":87,"title":{"classes/SetShowExtra.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["setstarttim",{"_index":152,"title":{"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setstarttime(starttimeel",{"_index":178,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["setstarttime(userid",{"_index":1297,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setthismonth",{"_index":2076,"title":{"classes/SetThisMonth.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setthisweek",{"_index":2072,"title":{"classes/SetThisWeek.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["settim",{"_index":2465,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimer(userid",{"_index":1293,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["settimerinfo",{"_index":814,"title":{"classes/SetTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["setvalidationmessag",{"_index":2058,"title":{"classes/SetValidationMessage.html":{}},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibletab",{"_index":2101,"title":{"classes/SetVisibleTab.html":{}},"body":{"classes/SetVisibleTab.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibletab(tab",{"_index":2381,"title":{},"body":{"components/TabsComponent.html":{}}}],["shadow",{"_index":1578,"title":{},"body":{"components/HomeComponent.html":{},"components/LibraryComponent.html":{}}}],["shall",{"_index":2736,"title":{},"body":{"license.html":{}}}],["share",{"_index":327,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["shared/actions/history.act",{"_index":539,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{}}}],["shared/actions/platforms.act",{"_index":541,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PlatformsEffects.html":{}}}],["shared/actions/progress.act",{"_index":543,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["shared/actions/timer.act",{"_index":545,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{}}}],["shared/model",{"_index":197,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["shared/pipes/time.pip",{"_index":944,"title":{},"body":{"modules/CompletionModule.html":{}}}],["shared/reducers/history.reduc",{"_index":1198,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["shared/reducers/progress.reduc",{"_index":1269,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["shared/reducers/root.reduc",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{},"components/TrackerComponent.html":{}}}],["shared/services/elaps",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{}}}],["shared/shared.modul",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"modules/TrackerModule.html":{}}}],["shared/utils/date.util",{"_index":1034,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/ElapsedTimePipe.html":{},"pipes/TimePipe.html":{}}}],["shared/utils/histori",{"_index":887,"title":{},"body":{"components/CompletionComponent.html":{}}}],["shared/utils/ng",{"_index":1501,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["shared/utils/uuid.util",{"_index":1200,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["sharedmodul",{"_index":451,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedselector",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TrackerComponent.html":{}}}],["sharedst",{"_index":404,"title":{"interfaces/SharedState.html":{}},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TrackerComponent.html":{}}}],["sharedstor",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"components/TrackerComponent.html":{}}}],["shouldshowhead",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":85,"title":{},"body":{"classes/AddNewItem.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["show...get",{"_index":1391,"title":{},"body":{"components/HistoryComponent.html":{}}}],["showextra",{"_index":88,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-8.html":{}}}],["showgridlin",{"_index":776,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showlabel",{"_index":794,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showlegend",{"_index":789,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showloadmorebutton",{"_index":2477,"title":{},"body":{"components/TrackerComponent.html":{}}}],["showxaxi",{"_index":777,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showxaxislabel",{"_index":778,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showyaxi",{"_index":779,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showyaxislabel",{"_index":780,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["sidebar",{"_index":1803,"title":{},"body":{"components/NavComponent.html":{}}}],["signinwithemail",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail(email",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithfacebook",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithgoogl",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithtwitt",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":767,"title":{"classes/SignUp.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["signupwithemail",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupwithemail(email",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["simpl",{"_index":1561,"title":{},"body":{"components/HomeComponent.html":{}}}],["singlularword",{"_index":1875,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["size",{"_index":240,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{}}}],["small",{"_index":267,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["softwar",{"_index":2714,"title":{},"body":{"license.html":{}}}],["solar",{"_index":2794,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["solid",{"_index":188,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["space",{"_index":852,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HeaderComponent.html":{},"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["span",{"_index":1067,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["specif",{"_index":2666,"title":{},"body":{"index.html":{}}}],["spend",{"_index":1568,"title":{},"body":{"components/HomeComponent.html":{}}}],["spinner",{"_index":2210,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'nam",{"_index":328,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["spinner.component.html",{"_index":2212,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":2211,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercompon",{"_index":326,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["src/.../add",{"_index":2654,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.actions.t",{"_index":2768,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../clear.meta.reducer.t",{"_index":2648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../colorscheme.utils.t",{"_index":2778,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../date",{"_index":2657,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../display.actions.t",{"_index":2776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../display.reducer.t",{"_index":2649,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../error.reducer.t",{"_index":2655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graph",{"_index":2781,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.actions.t",{"_index":2775,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.models.t",{"_index":2788,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.reducer.t",{"_index":2650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../history.utils.t",{"_index":2784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mark",{"_index":2661,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../platforms.actions.t",{"_index":2769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../platforms.reducer.t",{"_index":2651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../profile.actions.t",{"_index":2774,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../profile.reducer.t",{"_index":2658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../progress.actions.t",{"_index":2770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../progress.reducer.t",{"_index":2652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../status.actions.t",{"_index":2773,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../status.reducer.t",{"_index":2659,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tab.actions.t",{"_index":2767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tab.reducer.t",{"_index":2656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tabs.models.t",{"_index":2787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timer.actions.t",{"_index":2771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timer.reducer.t",{"_index":2653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.actions.t",{"_index":2772,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.models.t",{"_index":2786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.t",{"_index":2660,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/actions/app.actions.t",{"_index":1188,"title":{},"body":{"classes/Error.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/actions/app.actions.ts:5",{"_index":1189,"title":{},"body":{"classes/Error.html":{}}}],["src/app/actions/app.actions.ts:6",{"_index":1190,"title":{},"body":{"classes/Error.html":{}}}],["src/app/app",{"_index":503,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/header/header.component.t",{"_index":1334,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:12",{"_index":1338,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:8",{"_index":1337,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/nav/nav.component.t",{"_index":1749,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:21",{"_index":1761,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:22",{"_index":1790,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:29",{"_index":1768,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:34",{"_index":1776,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:39",{"_index":1787,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:61",{"_index":1769,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:62",{"_index":1791,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:63",{"_index":1773,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:67",{"_index":1760,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:70",{"_index":1763,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:74",{"_index":1762,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:78",{"_index":1764,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/features/auth/actions/status.actions.t",{"_index":2051,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/actions/status.actions.ts:11",{"_index":2099,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["src/app/features/auth/actions/status.actions.ts:12",{"_index":2100,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["src/app/features/auth/actions/status.actions.ts:5",{"_index":2054,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["src/app/features/auth/actions/status.actions.ts:6",{"_index":2055,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["src/app/features/auth/actions/user.actions.t",{"_index":754,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/actions/user.actions.ts:13",{"_index":756,"title":{},"body":{"classes/Authenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:14",{"_index":757,"title":{},"body":{"classes/Authenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:19",{"_index":1826,"title":{},"body":{"classes/NotAuthenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:25",{"_index":1321,"title":{},"body":{"classes/GoogleLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:31",{"_index":1192,"title":{},"body":{"classes/FacebookLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:37",{"_index":2525,"title":{},"body":{"classes/TwitterLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:43",{"_index":1725,"title":{},"body":{"classes/Logout.html":{}}}],["src/app/features/auth/actions/user.actions.ts:49",{"_index":2207,"title":{},"body":{"classes/SignUp.html":{}}}],["src/app/features/auth/actions/user.actions.ts:50",{"_index":2208,"title":{},"body":{"classes/SignUp.html":{}}}],["src/app/features/auth/actions/user.actions.ts:55",{"_index":1173,"title":{},"body":{"classes/EmailLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:56",{"_index":1174,"title":{},"body":{"classes/EmailLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:61",{"_index":2033,"title":{},"body":{"classes/ResetPassword.html":{}}}],["src/app/features/auth/actions/user.actions.ts:62",{"_index":2034,"title":{},"body":{"classes/ResetPassword.html":{}}}],["src/app/features/auth/actions/user.actions.ts:7",{"_index":1320,"title":{},"body":{"classes/GetUser.html":{}}}],["src/app/features/auth/auth",{"_index":674,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/features/auth/auth.module.t",{"_index":653,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/features/auth/components/auth",{"_index":550,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1304,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/login/login.component.t",{"_index":1705,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:20",{"_index":1715,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:21",{"_index":1708,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:24",{"_index":1713,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:30",{"_index":1712,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:34",{"_index":1711,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:38",{"_index":1714,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:42",{"_index":1710,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.t",{"_index":2001,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:20",{"_index":2015,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:21",{"_index":2008,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:24",{"_index":2013,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:29",{"_index":2012,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:33",{"_index":2011,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:37",{"_index":2014,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:41",{"_index":2010,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/effects/auth.effects.t",{"_index":526,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/auth.effects.ts:15",{"_index":528,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/auth.effects.ts:19",{"_index":537,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/status.effects.t",{"_index":2346,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:17",{"_index":2349,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:21",{"_index":2355,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:35",{"_index":2368,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:42",{"_index":2363,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:53",{"_index":2365,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/user.effects.t",{"_index":2540,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:102",{"_index":2581,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:110",{"_index":2546,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:18",{"_index":2543,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:22",{"_index":2565,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:39",{"_index":2569,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:49",{"_index":2556,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:59",{"_index":2589,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:69",{"_index":2575,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:82",{"_index":2585,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:92",{"_index":2552,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/guards/auth.guard.t",{"_index":630,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/guards/auth.guard.ts:12",{"_index":631,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/guards/auth.guard.ts:15",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/models/events.models.t",{"_index":1171,"title":{},"body":{"interfaces/EmailAuthEvent.html":{}}}],["src/app/features/auth/models/user.models.t",{"_index":2538,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/reducers/root.reducer.t",{"_index":723,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["src/app/features/auth/reducers/status.reducer.t",{"_index":2290,"title":{},"body":{"interfaces/State-16.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/auth/reducers/user.reducer.t",{"_index":2297,"title":{},"body":{"interfaces/State-17.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/auth/services/auth.service.t",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:11",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:15",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:19",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:23",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:27",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:31",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:35",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:39",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:43",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:48",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:53",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:8",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/user.service.t",{"_index":2599,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:22",{"_index":2602,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:26",{"_index":2603,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:30",{"_index":2604,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:44",{"_index":2605,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/completion/actions/add",{"_index":2027,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/mark",{"_index":75,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/tab.actions.t",{"_index":2102,"title":{},"body":{"classes/SetVisibleTab.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/tab.actions.ts:7",{"_index":2104,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["src/app/features/completion/actions/tab.actions.ts:8",{"_index":2105,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["src/app/features/completion/completion.component.t",{"_index":864,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:26",{"_index":877,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:27",{"_index":876,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:28",{"_index":873,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:29",{"_index":875,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:30",{"_index":880,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:31",{"_index":879,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:33",{"_index":878,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:34",{"_index":874,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:36",{"_index":871,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:39",{"_index":872,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.module.t",{"_index":927,"title":{},"body":{"modules/CompletionModule.html":{}}}],["src/app/features/completion/components/add",{"_index":131,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["src/app/features/completion/components/complet",{"_index":829,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["src/app/features/completion/components/play",{"_index":1838,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.t",{"_index":2372,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:19",{"_index":2379,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:20",{"_index":2378,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:21",{"_index":2377,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:24",{"_index":2380,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:26",{"_index":2382,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/effects/add",{"_index":341,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.t",{"_index":1948,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:16",{"_index":1950,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:20",{"_index":1961,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:33",{"_index":1983,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:44",{"_index":1968,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:57",{"_index":1976,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/models/add",{"_index":120,"title":{},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{}}}],["src/app/features/completion/models/display",{"_index":816,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["src/app/features/completion/models/mark",{"_index":1744,"title":{},"body":{"interfaces/MarkCompleteItem.html":{}}}],["src/app/features/completion/models/tabs.models.t",{"_index":2808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/reducers/add",{"_index":2342,"title":{},"body":{"interfaces/State-7.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/reducers/mark",{"_index":1728,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/reducers/root.reducer.t",{"_index":946,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["src/app/features/completion/reducers/tab.reducer.t",{"_index":2240,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/services/progress.service.t",{"_index":1268,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:17",{"_index":1994,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:22",{"_index":1996,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:27",{"_index":2000,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:33",{"_index":1998,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:39",{"_index":1999,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:44",{"_index":1995,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:53",{"_index":1997,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/dashboard/actions/d",{"_index":2067,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/components/graph",{"_index":1323,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["src/app/features/dashboard/components/header/header.component.t",{"_index":1342,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:19",{"_index":1346,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:20",{"_index":1344,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:23",{"_index":1347,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:25",{"_index":1349,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/tim",{"_index":2385,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.t",{"_index":1001,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:26",{"_index":1028,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:27",{"_index":1030,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:28",{"_index":1029,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:30",{"_index":1031,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:32",{"_index":1023,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:34",{"_index":1026,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:43",{"_index":1019,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:55",{"_index":1022,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:60",{"_index":1024,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:65",{"_index":1027,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:70",{"_index":1014,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:73",{"_index":1015,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.module.t",{"_index":1074,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/features/dashboard/models/d",{"_index":2805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/models/graph.models.t",{"_index":772,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["src/app/features/dashboard/reducers/d",{"_index":2245,"title":{},"body":{"interfaces/State-11.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/dashboard/reducers/root.reducer.t",{"_index":1086,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["src/app/features/dashboard/utils/colorscheme.utils.t",{"_index":2789,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/utils/graph",{"_index":2806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/home/home.component.t",{"_index":1553,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:10",{"_index":1558,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:13",{"_index":1559,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.module.t",{"_index":1590,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/features/library/components/header/header.component.t",{"_index":1373,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/components/header/header.component.ts:11",{"_index":1375,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/components/header/header.component.ts:14",{"_index":1376,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/library.component.t",{"_index":1601,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:22",{"_index":1614,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:23",{"_index":1609,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:26",{"_index":1612,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:33",{"_index":1611,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:37",{"_index":1613,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.module.t",{"_index":1638,"title":{},"body":{"modules/LibraryModule.html":{}}}],["src/app/features/library/models/library.models.t",{"_index":1632,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["src/app/features/profile/actions/profile.actions.t",{"_index":1675,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:13",{"_index":1686,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:14",{"_index":1687,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:19",{"_index":2082,"title":{},"body":{"classes/SetProfileDisplayName.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:20",{"_index":2083,"title":{},"body":{"classes/SetProfileDisplayName.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:25",{"_index":2085,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:26",{"_index":2086,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:7",{"_index":1676,"title":{},"body":{"classes/LoadProfile.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:8",{"_index":1678,"title":{},"body":{"classes/LoadProfile.html":{}}}],["src/app/features/profile/components/edit",{"_index":1113,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["src/app/features/profile/effects/profile.effects.t",{"_index":1906,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:14",{"_index":1907,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:18",{"_index":1913,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:28",{"_index":1920,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/models/profile.models.t",{"_index":1878,"title":{},"body":{"interfaces/Profile.html":{}}}],["src/app/features/profile/profile.component.t",{"_index":1879,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:21",{"_index":1894,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:22",{"_index":1893,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:23",{"_index":1890,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:24",{"_index":1892,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:26",{"_index":1885,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:29",{"_index":1886,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:33",{"_index":1887,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:38",{"_index":1889,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.module.t",{"_index":1925,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/features/profile/reducers/profile.reducer.t",{"_index":2284,"title":{},"body":{"interfaces/State-13.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/profile/reducers/root.reducer.t",{"_index":1937,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["src/app/features/profile/services/profile.service.t",{"_index":1254,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:12",{"_index":1933,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:17",{"_index":1934,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:24",{"_index":1935,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/tracker/actions/display.actions.t",{"_index":1593,"title":{},"body":{"classes/IncrementDaysToShow.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/tracker/actions/display.actions.ts:5",{"_index":1596,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["src/app/features/tracker/actions/display.actions.ts:6",{"_index":1597,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["src/app/features/tracker/components/histori",{"_index":1471,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.t",{"_index":1379,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:13",{"_index":1385,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:14",{"_index":1386,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:15",{"_index":1384,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:18",{"_index":1387,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/load",{"_index":1649,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["src/app/features/tracker/components/lock",{"_index":1694,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.t",{"_index":2398,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:103",{"_index":2414,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:109",{"_index":2412,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:25",{"_index":2408,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:26",{"_index":2406,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:27",{"_index":2409,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:28",{"_index":2410,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:29",{"_index":2407,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:30",{"_index":2426,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:31",{"_index":2425,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:35",{"_index":2404,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:38",{"_index":2413,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:42",{"_index":2419,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:51",{"_index":2420,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:63",{"_index":2411,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:68",{"_index":2416,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:78",{"_index":2415,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:85",{"_index":2417,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:93",{"_index":2418,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/effects/history.effects.t",{"_index":1399,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:15",{"_index":1400,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:19",{"_index":1408,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:29",{"_index":1420,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:36",{"_index":1416,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:46",{"_index":1434,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:56",{"_index":1440,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:66",{"_index":1428,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.t",{"_index":1828,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.ts:14",{"_index":1829,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.ts:18",{"_index":1834,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.t",{"_index":2443,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:15",{"_index":2444,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:19",{"_index":2463,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:33",{"_index":2448,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:38",{"_index":2456,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/reducers/display.reducer.t",{"_index":2305,"title":{},"body":{"interfaces/State-18.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/tracker/reducers/root.reducer.t",{"_index":2311,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["src/app/features/tracker/services/history.service.t",{"_index":1194,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:19",{"_index":1543,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:24",{"_index":1546,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:29",{"_index":1549,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:35",{"_index":1544,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:40",{"_index":1551,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:46",{"_index":1552,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:52",{"_index":1550,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:58",{"_index":1547,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:70",{"_index":1548,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:74",{"_index":1545,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/platforms.service.t",{"_index":1239,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/platforms.service.ts:10",{"_index":1836,"title":{},"body":{"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/platforms.service.ts:15",{"_index":1837,"title":{},"body":{"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/timer.service.t",{"_index":1288,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:12",{"_index":2466,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:17",{"_index":2473,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:25",{"_index":2470,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:29",{"_index":2471,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:33",{"_index":2472,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:37",{"_index":2469,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:45",{"_index":2468,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:52",{"_index":2467,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/tracker.component.t",{"_index":2474,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:24",{"_index":2487,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:25",{"_index":2485,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:26",{"_index":2483,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:27",{"_index":2482,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:29",{"_index":2484,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:30",{"_index":2486,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:32",{"_index":2479,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:37",{"_index":2481,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.module.t",{"_index":2508,"title":{},"body":{"modules/TrackerModule.html":{}}}],["src/app/meta.reducers/clear.meta.reducer.t",{"_index":2662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/models/route.models.t",{"_index":2036,"title":{},"body":{"interfaces/RouteEntry.html":{}}}],["src/app/reducers/error.reducer.t",{"_index":2236,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/app/reducers/root.reducer.t",{"_index":977,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["src/app/reducers/root.reducer.ts:37",{"_index":980,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/shared/actions/history.actions.t",{"_index":5,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/history.actions.ts:11",{"_index":18,"title":{},"body":{"classes/AddNewHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:12",{"_index":23,"title":{},"body":{"classes/AddNewHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:17",{"_index":1643,"title":{},"body":{"classes/LoadHistoryItems.html":{}}}],["src/app/shared/actions/history.actions.ts:18",{"_index":1644,"title":{},"body":{"classes/LoadHistoryItems.html":{}}}],["src/app/shared/actions/history.actions.ts:23",{"_index":1645,"title":{},"body":{"classes/LoadHistoryItemsSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:24",{"_index":1646,"title":{},"body":{"classes/LoadHistoryItemsSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:29",{"_index":2019,"title":{},"body":{"classes/RemoveHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:30",{"_index":2020,"title":{},"body":{"classes/RemoveHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:35",{"_index":2021,"title":{},"body":{"classes/RemoveHistoryItemSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:36",{"_index":2022,"title":{},"body":{"classes/RemoveHistoryItemSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:41",{"_index":2530,"title":{},"body":{"classes/UpdateGame.html":{}}}],["src/app/shared/actions/history.actions.ts:42",{"_index":2531,"title":{},"body":{"classes/UpdateGame.html":{}}}],["src/app/shared/actions/history.actions.ts:47",{"_index":2532,"title":{},"body":{"classes/UpdateGameSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:48",{"_index":2533,"title":{},"body":{"classes/UpdateGameSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:53",{"_index":2534,"title":{},"body":{"classes/UpdatePlatform.html":{}}}],["src/app/shared/actions/history.actions.ts:54",{"_index":2535,"title":{},"body":{"classes/UpdatePlatform.html":{}}}],["src/app/shared/actions/history.actions.ts:59",{"_index":2536,"title":{},"body":{"classes/UpdatePlatformSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:60",{"_index":2537,"title":{},"body":{"classes/UpdatePlatformSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:65",{"_index":2526,"title":{},"body":{"classes/UpdateElapsedTime.html":{}}}],["src/app/shared/actions/history.actions.ts:66",{"_index":2527,"title":{},"body":{"classes/UpdateElapsedTime.html":{}}}],["src/app/shared/actions/history.actions.ts:71",{"_index":2528,"title":{},"body":{"classes/UpdateElapsedTimeSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:72",{"_index":2529,"title":{},"body":{"classes/UpdateElapsedTimeSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.t",{"_index":1666,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/platforms.actions.ts:11",{"_index":1672,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.ts:12",{"_index":1673,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.ts:5",{"_index":1667,"title":{},"body":{"classes/LoadOptions.html":{}}}],["src/app/shared/actions/progress.actions.t",{"_index":98,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/progress.actions.ts:10",{"_index":101,"title":{},"body":{"classes/AddNewProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:15",{"_index":1688,"title":{},"body":{"classes/LoadProgressItems.html":{}}}],["src/app/shared/actions/progress.actions.ts:16",{"_index":1689,"title":{},"body":{"classes/LoadProgressItems.html":{}}}],["src/app/shared/actions/progress.actions.ts:21",{"_index":1690,"title":{},"body":{"classes/LoadProgressItemsSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:22",{"_index":1691,"title":{},"body":{"classes/LoadProgressItemsSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:27",{"_index":2023,"title":{},"body":{"classes/RemoveProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:28",{"_index":2024,"title":{},"body":{"classes/RemoveProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:33",{"_index":2025,"title":{},"body":{"classes/RemoveProgressItemSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:34",{"_index":2026,"title":{},"body":{"classes/RemoveProgressItemSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:39",{"_index":1726,"title":{},"body":{"classes/MarkComplete.html":{}}}],["src/app/shared/actions/progress.actions.ts:40",{"_index":1727,"title":{},"body":{"classes/MarkComplete.html":{}}}],["src/app/shared/actions/progress.actions.ts:45",{"_index":1747,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:46",{"_index":1748,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:9",{"_index":100,"title":{},"body":{"classes/AddNewProgressItem.html":{}}}],["src/app/shared/actions/timer.actions.t",{"_index":798,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/timer.actions.ts:15",{"_index":2062,"title":{},"body":{"classes/SetGame.html":{}}}],["src/app/shared/actions/timer.actions.ts:16",{"_index":2063,"title":{},"body":{"classes/SetGame.html":{}}}],["src/app/shared/actions/timer.actions.ts:21",{"_index":2078,"title":{},"body":{"classes/SetPlatform.html":{}}}],["src/app/shared/actions/timer.actions.ts:22",{"_index":2079,"title":{},"body":{"classes/SetPlatform.html":{}}}],["src/app/shared/actions/timer.actions.ts:27",{"_index":2090,"title":{},"body":{"classes/SetStartTime.html":{}}}],["src/app/shared/actions/timer.actions.ts:28",{"_index":2091,"title":{},"body":{"classes/SetStartTime.html":{}}}],["src/app/shared/actions/timer.actions.ts:33",{"_index":2046,"title":{},"body":{"classes/SaveTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:34",{"_index":2047,"title":{},"body":{"classes/SaveTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:39",{"_index":2048,"title":{},"body":{"classes/SaveTimerInfoSucceeded.html":{}}}],["src/app/shared/actions/timer.actions.ts:40",{"_index":2049,"title":{},"body":{"classes/SaveTimerInfoSucceeded.html":{}}}],["src/app/shared/actions/timer.actions.ts:45",{"_index":799,"title":{},"body":{"classes/CancelTimer.html":{}}}],["src/app/shared/actions/timer.actions.ts:51",{"_index":1692,"title":{},"body":{"classes/LoadTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:52",{"_index":1693,"title":{},"body":{"classes/LoadTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:57",{"_index":2096,"title":{},"body":{"classes/SetTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:58",{"_index":2097,"title":{},"body":{"classes/SetTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:9",{"_index":2035,"title":{},"body":{"classes/ResetTimer.html":{}}}],["src/app/shared/components/spinner/spinner.component.t",{"_index":2209,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:12",{"_index":2214,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:8",{"_index":2213,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/models/history.models.t",{"_index":1535,"title":{},"body":{"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/models/progress.models.t",{"_index":826,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressItem.html":{}}}],["src/app/shared/models/shared.models.t",{"_index":1107,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["src/app/shared/models/shared.models.ts:5",{"_index":1109,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/app/shared/models/timer.models.t",{"_index":374,"title":{},"body":{"interfaces/AddTimerInfo.html":{},"interfaces/TimerInfo.html":{}}}],["src/app/shared/pipes/elaps",{"_index":1141,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["src/app/shared/pipes/pluralize.pipe.t",{"_index":1872,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["src/app/shared/pipes/pluralize.pipe.ts:5",{"_index":1877,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["src/app/shared/pipes/time.pipe.t",{"_index":2393,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/shared/pipes/time.pipe.ts:8",{"_index":2395,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/shared/reducers/history.reducer.t",{"_index":1442,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/platforms.reducer.t",{"_index":2326,"title":{},"body":{"interfaces/State-3.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/progress.reducer.t",{"_index":1984,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/root.reducer.t",{"_index":2117,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["src/app/shared/reducers/timer.reducer.t",{"_index":2331,"title":{},"body":{"interfaces/State-6.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/services/elaps",{"_index":1152,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["src/app/shared/shared.module.t",{"_index":2110,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/utils/history.utils.t",{"_index":2807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/index.t",{"_index":1175,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["ssnjrthegr8",{"_index":2697,"title":{},"body":{"index.html":{}}}],["start",{"_index":221,"title":{"index.html":{},"license.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadTimerInfo.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["startday",{"_index":2248,"title":{},"body":{"interfaces/State-11.html":{}}}],["startentrydata",{"_index":823,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["startentryid",{"_index":122,"title":{},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-4.html":{}}}],["startlastmonth",{"_index":2279,"title":{},"body":{"interfaces/State-11.html":{}}}],["startlastweek",{"_index":2266,"title":{},"body":{"interfaces/State-11.html":{}}}],["startmonth",{"_index":2270,"title":{},"body":{"interfaces/State-11.html":{}}}],["startofmonth",{"_index":2251,"title":{},"body":{"interfaces/State-11.html":{}}}],["startofmonth(endlastmonth",{"_index":2280,"title":{},"body":{"interfaces/State-11.html":{}}}],["startofmonth(now",{"_index":2271,"title":{},"body":{"interfaces/State-11.html":{}}}],["startofweek",{"_index":2252,"title":{},"body":{"interfaces/State-11.html":{}}}],["startofweek(endlastweek",{"_index":2267,"title":{},"body":{"interfaces/State-11.html":{}}}],["startofweek(now",{"_index":2257,"title":{},"body":{"interfaces/State-11.html":{}}}],["startthismonth",{"_index":2276,"title":{},"body":{"interfaces/State-11.html":{}}}],["startthisweek",{"_index":2263,"title":{},"body":{"interfaces/State-11.html":{}}}],["starttim",{"_index":124,"title":{},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressItem.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["starttimeel",{"_index":180,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["starttimeel.valu",{"_index":2437,"title":{},"body":{"components/TimerComponent.html":{}}}],["starttimeinm",{"_index":1148,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["startweek",{"_index":2256,"title":{},"body":{"interfaces/State-11.html":{}}}],["state",{"_index":195,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressEntity.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["state.addplay",{"_index":964,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["state.daterang",{"_index":1098,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-12.html":{}}}],["state.display",{"_index":2321,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["state.entriestoshow",{"_index":2308,"title":{},"body":{"interfaces/State-18.html":{}}}],["state.histori",{"_index":2144,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.info",{"_index":1946,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-14.html":{}}}],["state.markcomplet",{"_index":966,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["state.platform",{"_index":2146,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.progress",{"_index":2148,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.statu",{"_index":743,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["state.tab",{"_index":968,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["state.tim",{"_index":2150,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.url",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.us",{"_index":741,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["statekey",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["static",{"_index":1812,"title":{},"body":{"components/NavComponent.html":{}}}],["statu",{"_index":724,"title":{},"body":{"interfaces/AuthState.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-15.html":{}}}],["status.attemptinglogin",{"_index":749,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["status.reduc",{"_index":732,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["status.validationmessag",{"_index":751,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["statusact",{"_index":2369,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setattemptinglogin(fals",{"_index":2353,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setattemptinglogin(tru",{"_index":2362,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setvalidationmessag",{"_index":2367,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setvalidationmessage(validationmessag",{"_index":2354,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statuseffect",{"_index":664,"title":{"injectables/StatusEffects.html":{}},"body":{"modules/AuthModule.html":{},"injectables/StatusEffects.html":{}}}],["stop",{"_index":2422,"title":{},"body":{"components/TimerComponent.html":{}}}],["stoptim",{"_index":2403,"title":{},"body":{"components/TimerComponent.html":{}}}],["storagebucket",{"_index":1185,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["store",{"_index":157,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["storedevtoolsmodul",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instru",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodul",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["storemodule.forfeature('auth",{"_index":672,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature('complet",{"_index":945,"title":{},"body":{"modules/CompletionModule.html":{}}}],["storemodule.forfeature('dashboard",{"_index":1085,"title":{},"body":{"modules/DashboardModule.html":{}}}],["storemodule.forfeature('profil",{"_index":1930,"title":{},"body":{"modules/ProfileModule.html":{}}}],["storemodule.forfeature('shar",{"_index":2116,"title":{},"body":{"modules/SharedModule.html":{}}}],["storemodule.forfeature('track",{"_index":2524,"title":{},"body":{"modules/TrackerModule.html":{}}}],["storemodule.forroot(reduc",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodul",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":44,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{}}}],["structur",{"_index":2670,"title":{},"body":{"index.html":{}}}],["style",{"_index":128,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["styleurl",{"_index":141,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["subday",{"_index":2253,"title":{},"body":{"interfaces/State-11.html":{}}}],["subdays(startthismonth",{"_index":2278,"title":{},"body":{"interfaces/State-11.html":{}}}],["subdays(startthisweek",{"_index":2265,"title":{},"body":{"interfaces/State-11.html":{}}}],["subject",{"_index":2731,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2726,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":2737,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":46,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"classes/CancelTimer.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["support",{"_index":1562,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["svg",{"_index":189,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteEntry.html":{},"components/TimerComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["swimlane/ngx",{"_index":1076,"title":{},"body":{"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1353,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{}}}],["switchmap",{"_index":369,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(act",{"_index":1403,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(addplay",{"_index":352,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["switchmap(addtimerinfo",{"_index":2459,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["switchmap(userid",{"_index":2452,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["t",{"_index":1108,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["tab",{"_index":947,"title":{},"body":{"interfaces/CompletionState.html":{},"classes/SetVisibleTab.html":{},"interfaces/State-10.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{}}}],["tab.reduc",{"_index":956,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["tab.tab",{"_index":976,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-9.html":{}}}],["tabl",{"_index":1628,"title":{},"body":{"components/LibraryComponent.html":{}}}],["tabs'},{'nam",{"_index":330,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tabs.component.html",{"_index":2374,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2373,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabscompon",{"_index":329,"title":{"components/TabsComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["tabtyp",{"_index":884,"title":{},"body":{"components/CompletionComponent.html":{},"classes/SetVisibleTab.html":{},"interfaces/State-10.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["taglin",{"_index":1557,"title":{},"body":{"components/HomeComponent.html":{}}}],["take",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{}}}],["takefrom",{"_index":2489,"title":{},"body":{"components/TrackerComponent.html":{}}}],["takefrom(historygroup",{"_index":2497,"title":{},"body":{"components/TrackerComponent.html":{}}}],["technolog",{"_index":2673,"title":{},"body":{"index.html":{}}}],["templat",{"_index":127,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["templateurl",{"_index":143,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["test",{"_index":2688,"title":{},"body":{"index.html":{}}}],["test:mocha",{"_index":2692,"title":{},"body":{"index.html":{}}}],["test:nyan",{"_index":2695,"title":{},"body":{"index.html":{}}}],["text",{"_index":269,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LoadMoreComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["text.dynam",{"_index":1825,"title":{},"body":{"components/NavComponent.html":{}}}],["text.stat",{"_index":1820,"title":{},"body":{"components/NavComponent.html":{}}}],["this.act",{"_index":346,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["this.addplayinginfo",{"_index":898,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.addplayinginfo$.pipe(map(info",{"_index":900,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.afauth.auth.signinwithpopup(provid",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authst",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.collection('histori",{"_index":1205,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.afs.collection('platform",{"_index":1243,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.afs.collection('profil",{"_index":1258,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.afs.collection('progress",{"_index":1272,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.afs.collection('tim",{"_index":1292,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.authform",{"_index":601,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.valid",{"_index":608,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.value.email",{"_index":610,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.value.password",{"_index":611,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authservice.getauthst",{"_index":2558,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.resetpassword(action.email",{"_index":2578,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithemail(action.email",{"_index":2549,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithfacebook",{"_index":2554,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithgoogl",{"_index":2567,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithtwitt",{"_index":2587,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signout",{"_index":2572,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signupwithemail(action.email",{"_index":2583,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.bargraphbaseconfig",{"_index":1020,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.builder.group",{"_index":602,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.completeddisplaydata",{"_index":917,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.addplayinginfo",{"_index":899,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.markcompleteent",{"_index":914,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.visibletab",{"_index":920,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.currenttim",{"_index":1164,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["this.dashboardstore.select(dashboardselectors.datelist",{"_index":1042,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dashboardstore.select(dashboardselectors.rangetyp",{"_index":1061,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.daterangetyp",{"_index":1060,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.displaydata.item.id",{"_index":843,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["this.displaydata.markcomplete.endtim",{"_index":1861,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.displaydata.markcomplete.showextra",{"_index":1855,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.displaydata.startentrydata",{"_index":1860,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.editnam",{"_index":1899,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.elapsedtim",{"_index":2493,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.elapsedtimeservice.getelapsedtime('00:00:00",{"_index":2494,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.elapsedtimeservice.getelapsedtime('track",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.emailauth.emit",{"_index":609,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.emitfinishedit",{"_index":1139,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["this.facebookauth.emit(nul",{"_index":613,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.finishedit.emit(nul",{"_index":1135,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["this.gam",{"_index":206,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["this.getauthenticatedaction(authdata",{"_index":2562,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.getcurrenttim",{"_index":1168,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["this.gethistoryentity(histori",{"_index":1211,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getnewhistoryitem(info",{"_index":1214,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getnewprogressitem(addplay",{"_index":1278,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getus",{"_index":2615,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getuseritemcollection(addplaying.userid).doc(newitem.id).set(newitem",{"_index":1279,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(info.userid).doc(newitem.id).set(newitem",{"_index":1215,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getuseritemcollection(userid).doc(itemid).delet",{"_index":1218,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(userid).doc(itemid).upd",{"_index":1221,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(userid).valuechanges().pipe(first",{"_index":1208,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.googleauth.emit(nul",{"_index":612,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.graphconfig",{"_index":1016,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.hidenavcont",{"_index":1798,"title":{},"body":{"components/NavComponent.html":{}}}],["this.historycollect",{"_index":1204,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.historycollection.doc(userid).collection('item",{"_index":1231,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.historygroup",{"_index":893,"title":{},"body":{"components/CompletionComponent.html":{},"components/TrackerComponent.html":{}}}],["this.historygroupings$.pipe(map(group",{"_index":895,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.historyservice.deletehistoryitem(action.userid",{"_index":1411,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.gethistorylist(action.userid",{"_index":1404,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.savetimerinfo(addtimerinfo",{"_index":2460,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["this.historyservice.updateelapsedtime(action.userid",{"_index":1423,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.updategame(action.userid",{"_index":1431,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.updateplatform(action.userid",{"_index":1437,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.info",{"_index":216,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["this.info.gam",{"_index":2428,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.info.platform",{"_index":2429,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.info.starttim",{"_index":2430,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.item.gam",{"_index":1507,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["this.item.id",{"_index":1503,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["this.item.platform",{"_index":1508,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["this.libraryentri",{"_index":1620,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.loggingin",{"_index":1717,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.messag",{"_index":1318,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.numentriestoshow",{"_index":1625,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.passwordform",{"_index":1314,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.passwordform.valid",{"_index":1315,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.passwordform.value.email",{"_index":1316,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.platformscollect",{"_index":1242,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.platformscollection.valuechanges().pipe(first",{"_index":1246,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.platformsopt",{"_index":2502,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.platformsservice.getplatformsopt",{"_index":1831,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["this.playingdisplaydata",{"_index":915,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.potentiald",{"_index":906,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.potentialplatform",{"_index":902,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.profilecollect",{"_index":1257,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profilecollection.doc(userid).set",{"_index":1264,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profilecollection.doc(userid).valuechanges().pipe(first",{"_index":1261,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profileservice.getprofile(action.userid",{"_index":1910,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["this.profileservice.setdisplayname(action.userid",{"_index":1916,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["this.profilestore.select(profilecomponentselectors.info",{"_index":2616,"title":{},"body":{"injectables/UserService.html":{}}}],["this.progresscollect",{"_index":1271,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.progresscollection.doc(userid).collection('item",{"_index":1286,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.progressservice.getprogresslist(action.userid",{"_index":1953,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.markcompleted(action.userid",{"_index":1964,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.remove(action.userid",{"_index":1971,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.saveaddplaying(addplay",{"_index":353,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":2560,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate(['/login",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['login",{"_index":2573,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate([returnurl",{"_index":2561,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.url",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setnumentriestoshow",{"_index":1622,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbyd",{"_index":1044,"title":{},"body":{"components/DashboardComponent.html":{},"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbygam",{"_index":894,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbyplatform",{"_index":1046,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historytrackedgam",{"_index":2501,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.platformsopt",{"_index":2503,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.progresscomplet",{"_index":912,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.sharedstore.select(sharedselectors.progressplay",{"_index":910,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.sharedstore.select(sharedselectors.timerinfo",{"_index":1167,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.userdataload",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showloadmorebutton",{"_index":2498,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.store.dispatch(new",{"_index":207,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/UserService.html":{}}}],["this.store.select(authcomponentselectors.isuserloggedin",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.store.select(authcomponentselectors.loggingin",{"_index":1718,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.store.select(authcomponentselectors.us",{"_index":2614,"title":{},"body":{"injectables/UserService.html":{}}}],["this.store.select(authcomponentselectors.validationmessag",{"_index":1719,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.timercollect",{"_index":1291,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timercollection.doc(userid).set",{"_index":1294,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timercollection.doc(userid).valuechanges().pipe(first",{"_index":1301,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timerinfo",{"_index":2491,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.timerinfo$.pipe(map(info",{"_index":2492,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.timerservice.getnowtim",{"_index":1509,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["this.timerservice.gettimerinfo(userid",{"_index":2453,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["this.timerservice.resettimer(this.userid",{"_index":2432,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setgame(this.userid",{"_index":2434,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setplatform(this.userid",{"_index":2436,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setstarttime(this.userid",{"_index":2439,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimer(this.userid",{"_index":1511,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["this.timevsdategraphdata",{"_index":1048,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsdategraphdata$.pipe(map(x",{"_index":1055,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsgamegraphdata",{"_index":1052,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsplatformgraphdata",{"_index":1050,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.titleservice.settitle(titl",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.totaltim",{"_index":1054,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.trackedgam",{"_index":2500,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.trackernavcapt",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trackerstore.select(trackerselectors.entriestoshow",{"_index":2495,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.twitterauth.emit(nul",{"_index":614,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.userdataload",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userid",{"_index":204,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["this.userinfo",{"_index":1796,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userinfo.email",{"_index":1898,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getuser().subscribe(us",{"_index":203,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["this.userservice.getuserinfo().subscribe(userinfo",{"_index":1795,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userservice.logout",{"_index":1797,"title":{},"body":{"components/NavComponent.html":{}}}],["this.visibletab",{"_index":919,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this_month",{"_index":1360,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{},"miscellaneous/typealiases.html":{}}}],["this_week",{"_index":1345,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{},"miscellaneous/typealiases.html":{}}}],["time",{"_index":68,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"index.html":{}}}],["time.pip",{"_index":2113,"title":{},"body":{"modules/SharedModule.html":{}}}],["time.pipe.t",{"_index":1142,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["time.pipe.ts:8",{"_index":1147,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["time.servic",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{}}}],["time.service.t",{"_index":1153,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:17",{"_index":1157,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:20",{"_index":1158,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:27",{"_index":1160,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["timedategraphcompon",{"_index":331,"title":{"components/TimeDateGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timegamegraphcompon",{"_index":333,"title":{"components/TimeGameGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timeinsecond",{"_index":2396,"title":{},"body":{"pipes/TimePipe.html":{}}}],["timepip",{"_index":943,"title":{"pipes/TimePipe.html":{}},"body":{"modules/CompletionModule.html":{},"modules/SharedModule.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["timeplatformgraphcompon",{"_index":334,"title":{"components/TimePlatformGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timeplay",{"_index":824,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{}}}],["timer",{"_index":232,"title":{},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HistoryComponent.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["timer'},{'nam",{"_index":336,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["timer.component.html",{"_index":2400,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":2399,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.reduc",{"_index":2129,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["timeract",{"_index":544,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"injectables/TimerEffects.html":{}}}],["timeractions.loadtimerinfo",{"_index":2450,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.loadtimerinfo(action.user.uid",{"_index":534,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["timeractions.resettim",{"_index":2447,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.savetimerinfo",{"_index":2458,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.savetimerinfosucceed",{"_index":1418,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["timeractions.savetimerinfosucceeded(item",{"_index":2461,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.settimerinfo(data",{"_index":2454,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.settimerinfo(timerinfo",{"_index":1510,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["timercollect",{"_index":1290,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timercompon",{"_index":335,"title":{"components/TimerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["timerdoc",{"_index":1300,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timerdoc.pipe(map(tim",{"_index":1302,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timereffect",{"_index":2442,"title":{"injectables/TimerEffects.html":{}},"body":{"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["timerinfo",{"_index":375,"title":{"interfaces/TimerInfo.html":{}},"body":{"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["timerservic",{"_index":1289,"title":{"injectables/TimerService.html":{}},"body":{"interfaces/FirestoreTimerItem.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["timevsdategraphdata",{"_index":1009,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timevsgamegraphdata",{"_index":1010,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timevsplatformgraphdata",{"_index":1011,"title":{},"body":{"components/DashboardComponent.html":{}}}],["titl",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/TabsComponent.html":{}}}],["titleservic",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["togglenav",{"_index":1757,"title":{},"body":{"components/NavComponent.html":{}}}],["toggleshowextra",{"_index":1839,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["tooltip",{"_index":1325,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip'},{'nam",{"_index":300,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tooltip.compon",{"_index":1080,"title":{},"body":{"modules/DashboardModule.html":{}}}],["tooltip.component.html",{"_index":1327,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":1326,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.t",{"_index":1324,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.ts:13",{"_index":1328,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.ts:16",{"_index":1329,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip/graph",{"_index":1079,"title":{},"body":{"modules/DashboardModule.html":{},"components/GraphTooltipComponent.html":{}}}],["top",{"_index":626,"title":{},"body":{"components/AuthFormComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["tort",{"_index":2756,"title":{},"body":{"license.html":{}}}],["total",{"_index":1021,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["totaltim",{"_index":1012,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/LibraryEntry.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["track",{"_index":1392,"title":{},"body":{"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["trackedgam",{"_index":1383,"title":{},"body":{"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tracker",{"_index":305,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-19.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"index.html":{}}}],["tracker.compon",{"_index":2520,"title":{},"body":{"modules/TrackerModule.html":{}}}],["tracker.component.html",{"_index":2476,"title":{},"body":{"components/TrackerComponent.html":{}}}],["tracker.component.scss",{"_index":2475,"title":{},"body":{"components/TrackerComponent.html":{}}}],["trackercapt",{"_index":1758,"title":{},"body":{"components/NavComponent.html":{}}}],["trackercompon",{"_index":337,"title":{"components/TrackerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["trackermodul",{"_index":452,"title":{"modules/TrackerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["trackernavcapt",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["trackerrout",{"_index":1755,"title":{},"body":{"components/NavComponent.html":{}}}],["trackerroute.capt",{"_index":1800,"title":{},"body":{"components/NavComponent.html":{}}}],["trackerselector",{"_index":2325,"title":{},"body":{"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["trackerst",{"_index":2312,"title":{"interfaces/TrackerState.html":{}},"body":{"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["trackerstor",{"_index":2480,"title":{},"body":{"components/TrackerComponent.html":{}}}],["trackingcategori",{"_index":563,"title":{},"body":{"components/AuthFormComponent.html":{},"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["trackmyplaytim",{"_index":2665,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1144,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"pipes/PluralizePipe.html":{},"components/SpinnerComponent.html":{},"pipes/TimePipe.html":{}}}],["transform(starttimeinm",{"_index":1145,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["transform(timeinsecond",{"_index":2394,"title":{},"body":{"pipes/TimePipe.html":{}}}],["transform(valu",{"_index":1874,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["transpar",{"_index":2224,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["travisci",{"_index":2679,"title":{},"body":{"index.html":{}}}],["tree",{"_index":130,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["true",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryEntity.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"injectables/TimerService.html":{}}}],["twitter",{"_index":594,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["twitter_login",{"_index":765,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["twitterauth",{"_index":568,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["twitterlogin",{"_index":688,"title":{"classes/TwitterLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["twittersignup",{"_index":2007,"title":{},"body":{"components/RegisterComponent.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"interfaces/UUIDConfig.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":2765,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":2300,"title":{},"body":{"interfaces/State-17.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["ul",{"_index":1807,"title":{},"body":{"components/NavComponent.html":{}}}],["undefin",{"_index":786,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["underlin",{"_index":1903,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updat",{"_index":55,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_elapsed_tim",{"_index":66,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_elapsed_time_succeed",{"_index":70,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_gam",{"_index":54,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_game_succeed",{"_index":59,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_platform",{"_index":61,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_platform_succeed",{"_index":64,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["updatedaterang",{"_index":1343,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["updatedaterange(daterangeel",{"_index":1348,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["updateelapsedtim",{"_index":69,"title":{"classes/UpdateElapsedTime.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updateelapsedtime(elapsedtimeel",{"_index":1490,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["updateelapsedtime(userid",{"_index":1224,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updateelapsedtimesucceed",{"_index":71,"title":{"classes/UpdateElapsedTimeSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updategam",{"_index":57,"title":{"classes/UpdateGame.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updategame(userid",{"_index":1220,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updategamesucceed",{"_index":60,"title":{"classes/UpdateGameSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemgamepayload",{"_index":30,"title":{"interfaces/UpdateHistoryItemGamePayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemplatformpayload",{"_index":31,"title":{"interfaces/UpdateHistoryItemPlatformPayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemtimespayload",{"_index":32,"title":{"interfaces/UpdateHistoryItemTimesPayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatepayload",{"_index":1448,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/State-2.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"miscellaneous/typealiases.html":{}}}],["updateplatform",{"_index":63,"title":{"classes/UpdatePlatform.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updateplatform(platformel",{"_index":1494,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["updateplatform(userid",{"_index":1223,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updateplatformsucceed",{"_index":65,"title":{"classes/UpdatePlatformSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["uppercas",{"_index":1576,"title":{},"body":{"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["url",{"_index":997,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["us",{"_index":2722,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":725,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"interfaces/State-15.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["user.reduc",{"_index":734,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-15.html":{}}}],["user.uid",{"_index":205,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/AuthState.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"interfaces/State-15.html":{},"components/TimerComponent.html":{}}}],["useract",{"_index":546,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useractions.authent",{"_index":530,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/UserEffects.html":{}}}],["useractions.authenticated(us",{"_index":2598,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.emaillogin",{"_index":2548,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.emaillogin(event.email",{"_index":1723,"title":{},"body":{"components/LoginComponent.html":{}}}],["useractions.facebook_login",{"_index":2359,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.facebooklogin",{"_index":1721,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.getus",{"_index":1716,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.google_login",{"_index":2358,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.googlelogin",{"_index":1720,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.logout",{"_index":2571,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useractions.not_authent",{"_index":2364,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.notauthent",{"_index":2563,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.resetpassword",{"_index":2577,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.resetpassword(email",{"_index":1317,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["useractions.resetpassword(this.userinfo.email",{"_index":1897,"title":{},"body":{"components/ProfileComponent.html":{}}}],["useractions.signup",{"_index":2357,"title":{},"body":{"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{}}}],["useractions.signup(event.email",{"_index":2016,"title":{},"body":{"components/RegisterComponent.html":{}}}],["useractions.twitter_login",{"_index":2360,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.twitterlogin",{"_index":1722,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["userdataload",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["usereffect",{"_index":666,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AuthModule.html":{},"injectables/UserEffects.html":{}}}],["userid",{"_index":43,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["userinfo",{"_index":1756,"title":{"interfaces/UserInfo.html":{}},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["userinfo.displaynam",{"_index":1802,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["userinfo.email",{"_index":1900,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userservic",{"_index":158,"title":{"injectables/UserService.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["util",{"_index":1619,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/add",{"_index":199,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["utils/colorscheme.util",{"_index":1036,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils/date.util",{"_index":1163,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/display",{"_index":891,"title":{},"body":{"components/CompletionComponent.html":{}}}],["utils/display.util",{"_index":2490,"title":{},"body":{"components/TrackerComponent.html":{}}}],["utils/graph",{"_index":1040,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils/histori",{"_index":2132,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/history.util",{"_index":2135,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/librari",{"_index":1616,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/playing.util",{"_index":1853,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["utils/res",{"_index":1618,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/validation.util",{"_index":2371,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["uuid",{"_index":1178,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{},"dependencies.html":{}}}],["uuidconfig",{"_index":1180,"title":{"interfaces/UUIDConfig.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/UUIDConfig.html":{}}}],["valid",{"_index":597,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["validationmessag",{"_index":753,"title":{},"body":{"interfaces/AuthState.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"injectables/StatusEffects.html":{}}}],["validators.email",{"_index":605,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["validators.minlength(6",{"_index":607,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["validators.requir",{"_index":604,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["valu",{"_index":25,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{}}}],["var",{"_index":275,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["variabl",{"_index":615,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["variables.scss",{"_index":224,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["via",{"_index":2675,"title":{},"body":{"index.html":{}}}],["video",{"_index":2667,"title":{},"body":{"index.html":{}}}],["view",{"_index":785,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["visibl",{"_index":1529,"title":{},"body":{"components/HistoryEntryComponent.html":{},"classes/SetVisibleTab.html":{},"components/TimerComponent.html":{}}}],["visibletab",{"_index":869,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{}}}],["vivid",{"_index":2790,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["void",{"_index":170,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["vs",{"_index":1066,"title":{},"body":{"components/DashboardComponent.html":{}}}],["warranti",{"_index":2739,"title":{},"body":{"license.html":{}}}],["way",{"_index":2694,"title":{},"body":{"index.html":{}}}],["web",{"_index":1229,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["week",{"_index":1364,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["weight",{"_index":854,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TabsComponent.html":{}}}],["whether",{"_index":2754,"title":{},"body":{"license.html":{}}}],["width",{"_index":236,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{}}}],["window:res",{"_index":1608,"title":{},"body":{"components/LibraryComponent.html":{}}}],["without",{"_index":2718,"title":{},"body":{"license.html":{}}}],["x",{"_index":792,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["x.endentryid",{"_index":2170,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["x.reduce((a",{"_index":1056,"title":{},"body":{"components/DashboardComponent.html":{}}}],["x.startentryid",{"_index":2168,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["xaxislabel",{"_index":781,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["yaxislabel",{"_index":782,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["you'v",{"_index":1574,"title":{},"body":{"components/HomeComponent.html":{}}}],["you\\'v",{"_index":1587,"title":{},"body":{"components/HomeComponent.html":{}}}],["yourself",{"_index":1571,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":1821,"title":{},"body":{"components/NavComponent.html":{},"components/TimerComponent.html":{}}}],["zone.j",{"_index":2644,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["zrimsek",{"_index":2705,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddNewHistoryItem.html":{"url":"classes/AddNewHistoryItem.html","title":"class - AddNewHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: HistoryEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    HistoryEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     HistoryEntity\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_HISTORY_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewItem.html":{"url":"classes/AddNewItem.html","title":"class - AddNewItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewProgressItem.html":{"url":"classes/AddNewProgressItem.html","title":"class - AddNewProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: ProgressEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    ProgressEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     ProgressEntity\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_PROGRESS_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddPlaying.html":{"url":"interfaces/AddPlaying.html","title":"interface - AddPlaying","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddPlaying\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/add-playing.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        startEntryId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddPlayingInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddPlaying {\n  userId: string;\n  startEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddPlayingComponent.html":{"url":"components/AddPlayingComponent.html","title":"component - AddPlayingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddPlayingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/add-playing/add-playing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-add-playing\n            \n\n            \n                styleUrls\n                ./add-playing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-playing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetInfo\n                            \n                            \n                                savePlaying\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dates\n                            \n                            \n                                game\n                            \n                            \n                                gameGroupings\n                            \n                            \n                                games\n                            \n                            \n                                info\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dates\n                    \n                    \n                            \n                            Type :    number[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gameGroupings\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        games\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        info\n                    \n                    \n                            \n                            Type :    AddPlayingInfo\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platforms\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            savePlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nsavePlaying()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(startTimeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    add: faPlusSquare\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as appActions from '../../../../actions/app.actions';\nimport * as actions from '../../actions/add-playing.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../../../shared/models';\nimport { AddPlaying, AddPlayingInfo } from '../../models';\n\nimport { findMatchingHistoryEntry } from '../../utils/add-playing.utils';\n\n@Component({\n  selector: 'app-completion-add-playing',\n  templateUrl: './add-playing.component.html',\n  styleUrls: ['./add-playing.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddPlayingComponent implements OnInit {\n\n  @Input() gameGroupings: HistoryGrouping[] = [];\n  @Input() games: string[];\n  @Input() game: string | null = null;\n  @Input() info: AddPlayingInfo;\n  @Input() platforms: string[] = [];\n  @Input() dates: number[] = [];\n  userId = '';\n  icons = {\n    add: faPlusSquare\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  setGame() {\n    if (this.game) {\n      const game = this.game;\n      this.store.dispatch(new actions.SetGame(game));\n    }\n  }\n\n  setPlatform(platformEl: HTMLSelectElement) {\n    const platform = platformEl.value;\n    this.store.dispatch(new actions.SetPlatform(platform));\n  }\n\n  setStartTime(startTimeEl: HTMLSelectElement) {\n    const startTime = Number.parseInt(startTimeEl.value);\n    this.store.dispatch(new actions.SetStartTime(startTime));\n  }\n\n  resetInfo() {\n    this.store.dispatch(new actions.Reset());\n  }\n\n  savePlaying() {\n    const historyItem = findMatchingHistoryEntry(this.gameGroupings, this.info);\n    if (historyItem) {\n      const addPlaying: AddPlaying = {\n        userId: this.userId,\n        startEntryId: historyItem.id\n      };\n      this.store.dispatch(new actions.Save(addPlaying));\n    } else {\n      this.store.dispatch(new appActions.Error(actions.SAVE, 'No matching history item found.'));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    \n      Start Time\n      {{ option | date:'M/d/y hh:mm a' }}\n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./add-playing.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.add-playing {\n  display: flex;\n  align-items: center;\n  background: $background-light;\n  height: $timer-height;\n  padding: 0px 10px;\n  width: 100%;\n\n  .display-element {\n    font-size: $base-font-size;\n    font-family: $base-font-family;\n    width: 100%;\n    padding: 5px;\n    background: $background-light;\n  }\n\n  .game {\n    width: 45%;\n\n    input {\n      @extend .display-element;\n      outline: none;\n      border: none;\n    }\n  }\n\n  .platform {\n    @extend .display-element-select;\n    width: 20%;\n  }\n\n  .startTime {\n    @extend .display-element-select;\n    width: 30%;\n  }\n\n  .display-element-select {\n    select {\n      @extend .display-element;\n      outline: none;\n      border: none;\n      appearance: none;\n\n      &:hover {\n        cursor: pointer;\n      }\n\n      &:disabled {\n        cursor: initial;\n      }\n    }\n  }\n\n  .save {\n    width: 5%;\n\n    button {\n      color: $good-action-color;\n\n      &:disabled {\n        cursor: initial;\n        color: $neutral-action-color;\n      }\n    }\n  }\n}\n\n@media only screen and (max-width: $small-breakpoint) {\n  .add-playing {\n    .display-element {\n      font-size: $small-font-size;\n    }\n\n    .game {\n      width: 30%;\n      font-size: $small-font-size;\n\n      input {\n        text-overflow: ellipsis;\n      }\n    }\n\n    .platform, .startTime {\n      width: 30%;\n\n      select {\n        text-overflow: ellipsis;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}                  Start Time      {{ option | date:\\'M/d/y hh:mm a\\' }}                        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddPlayingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddPlayingEffects.html":{"url":"injectables/AddPlayingEffects.html","title":"injectable - AddPlayingEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddPlayingEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/effects/add-playing.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                save$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, progressService: ProgressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/effects/add-playing.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                    ProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        save$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(addPlayingActions.SAVE)\n      .pipe(\n        map(action => action as addPlayingActions.Save),\n        map(action => action.addPlaying),\n        switchMap(addPlaying => this.progressService.saveAddPlaying(addPlaying)\n          .pipe(\n            mergeMap(newItem => [\n              new addPlayingActions.SaveSucceeded(newItem),\n              new addPlayingActions.Reset()\n            ]),\n            catchError(err => of(new appActions.Error(addPlayingActions.SAVE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/add-playing.effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProgressService } from '../services/progress.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as addPlayingActions from '../actions/add-playing.actions';\n\n@Injectable()\nexport class AddPlayingEffects {\n\n  constructor(private actions$: Actions, private progressService: ProgressService) { }\n\n  @Effect() save$ =\n    this.actions$\n      .ofType(addPlayingActions.SAVE)\n      .pipe(\n        map(action => action as addPlayingActions.Save),\n        map(action => action.addPlaying),\n        switchMap(addPlaying => this.progressService.saveAddPlaying(addPlaying)\n          .pipe(\n            mergeMap(newItem => [\n              new addPlayingActions.SaveSucceeded(newItem),\n              new addPlayingActions.Reset()\n            ]),\n            catchError(err => of(new appActions.Error(addPlayingActions.SAVE, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddPlayingInfo.html":{"url":"interfaces/AddPlayingInfo.html","title":"interface - AddPlayingInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddPlayingInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/add-playing.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddPlayingInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddPlaying {\n  userId: string;\n  startEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddTimerInfo.html":{"url":"interfaces/AddTimerInfo.html","title":"interface - AddTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/timer.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimerInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddTimerInfo {\n  userId: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                trackerNavCaption$\n                            \n                            \n                                userDataLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                shouldShowHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, router: Router, titleService: Title, elapsedTimeService: ElapsedTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedTimeService\n                                                  \n                                                        \n                                                                    ElapsedTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldShowHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshouldShowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackerNavCaption$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackerNavCaption$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDataLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDataLoaded$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport { insertAnalyticsElements } from 'insert-analytics-elements/googleTagManager';\nimport { Observable } from 'rxjs';\n\nimport { ElapsedTimeService } from './shared/services/elapsed-time.service';\n\nimport sharedSelectors, { State as SharedState } from './shared/reducers/root.reducer';\n\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  userDataLoaded$: Observable;\n  trackerNavCaption$: Observable;\n  constructor(private sharedStore: Store,\n    private router: Router,\n    private titleService: Title,\n    private elapsedTimeService: ElapsedTimeService) { }\n\n  ngOnInit() {\n    insertAnalyticsElements(environment.googleTagManager);\n    this.userDataLoaded$ = this.sharedStore.select(sharedSelectors.userDataLoaded);\n    this.elapsedTimeService.getElapsedTime('Track My Playtime').subscribe(title => this.titleService.setTitle(title));\n    this.trackerNavCaption$ = this.elapsedTimeService.getElapsedTime('Tracker');\n  }\n\n  shouldShowHeader(): boolean {\n    const currentRoute = this.router.url;\n    return currentRoute.indexOf('/app') === -1;\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n\n    \n      \n        \n      \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import '../variables.scss';\n\n.app {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n\n  background: $background-dark;\n  background: linear-gradient(180deg, $background-dark 25%, $background-dark-accent 75%);\n\n  .main {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    .loading {\n      justify-content: center;\n      align-items: center;\n      background: $background-dark-accent;\n\n      .logo {\n        padding: 10px;\n\n        img {\n          height: auto;\n          max-width: 100%;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompletionModule\n\nCompletionModule\n\nAppModule -->\n\nCompletionModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTrackerModule\n\nTrackerModule\n\nAppModule -->\n\nTrackerModule->AppModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nAppModule -->\n\nElapsedTimeService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                NavComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ElapsedTimeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    !environment\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CompletionModule\n                            \n                            \n                                    DashboardModule\n                            \n                            \n                                    HomeModule\n                            \n                            \n                                    LibraryModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TrackerModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthModule } from './features/auth/auth.module';\nimport { CompletionModule } from './features/completion/completion.module';\nimport { DashboardModule } from './features/dashboard/dashboard.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LibraryModule } from './features/library/library.module';\nimport { ProfileModule } from './features/profile/profile.module';\nimport { TrackerModule } from './features/tracker/tracker.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NavComponent } from './components/nav/nav.component';\n\nimport { ElapsedTimeService } from './shared/services/elapsed-time.service';\n\nimport { AuthGuard } from './features/auth/guards/auth.guard';\n\nimport { metaReducers } from './meta.reducers';\nimport { CustomRouterStateSerializer, reducers } from './reducers/root.reducer';\n\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    AppRoutingModule,\n    AuthModule,\n    SharedModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router'\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([]),\n    HomeModule,\n    TrackerModule,\n    DashboardModule,\n    LibraryModule,\n    CompletionModule,\n    ProfileModule\n  ],\n  providers: [\n    { provide: RouterStateSerializer, useClass: CustomRouterStateSerializer },\n    AuthGuard,\n    ElapsedTimeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './features/auth/components/login/login.component';\nimport { RegisterComponent } from './features/auth/components/register/register.component';\nimport { CompletionComponent } from './features/completion/completion.component';\nimport { DashboardComponent } from './features/dashboard/dashboard.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { LibraryComponent } from './features/library/library.component';\nimport { ProfileComponent } from './features/profile/profile.component';\nimport { TrackerComponent } from './features/tracker/tracker.component';\n\nimport { AuthGuard } from './features/auth/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'app',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'tracker',\n        component: TrackerComponent\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent\n      },\n      {\n        path: 'library',\n        component: LibraryComponent\n      },\n      {\n        path: 'completion',\n        component: CompletionComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: '**',\n        redirectTo: '/app/tracker',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/auth.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticated$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/auth.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticated$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.AUTHENTICATED)\n      .pipe(\n        map(action => action as userActions.Authenticated),\n        mergeMap(action => [\n          new platformsActions.LoadOptions(),\n          new historyActions.LoadHistoryItems(action.user.uid),\n          new timerActions.LoadTimerInfo(action.user.uid),\n          new progressActions.LoadProgressItems(action.user.uid),\n          new profileActions.LoadProfile(action.user.uid)\n        ])\n      )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/auth.effects.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport * as historyActions from '../../../shared/actions/history.actions';\nimport * as platformsActions from '../../../shared/actions/platforms.actions';\nimport * as progressActions from '../../../shared/actions/progress.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\nimport * as userActions from '../../auth/actions/user.actions';\nimport * as profileActions from '../../profile/actions/profile.actions';\n\n@Injectable()\nexport class AuthEffects {\n\n  constructor(private actions$: Actions) { }\n\n  @Effect() authenticated$ =\n    this.actions$\n      .ofType(userActions.AUTHENTICATED)\n      .pipe(\n        map(action => action as userActions.Authenticated),\n        mergeMap(action => [\n          new platformsActions.LoadOptions(),\n          new historyActions.LoadHistoryItems(action.user.uid),\n          new timerActions.LoadTimerInfo(action.user.uid),\n          new progressActions.LoadProgressItems(action.user.uid),\n          new profileActions.LoadProfile(action.user.uid)\n        ])\n      );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthFormComponent.html":{"url":"components/AuthFormComponent.html","title":"component - AuthFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/auth-form/auth-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-auth-form\n            \n\n            \n                styleUrls\n                ./auth-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                icons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitEmailAuth\n                            \n                            \n                                emitFacebookAuth\n                            \n                            \n                                emitGoogleAuth\n                            \n                            \n                                emitTwitterAuth\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn\n                            \n                            \n                                message\n                            \n                            \n                                trackingCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailAuth\n                            \n                            \n                                facebookAuth\n                            \n                            \n                                googleAuth\n                            \n                            \n                                twitterAuth\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loggingIn\n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackingCategory\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emailAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        facebookAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        googleAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        twitterAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitEmailAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitEmailAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitFacebookAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitFacebookAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitGoogleAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitGoogleAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitTwitterAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitTwitterAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    google: faGoogle,\n    facebook: faFacebook,\n    twitter: faTwitter\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { faFacebook, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-auth-form',\n  templateUrl: './auth-form.component.html',\n  styleUrls: ['./auth-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthFormComponent implements OnInit {\n\n  @Input() message = '';\n  @Input() loggingIn = false;\n  @Input() trackingCategory: string;\n  @Output() emailAuth: EventEmitter = new EventEmitter();\n  @Output() googleAuth: EventEmitter = new EventEmitter();\n  @Output() facebookAuth: EventEmitter = new EventEmitter();\n  @Output() twitterAuth: EventEmitter = new EventEmitter();\n  authForm: FormGroup;\n  icons = {\n    google: faGoogle,\n    facebook: faFacebook,\n    twitter: faTwitter\n  };\n  constructor(private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.authForm = this.builder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]]\n    });\n  }\n\n  emitEmailAuth() {\n    if (this.authForm.valid) {\n      this.emailAuth.emit({\n        email: this.authForm.value.email,\n        password: this.authForm.value.password\n      });\n    }\n  }\n\n  emitGoogleAuth() {\n    this.googleAuth.emit(null);\n  }\n\n  emitFacebookAuth() {\n    this.facebookAuth.emit(null);\n  }\n\n  emitTwitterAuth() {\n    this.twitterAuth.emit(null);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ trackingCategory }}\n  \n\n  \n    \n      \n      \n      {{ trackingCategory }}\n      {{ message }}\n    \n\n    \n\n    \n      \n        \n        {{ trackingCategory }} with Google\n      \n\n      \n        \n        {{ trackingCategory }} with Facebook\n      \n\n      \n        \n        {{ trackingCategory }} with Twitter\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./auth-form.component.scss\n                \n                @import \"../../../../../variables\";\n\n.auth-form {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: $main-height;\n\n  .auth-button {\n    border: none;\n    color: $background-dark;\n    background: $background-light-accent;\n    width: 70%;\n    padding: 15px;\n    font-size: $base-font-size * .75;\n\n    &:hover:not(:disabled) {\n      background: darken($background-light-accent, 5%);\n      cursor: pointer;\n    }\n\n    &:disabled {\n      background: lighten($background-light-accent, 5%);\n      color: lighten($background-dark, 5%);\n    }\n  }\n\n  .header {\n    color: $text-light;\n    font-size: 2.5em;\n  }\n\n  .box {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: $box-height;\n    width: $box-width;\n    padding: 20px;\n    background: $background-light;\n\n    .auth-button {\n      margin-top: 20px;\n    }\n\n    form {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      width: 70%;\n\n      input {\n        padding: 10px;\n        margin-bottom: 5px;\n      }\n\n      button {\n        width: 100%;\n        margin-top: 0px;\n      }\n    }\n\n    .providers {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .auth-form {\n    .box {\n      height: $box-height * 1.25;\n      width: $box-width * .75;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ trackingCategory }}                          {{ trackingCategory }}      {{ message }}                                  {{ trackingCategory }} with Google                            {{ trackingCategory }} with Facebook                            {{ trackingCategory }} with Twitter            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport authComponentSelectors, { State } from '../reducers/root.reducer';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) { }\n\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.store.select(authComponentSelectors.isUserLoggedIn)\n      .pipe(\n        map(authed => {\n          if (!authed) {\n            this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n            return false;\n          }\n          return true;\n        }),\n        take(1));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthFormComponent\n                            \n                            \n                                ForgotPasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                RegisterComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { AuthFormComponent } from './components/auth-form/auth-form.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { AuthEffects } from './effects/auth.effects';\nimport { StatusEffects } from './effects/status.effects';\nimport { UserEffects } from './effects/user.effects';\n\nimport { AuthService } from './services/auth.service';\n\nimport { reducers } from './reducers/root.reducer';\n\nimport { FormsModule, ReactiveFormsModule } from '../../../../node_modules/@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    StoreModule.forFeature('auth', reducers),\n    EffectsModule.forFeature([\n      UserEffects,\n      AuthEffects,\n      StatusEffects\n    ])\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    AuthFormComponent,\n    ForgotPasswordComponent\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\n\nconst routes: Routes = [{\n  path: 'forgotPassword',\n  component: ForgotPasswordComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                facebookLogin\n                            \n                            \n                                getAuthState\n                            \n                            \n                                    Private\n                                googleLogin\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signInWithEmail\n                            \n                            \n                                signInWithFacebook\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                signInWithTwitter\n                            \n                            \n                                signOut\n                            \n                            \n                                signUpWithEmail\n                            \n                            \n                                    Private\n                                twitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        facebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        googleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithEmail(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithFacebook\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithFacebook()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithTwitter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithTwitter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUpWithEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignUpWithEmail(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            twitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        twitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport * as firebase from 'firebase/app';\nimport { from, Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) { }\n\n  getAuthState(): Observable {\n    return this.afAuth.authState;\n  }\n\n  signInWithGoogle(): Observable {\n    return from(this.googleLogin());\n  }\n\n  signInWithFacebook(): Observable {\n    return from(this.facebookLogin());\n  }\n\n  signInWithTwitter(): Observable {\n    return from(this.twitterLogin());\n  }\n\n  signOut(): Observable {\n    return from(this.afAuth.auth.signOut());\n  }\n\n  signUpWithEmail(email: string, password: string): Observable {\n    return from(this.afAuth.auth.createUserWithEmailAndPassword(email, password));\n  }\n\n  signInWithEmail(email: string, password: string): Observable {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password));\n  }\n\n  resetPassword(email: string): Observable {\n    return from(this.afAuth.auth.sendPasswordResetEmail(email));\n  }\n\n  private googleLogin(): Promise {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n  private facebookLogin(): Promise {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n  private twitterLogin(): Promise {\n    const provider = new firebase.auth.TwitterAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     fromStatus.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromStatus.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     fromUser.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUser.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromStatus from './status.reducer';\nimport * as fromUser from './user.reducer';\n\nimport { User } from '../models';\n\nexport interface AuthState {\n  user: fromUser.State;\n  status: fromStatus.State;\n}\n\nexport interface State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: fromUser.reducer,\n  status: fromStatus.reducer\n};\n\nexport const _selectAuthState = createFeatureSelector('auth');\nexport const _selectUser = createSelector(_selectAuthState, state => state.user);\nexport const _selectStatus = createSelector(_selectAuthState, state => state.status);\n\nexport const _selectUserLoggedIn = createSelector(_selectUser, user => user.uid !== '');\nexport const _selectUserData = createSelector(_selectUser, user => user as User);\n\nexport const _selectStatusLoggingIn = createSelector(_selectStatus, status => status.attemptingLogin);\nexport const _selectStatusValidationMessage = createSelector(_selectStatus, status => status.validationMessage);\n\nconst authComponentSelectors = {\n  isUserLoggedIn: _selectUserLoggedIn,\n  user: _selectUserData,\n  loggingIn: _selectStatusLoggingIn,\n  validationMessage: _selectStatusValidationMessage\n};\n\nexport default authComponentSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Authenticated.html":{"url":"classes/Authenticated.html","title":"class - Authenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Authenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AUTHENTICATED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarGraphConfig.html":{"url":"interfaces/BarGraphConfig.html","title":"interface - BarGraphConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BarGraphConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GraphConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        axisTickFormatting\n                                \n                                \n                                        scaleMax\n                                \n                                \n                                        showGridLines\n                                \n                                \n                                        showXAxis\n                                \n                                \n                                        showXAxisLabel\n                                \n                                \n                                        showYAxis\n                                \n                                \n                                        showYAxisLabel\n                                \n                                \n                                        xAxisLabel\n                                \n                                \n                                        yAxisLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisTickFormatting\n                                    \n                                \n                                \n                                    \n                                        axisTickFormatting:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaleMax\n                                    \n                                \n                                \n                                    \n                                        scaleMax:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showGridLines\n                                    \n                                \n                                \n                                    \n                                        showGridLines:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showXAxis\n                                    \n                                \n                                \n                                    \n                                        showXAxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        showXAxisLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showYAxis\n                                    \n                                \n                                \n                                    \n                                        showYAxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showYAxisLabel\n                                    \n                                \n                                \n                                    \n                                        showYAxisLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelTimer.html":{"url":"classes/CancelTimer.html","title":"class - CancelTimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelTimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : CANCEL_TIMER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletedDisplayData.html":{"url":"interfaces/CompletedDisplayData.html","title":"interface - CompletedDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletedDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/display-data.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        completedItem\n                                \n                                \n                                        item\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completedItem\n                                    \n                                \n                                \n                                    \n                                        completedItem:     CompletedItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompletedItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     ProgressItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProgressItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompletedItem, HistoryListItem, ProgressItem } from '../../../shared/models';\n\nimport { MarkCompleteItem } from './';\n\nexport interface PlayingDisplayData {\n  item: ProgressItem;\n  startEntryData: HistoryListItem;\n  timePlayed: number;\n  endDates: number[];\n  markComplete: MarkCompleteItem;\n}\n\nexport interface CompletedDisplayData {\n  item: ProgressItem;\n  completedItem: CompletedItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletedItem.html":{"url":"interfaces/CompletedItem.html","title":"interface - CompletedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                                \n                                        timePlayed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timePlayed\n                                    \n                                \n                                \n                                    \n                                        timePlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompletedItemComponent.html":{"url":"components/CompletedItemComponent.html","title":"component - CompletedItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompletedItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/completed-item/completed-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-completed-item\n            \n\n            \n                styleUrls\n                ./completed-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./completed-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayData\n                    \n                    \n                            \n                            Type :    CompletedDisplayData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: faTrash\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as progressActions from '../../../../shared/actions/progress.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { CompletedDisplayData } from '../../models';\n\n@Component({\n  selector: 'app-completion-completed-item',\n  templateUrl: './completed-item.component.html',\n  styleUrls: ['./completed-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompletedItemComponent implements OnInit {\n\n  @Input() displayData: CompletedDisplayData;\n  userId = '';\n  icons = {\n    remove: faTrash\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  remove() {\n    this.store.dispatch(new progressActions.RemoveProgressItem(this.userId, this.displayData.item.id));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ displayData.completedItem.game }}\n      ({{ displayData.completedItem.platform }})\n    \n    \n      Playtime: {{ displayData.completedItem.timePlayed | time }}\n      Start: {{ displayData.completedItem.startTime | date:'M/d/y - hh:mm a' }}\n      End: {{ displayData.completedItem.endTime | date:'M/d/y - hh:mm a' }}\n    \n  \n\n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./completed-item.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.completed-item {\n  border-bottom: 1px solid darken($background-light, 10%);\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  font-size: $small-font-size;\n\n  .info {\n    display: flex;\n    flex-direction: column;\n\n    .game-info {\n      display: flex;\n      align-items: center;\n\n      .game {\n        font-weight: bold;\n      }\n\n      .platform {\n        font-style: italic;\n        opacity: .8;\n        font-size: 85%;\n        margin-left: 5px;\n      }\n    }\n\n    .time {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n\n  .actions {\n    display: flex;\n\n    .complete {\n      color: $good-action-color;\n      margin-right: 10px;\n    }\n\n    .close {\n      color: $bad-action-color;\n      margin-right: 10px;\n    }\n\n    .remove {\n      color: $neutral-action-color;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ displayData.completedItem.game }}      ({{ displayData.completedItem.platform }})              Playtime: {{ displayData.completedItem.timePlayed | time }}      Start: {{ displayData.completedItem.startTime | date:\\'M/d/y - hh:mm a\\' }}      End: {{ displayData.completedItem.endTime | date:\\'M/d/y - hh:mm a\\' }}                        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompletedItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompletionComponent.html":{"url":"components/CompletionComponent.html","title":"component - CompletionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompletionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/completion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion\n            \n\n            \n                styleUrls\n                ./completion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./completion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayingInfo$\n                            \n                            \n                                completedDisplayData$\n                            \n                            \n                                game$\n                            \n                            \n                                games$\n                            \n                            \n                                historyGroupings$\n                            \n                            \n                                playingDisplayData$\n                            \n                            \n                                potentialDates$\n                            \n                            \n                                potentialPlatforms$\n                            \n                            \n                                visibleTab$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, completionStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/completion.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        completionStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPlayingInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addPlayingInfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completedDisplayData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completedDisplayData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            games$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        games$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            historyGroupings$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyGroupings$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playingDisplayData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playingDisplayData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            potentialDates$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        potentialDates$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            potentialPlatforms$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        potentialPlatforms$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibleTab$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleTab$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport completionSelectors, { State as CompletionState } from './reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../shared/models';\nimport { AddPlayingInfo, CompletedDisplayData, PlayingDisplayData, TabType } from './models';\n\nimport { filterPlatforms, filterStartTimes } from '../../shared/utils/history-filter.utils';\nimport {\n    getCompletedDisplayDataItems, getPlayingDisplayDataItems\n} from './utils/display-data.utils';\n\n@Component({\n  selector: 'app-completion',\n  templateUrl: './completion.component.html',\n  styleUrls: ['./completion.component.scss']\n})\nexport class CompletionComponent implements OnInit {\n\n  historyGroupings$: Observable;\n  games$: Observable;\n  addPlayingInfo$: Observable;\n  game$: Observable;\n  potentialPlatforms$: Observable;\n  potentialDates$: Observable;\n\n  playingDisplayData$: Observable;\n  completedDisplayData$: Observable;\n\n  visibleTab$: Observable;\n  constructor(private sharedStore: Store, private completionStore: Store) { }\n\n  ngOnInit() {\n    this.historyGroupings$ = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n    this.games$ = this.historyGroupings$.pipe(map(groupings => groupings.map(item => item.key)));\n    this.addPlayingInfo$ = this.completionStore.select(completionSelectors.addPlayingInfo);\n    this.game$ = this.addPlayingInfo$.pipe(map(info => info.game ? info.game : null));\n    this.potentialPlatforms$ = combineLatest(this.historyGroupings$, this.addPlayingInfo$, (groupings, info) => {\n      return filterPlatforms(groupings, info.game);\n    });\n    this.potentialDates$ = combineLatest(this.historyGroupings$, this.addPlayingInfo$, (groupings, info) => {\n      return filterStartTimes(groupings, info.game, info.platform);\n    });\n\n    const playingProgressItems = this.sharedStore.select(sharedSelectors.progressPlaying);\n    const completedProgerssItems = this.sharedStore.select(sharedSelectors.progressCompleted);\n    const markCompleteEntities = this.completionStore.select(completionSelectors.markCompleteEntities);\n    this.playingDisplayData$ = getPlayingDisplayDataItems(playingProgressItems, this.historyGroupings$, markCompleteEntities);\n    this.completedDisplayData$ = getCompletedDisplayDataItems(completedProgerssItems, this.historyGroupings$);\n\n    this.visibleTab$ = this.completionStore.select(completionSelectors.visibleTab);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n\n      \n        \n          \n        \n        No games in progress!\n      \n\n      \n        \n          \n        \n        No games completed!\n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./completion.component.scss\n                \n                @import \"../../../variables.scss\";\n\n.content {\n  .completion {\n    height: 100%;\n\n    .games {\n      display: flex;\n      flex-direction: column;\n      margin: 20px;\n\n      .items {\n        background: $background-light;\n      }\n\n      .none {\n        padding: 20px;\n      }\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .content {\n    margin-top: $small-nav-banner-height;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        No games in progress!                                              No games completed!            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompletionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompletionModule.html":{"url":"modules/CompletionModule.html","title":"module - CompletionModule","body":"\n                   \n\n\n\n\n  Modules\n  CompletionModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompletionModule\n\n\n\ncluster_CompletionModule_declarations\n\n\n\ncluster_CompletionModule_imports\n\n\n\ncluster_CompletionModule_providers\n\n\n\n\nAddPlayingComponent\n\nAddPlayingComponent\n\n\n\nCompletionModule\n\nCompletionModule\n\nCompletionModule -->\n\nAddPlayingComponent->CompletionModule\n\n\n\n\n\nCompletedItemComponent\n\nCompletedItemComponent\n\nCompletionModule -->\n\nCompletedItemComponent->CompletionModule\n\n\n\n\n\nCompletionComponent\n\nCompletionComponent\n\nCompletionModule -->\n\nCompletionComponent->CompletionModule\n\n\n\n\n\nPlayingItemComponent\n\nPlayingItemComponent\n\nCompletionModule -->\n\nPlayingItemComponent->CompletionModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nCompletionModule -->\n\nTabsComponent->CompletionModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCompletionModule -->\n\nSharedModule->CompletionModule\n\n\n\n\n\nProgressService\n\nProgressService\n\nCompletionModule -->\n\nProgressService->CompletionModule\n\n\n\n\n\nUserService\n\nUserService\n\nCompletionModule -->\n\nUserService->CompletionModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/completion/completion.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddPlayingComponent\n                            \n                            \n                                CompletedItemComponent\n                            \n                            \n                                CompletionComponent\n                            \n                            \n                                PlayingItemComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProgressService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CompletionComponent } from './completion.component';\nimport { AddPlayingComponent } from './components/add-playing/add-playing.component';\nimport { CompletedItemComponent } from './components/completed-item/completed-item.component';\nimport { PlayingItemComponent } from './components/playing-item/playing-item.component';\nimport { TabsComponent } from './components/tabs/tabs.component';\n\nimport { AddPlayingEffects } from './effects/add-playing.effects';\nimport { ProgressEffects } from './effects/progress.effects';\n\nimport { UserService } from '../auth/services/user.service';\nimport { ProgressService } from './services/progress.service';\n\nimport { TimePipe } from '../../shared/pipes/time.pipe';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    NgSelectModule,\n    FormsModule,\n    SharedModule,\n    StoreModule.forFeature('completion', reducers),\n    EffectsModule.forFeature([\n      AddPlayingEffects,\n      ProgressEffects\n    ])\n  ],\n  declarations: [\n    CompletionComponent,\n    AddPlayingComponent,\n    PlayingItemComponent,\n    CompletedItemComponent,\n    TabsComponent],\n  providers: [\n    UserService,\n    ProgressService,\n    TimePipe\n  ]\n})\nexport class CompletionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletionState.html":{"url":"interfaces/CompletionState.html","title":"interface - CompletionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addPlaying\n                                \n                                \n                                        markComplete\n                                \n                                \n                                        tab\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addPlaying\n                                    \n                                \n                                \n                                    \n                                        addPlaying:     fromPlaying.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPlaying.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markComplete\n                                    \n                                \n                                \n                                    \n                                        markComplete:     fromMarkComplete.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMarkComplete.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                    \n                                \n                                \n                                    \n                                        tab:     fromTab.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTab.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromPlaying from './add-playing.reducer';\nimport * as fromMarkComplete from './mark-complete.reducer';\nimport * as fromTab from './tab.reducer';\n\nimport { AddPlayingInfo } from '../models';\n\nexport interface CompletionState {\n  addPlaying: fromPlaying.State;\n  markComplete: fromMarkComplete.State;\n  tab: fromTab.State;\n}\n\nexport interface State {\n  completion: CompletionState;\n}\n\nexport const reducers: ActionReducerMap = {\n  addPlaying: fromPlaying.reducer,\n  markComplete: fromMarkComplete.reducer,\n  tab: fromTab.reducer\n};\n\nexport const _selectCompletionState = createFeatureSelector('completion');\nexport const _selectPlaying = createSelector(_selectCompletionState, state => state.addPlaying);\nexport const _selectMarkComplete = createSelector(_selectCompletionState, state => state.markComplete);\nexport const _selectTab = createSelector(_selectCompletionState, state => state.tab);\n\nexport const _selectAddPlayingInfo = createSelector(_selectPlaying, playing => playing as AddPlayingInfo);\n\nexport const { selectEntities: _selectMarkCompleteEntities } = fromMarkComplete.adapter.getSelectors(_selectMarkComplete);\n\nexport const _selectVisibleTab = createSelector(_selectTab, tab => tab.tab);\n\nconst completionSelectors = {\n  addPlayingInfo: _selectAddPlayingInfo,\n  markCompleteEntities: _selectMarkCompleteEntities,\n  visibleTab: _selectVisibleTab\n};\n\nexport default completionSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize(routerState: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/reducers/root.reducer.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerState\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RouterStateUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                barGraphBaseConfig\n                            \n                            \n                                dateGraphConfig\n                            \n                            \n                                dateRangeType$\n                            \n                            \n                                gameGraphConfig\n                            \n                            \n                                    Private\n                                graphConfig\n                            \n                            \n                                platformGraphConfig\n                            \n                            \n                                timeVsDateGraphData$\n                            \n                            \n                                timeVsGameGraphData$\n                            \n                            \n                                timeVsPlatformGraphData$\n                            \n                            \n                                totalTime$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, dashboardStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/dashboard.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dashboardStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            barGraphBaseConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        barGraphBaseConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.graphConfig,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: false,\n    showYAxisLabel: false,\n    showGridLines: true,\n    xAxisLabel: '',\n    yAxisLabel: '',\n    axisTickFormatting: formatTime,\n    scaleMax: 3600 * 10\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateGraphConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Date',\n    yAxisLabel: 'Total Time Played'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateRangeType$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateRangeType$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gameGraphConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Total Time Played',\n    yAxisLabel: 'Game'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphConfig:     GraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     GraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    view: undefined,\n    colorScheme: {\n      domain: selectColorScheme('cool')\n    },\n    showLegend: false,\n    gradient: false,\n    animations: true,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformGraphConfig:     PieChartConfig\n\n                    \n                \n                    \n                        \n                            Type :     PieChartConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.graphConfig,\n    showLabels: true,\n    explodeSlices: false,\n    doughnut: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsDateGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsDateGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsGameGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsGameGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsPlatformGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsPlatformGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport dashboardSelectors, { State as DashboardState } from './reducers/root.reducer';\n\nimport {\n    BarGraphConfig, DateRangeType, GraphConfig, GraphDataItem, PieChartConfig\n} from './models';\n\nimport { formatTime } from '../../shared/utils/date.utils';\nimport { selectColorScheme } from './utils/colorScheme.utils';\nimport { getGraphData, getPaddedGraphData, getSortedGraphData } from './utils/graph-data.utils';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  timeVsDateGraphData$: Observable;\n  timeVsPlatformGraphData$: Observable;\n  timeVsGameGraphData$: Observable;\n\n  totalTime$: Observable;\n\n  dateRangeType$: Observable;\n\n  private graphConfig: GraphConfig = {\n    view: undefined,\n    colorScheme: {\n      domain: selectColorScheme('cool')\n    },\n    showLegend: false,\n    gradient: false,\n    animations: true,\n  };\n  private barGraphBaseConfig: BarGraphConfig = {\n    ...this.graphConfig,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: false,\n    showYAxisLabel: false,\n    showGridLines: true,\n    xAxisLabel: '',\n    yAxisLabel: '',\n    axisTickFormatting: formatTime,\n    scaleMax: 3600 * 10\n  };\n  dateGraphConfig: BarGraphConfig = {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Date',\n    yAxisLabel: 'Total Time Played'\n  };\n  gameGraphConfig: BarGraphConfig = {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Total Time Played',\n    yAxisLabel: 'Game'\n  };\n  platformGraphConfig: PieChartConfig = {\n    ...this.graphConfig,\n    showLabels: true,\n    explodeSlices: false,\n    doughnut: true\n  };\n  constructor(private sharedStore: Store, private dashboardStore: Store) { }\n\n  ngOnInit() {\n    const dateList = this.dashboardStore.select(dashboardSelectors.dateList);\n    const groupingsByDate = this.sharedStore.select(sharedSelectors.historyGroupingsByDate);\n    const groupingsByPlatform = this.sharedStore.select(sharedSelectors.historyGroupingsByPlatform);\n    const groupingsByGame = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n\n    this.timeVsDateGraphData$ = getPaddedGraphData(groupingsByDate, dateList);\n    this.timeVsPlatformGraphData$ = getGraphData(groupingsByPlatform, dateList);\n    this.timeVsGameGraphData$ = getSortedGraphData(groupingsByGame, dateList);\n\n    this.totalTime$ = this.timeVsDateGraphData$.pipe(map(x => x.reduce((a, b) => a + b.value, 0)));\n    this.dateRangeType$ = this.dashboardStore.select(dashboardSelectors.rangeType);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @import \"../../../variables.scss\";\n\n.content {\n  .dashboard {\n    height: 100%;\n    padding: 20px;\n\n    .graphs {\n      height: $graphs-height;\n      width: 100%;\n      display: grid;\n      grid-template-columns: 50% 50%;\n      grid-template-rows: 50% 50%;\n\n      > div {\n        padding: 10px;\n        background: $background-light;\n      }\n\n      .time-vs-date {\n        grid-column: 1 / span 1;\n        grid-row: 1 / span 1;\n        margin-right: 10px;\n        margin-bottom: 10px;\n      }\n\n      .time-vs-game {\n        grid-column: 1 / span 1;\n        grid-row: 2 / span 1;\n        margin-right: 10px;\n        margin-top: 10px;\n      }\n\n      .time-vs-platform {\n        grid-column: 2 / span 1;\n        grid-row: 1 / span 2;\n        margin-left: 10px;\n      }\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .content {\n    .dashboard {\n      padding: 10px;\n      margin-top: $small-nav-banner-height;\n\n      .graphs {\n        height: $small-graphs-height;\n        grid-template-columns: 100%;\n        grid-template-rows: 33% 33% 33%;\n\n        .time-vs-date {\n          grid-column: 1 / span 1;\n          grid-row: 1 / span 1;\n          margin-right: 0px;\n          margin-bottom: 10px;\n        }\n\n        .time-vs-game {\n          grid-column: 1 / span 1;\n          grid-row: 2 / span 1;\n          margin-right: 0px;\n          margin-top: 0px;\n          margin-bottom: 10px;\n        }\n\n        .time-vs-platform {\n          grid-column: 1 / span 1;\n          grid-row: 3 / span 1;\n          margin-left: 0px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nGraphTooltipComponent\n\nGraphTooltipComponent\n\nDashboardModule -->\n\nGraphTooltipComponent->DashboardModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nTimeDateGraphComponent\n\nTimeDateGraphComponent\n\nDashboardModule -->\n\nTimeDateGraphComponent->DashboardModule\n\n\n\n\n\nTimeGameGraphComponent\n\nTimeGameGraphComponent\n\nDashboardModule -->\n\nTimeGameGraphComponent->DashboardModule\n\n\n\n\n\nTimePlatformGraphComponent\n\nTimePlatformGraphComponent\n\nDashboardModule -->\n\nTimePlatformGraphComponent->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                GraphTooltipComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                TimeDateGraphComponent\n                            \n                            \n                                TimeGameGraphComponent\n                            \n                            \n                                TimePlatformGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { GraphTooltipComponent } from './components/graph-tooltip/graph-tooltip.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { TimeDateGraphComponent } from './components/time-date-graph/time-date-graph.component';\nimport { TimeGameGraphComponent } from './components/time-game-graph/time-game-graph.component';\nimport {\n    TimePlatformGraphComponent\n} from './components/time-platform-graph/time-platform-graph.component';\nimport { DashboardComponent } from './dashboard.component';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxChartsModule,\n    SharedModule,\n    StoreModule.forFeature('dashboard', reducers),\n  ],\n  declarations: [\n    DashboardComponent,\n    TimeDateGraphComponent,\n    TimeGameGraphComponent,\n    TimePlatformGraphComponent,\n    GraphTooltipComponent,\n    HeaderComponent\n  ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardState.html":{"url":"interfaces/DashboardState.html","title":"interface - DashboardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DashboardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateRange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateRange\n                                    \n                                \n                                \n                                    \n                                        dateRange:     fromDateRange.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDateRange.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { eachDay } from 'date-fns';\n\nimport * as fromDateRange from './date-range.reducer';\n\nexport interface DashboardState {\n  dateRange: fromDateRange.State;\n}\n\nexport interface State {\n  dashboard: DashboardState;\n}\n\nexport const reducers: ActionReducerMap = {\n  dateRange: fromDateRange.reducer\n};\n\nexport const _selectDashboardFeature = createFeatureSelector('dashboard');\nexport const _selectDateRange = createSelector(_selectDashboardFeature, state => state.dateRange);\n\nexport const _selectDateList = createSelector(_selectDateRange, dateRange => {\n  return eachDay(dateRange.startDay, dateRange.endDay);\n});\nexport const _selectRangeType = createSelector(_selectDateRange, dateRange => dateRange.type);\n\nconst dashboardSelectors = {\n  dateList: _selectDateList,\n  rangeType: _selectRangeType\n};\n\nexport default dashboardSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/shared.models.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDisplayNameComponent.html":{"url":"components/EditDisplayNameComponent.html","title":"component - EditDisplayNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditDisplayNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/edit-display-name/edit-display-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-edit-display-name\n            \n\n            \n                styleUrls\n                ./edit-display-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-display-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitFinishEdit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDisplayName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                finishEdit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        finishEdit\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitFinishEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitFinishEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisplayName(displayNameEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayNameEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    confirm: faCheck,\n    cancel: faTimes\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as profileActions from '../../actions/profile.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-profile-edit-display-name',\n  templateUrl: './edit-display-name.component.html',\n  styleUrls: ['./edit-display-name.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditDisplayNameComponent implements OnInit {\n\n  @Output() finishEdit: EventEmitter = new EventEmitter();\n  userId: string;\n  icons = {\n    confirm: faCheck,\n    cancel: faTimes\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  emitFinishEdit() {\n    this.finishEdit.emit(null);\n  }\n\n  setDisplayName(displayNameEl: HTMLInputElement) {\n    const displayName = displayNameEl.value;\n    displayNameEl.value = '';\n\n    this.store.dispatch(new profileActions.SetProfileDisplayName(this.userId, displayName));\n    this.emitFinishEdit();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./edit-display-name.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.edit-display-name {\n  display: flex;\n\n  input {\n    padding: 10px;\n  }\n\n  .actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .confirm {\n      color: $good-action-color;\n    }\n\n    .cancel {\n      color: $bad-action-color;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDisplayNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ElapsedTimePipe.html":{"url":"pipes/ElapsedTimePipe.html","title":"pipe - ElapsedTimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ElapsedTimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/elapsed-time.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        elapsedTime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(startTimeInMS: number, endTimeInMS: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/elapsed-time.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeInMS\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endTimeInMS\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatElapsedTime } from '../../shared/utils/date.utils';\n\n@Pipe({ name: 'elapsedTime' })\nexport class ElapsedTimePipe implements PipeTransform {\n\n  transform(startTimeInMS: number, endTimeInMS: number): string {\n    return formatElapsedTime(startTimeInMS, endTimeInMS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElapsedTimeService.html":{"url":"injectables/ElapsedTimeService.html","title":"injectable - ElapsedTimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElapsedTimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/elapsed-time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTime$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTime\n                            \n                            \n                                getElapsedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/elapsed-time.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetElapsedTime(inactiveValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inactiveValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, interval, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { SharedState } from '../reducers/root.reducer';\n\nimport { TimerInfo } from '../models';\n\nimport { formatElapsedTime } from '../utils/date.utils';\n\n@Injectable()\nexport class ElapsedTimeService {\n\n  currentTime$: Observable;\n  constructor(private sharedStore: Store) { }\n\n  getCurrentTime(): Observable {\n    if (!this.currentTime$) {\n      this.currentTime$ = interval(1000).pipe(map(() => new Date().getTime()));\n    }\n    return this.currentTime$;\n  }\n\n  getElapsedTime(inactiveValue: string): Observable {\n    const timerInfo$ = this.sharedStore.select(sharedSelectors.timerInfo);\n    const currentTime$ = this.getCurrentTime();\n\n    return combineLatest(currentTime$, timerInfo$, (currentTime: number, timerInfo: TimerInfo) => {\n      return formatElapsedTime(timerInfo.startTime, currentTime, inactiveValue);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailAuthEvent.html":{"url":"interfaces/EmailAuthEvent.html","title":"interface - EmailAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmailAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/events.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EmailAuthEvent {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailLogin.html":{"url":"classes/EmailLogin.html","title":"class - EmailLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : EMAIL_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Environment.html":{"url":"interfaces/Environment.html","title":"interface - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firebase\n                                \n                                \n                                        googleTagManager\n                                \n                                \n                                        production\n                                \n                                \n                                        uuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firebase\n                                    \n                                \n                                \n                                    \n                                        firebase:     FirebaseConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirebaseConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleTagManager\n                                    \n                                \n                                \n                                    \n                                        googleTagManager:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                    \n                                \n                                \n                                    \n                                        uuid:     UUIDConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UUIDConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  firebase: FirebaseConfig;\n  uuid: UUIDConfig;\n  googleTagManager: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\ninterface UUIDConfig {\n  domain: string;\n  namespace: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Error.html":{"url":"classes/Error.html","title":"class - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/app.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/app.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        action:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : APP_ERROR\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const APP_ERROR = '[App] Error';\nexport class Error implements Action {\n  readonly type = APP_ERROR;\n  constructor(public action: string, public message: string) { }\n}\n\nexport type All = Error;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookLogin.html":{"url":"classes/FacebookLogin.html","title":"class - FacebookLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : FACEBOOK_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseConfig.html":{"url":"interfaces/FirebaseConfig.html","title":"interface - FirebaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiKey\n                                \n                                \n                                        authDomain\n                                \n                                \n                                        databaseURL\n                                \n                                \n                                        messagingSenderId\n                                \n                                \n                                        projectId\n                                \n                                \n                                        storageBucket\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authDomain\n                                    \n                                \n                                \n                                    \n                                        authDomain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        databaseURL\n                                    \n                                \n                                \n                                    \n                                        databaseURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messagingSenderId\n                                    \n                                \n                                \n                                    \n                                        messagingSenderId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageBucket\n                                    \n                                \n                                \n                                    \n                                        storageBucket:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  firebase: FirebaseConfig;\n  uuid: UUIDConfig;\n  googleTagManager: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\ninterface UUIDConfig {\n  domain: string;\n  namespace: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreHistoryItem.html":{"url":"interfaces/FirestoreHistoryItem.html","title":"interface - FirestoreHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        platform\n                                \n                                \n                                        source\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestorePlatformsItem.html":{"url":"interfaces/FirestorePlatformsItem.html","title":"interface - FirestorePlatformsItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestorePlatformsItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/platforms.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        option\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        option\n                                    \n                                \n                                \n                                    \n                                        option:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PlatformsService {\n\n  private platformsCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.platformsCollection = this.afs.collection('platforms');\n  }\n\n  getPlatformsOptions(): Observable {\n    const platformsItems = this.platformsCollection.valueChanges().pipe(first());\n    return platformsItems.pipe(map(items =>\n      items.sort((a, b) => a.index - b.index)\n        .map(item => item.option)));\n  }\n}\n\nexport interface FirestorePlatformsItem {\n  index: number;\n  option: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreProfileItem.html":{"url":"interfaces/FirestoreProfileItem.html","title":"interface - FirestoreProfileItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreProfileItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Profile } from '../models';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.profileCollection = this.afs.collection('profile');\n  }\n\n  getProfile(userId: string): Observable {\n    const profileDoc = this.profileCollection.doc(userId).valueChanges().pipe(first());\n    return profileDoc.pipe(map(profile => {\n      ...profile\n    }));\n  }\n\n  setDisplayName(userId: string, displayName: string): Observable {\n    this.profileCollection.doc(userId).set({ displayName }, { merge: true });\n    return of(displayName);\n  }\n}\n\nexport interface FirestoreProfileItem {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreProgressItem.html":{"url":"interfaces/FirestoreProgressItem.html","title":"interface - FirestoreProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreTimerItem.html":{"url":"interfaces/FirestoreTimerItem.html","title":"interface - FirestoreTimerItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreTimerItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/timer.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { TimerInfo } from '../../../shared/models';\n\n@Injectable()\nexport class TimerService {\n\n  private timerCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.timerCollection = this.afs.collection('timer');\n  }\n\n  setTimer(userId: string, info: TimerInfo) {\n    this.timerCollection.doc(userId).set({\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime\n    });\n  }\n\n  setGame(userId: string, game: string) {\n    this.timerCollection.doc(userId).set({ game }, { merge: true });\n  }\n\n  setPlatform(userId: string, platform: string) {\n    this.timerCollection.doc(userId).set({ platform }, { merge: true });\n  }\n\n  setStartTime(userId: string, startTime: number) {\n    this.timerCollection.doc(userId).set({ startTime }, { merge: true });\n  }\n\n  resetTimer(userId: string) {\n    this.timerCollection.doc(userId).set({\n      game: '',\n      platform: '',\n      startTime: 0\n    });\n  }\n\n  getTimerInfo(userId: string): Observable {\n    const timerDoc = this.timerCollection.doc(userId).valueChanges().pipe(first());\n    return timerDoc.pipe(map(timer => {\n      ...timer\n    }));\n  }\n\n  getNowTime(): number {\n    return new Date().getTime();\n  }\n}\n\nexport interface FirestoreTimerItem {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                passwordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Store } from '@ngrx/store';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-auth-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  message = '';\n  passwordForm: FormGroup;\n  constructor(private store: Store, private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.passwordForm = this.builder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]]\n    });\n  }\n\n  resetPassword() {\n    if (this.passwordForm.valid) {\n      const email = this.passwordForm.value.email;\n      this.store.dispatch(new userActions.ResetPassword(email));\n      this.message = `A password reset email has been sent to ${email}`;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot Password\n  \n\n  \n    \n      \n      Reset Password\n      {{ message }}\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                @import \"../../../../../variables\";\n\n.forgot-password {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: $main-height;\n\n  .auth-button {\n    border: none;\n    color: $background-dark;\n    background: $background-light-accent;\n    width: 70%;\n    padding: 15px;\n    font-size: $base-font-size * .75;\n\n    &:hover:not(:disabled) {\n      background: darken($background-light-accent, 5%);\n      cursor: pointer;\n    }\n\n    &:disabled {\n      background: lighten($background-light-accent, 5%);\n      color: lighten($background-dark, 5%);\n    }\n  }\n\n  .box {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: $box-height;\n    width: $box-width;\n    padding: 20px;\n    background: $background-light;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 70%;\n\n    input {\n      padding: 10px;\n      margin-bottom: 5px;\n    }\n\n    button {\n      width: 100%;\n      margin-top: 0px;\n    }\n  }\n\n  .header {\n    color: $text-light;\n    font-size: 2.5em;\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .forgot-password {\n    .box {\n      height: $box-height * .75;\n      width: $box-width * .75;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot Password                    Reset Password      {{ message }}      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUser.html":{"url":"classes/GetUser.html","title":"class - GetUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : GET_USER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLogin.html":{"url":"classes/GoogleLogin.html","title":"class - GoogleLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : GOOGLE_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphConfig.html":{"url":"interfaces/GraphConfig.html","title":"interface - GraphConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animations\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        gradient\n                                \n                                \n                                        showLegend\n                                \n                                \n                                        view\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animations\n                                    \n                                \n                                \n                                    \n                                        animations:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                    \n                                \n                                \n                                    \n                                        gradient:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLegend\n                                    \n                                \n                                \n                                    \n                                        showLegend:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                    \n                                \n                                \n                                    \n                                        view:      | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphDataItem.html":{"url":"interfaces/GraphDataItem.html","title":"interface - GraphDataItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphDataItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphTooltipComponent.html":{"url":"components/GraphTooltipComponent.html","title":"component - GraphTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-graph-tooltip\n            \n\n            \n                styleUrls\n                ./graph-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph-tooltip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                            \n                            Type :    GraphDataItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-graph-tooltip',\n  templateUrl: './graph-tooltip.component.html',\n  styleUrls: ['./graph-tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GraphTooltipComponent implements OnInit {\n\n  @Input() model: GraphDataItem;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{ model.name }}\n  \n  \n    {{ model.value | time }}\n  \n\n\n    \n\n    \n                \n                    ./graph-tooltip.component.scss\n                \n                .tooltip {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n\n  .name {\n    font-size: 1em;\n  }\n\n  .value {\n    font-weight: bold;\n    font-size: 1.3em;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ model.name }}        {{ model.value | time }}  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n  \n    \n      Register\n    \n\n    \n      Login\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../../variables\";\n\n.header {\n  display: flex;\n  height: $header-height;\n  justify-content: space-between;\n  align-items: center;\n\n  a {\n    text-decoration: none;\n  }\n\n  .banner {\n    margin-left: 30px;\n\n    a {\n      img {\n        padding: 15px 10px;\n        height: $header-height;\n      }\n    }\n  }\n\n  .links {\n    display: flex;\n\n    .login, .signUp {\n      margin-right: 30px;\n\n      a {\n        background: $background-light-accent;\n        padding: 15px 10px;\n        color: $background-dark;\n\n        &:hover {\n          background: darken($background-light-accent, 5%);\n        }\n\n        &:active {\n          color: $text-light;\n        }\n      }\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .header {\n    .banner {\n      margin-left: 15px;\n    }\n\n    .links {\n      .login, .signUp {\n        margin-right: 15px;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Register              Login      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateDateRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rangeType\n                            \n                            \n                                totalTime\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/header/header.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rangeType\n                    \n                    \n                            \n                            Type :    DateRangeType\n\n                            \n                        \n                            Default value : 'THIS_WEEK'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTime\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateDateRange\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateDateRange(dateRangeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dateRangeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/date-range.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { DateRangeType } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() rangeType: DateRangeType = 'THIS_WEEK';\n  @Input() totalTime = 0;\n  constructor(private store: Store) { }\n\n  ngOnInit() { }\n\n  updateDateRange(dateRangeEl: HTMLSelectElement) {\n    switch (dateRangeEl.value) {\n      case 'THIS_WEEK': {\n        this.store.dispatch(new actions.SetThisWeek());\n        break;\n      }\n      case 'LAST_WEEK': {\n        this.store.dispatch(new actions.SetLastWeek());\n        break;\n      }\n      case 'THIS_MONTH': {\n        this.store.dispatch(new actions.SetThisMonth());\n        break;\n      }\n      case 'LAST_MONTH': {\n        this.store.dispatch(new actions.SetLastMonth());\n        break;\n      }\n      default: {\n        this.store.dispatch(new actions.SetThisWeek());\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  Dashboard - \n  {{ totalTime | time }}\n  \n    \n      This Week\n      Last Week\n      This Month\n      Last Month\n    \n  \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.header {\n  height: $dashboard-header-height;\n\n  .title {\n    font-size: 1.5em;\n    font-weight: bold;\n  }\n\n  .total {\n    font-style: italic;\n    margin-right: 10px;\n  }\n\n  .range-options {\n    display: inline-block;\n    background: $background-dark-accent;\n    color: $text-light;\n    padding: 5px;\n\n    select {\n      font-size: $base-font-size;\n      font-family: $base-font-family;\n      background: inherit;\n      color: inherit;\n      font-style: italic;\n      outline: none;\n      border: none;\n      appearance: none;\n\n      &:hover {\n        cursor: inherit;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .header {\n    height: $small-dashboard-header-height;\n\n    .title {\n      font-size: 1.25em;\n    }\n\n    .total {\n      font-size: $small-font-size;\n    }\n\n    .range-options {\n      select {\n        font-size: $small-font-size;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard -   {{ totalTime | time }}            This Week      Last Week      This Month      Last Month      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-2.html":{"url":"components/HeaderComponent-2.html","title":"component - HeaderComponent-2","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/library/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-library-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/library/components/header/header.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        gameCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/library/components/header/header.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/components/header/header.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-library-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() gameCount = 0;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Library - \n  {{ gameCount }} {{ gameCount | pluralize:'Game':'Games' }}\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.header {\n  height: $dashboard-header-height;\n\n  .title {\n    font-size: 1.5em;\n    font-weight: bold;\n  }\n\n  .total {\n    font-style: italic;\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .header {\n    height: $small-dashboard-header-height;\n\n    .title {\n      font-size: 1.25em;\n    }\n\n    .total {\n      font-size: $small-font-size;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Library -   {{ gameCount }} {{ gameCount | pluralize:\\'Game\\':\\'Games\\' }}'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-2'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryCollection.html":{"url":"interfaces/HistoryCollection.html","title":"interface - HistoryCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     FirestoreHistoryItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirestoreHistoryItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/history/history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-history\n            \n\n            \n                styleUrls\n                ./history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/history/history.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { HistoryGrouping } from '../../../../shared/models';\n\n@Component({\n  selector: 'app-tracker-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HistoryComponent implements OnInit {\n\n  @Input() groups: HistoryGrouping[] = [];\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n\n    \n\n      \n        {{ group.key }}\n        {{ group.totalTime | time }}\n      \n\n      \n        \n          \n\n          \n        \n      \n    \n  \n\n  \n    Nothing to show...get tracking!\n  \n\n\n    \n\n    \n                \n                    ./history.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.history {\n  margin: $timer-height + 20px 20px 20px 20px;\n\n  .groups {\n    .history-group {\n      background: $background-light;\n      margin-bottom: 20px;\n\n      .overall-data {\n        background: $background-dark;\n        color: $text-light;\n        display: flex;\n        justify-content: space-between;\n        padding: 10px;\n        font-weight: bold;\n      }\n\n      &:not(:last-child) {\n        margin-bottom: 20px;\n      }\n    }\n  }\n\n  .no-groups {\n    text-align: center;\n    padding: 10px 10px;\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .history {\n    margin-top: calc(#{$timer-height} + #{$small-nav-banner-height} + 20px);\n\n    .groups {\n      .history-group {\n        .overall-data {\n          padding: 10px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ group.key }}        {{ group.totalTime | time }}                                                                  Nothing to show...get tracking!  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryEffects.html":{"url":"injectables/HistoryEffects.html","title":"injectable - HistoryEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/history.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadHistoryItems$\n                            \n                            \n                                removeHistoryItem$\n                            \n                            \n                                saveTimerInfoSucceeded$\n                            \n                            \n                                updateElapsedTime$\n                            \n                            \n                                updateGame$\n                            \n                            \n                                updatePlatform$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/history.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                    HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadHistoryItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadHistoryItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.LOAD_HISTORY_ITEMS)\n      .pipe(\n        map(action => action as historyActions.LoadHistoryItems),\n        switchMap(action => this.historyService.getHistoryList(action.userId)\n          .pipe(\n            map(data => new historyActions.LoadHistoryItemsSucceeded(data)),\n            catchError(err => of(new appActions.Error(historyActions.LOAD_HISTORY_ITEMS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeHistoryItem$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeHistoryItem$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.REMOVE_HISTORY_ITEM)\n      .pipe(\n        map(action => action as historyActions.RemoveHistoryItem),\n        switchMap(action => this.historyService.deleteHistoryItem(action.userId, action.itemId)\n          .pipe(\n            map(itemId => new historyActions.RemoveHistoryItemSucceeded(itemId)),\n            catchError(err => of(new appActions.Error(historyActions.REMOVE_HISTORY_ITEM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfoSucceeded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveTimerInfoSucceeded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO_SUCCEEDED)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfoSucceeded),\n        map(action => new historyActions.AddNewHistoryItem(action.item)))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateElapsedTime$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_ELAPSED_TIME)\n      .pipe(\n        map(action => action as historyActions.UpdateElapsedTime),\n        switchMap(action => this.historyService.updateElapsedTime(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateElapsedTimeSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_ELAPSED_TIME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateGame$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_GAME)\n      .pipe(\n        map(action => action as historyActions.UpdateGame),\n        switchMap(action => this.historyService.updateGame(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateGameSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_GAME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatePlatform$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_PLATFORM)\n      .pipe(\n        map(action => action as historyActions.UpdatePlatform),\n        switchMap(action => this.historyService.updatePlatform(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdatePlatformSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_PLATFORM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:56\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { HistoryService } from '../services/history.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as historyActions from '../../../shared/actions/history.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\n\n@Injectable()\nexport class HistoryEffects {\n\n  constructor(private actions$: Actions, private historyService: HistoryService) { }\n\n  @Effect() loadHistoryItems$ =\n    this.actions$\n      .ofType(historyActions.LOAD_HISTORY_ITEMS)\n      .pipe(\n        map(action => action as historyActions.LoadHistoryItems),\n        switchMap(action => this.historyService.getHistoryList(action.userId)\n          .pipe(\n            map(data => new historyActions.LoadHistoryItemsSucceeded(data)),\n            catchError(err => of(new appActions.Error(historyActions.LOAD_HISTORY_ITEMS, err.message))))));\n\n  @Effect() saveTimerInfoSucceeded$ =\n    this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO_SUCCEEDED)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfoSucceeded),\n        map(action => new historyActions.AddNewHistoryItem(action.item)));\n\n  @Effect() removeHistoryItem$ =\n    this.actions$\n      .ofType(historyActions.REMOVE_HISTORY_ITEM)\n      .pipe(\n        map(action => action as historyActions.RemoveHistoryItem),\n        switchMap(action => this.historyService.deleteHistoryItem(action.userId, action.itemId)\n          .pipe(\n            map(itemId => new historyActions.RemoveHistoryItemSucceeded(itemId)),\n            catchError(err => of(new appActions.Error(historyActions.REMOVE_HISTORY_ITEM, err.message))))));\n\n  @Effect() updateGame$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_GAME)\n      .pipe(\n        map(action => action as historyActions.UpdateGame),\n        switchMap(action => this.historyService.updateGame(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateGameSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_GAME, err.message))))));\n\n  @Effect() updatePlatform$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_PLATFORM)\n      .pipe(\n        map(action => action as historyActions.UpdatePlatform),\n        switchMap(action => this.historyService.updatePlatform(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdatePlatformSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_PLATFORM, err.message))))));\n\n  @Effect() updateElapsedTime$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_ELAPSED_TIME)\n      .pipe(\n        map(action => action as historyActions.UpdateElapsedTime),\n        switchMap(action => this.historyService.updateElapsedTime(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateElapsedTimeSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_ELAPSED_TIME, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryEntity.html":{"url":"interfaces/HistoryEntity.html","title":"interface - HistoryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/history.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/history.actions';\n\nimport { UpdatePayload } from '../models';\n\nexport interface HistoryEntity {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_HISTORY_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_HISTORY_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_HISTORY_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_HISTORY_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.UPDATE_GAME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_PLATFORM_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_ELAPSED_TIME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getUpdatedState = (payload: UpdatePayload, currentState: State): State => {\n  const { itemId: id, ...changes } = payload;\n  return adapter.updateOne({\n    id,\n    changes\n  }, currentState);\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryEntryComponent.html":{"url":"components/HistoryEntryComponent.html","title":"component - HistoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/history-entry/history-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-history-entry\n            \n\n            \n                styleUrls\n                ./history-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDateTimePicker\n                            \n                            \n                                quickStart\n                            \n                            \n                                remove\n                            \n                            \n                                updateElapsedTime\n                            \n                            \n                                updateGame\n                            \n                            \n                                updatePlatform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                item\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | NgSelectValue | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    HistoryListItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDateTimePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDateTimePicker(el: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nquickStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateElapsedTime(elapsedTimeEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elapsedTimeEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: faTrash,\n    quickStart: faPlay\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faPlay, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as historyActions from '../../../../shared/actions/history.actions';\nimport * as timerActions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport {\n    HistoryListItem, NgSelectValue, TimerInfo, UpdateHistoryItemGamePayload,\n    UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../../../../shared/models';\n\nimport { getValueFromNgSelect } from '../../../../shared/utils/ng-select.utils';\n\n@Component({\n  selector: 'app-tracker-history-entry',\n  templateUrl: './history-entry.component.html',\n  styleUrls: ['./history-entry.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HistoryEntryComponent implements OnInit {\n\n  @Input() item: HistoryListItem;\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  @Input() game: string | NgSelectValue | null = null;\n  userId = '';\n  icons = {\n    remove: faTrash,\n    quickStart: faPlay\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  updateGame() {\n    const payload = {\n      itemId: this.item.id,\n      game: getValueFromNgSelect(this.game)\n    };\n    this.store.dispatch(new historyActions.UpdateGame(this.userId, payload));\n  }\n\n  updatePlatform(platformEl: HTMLSelectElement) {\n    const payload = {\n      itemId: this.item.id,\n      platform: platformEl.value\n    };\n    this.store.dispatch(new historyActions.UpdatePlatform(this.userId, payload));\n  }\n\n  quickStart() {\n    const timerInfo: TimerInfo = {\n      game: this.item.game,\n      platform: this.item.platform,\n      startTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new timerActions.SetTimerInfo(timerInfo));\n    this.timerService.setTimer(this.userId, timerInfo);\n  }\n\n  remove() {\n    this.store.dispatch(new historyActions.RemoveHistoryItem(this.userId, this.item.id));\n  }\n\n  updateElapsedTime(elapsedTimeEl: HTMLInputElement) {\n    if (elapsedTimeEl.value) {\n      const dateStrings = elapsedTimeEl.value.split('~').map(dateString => dateString.trim());\n      const startTime = new Date(dateStrings[0]).getTime();\n      const endTime = new Date(dateStrings[1]).getTime();\n\n      const payload = {\n        itemId: this.item.id,\n        startTime,\n        endTime\n      };\n      this.store.dispatch(new historyActions.UpdateElapsedTime(this.userId, payload));\n    }\n  }\n\n  openDateTimePicker(el: HTMLInputElement) {\n    el.click();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    \n      {{ item.startTime | date:'shortTime' }} - {{ item.endTime | date:'shortTime' }}\n    \n\n    \n      \n      \n    \n\n    \n      {{ item.startTime | elapsedTime:item.endTime }}\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./history-entry.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.history-entry {\n  display: flex;\n  align-items: center;\n  background: $background-light;\n  height: $history-entry-height;\n  padding: 0px 10px;\n  border-bottom: 1px solid darken($background-light, 10%);\n\n  &:hover {\n    background: darken($background-light, 5%);\n\n    .primary-action .quickstart {\n      display: initial;\n    }\n  }\n\n  .display-element {\n    font-size: $small-font-size;\n    font-family: $base-font-family;\n    width: 100%;\n    padding: 5px;\n    background: none;\n  }\n\n  .game {\n    width: 55%;\n    input {\n      @extend .display-element;\n      outline: none;\n      border: none;\n    }\n\n    ng-select {\n      font-size: $small-font-size;\n    }\n  }\n\n  .platform {\n    width: 20%;\n    select {\n      @extend .display-element;\n      outline: none;\n      border: none;\n      appearance: none;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .time {\n    @extend .display-element;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    width: 20%;\n\n    .start-end, .elapsed {\n        &:hover{\n        cursor: pointer;\n      }\n    }\n\n    .date-time-picker {\n      visibility: hidden;\n      width: 0px;\n      height: 0px;\n    }\n  }\n\n  .primary-action {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 5%;\n\n    .quickstart {\n      color: $good-action-color;\n      opacity: .5;\n      display: none;\n    }\n  }\n\n  .secondary-action {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 5%;\n\n    .remove {\n      color: $neutral-action-color;\n    }\n  }\n}\n\n@media only screen and (max-width: $small-breakpoint) {\n  .history-entry {\n    .display-element {\n      font-size: calc(#{$small-font-size} - 2px);\n    }\n\n    .game {\n      width: 30%;\n\n      ng-select {\n        font-size: $small-font-size;\n      }\n\n      input {\n        text-overflow: ellipsis;\n      }\n    }\n\n    .platform {\n      select {\n        text-overflow: ellipsis;\n      }\n    }\n\n    .time {\n      width: 45%;\n    }\n\n    .primary-action {\n      width: 10%;\n\n      .quickstart {\n        display: initial;\n      }\n    }\n\n    .secondary-action {\n      width: 10%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}                  {{ item.startTime | date:\\'shortTime\\' }} - {{ item.endTime | date:\\'shortTime\\' }}                                  {{ item.startTime | elapsedTime:item.endTime }}                                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryGrouping.html":{"url":"interfaces/HistoryGrouping.html","title":"interface - HistoryGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        historyItems\n                                \n                                \n                                        key\n                                \n                                \n                                        totalTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        historyItems\n                                    \n                                \n                                \n                                    \n                                        historyItems:     HistoryListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HistoryListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTime\n                                    \n                                \n                                \n                                    \n                                        totalTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryListItem.html":{"url":"interfaces/HistoryListItem.html","title":"interface - HistoryListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateRange\n                                \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        locked\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateRange\n                                    \n                                \n                                \n                                    \n                                        dateRange:     [Date, Date]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [Date, Date]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locked\n                                    \n                                \n                                \n                                    \n                                        locked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                historyCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteHistoryItem\n                            \n                            \n                                    Private\n                                getHistoryEntity\n                            \n                            \n                                getHistoryList\n                            \n                            \n                                getNewHistoryItem\n                            \n                            \n                                    Private\n                                getUserItemCollection\n                            \n                            \n                                saveTimerInfo\n                            \n                            \n                                updateElapsedTime\n                            \n                            \n                                updateGame\n                            \n                            \n                                updatePlatform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/history.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteHistoryItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteHistoryItem(userId: string, itemId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getHistoryEntity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHistoryEntity(history: FirestoreHistoryItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        history\n                                                        \n                                                                    FirestoreHistoryItem\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HistoryEntity\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHistoryList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHistoryList(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNewHistoryItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNewHistoryItem(info: AddTimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FirestoreHistoryItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserItemCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserItemCollection(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveTimerInfo(info: AddTimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGame(userId: string, payload: UpdateHistoryItemGamePayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            historyCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tagline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/home/home.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tagline:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Game Time Tracking Made Simple'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  tagline = 'Game Time Tracking Made Simple';\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{ tagline }}\n  \n\n  \n    \n      Track playtime on any platform\n      We support over 15 different platforms\n    \n\n    \n      Get detailed graphs on playtime\n      Learn how you spend your time when you game\n    \n\n    \n      Mark games as complete as you finish them\n      Hold yourself accountable to that backlog you've accrued\n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import \"../../../variables\";\n\n.home {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n\n  .tagline {\n    width: 50%;\n    color: $text-light;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 3.5em;\n    text-align: center;\n    text-shadow: -1px -1px 1px #fff, 1px 1px 1px #000;\n  }\n\n  .about {\n    display: flex;\n    justify-content: space-evenly;\n    margin: 80px 30px 30px 30px;\n\n    .column {\n      display: flex;\n      background: $background-light;\n      flex-direction: column;\n      align-items: center;\n      width: 30%;\n      padding: 25px;\n\n      h1 {\n        text-transform: uppercase;\n        width: 80%;\n        text-align: center;\n      }\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .home {\n    .tagline {\n      width: 100%;\n      font-size: 2em;\n    }\n\n    .about {\n      flex-direction: column;\n      margin-top: 30px;\n\n      .column {\n        width: 100%;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ tagline }}              Track playtime on any platform      We support over 15 different platforms              Get detailed graphs on playtime      Learn how you spend your time when you game              Mark games as complete as you finish them      Hold yourself accountable to that backlog you\\'ve accrued      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHasId.html":{"url":"interfaces/IHasId.html","title":"interface - IHasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementDaysToShow.html":{"url":"classes/IncrementDaysToShow.html","title":"class - IncrementDaysToShow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementDaysToShow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/actions/display.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/actions/display.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/actions/display.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : INCREMENT_DAYS_TO_SHOW\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/actions/display.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const INCREMENT_DAYS_TO_SHOW = '[Display] Increment Days to Show';\nexport class IncrementDaysToShow implements Action {\n  readonly type = INCREMENT_DAYS_TO_SHOW;\n  constructor(public amount: number) { }\n}\n\nexport type All = IncrementDaysToShow;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/library/library.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-library\n            \n\n            \n                styleUrls\n                ./library.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                libraryEntries$\n                            \n                            \n                                numEntriesToShow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNumEntriesToShow\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/library/library.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setNumEntriesToShow\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetNumEntriesToShow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            libraryEntries$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        libraryEntries$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numEntriesToShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numEntriesToShow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\n\nimport { LibraryEntry } from './models';\n\nimport { mapGroupings } from './utils/library-data.utils';\n\nimport { getNumEntriesToShow } from './utils/resize-utils';\n\n@Component({\n  selector: 'app-library',\n  templateUrl: './library.component.html',\n  styleUrls: ['./library.component.scss']\n})\nexport class LibraryComponent implements OnInit {\n\n  libraryEntries$: Observable;\n  numEntriesToShow = 10;\n  constructor(private sharedStore: Store) { }\n\n  ngOnInit() {\n    const gameGroupings = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n    this.libraryEntries$ = mapGroupings(gameGroupings);\n    this.setNumEntriesToShow();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.setNumEntriesToShow();\n  }\n\n  setNumEntriesToShow() {\n    this.numEntriesToShow = getNumEntriesToShow(window.innerHeight);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n        \n          {{ value | date:'MM/d/yyyy' }}\n        \n        \n          {{ value | date:'MM/d/yyyy' }}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./library.component.scss\n                \n                @import \"../../../variables.scss\";\n\n.content {\n  padding: 20px;\n\n  .table {\n    width: 100%;\n    background: $background-light;\n\n    .ngx-datatable.material {\n      background: $background-light;\n      box-shadow: none;\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .content {\n    margin-top: $small-nav-banner-height;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{ value | date:\\'MM/d/yyyy\\' }}                          {{ value | date:\\'MM/d/yyyy\\' }}                    '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LibraryEntry.html":{"url":"interfaces/LibraryEntry.html","title":"interface - LibraryEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LibraryEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/library/models/library.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstPlayed\n                                \n                                \n                                        game\n                                \n                                \n                                        lastPlayed\n                                \n                                \n                                        totalTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstPlayed\n                                    \n                                \n                                \n                                    \n                                        firstPlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPlayed\n                                    \n                                \n                                \n                                    \n                                        lastPlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTime\n                                    \n                                \n                                \n                                    \n                                        totalTime:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LibraryEntry {\n  game: string;\n  totalTime: string;\n  firstPlayed: number;\n  lastPlayed: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibraryModule.html":{"url":"modules/LibraryModule.html","title":"module - LibraryModule","body":"\n                   \n\n\n\n\n  Modules\n  LibraryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_declarations\n\n\n\ncluster_LibraryModule_imports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nHeaderComponent->LibraryModule\n\n\n\n\n\nLibraryComponent\n\nLibraryComponent\n\nLibraryModule -->\n\nLibraryComponent->LibraryModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLibraryModule -->\n\nSharedModule->LibraryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/library/library.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HeaderComponent\n                            \n                            \n                                LibraryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { LibraryComponent } from './library.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    SharedModule\n  ],\n  declarations: [\n    LibraryComponent,\n    HeaderComponent\n  ]\n})\nexport class LibraryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryItems.html":{"url":"classes/LoadHistoryItems.html","title":"class - LoadHistoryItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_HISTORY_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryItemsSucceeded.html":{"url":"classes/LoadHistoryItemsSucceeded.html","title":"class - LoadHistoryItemsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryItemsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: HistoryEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    HistoryEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     HistoryEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_HISTORY_ITEMS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadItems.html":{"url":"classes/LoadItems.html","title":"class - LoadItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemIds\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadMoreComponent.html":{"url":"components/LoadMoreComponent.html","title":"component - LoadMoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadMoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/load-more/load-more.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-load-more\n            \n\n            \n                styleUrls\n                ./load-more.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./load-more.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AMOUNT_TO_LOAD\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadMoreEntries\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/load-more/load-more.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadMoreEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadMoreEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AMOUNT_TO_LOAD\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AMOUNT_TO_LOAD:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/display.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-tracker-load-more',\n  templateUrl: './load-more.component.html',\n  styleUrls: ['./load-more.component.scss']\n})\nexport class LoadMoreComponent implements OnInit {\n\n  AMOUNT_TO_LOAD = 4;\n  constructor(private store: Store) { }\n\n  loadMoreEntries() {\n    this.store.dispatch(new actions.IncrementDaysToShow(this.AMOUNT_TO_LOAD));\n  }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Load More\n\n\n    \n\n    \n                \n                    ./load-more.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.load-more {\n  margin-bottom: 20px;\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-self: center;\n    font-size: 1.1em;\n    background: $background-dark-accent;\n    color: $text-light;\n    padding: 10px;\n    border: none;\n\n    &:hover{\n      cursor: pointer;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Load More'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadMoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadOptions.html":{"url":"classes/LoadOptions.html","title":"class - LoadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/platforms.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/platforms.actions.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOAD_OPTIONS = '[Platforms] Load Options';\nexport class LoadOptions implements Action {\n  readonly type = LOAD_OPTIONS;\n  constructor() { }\n}\n\nexport const LOAD_OPTIONS_SUCCEEDED = '[Platforms] Load Options Succeeded';\nexport class LoadOptionsSucceeded implements Action {\n  readonly type = LOAD_OPTIONS_SUCCEEDED;\n  constructor(public platforms: string[]) { }\n}\n\nexport type All = LoadOptions |\n  LoadOptionsSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadOptionsSucceeded.html":{"url":"classes/LoadOptionsSucceeded.html","title":"class - LoadOptionsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadOptionsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/platforms.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platforms\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platforms: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/platforms.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platforms\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platforms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platforms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_OPTIONS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOAD_OPTIONS = '[Platforms] Load Options';\nexport class LoadOptions implements Action {\n  readonly type = LOAD_OPTIONS;\n  constructor() { }\n}\n\nexport const LOAD_OPTIONS_SUCCEEDED = '[Platforms] Load Options Succeeded';\nexport class LoadOptionsSucceeded implements Action {\n  readonly type = LOAD_OPTIONS_SUCCEEDED;\n  constructor(public platforms: string[]) { }\n}\n\nexport type All = LoadOptions |\n  LoadOptionsSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfile.html":{"url":"classes/LoadProfile.html","title":"class - LoadProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROFILE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfileSucceeded.html":{"url":"classes/LoadProfileSucceeded.html","title":"class - LoadProfileSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfileSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profile: Profile)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profile\n                                                  \n                                                        \n                                                                    Profile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profile:     Profile\n\n                    \n                \n                    \n                        \n                            Type :     Profile\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROFILE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProgressItems.html":{"url":"classes/LoadProgressItems.html","title":"class - LoadProgressItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProgressItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROGRESS_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProgressItemsSucceeded.html":{"url":"classes/LoadProgressItemsSucceeded.html","title":"class - LoadProgressItemsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProgressItemsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: ProgressEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    ProgressEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     ProgressEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROGRESS_ITEMS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadTimerInfo.html":{"url":"classes/LoadTimerInfo.html","title":"class - LoadTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LockedHistoryEntryComponent.html":{"url":"components/LockedHistoryEntryComponent.html","title":"component - LockedHistoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LockedHistoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-locked-history-entry\n            \n\n            \n                styleUrls\n                ./locked-history-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./locked-history-entry.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                quickStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    HistoryListItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nquickStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    lock: faLock,\n    quickStart: faPlay\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faLock, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as timerActions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryListItem, TimerInfo } from '../../../../shared/models';\n\n@Component({\n  selector: 'app-tracker-locked-history-entry',\n  templateUrl: './locked-history-entry.component.html',\n  styleUrls: ['./locked-history-entry.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LockedHistoryEntryComponent implements OnInit {\n\n  @Input() item: HistoryListItem;\n  userId = '';\n  icons = {\n    lock: faLock,\n    quickStart: faPlay\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  quickStart() {\n    const timerInfo: TimerInfo = {\n      game: this.item.game,\n      platform: this.item.platform,\n      startTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new timerActions.SetTimerInfo(timerInfo));\n    this.timerService.setTimer(this.userId, timerInfo);\n  }\n}\n\n    \n\n    \n        \n  {{ item.game }}\n  {{ item.platform }}\n  \n    {{ item.startTime | date:'shortTime' }} - {{ item.endTime | date:'shortTime' }}\n    {{ item.startTime | elapsedTime:item.endTime }}\n  \n  \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./locked-history-entry.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.locked-history-entry {\n  display: flex;\n  align-items: center;\n  background: $background-light;\n  height: $history-entry-height;\n  padding: 0px 10px;\n  border-bottom: 1px solid darken($background-light, 10%);\n\n  &:hover {\n    background: darken($background-light, 5%);\n\n    .primary-action .quickstart {\n      display: initial;\n    }\n  }\n\n  .display-element {\n    font-size: $small-font-size;\n    font-family: $base-font-family;\n    width: 100%;\n    padding: 5px;\n    background: none;\n  }\n\n  .game {\n    width: 55%;\n    font-size: $small-font-size;\n  }\n\n  .platform {\n    width: 20%;\n    font-size: $small-font-size;\n  }\n\n  .time {\n    @extend .display-element;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    width: 20%;\n  }\n\n  .lock {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 5%;\n    color: lighten($neutral-action-color, 20%);\n  }\n\n  .primary-action {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 5%;\n\n    .quickstart {\n      color: $good-action-color;\n      opacity: .5;\n      display: none;\n    }\n  }\n}\n\n@media only screen and (max-width: $small-breakpoint) {\n  .locked-history-entry {\n    .display-element {\n      font-size: calc(#{$small-font-size} - 2px);\n    }\n\n    .game {\n      width: 30%;\n      font-size: calc(#{$small-font-size} - 2px);\n  }\n\n    .time {\n      width: 45%;\n      font-size: calc(#{$small-font-size} - 2px);\n    }\n\n    .primary-action {\n      width: 10%;\n\n      .quickstart {\n        display: initial;\n      }\n    }\n\n    .lock {\n      width: 10%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ item.game }}  {{ item.platform }}      {{ item.startTime | date:\\'shortTime\\' }} - {{ item.endTime | date:\\'shortTime\\' }}    {{ item.startTime | elapsedTime:item.endTime }}                            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LockedHistoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn$\n                            \n                            \n                                message$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin\n                            \n                            \n                                facebookLogin\n                            \n                            \n                                googleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                twitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailLogin(event: EmailAuthEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    EmailAuthEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingIn$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingIn$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport authComponentSelectors, { State } from '../../reducers/root.reducer';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loggingIn$: Observable;\n  message$: Observable;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.store.dispatch(new userActions.GetUser());\n    this.loggingIn$ = this.store.select(authComponentSelectors.loggingIn);\n    this.message$ = this.store.select(authComponentSelectors.validationMessage);\n  }\n\n  googleLogin() {\n    this.store.dispatch(new userActions.GoogleLogin());\n  }\n\n  facebookLogin() {\n    this.store.dispatch(new userActions.FacebookLogin());\n  }\n\n  twitterLogin() {\n    this.store.dispatch(new userActions.TwitterLogin());\n  }\n\n  emailLogin(event: EmailAuthEvent) {\n    this.store.dispatch(new userActions.EmailLogin(event.email, event.password));\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot your password?\n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"../../../../../variables\";\n\n.login {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: $main-height;\n\n  a {\n    font-size: $small-font-size;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot your password?  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOGOUT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkComplete.html":{"url":"classes/MarkComplete.html","title":"class - MarkComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: MarkCompletePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MarkCompletePayload\n\n                    \n                \n                    \n                        \n                            Type :     MarkCompletePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : MARK_COMPLETE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompleteEntity.html":{"url":"interfaces/MarkCompleteEntity.html","title":"interface - MarkCompleteEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompleteEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/mark-complete.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        showExtra\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExtra\n                                    \n                                \n                                \n                                    \n                                        showExtra:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/mark-complete.actions';\n\nexport interface MarkCompleteEntity {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\nexport interface State extends EntityState { }\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState();\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_SHOW_EXTRA: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          showExtra: action.showExtra\n        }\n      }, state);\n    }\n    case actions.SET_ENDTIME: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          endTime: action.endTime\n        }\n      }, state);\n    }\n    case actions.REMOVE: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.ADD_NEW_ITEM: {\n      return adapter.addOne(getMarkCompleteEntity(action.itemId), state);\n    }\n    case actions.LOAD_ITEMS: {\n      const items = action.itemIds.map(itemId => getMarkCompleteEntity(itemId));\n      return adapter.addAll(items, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getMarkCompleteEntity = (itemId: string): MarkCompleteEntity => {\n  return {\n    id: itemId,\n    showExtra: false,\n    endTime: 0\n  };\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompleteItem.html":{"url":"interfaces/MarkCompleteItem.html","title":"interface - MarkCompleteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompleteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/mark-complete.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        showExtra\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExtra\n                                    \n                                \n                                \n                                    \n                                        showExtra:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkCompleteItem {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompletePayload.html":{"url":"interfaces/MarkCompletePayload.html","title":"interface - MarkCompletePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompletePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkCompleteSucceeded.html":{"url":"classes/MarkCompleteSucceeded.html","title":"class - MarkCompleteSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkCompleteSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MarkCompletePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MarkCompletePayload\n\n                    \n                \n                    \n                        \n                            Type :     MarkCompletePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : MARK_COMPLETE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav/nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                ./nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerRoute\n                            \n                            \n                                hideNavContents\n                            \n                            \n                                icons\n                            \n                            \n                                profileRoute\n                            \n                            \n                                routes\n                            \n                            \n                                trackerRoute\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trackerCaption\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/nav/nav.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trackerCaption\n                    \n                    \n                        \n                            Default value : 'Tracker'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bannerRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bannerRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: 'Track My Playtime',\n    router: ['app'],\n    trackingCategory: 'navBanner'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideNavContents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideNavContents:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    logout: faSignOutAlt,\n    menu: faBars,\n    close: faTimes\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: '',\n    router: ['app/profile'],\n    trackingCategory: 'navProfile'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     RouteEntry[]\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    caption: 'Dashboard',\n    router: ['app/dashboard'],\n    exact: true,\n    icon: faChartBar,\n    trackingCategory: 'navDashboard'\n  },\n  {\n    caption: 'Library',\n    router: ['app/library'],\n    exact: true,\n    icon: faList,\n    trackingCategory: 'navLibrary'\n  },\n  {\n    caption: 'Completion',\n    router: ['app/completion'],\n    exact: true,\n    icon: faClipboardList,\n    trackingCategory: 'navCompletion'\n  }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackerRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackerRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: 'Tracker',\n    router: ['app/tracker'],\n    exact: true,\n    icon: faClock,\n    trackingCategory: 'navTracker'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     UserInfo\n\n                    \n                \n                    \n                        \n                            Type :     UserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport {\n    faBars, faChartBar, faClipboardList, faList, faSignOutAlt, faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { UserService } from '../../features/auth/services/user.service';\n\nimport { UserInfo } from '../../features/auth/models';\nimport { RouteEntry } from '../../models';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavComponent implements OnInit {\n\n  @Input() trackerCaption = 'Tracker';\n  trackerRoute: RouteEntry = {\n    caption: 'Tracker',\n    router: ['app/tracker'],\n    exact: true,\n    icon: faClock,\n    trackingCategory: 'navTracker'\n  };\n  bannerRoute: RouteEntry = {\n    caption: 'Track My Playtime',\n    router: ['app'],\n    trackingCategory: 'navBanner'\n  };\n  profileRoute: RouteEntry = {\n    caption: '',\n    router: ['app/profile'],\n    trackingCategory: 'navProfile'\n  };\n  routes: RouteEntry[] = [{\n    caption: 'Dashboard',\n    router: ['app/dashboard'],\n    exact: true,\n    icon: faChartBar,\n    trackingCategory: 'navDashboard'\n  },\n  {\n    caption: 'Library',\n    router: ['app/library'],\n    exact: true,\n    icon: faList,\n    trackingCategory: 'navLibrary'\n  },\n  {\n    caption: 'Completion',\n    router: ['app/completion'],\n    exact: true,\n    icon: faClipboardList,\n    trackingCategory: 'navCompletion'\n  }\n  ];\n  hideNavContents = true;\n  userInfo: UserInfo;\n  icons = {\n    logout: faSignOutAlt,\n    menu: faBars,\n    close: faTimes\n  };\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n  toggleNav() {\n    this.hideNavContents = !this.hideNavContents;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      \n        {{ bannerRoute.caption }}\n        \n        \n      \n    \n\n    \n      \n        \n\n          \n            \n              \n            \n            {{ trackerRoute.caption }}\n            {{ trackerCaption }}\n          \n\n        \n        \n\n          \n            \n              \n            \n            {{ route.caption }}\n          \n\n        \n      \n    \n  \n\n  \n    \n      \n        \n        {{ userInfo.displayName }}\n      \n    \n\n    \n      Logout\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./nav.component.scss\n                \n                @import \"../../../variables.scss\";\n\n.nav {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n  background: $background-dark;\n  color: $text-light;\n  width: $sidebar-width;\n  position: fixed;\n\n  .main {\n    padding: 0px 15px;\n\n    .banner {\n      display: flex;\n      justify-content: center;\n      text-align: center;\n      margin: 30px 0px;\n\n      .menu {\n        display:none;\n      }\n\n      a{\n        text-decoration: none;\n\n        .text {\n          color: $text-light;\n          font-size: 1.1em;\n          display: none;\n          font-weight: bold;\n          text-transform: uppercase;\n        }\n\n        .no-text-logo {\n          display: none;\n        }\n\n        img {\n          width: 100%;\n        }\n      }\n    }\n\n    nav {\n      ul {\n        padding: 0;\n        list-style: none;\n\n        li{\n          border-radius: 8px;\n          margin-bottom: 5px;\n\n          .static {\n            display: none;\n          }\n\n          &.active {\n            background: $background-dark-accent;\n\n            a {\n              .dynamic {\n                display: none;\n              }\n\n              .static {\n                display: block;\n              }\n            }\n          }\n\n          &:hover {\n            background: $background-dark-accent;\n            cursor: pointer;\n          }\n\n          a{\n            color: $text-light;\n            text-decoration: none;\n\n            display: flex;\n            align-items: center;\n            height: 45px;\n            padding: 0px 10px;\n\n            .icon {\n              margin-right: 5px;\n              pointer-events: none;\n            }\n\n            .text {\n              pointer-events: none;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  .user {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    padding: 30px 15px;\n    font-size: .7em;\n    background: darken($background-dark, 10%);\n\n    .info a {\n      text-decoration: none;\n      color: $text-light;\n      display: flex;\n      align-items: center;\n\n      img {\n        width: 50px;\n        border-radius: 50%;\n      }\n\n      .name {\n        padding: 5px;\n      }\n    }\n\n    .logout {\n      font-size: $base-font-size;\n      color: $text-light;\n\n      .text {\n        display: none;\n      }\n    }\n  }\n}\n\n@media only screen and (max-width : $medium-breakpoint) {\n  .nav {\n    width: $small-sidebar-width;\n\n    .main {\n      .banner {\n        a {\n          .no-text-logo {\n            display: block;\n          }\n\n          .text-logo {\n            display: none;\n          }\n        }\n      }\n\n      nav {\n        ul {\n          li {\n            a {\n              justify-content: center;\n              height: 60px;\n\n              .icon {\n                font-size: 2em;\n              }\n\n              .text {\n                display: none;\n              }\n\n              .text.static {\n                display: none;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    .user {\n      .info a {\n        .name {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@media only screen and (max-width : $small-breakpoint) {\n  .nav {\n    width: 100%;\n    z-index: 70;\n\n    &.hide {\n      height: $small-nav-banner-height;\n\n      .main {\n        nav, ng-adsense {\n          display: none;\n        }\n      }\n      .user {\n        display: none;\n      }\n    }\n\n    .main {\n      .banner {\n        margin: 6px 0px;\n\n        .menu {\n          display: flex;\n          justify-self: flex-start;\n          font-size: 1.25em;\n\n          &:hover {\n            cursor: pointer;\n          }\n        }\n\n        a{\n          width: 100%;\n\n          .text {\n            display: block;\n          }\n\n          .text-logo, .no-text-logo {\n            display: none;\n          }\n        }\n      }\n\n      nav {\n        ul {\n          li {\n            a {\n              height: 20px;\n              padding: 0px 5px;\n\n              .icon {\n                display: none;\n              }\n\n              .text {\n                display: block;\n              }\n\n              .text.static {\n                display: block;\n              }\n\n              .text.dynamic {\n                display: none;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    .user {\n      padding: 5px;\n\n      .info a {\n        .name {\n          display: block;\n        }\n      }\n\n      .logout {\n        font-size: $small-font-size;\n\n        .icon {\n          display: none;\n        }\n\n        .text {\n          display: block;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ bannerRoute.caption }}                                                                                                        {{ trackerRoute.caption }}            {{ trackerCaption }}                                                                                      {{ route.caption }}                                                          {{ userInfo.displayName }}                    Logout                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgSelectValue.html":{"url":"interfaces/NgSelectValue.html","title":"interface - NgSelectValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgSelectValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotAuthenticated.html":{"url":"classes/NotAuthenticated.html","title":"class - NotAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NOT_AUTHENTICATED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PieChartConfig.html":{"url":"interfaces/PieChartConfig.html","title":"interface - PieChartConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PieChartConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GraphConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doughnut\n                                \n                                \n                                        explodeSlices\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doughnut\n                                    \n                                \n                                \n                                    \n                                        doughnut:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explodeSlices\n                                    \n                                \n                                \n                                    \n                                        explodeSlices:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformsEffects.html":{"url":"injectables/PlatformsEffects.html","title":"injectable - PlatformsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/platforms.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadOptions$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, platformsService: PlatformsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/platforms.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformsService\n                                                  \n                                                        \n                                                                    PlatformsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOptions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadOptions$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(platformsActions.LOAD_OPTIONS)\n      .pipe(\n        switchMap(() => this.platformsService.getPlatformsOptions()\n          .pipe(\n            map(data => new platformsActions.LoadOptionsSucceeded(data)),\n            catchError(err => of(new appActions.Error(platformsActions.LOAD_OPTIONS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/platforms.effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { PlatformsService } from '../services/platforms.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as platformsActions from '../../../shared/actions/platforms.actions';\n\n@Injectable()\nexport class PlatformsEffects {\n\n  constructor(private actions$: Actions, private platformsService: PlatformsService) { }\n\n  @Effect() loadOptions$ =\n    this.actions$\n      .ofType(platformsActions.LOAD_OPTIONS)\n      .pipe(\n        switchMap(() => this.platformsService.getPlatformsOptions()\n          .pipe(\n            map(data => new platformsActions.LoadOptionsSucceeded(data)),\n            catchError(err => of(new appActions.Error(platformsActions.LOAD_OPTIONS, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformsService.html":{"url":"injectables/PlatformsService.html","title":"injectable - PlatformsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/platforms.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                platformsCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatformsOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/platforms.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatformsOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatformsOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/platforms.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            platformsCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformsCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/platforms.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PlatformsService {\n\n  private platformsCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.platformsCollection = this.afs.collection('platforms');\n  }\n\n  getPlatformsOptions(): Observable {\n    const platformsItems = this.platformsCollection.valueChanges().pipe(first());\n    return platformsItems.pipe(map(items =>\n      items.sort((a, b) => a.index - b.index)\n        .map(item => item.option)));\n  }\n}\n\nexport interface FirestorePlatformsItem {\n  index: number;\n  option: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayingDisplayData.html":{"url":"interfaces/PlayingDisplayData.html","title":"interface - PlayingDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlayingDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/display-data.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endDates\n                                \n                                \n                                        item\n                                \n                                \n                                        markComplete\n                                \n                                \n                                        startEntryData\n                                \n                                \n                                        timePlayed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endDates\n                                    \n                                \n                                \n                                    \n                                        endDates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     ProgressItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProgressItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markComplete\n                                    \n                                \n                                \n                                    \n                                        markComplete:     MarkCompleteItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MarkCompleteItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryData\n                                    \n                                \n                                \n                                    \n                                        startEntryData:     HistoryListItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HistoryListItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timePlayed\n                                    \n                                \n                                \n                                    \n                                        timePlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompletedItem, HistoryListItem, ProgressItem } from '../../../shared/models';\n\nimport { MarkCompleteItem } from './';\n\nexport interface PlayingDisplayData {\n  item: ProgressItem;\n  startEntryData: HistoryListItem;\n  timePlayed: number;\n  endDates: number[];\n  markComplete: MarkCompleteItem;\n}\n\nexport interface CompletedDisplayData {\n  item: ProgressItem;\n  completedItem: CompletedItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayingItemComponent.html":{"url":"components/PlayingItemComponent.html","title":"component - PlayingItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlayingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/playing-item/playing-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-playing-item\n            \n\n            \n                styleUrls\n                ./playing-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playing-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markComplete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                setEndTime\n                            \n                            \n                                toggleShowExtra\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayData\n                            \n                            \n                                gameGroupings\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayData\n                    \n                    \n                            \n                            Type :    PlayingDisplayData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gameGroupings\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkComplete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEndTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEndTime(endTimeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endTimeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShowExtra\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShowExtra()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    complete: faCheck,\n    close: faTimes,\n    remove: faTrash\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faCheck, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as appActions from '../../../../actions/app.actions';\nimport * as progressActions from '../../../../shared/actions/progress.actions';\nimport * as markCompleteActions from '../../actions/mark-complete.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../../../shared/models';\nimport { PlayingDisplayData } from '../../models';\n\nimport { getEndItem } from '../../utils/playing.utils';\n\n@Component({\n  selector: 'app-completion-playing-item',\n  templateUrl: './playing-item.component.html',\n  styleUrls: ['./playing-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayingItemComponent implements OnInit {\n\n  @Input() displayData: PlayingDisplayData;\n  @Input() gameGroupings: HistoryGrouping[] = [];\n  userId = '';\n  icons = {\n    complete: faCheck,\n    close: faTimes,\n    remove: faTrash\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  toggleShowExtra() {\n    this.store.dispatch(new markCompleteActions.SetShowExtra(this.displayData.item.id, !this.displayData.markComplete.showExtra));\n  }\n\n  remove() {\n    this.store.dispatch(new progressActions.RemoveProgressItem(this.userId, this.displayData.item.id));\n  }\n\n  setEndTime(endTimeEl: HTMLSelectElement) {\n    const endTime = Number.parseInt(endTimeEl.value);\n    this.store.dispatch(new markCompleteActions.SetEndTime(this.displayData.item.id, endTime));\n  }\n\n  markComplete() {\n    const endItem = getEndItem(this.gameGroupings, this.displayData.startEntryData, this.displayData.markComplete.endTime);\n    if (endItem) {\n      this.store.dispatch(new progressActions.MarkComplete(this.userId, {\n        itemId: this.displayData.item.id,\n        endEntryId: endItem.id\n      }));\n    } else {\n      this.store.dispatch(new appActions.Error(progressActions.MARK_COMPLETE, 'No matching history item found.'));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ displayData.startEntryData.game }}\n        ({{ displayData.startEntryData.platform }})\n      \n      \n        Playtime: {{ displayData.timePlayed | time }}\n        Start: {{ displayData.startEntryData.startTime | date:'M/d/y - hh:mm a' }}\n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        End Time\n        {{ option | date:'M/d/y hh:mm a' }}\n      \n    \n    \n      Mark Completed\n    \n  \n\n    \n\n    \n                \n                    ./playing-item.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.playing-item {\n  border-bottom: 1px solid darken($background-light, 10%);\n  padding: 10px;\n  font-size: $small-font-size;\n\n  .display-element {\n    font-family: $base-font-family;\n    width: 100%;\n    padding: 5px;\n    background: $background-light;\n  }\n\n  .main {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n\n    .info {\n      display: flex;\n      flex-direction: column;\n\n      .game-info {\n        display: flex;\n        align-items: center;\n\n        .game {\n          font-weight: bold;\n        }\n\n        .platform {\n          font-style: italic;\n          opacity: .8;\n          font-size: 85%;\n          margin-left: 5px;\n        }\n      }\n\n      .time {\n        display: flex;\n        flex-direction: column;\n      }\n    }\n\n    .actions {\n      display: flex;\n\n      .complete {\n        color: $good-action-color;\n        margin-right: 10px;\n      }\n\n      .close {\n        color: $bad-action-color;\n        margin-right: 10px;\n      }\n\n      .remove {\n        color: $neutral-action-color;\n      }\n    }\n  }\n\n  .extra {\n    display: flex;\n    justify-content: space-evenly;\n    padding: 10px;\n    background: darken($background-light, 20%);\n\n    .endTime   {\n      width: 50%;\n      margin-right: 5px;\n\n      select {\n        @extend .display-element;\n        outline: none;\n        border: none;\n        appearance: none;\n\n        &:hover {\n          cursor: pointer;\n        }\n      }\n    }\n\n    .complete {\n      width: 50%;\n      margin-left: 5px;\n\n      button {\n        width: 100%;\n        background: $background-dark;\n        color: $text-light;\n        border: none;\n        height: 100%;\n\n        &:disabled {\n          background: $background-dark-accent;\n          cursor: not-allowed;\n        }\n\n        &:hover:enabled {\n          cursor: pointer;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ displayData.startEntryData.game }}        ({{ displayData.startEntryData.platform }})                    Playtime: {{ displayData.timePlayed | time }}        Start: {{ displayData.startEntryData.startTime | date:\\'M/d/y - hh:mm a\\' }}                                                                                                    End Time        {{ option | date:\\'M/d/y hh:mm a\\' }}                    Mark Completed      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PluralizePipe.html":{"url":"pipes/PluralizePipe.html","title":"pipe - PluralizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PluralizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/pluralize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pluralize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, singlularWord: string, pluralWord: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/pluralize.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        singlularWord\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pluralWord\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'pluralize' })\nexport class PluralizePipe implements PipeTransform {\n  transform(value: number, singlularWord: string, pluralWord: string): string {\n    if (value === 1) {\n      return singlularWord;\n    }\n    return pluralWord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/models/profile.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editName\n                            \n                            \n                                icons\n                            \n                            \n                                message\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendResetPasswordLink\n                            \n                            \n                                setEditName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/profile.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendResetPasswordLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendResetPasswordLink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditName(editName: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editName\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editName:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    edit: faEdit\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     UserInfo\n\n                    \n                \n                    \n                        \n                            Type :     UserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../auth/services/user.service';\n\nimport * as userActions from '../auth/actions/user.actions';\n\nimport { State as AuthState } from '../auth/reducers/root.reducer';\n\nimport { UserInfo } from '../auth/models';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  userInfo: UserInfo;\n  message = '';\n  editName = false;\n  icons = {\n    edit: faEdit\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  sendResetPasswordLink() {\n    this.store.dispatch(new userActions.ResetPassword(this.userInfo.email));\n    this.message = `A password reset email has been sent to ${this.userInfo.email}`;\n  }\n\n  setEditName(editName: boolean) {\n    this.editName = editName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        About\n\n        \n          \n            Display Name: {{ userInfo.displayName }}\n            \n              \n            \n          \n\n          \n        \n\n        Email: {{ userInfo.email }}\n      \n    \n\n    \n      Account\n\n      Reset Password\n      {{ message }}\n    \n  \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                @import \"../../../variables.scss\";\n\n.content {\n  .profile{\n    padding: 20px;\n\n    .user-info {\n      display: flex;\n\n      img {\n        max-height: 200px;\n        width: auto;\n      }\n\n      .about {\n        margin-left: 10px;\n\n        .name, .email{\n          height: $profile-field-height;\n\n          span {\n            text-decoration: underline;\n          }\n\n          .no-edit {\n            display: flex;\n\n            button {\n              display: flex;\n              justify-content: center;\n              align-items: center;\n            }\n          }\n        }\n      }\n    }\n\n    .account {\n      button {\n        border: none;\n        color: $background-dark;\n        background: $background-light-accent;\n        padding: 15px;\n\n        &:hover:not(:disabled) {\n          background: darken($background-light-accent, 5%);\n          cursor: pointer;\n        }\n      }\n    }\n\n    section {\n      background: $background-light;\n      padding: 10px;\n\n      .header {\n        font-weight: bold;\n        font-size: $base-font-size + 2px;\n      }\n\n      &:not(:last-child) {\n        margin-bottom: 20px;\n      }\n    }\n  }\n}\n\n@media only screen  and (max-width : $small-breakpoint) {\n  .content {\n    .profile {\n      margin-top: $small-nav-banner-height;\n\n      .user-info {\n        flex-direction: column;\n\n        img {\n          align-self: center;\n          margin-bottom: 5px;\n        }\n\n        .about {\n          margin-left: 0px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          About                              Display Name: {{ userInfo.displayName }}                                                                          Email: {{ userInfo.email }}                    Account      Reset Password      {{ message }}      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileEffects.html":{"url":"injectables/ProfileEffects.html","title":"injectable - ProfileEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/effects/profile.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadProfile$\n                            \n                            \n                                setDisplayName$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/effects/profile.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProfile$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadProfile$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(profileActions.LOAD_PROFILE)\n      .pipe(\n        map(action => action as profileActions.LoadProfile),\n        switchMap(action => this.profileService.getProfile(action.userId)\n          .pipe(\n            map(data => new profileActions.LoadProfileSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.LOAD_PROFILE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/effects/profile.effects.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setDisplayName$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(profileActions.SET_PROFILE_DISPLAYNAME)\n      .pipe(\n        map(action => action as profileActions.SetProfileDisplayName),\n        switchMap(action => this.profileService.setDisplayName(action.userId, action.displayName)\n          .pipe(\n            map(data => new profileActions.SetProfileDisplayNameSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.SET_PROFILE_DISPLAYNAME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/effects/profile.effects.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { ProfileService } from '../services/profile.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as profileActions from '../actions/profile.actions';\n\n@Injectable()\nexport class ProfileEffects {\n\n  constructor(private actions$: Actions, private profileService: ProfileService) { }\n\n  @Effect() loadProfile$ =\n    this.actions$\n      .ofType(profileActions.LOAD_PROFILE)\n      .pipe(\n        map(action => action as profileActions.LoadProfile),\n        switchMap(action => this.profileService.getProfile(action.userId)\n          .pipe(\n            map(data => new profileActions.LoadProfileSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.LOAD_PROFILE, err.message))))));\n\n  @Effect() setDisplayName$ =\n    this.actions$\n      .ofType(profileActions.SET_PROFILE_DISPLAYNAME)\n      .pipe(\n        map(action => action as profileActions.SetProfileDisplayName),\n        switchMap(action => this.profileService.setDisplayName(action.userId, action.displayName)\n          .pipe(\n            map(data => new profileActions.SetProfileDisplayNameSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.SET_PROFILE_DISPLAYNAME, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nEditDisplayNameComponent\n\nEditDisplayNameComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nEditDisplayNameComponent->ProfileModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditDisplayNameComponent\n                            \n                            \n                                ProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport {\n    EditDisplayNameComponent\n} from './components/edit-display-name/edit-display-name.component';\nimport { ProfileComponent } from './profile.component';\n\nimport { ProfileEffects } from './effects/profile.effects';\n\nimport { ProfileService } from './services/profile.service';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    StoreModule.forFeature('profile', reducers),\n    EffectsModule.forFeature([ProfileEffects]),\n  ],\n  declarations: [\n    ProfileComponent,\n    EditDisplayNameComponent\n  ],\n  providers: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                profileCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                setDisplayName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/services/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetProfile(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisplayName(userId: string, displayName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        displayName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            profileCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Profile } from '../models';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.profileCollection = this.afs.collection('profile');\n  }\n\n  getProfile(userId: string): Observable {\n    const profileDoc = this.profileCollection.doc(userId).valueChanges().pipe(first());\n    return profileDoc.pipe(map(profile => {\n      ...profile\n    }));\n  }\n\n  setDisplayName(userId: string, displayName: string): Observable {\n    this.profileCollection.doc(userId).set({ displayName }, { merge: true });\n    return of(displayName);\n  }\n}\n\nexport interface FirestoreProfileItem {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     fromProfile.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromProfile.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromProfile from './profile.reducer';\n\nimport { Profile } from '../models';\n\nexport interface ProfileState {\n  info: fromProfile.State;\n}\n\nexport interface State {\n  profile: ProfileState;\n}\n\nexport const reducers: ActionReducerMap = {\n  info: fromProfile.reducer\n};\n\nexport const _selectProfileState = createFeatureSelector('profile');\nexport const _selectInfo = createSelector(_selectProfileState, state => state.info as Profile);\n\nconst profileSelectors = {\n  info: _selectInfo\n};\n\nexport default profileSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressCollection.html":{"url":"interfaces/ProgressCollection.html","title":"interface - ProgressCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     FirestoreProgressItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirestoreProgressItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressEffects.html":{"url":"injectables/ProgressEffects.html","title":"injectable - ProgressEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProgressEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/effects/progress.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadProgressItems$\n                            \n                            \n                                markCompleted$\n                            \n                            \n                                removeProgressItem$\n                            \n                            \n                                saveAddPlayingSucceeded$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, progressService: ProgressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/effects/progress.effects.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                    ProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProgressItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadProgressItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.LOAD_PROGRESS_ITEMS)\n      .pipe(\n        map(action => action as progressActions.LoadProgressItems),\n        switchMap(action => this.progressService.getProgressList(action.userId)\n          .pipe(\n            mergeMap(entities => [\n              new progressActions.LoadProgressItemsSucceeded(entities),\n              new markCompleteActions.LoadItems(entities.filter(entity => entity.endEntryId === '').map(entity => entity.id))\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.LOAD_PROGRESS_ITEMS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markCompleted$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markCompleted$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.MARK_COMPLETE)\n      .pipe(\n        map(action => action as progressActions.MarkComplete),\n        switchMap(action => this.progressService.markCompleted(action.userId, action.payload)\n          .pipe(\n            mergeMap(data => [\n              new progressActions.MarkCompleteSucceeded(data),\n              new markCompleteActions.Remove(data.itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.MARK_COMPLETE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeProgressItem$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeProgressItem$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.REMOVE_PROGRESS_ITEM)\n      .pipe(\n        map(action => action as progressActions.RemoveProgressItem),\n        switchMap(action => this.progressService.remove(action.userId, action.itemId)\n          .pipe(\n            mergeMap(itemId => [\n              new progressActions.RemoveProgressItemSucceeded(itemId),\n              new markCompleteActions.Remove(itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.REMOVE_PROGRESS_ITEM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAddPlayingSucceeded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveAddPlayingSucceeded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(addPlayingActions.SAVE_SUCCEEDED)\n      .pipe(\n        map(action => action as addPlayingActions.SaveSucceeded),\n        map(action => action.item),\n        mergeMap(item => [\n          new progressActions.AddNewProgressItem(item),\n          new markCompleteActions.AddNewItem(item.id)\n        ]))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProgressService } from '../services/progress.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as progressActions from '../../../shared/actions/progress.actions';\nimport * as addPlayingActions from '../actions/add-playing.actions';\nimport * as markCompleteActions from '../actions/mark-complete.actions';\n\n@Injectable()\nexport class ProgressEffects {\n\n  constructor(private actions$: Actions, private progressService: ProgressService) { }\n\n  @Effect() loadProgressItems$ =\n    this.actions$\n      .ofType(progressActions.LOAD_PROGRESS_ITEMS)\n      .pipe(\n        map(action => action as progressActions.LoadProgressItems),\n        switchMap(action => this.progressService.getProgressList(action.userId)\n          .pipe(\n            mergeMap(entities => [\n              new progressActions.LoadProgressItemsSucceeded(entities),\n              new markCompleteActions.LoadItems(entities.filter(entity => entity.endEntryId === '').map(entity => entity.id))\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.LOAD_PROGRESS_ITEMS, err.message))))));\n\n  @Effect() saveAddPlayingSucceeded$ =\n    this.actions$\n      .ofType(addPlayingActions.SAVE_SUCCEEDED)\n      .pipe(\n        map(action => action as addPlayingActions.SaveSucceeded),\n        map(action => action.item),\n        mergeMap(item => [\n          new progressActions.AddNewProgressItem(item),\n          new markCompleteActions.AddNewItem(item.id)\n        ]));\n\n  @Effect() markCompleted$ =\n    this.actions$\n      .ofType(progressActions.MARK_COMPLETE)\n      .pipe(\n        map(action => action as progressActions.MarkComplete),\n        switchMap(action => this.progressService.markCompleted(action.userId, action.payload)\n          .pipe(\n            mergeMap(data => [\n              new progressActions.MarkCompleteSucceeded(data),\n              new markCompleteActions.Remove(data.itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.MARK_COMPLETE, err.message))))));\n\n  @Effect() removeProgressItem$ =\n    this.actions$\n      .ofType(progressActions.REMOVE_PROGRESS_ITEM)\n      .pipe(\n        map(action => action as progressActions.RemoveProgressItem),\n        switchMap(action => this.progressService.remove(action.userId, action.itemId)\n          .pipe(\n            mergeMap(itemId => [\n              new progressActions.RemoveProgressItemSucceeded(itemId),\n              new markCompleteActions.Remove(itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.REMOVE_PROGRESS_ITEM, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressEntity.html":{"url":"interfaces/ProgressEntity.html","title":"interface - ProgressEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/progress.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/progress.actions';\n\nexport interface ProgressEntity {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_PROGRESS_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_PROGRESS_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_PROGRESS_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_PROGRESS_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.MARK_COMPLETE_SUCCEEDED: {\n      const { itemId: id, ...changes } = action.payload;\n      return adapter.updateOne({\n        id,\n        changes\n      }, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressItem.html":{"url":"interfaces/ProgressItem.html","title":"interface - ProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressService.html":{"url":"injectables/ProgressService.html","title":"injectable - ProgressService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProgressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                progressCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewProgressItem\n                            \n                            \n                                getProgressList\n                            \n                            \n                                    Private\n                                getUserItemCollection\n                            \n                            \n                                markCompleted\n                            \n                            \n                                remove\n                            \n                            \n                                saveAddPlaying\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/services/progress.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNewProgressItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNewProgressItem(addPlaying: AddPlaying)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                        \n                                                                    AddPlaying\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FirestoreProgressItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProgressList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetProgressList(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserItemCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserItemCollection(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkCompleted(userId: string, payload: MarkCompletePayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(userId: string, itemId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAddPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveAddPlaying(addPlaying: AddPlaying)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                        \n                                                                    AddPlaying\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            progressCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn$\n                            \n                            \n                                message$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailSignUp\n                            \n                            \n                                facebookSignUp\n                            \n                            \n                                googleSignUp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                twitterSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailSignUp(event: EmailAuthEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    EmailAuthEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ntwitterSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingIn$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingIn$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport authComponentSelectors, { State } from '../../reducers/root.reducer';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  loggingIn$: Observable;\n  message$: Observable;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.loggingIn$ = this.store.select(authComponentSelectors.loggingIn);\n    this.message$ = this.store.select(authComponentSelectors.validationMessage);\n  }\n\n  googleSignUp() {\n    this.store.dispatch(new userActions.GoogleLogin());\n  }\n\n  facebookSignUp() {\n    this.store.dispatch(new userActions.FacebookLogin());\n  }\n\n  twitterSignUp() {\n    this.store.dispatch(new userActions.TwitterLogin());\n  }\n\n  emailSignUp(event: EmailAuthEvent) {\n    this.store.dispatch(new userActions.SignUp(event.email, event.password));\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                @import \"../../../../../variables\";\n\n.register {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: $main-height;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Remove.html":{"url":"classes/Remove.html","title":"class - Remove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveHistoryItem.html":{"url":"classes/RemoveHistoryItem.html","title":"class - RemoveHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_HISTORY_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveHistoryItemSucceeded.html":{"url":"classes/RemoveHistoryItemSucceeded.html","title":"class - RemoveHistoryItemSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveHistoryItemSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_HISTORY_ITEM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProgressItem.html":{"url":"classes/RemoveProgressItem.html","title":"class - RemoveProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_PROGRESS_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProgressItemSucceeded.html":{"url":"classes/RemoveProgressItemSucceeded.html","title":"class - RemoveProgressItemSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProgressItemSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_PROGRESS_ITEM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:27\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassword.html":{"url":"classes/ResetPassword.html","title":"class - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_PASSWORD\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetTimer.html":{"url":"classes/ResetTimer.html","title":"class - ResetTimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetTimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_TIMER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteEntry.html":{"url":"interfaces/RouteEntry.html","title":"interface - RouteEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        caption\n                                \n                                \n                                            Optional\n                                        exact\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        router\n                                \n                                \n                                        trackingCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                    \n                                \n                                \n                                    \n                                        exact:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     any[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackingCategory\n                                    \n                                \n                                \n                                    \n                                        trackingCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport interface RouteEntry {\n  caption: string;\n  router: any[] | string;\n  exact?: boolean;\n  icon?: IconDefinition;\n  trackingCategory: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateUrl.html":{"url":"interfaces/RouterStateUrl.html","title":"interface - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        params\n                                \n                                \n                                        queryParams\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Save.html":{"url":"classes/Save.html","title":"class - Save","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Save\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPlaying\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addPlaying: AddPlaying)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                  \n                                                        \n                                                                    AddPlaying\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addPlaying:     AddPlaying\n\n                    \n                \n                    \n                        \n                            Type :     AddPlaying\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveSucceeded.html":{"url":"classes/SaveSucceeded.html","title":"class - SaveSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: ProgressEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    ProgressEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     ProgressEntity\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveTimerInfo.html":{"url":"classes/SaveTimerInfo.html","title":"class - SaveTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info: AddTimerInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     AddTimerInfo\n\n                    \n                \n                    \n                        \n                            Type :     AddTimerInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveTimerInfoSucceeded.html":{"url":"classes/SaveTimerInfoSucceeded.html","title":"class - SaveTimerInfoSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveTimerInfoSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: HistoryEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    HistoryEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     HistoryEntity\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_TIMER_INFO_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAttemptingLogin.html":{"url":"classes/SetAttemptingLogin.html","title":"class - SetAttemptingLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAttemptingLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/status.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attemptingLogin\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attemptingLogin: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/status.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attemptingLogin\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            attemptingLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attemptingLogin:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ATTEMPTING_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_ATTEMPTING_LOGIN = '[Status] Set Attempting Login';\nexport class SetAttemptingLogin implements Action {\n  readonly type = SET_ATTEMPTING_LOGIN;\n  constructor(public attemptingLogin: boolean) { }\n}\n\nexport const SET_VALIDATION_MESSAGE = '[Status] Set Validation Message';\nexport class SetValidationMessage implements Action {\n  readonly type = SET_VALIDATION_MESSAGE;\n  constructor(public validationMessage: string) { }\n}\n\nexport type All = SetAttemptingLogin | SetValidationMessage;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetEndTime.html":{"url":"classes/SetEndTime.html","title":"class - SetEndTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetEndTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endTime\n                            \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string, endTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ENDTIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGame.html":{"url":"classes/SetGame.html","title":"class - SetGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGame-1.html":{"url":"classes/SetGame-1.html","title":"class - SetGame-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLastMonth.html":{"url":"classes/SetLastMonth.html","title":"class - SetLastMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLastMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAST_MONTH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLastWeek.html":{"url":"classes/SetLastWeek.html","title":"class - SetLastWeek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLastWeek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAST_WEEK\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPlatform.html":{"url":"classes/SetPlatform.html","title":"class - SetPlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPlatform-1.html":{"url":"classes/SetPlatform-1.html","title":"class - SetPlatform-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileDisplayName.html":{"url":"classes/SetProfileDisplayName.html","title":"class - SetProfileDisplayName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileDisplayName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PROFILE_DISPLAYNAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileDisplayNameSucceeded.html":{"url":"classes/SetProfileDisplayNameSucceeded.html","title":"class - SetProfileDisplayNameSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileDisplayNameSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PROFILE_DISPLAYNAME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowExtra.html":{"url":"classes/SetShowExtra.html","title":"class - SetShowExtra","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowExtra\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Public\n                                showExtra\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string, showExtra: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        showExtra\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showExtra\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showExtra:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_EXTRA\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStartTime.html":{"url":"classes/SetStartTime.html","title":"class - SetStartTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStartTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_START_TIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStartTime-1.html":{"url":"classes/SetStartTime-1.html","title":"class - SetStartTime-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStartTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_STARTTIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetThisMonth.html":{"url":"classes/SetThisMonth.html","title":"class - SetThisMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetThisMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_THIS_MONTH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetThisWeek.html":{"url":"classes/SetThisWeek.html","title":"class - SetThisWeek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetThisWeek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_THIS_WEEK\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTimerInfo.html":{"url":"classes/SetTimerInfo.html","title":"class - SetTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info: TimerInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                    TimerInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     TimerInfo\n\n                    \n                \n                    \n                        \n                            Type :     TimerInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetValidationMessage.html":{"url":"classes/SetValidationMessage.html","title":"class - SetValidationMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetValidationMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/status.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                validationMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/status.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessage\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VALIDATION_MESSAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validationMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_ATTEMPTING_LOGIN = '[Status] Set Attempting Login';\nexport class SetAttemptingLogin implements Action {\n  readonly type = SET_ATTEMPTING_LOGIN;\n  constructor(public attemptingLogin: boolean) { }\n}\n\nexport const SET_VALIDATION_MESSAGE = '[Status] Set Validation Message';\nexport class SetValidationMessage implements Action {\n  readonly type = SET_VALIDATION_MESSAGE;\n  constructor(public validationMessage: string) { }\n}\n\nexport type All = SetAttemptingLogin | SetValidationMessage;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetVisibleTab.html":{"url":"classes/SetVisibleTab.html","title":"class - SetVisibleTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetVisibleTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/tab.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tab\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tab: TabType)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/tab.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                  \n                                                        \n                                                                    TabType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab:     TabType\n\n                    \n                \n                    \n                        \n                            Type :     TabType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/tab.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VISIBLE_TAB\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/tab.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { TabType } from '../models';\n\nexport const SET_VISIBLE_TAB = '[Tab] Set Visible Tab';\nexport class SetVisibleTab implements Action {\n    readonly type = SET_VISIBLE_TAB;\n    constructor(public tab: TabType) { }\n}\n\nexport type All = SetVisibleTab;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nElapsedTimePipe\n\nElapsedTimePipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nElapsedTimePipe->SharedModule\n\n\n\n\n\nPluralizePipe\n\nPluralizePipe\n\nSharedModule -->\n\nPluralizePipe->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nTimePipe\n\nTimePipe\n\nSharedModule -->\n\nTimePipe->SharedModule\n\n\n\n\n\nElapsedTimePipe \n\nElapsedTimePipe \n\nElapsedTimePipe  -->\n\nSharedModule->ElapsedTimePipe \n\n\n\n\n\nPluralizePipe \n\nPluralizePipe \n\nPluralizePipe  -->\n\nSharedModule->PluralizePipe \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nTimePipe \n\nTimePipe \n\nTimePipe  -->\n\nSharedModule->TimePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ElapsedTimePipe\n                            \n                            \n                                PluralizePipe\n                            \n                            \n                                SpinnerComponent\n                            \n                            \n                                TimePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ElapsedTimePipe\n                            \n                            \n                                    PluralizePipe\n                            \n                            \n                                    SpinnerComponent\n                            \n                            \n                                    TimePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { SpinnerComponent } from './components/spinner/spinner.component';\n\nimport { ElapsedTimePipe } from './pipes/elapsed-time.pipe';\nimport { PluralizePipe } from './pipes/pluralize.pipe';\nimport { TimePipe } from './pipes/time.pipe';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('shared', reducers),\n  ],\n  declarations: [\n    ElapsedTimePipe,\n    TimePipe,\n    SpinnerComponent,\n    PluralizePipe\n  ],\n  exports: [\n    ElapsedTimePipe,\n    TimePipe,\n    SpinnerComponent,\n    PluralizePipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SharedState.html":{"url":"interfaces/SharedState.html","title":"interface - SharedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SharedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        history\n                                \n                                \n                                        platforms\n                                \n                                \n                                        progress\n                                \n                                \n                                        timer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:     fromHistory.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromHistory.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                    \n                                \n                                \n                                    \n                                        platforms:     fromPlatforms.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPlatforms.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:     fromProgress.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromProgress.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timer\n                                    \n                                \n                                \n                                    \n                                        timer:     fromTimer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTimer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromHistory from './history.reducer';\nimport * as fromPlatforms from './platforms.reducer';\nimport * as fromProgress from './progress.reducer';\nimport * as fromTimer from './timer.reducer';\n\nimport { HistoryListItem, ProgressItem, TimerInfo } from '../models';\n\nimport { formatDate } from '../utils/date.utils';\nimport { getUniqueFrom } from '../utils/history-filter.utils';\nimport { getHistoryGroupingList, getHistoryListItemsMap } from '../utils/history.utils';\n\nexport interface SharedState {\n  history: fromHistory.State;\n  platforms: fromPlatforms.State;\n  progress: fromProgress.State;\n  timer: fromTimer.State;\n}\n\nexport interface State {\n  shared: SharedState;\n}\n\nexport const reducers: ActionReducerMap = {\n  history: fromHistory.reducer,\n  platforms: fromPlatforms.reducer,\n  progress: fromProgress.reducer,\n  timer: fromTimer.reducer\n};\n\nexport const _selectSharedState = createFeatureSelector('shared');\nexport const _selectHistory = createSelector(_selectSharedState, state => state.history);\nexport const _selectPlatforms = createSelector(_selectSharedState, state => state.platforms);\nexport const _selectProgress = createSelector(_selectSharedState, state => state.progress);\nexport const _selectTimer = createSelector(_selectSharedState, state => state.timer);\n\nexport const { selectAll: _selectAllProgress } = fromProgress.adapter.getSelectors(_selectProgress);\nexport const _selectPlayingProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId === '')\n    .map(entity => entity as ProgressItem));\nexport const _selectCompletedProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId !== '')\n    .map(entity => entity as ProgressItem));\n\nexport const { selectAll: _selectAllHistory } = fromHistory.adapter.getSelectors(_selectHistory);\nexport const _selectHistoryItems = createSelector(_selectAllHistory, _selectAllProgress,\n  (historyEntries, progress) => historyEntries.map(\n    historyEntry => {\n      ...historyEntry,\n      dateRange: [\n        new Date(historyEntry.startTime),\n        new Date(historyEntry.endTime),\n      ],\n      locked: progress.some(x => x.startEntryId === historyEntry.id || x.endEntryId === historyEntry.id)\n    }));\nexport const _selectSortedHistoryItems = createSelector(_selectHistoryItems, items => items.sort((a, b) => b.startTime - a.startTime));\nexport const _selectHistoryGroupingsByDate = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => formatDate(item.dateRange[0]));\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByPlatform = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.platform);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByGame = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.game);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryLoading = createSelector(_selectHistory, history => history.loading);\nexport const _selectTrackedGames = createSelector(_selectSortedHistoryItems, items => getUniqueFrom(items, item => item.game));\n\nexport const _selectPlatformsOptions = createSelector(_selectPlatforms, platforms => platforms.options);\nexport const _selectPlatformsLoaded = createSelector(_selectPlatformsOptions, platformOptions => platformOptions.length !== 0);\n\nexport const _selectTimerInfo = createSelector(_selectTimer, timer => timer as TimerInfo);\n\nexport const _selectUserDataLoaded = createSelector(_selectHistory, _selectProgress, _selectPlatformsLoaded,\n  (history, progress, platformsLoaded) => !history.loading && !progress.loading && platformsLoaded);\n\nconst sharedSelectors = {\n  historyGroupingsByDate: _selectHistoryGroupingsByDate,\n  historyGroupingsByPlatform: _selectHistoryGroupingsByPlatform,\n  historyGroupingsByGame: _selectHistoryGroupingsByGame,\n  historyLoading: _selectHistoryLoading,\n  historyTrackedGames: _selectTrackedGames,\n  platformsOptions: _selectPlatformsOptions,\n  progressPlaying: _selectPlayingProgress,\n  progressCompleted: _selectCompletedProgress,\n  timerInfo: _selectTimerInfo,\n  userDataLoaded: _selectUserDataLoaded\n};\n\nexport default sharedSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUp.html":{"url":"classes/SignUp.html","title":"class - SignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SIGNUP\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/spinner/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shared-spinner\n            \n\n            \n                styleUrls\n                ./spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/spinner/spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/spinner/spinner.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shared-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./spinner.component.scss\n                \n                @import '../../../../variables.scss';\n\n.spinner {\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n}\n\n.spinner div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 51px;\n  height: 51px;\n  margin: 6px;\n  border: 6px solid $background-dark;\n  border-radius: 50%;\n  animation: spinner 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: $background-dark transparent transparent transparent;\n}\n\n.spinner div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n\n.spinner div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n\n.spinner div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n\n@keyframes spinner {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/error.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/app.actions';\n\nexport interface State {\n  action: string;\n  message: string;\n}\n\nconst initialState: State = {\n  action: '',\n  message: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.APP_ERROR: {\n      return {\n        ...state,\n        action: action.action,\n        message: action.message\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        router\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     fromError.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromError.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     fromRouter.RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromRouter.RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-10.html":{"url":"interfaces/State-10.html","title":"interface - State-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/tab.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tab\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                    \n                                \n                                \n                                    \n                                        tab:     TabType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TabType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/tab.actions';\n\nimport { TabType } from '../models';\n\nexport interface State {\n  tab: TabType;\n}\n\nconst initialState: State = {\n  tab: 'PLAYING'\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_VISIBLE_TAB: {\n      return {\n        ...state,\n        tab: action.tab\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-11.html":{"url":"interfaces/State-11.html","title":"interface - State-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/date-range.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endDay\n                                \n                                \n                                        startDay\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endDay\n                                    \n                                \n                                \n                                    \n                                        endDay:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDay\n                                    \n                                \n                                \n                                    \n                                        startDay:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     DateRangeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateRangeType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { endOfMonth, endOfWeek, startOfMonth, startOfWeek, subDays } from 'date-fns';\n\nimport * as actions from '../actions/date-range.actions';\n\nimport { DateRangeType } from '../models';\n\nexport interface State {\n  startDay: Date;\n  endDay: Date;\n  type: DateRangeType;\n}\n\nconst getState = (startDay: Date, endDay: Date, type: DateRangeType): State => {\n  return {\n    startDay,\n    endDay,\n    type\n  };\n};\n\nconst now = new Date();\nconst startWeek = startOfWeek(now);\nconst endWeek = endOfWeek(now);\nconst initialState: State = getState(startWeek, endWeek, 'THIS_WEEK');\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_THIS_WEEK: {\n      return initialState;\n    }\n    case actions.SET_LAST_WEEK: {\n      const startThisWeek = startOfWeek(now);\n      const endLastWeek = subDays(startThisWeek, 1);\n      const startLastWeek = startOfWeek(endLastWeek);\n      return getState(startLastWeek, endLastWeek, 'LAST_WEEK');\n    }\n    case actions.SET_THIS_MONTH: {\n      const startMonth = startOfMonth(now);\n      const endMonth = endOfMonth(now);\n      return getState(startMonth, endMonth, 'THIS_MONTH');\n    }\n    case actions.SET_LAST_MONTH: {\n      const startThisMonth = startOfMonth(now);\n      const endLastMonth = subDays(startThisMonth, 1);\n      const startLastMonth = startOfMonth(endLastMonth);\n      return getState(startLastMonth, endLastMonth, 'LAST_MONTH');\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-12.html":{"url":"interfaces/State-12.html","title":"interface - State-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     DashboardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DashboardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { eachDay } from 'date-fns';\n\nimport * as fromDateRange from './date-range.reducer';\n\nexport interface DashboardState {\n  dateRange: fromDateRange.State;\n}\n\nexport interface State {\n  dashboard: DashboardState;\n}\n\nexport const reducers: ActionReducerMap = {\n  dateRange: fromDateRange.reducer\n};\n\nexport const _selectDashboardFeature = createFeatureSelector('dashboard');\nexport const _selectDateRange = createSelector(_selectDashboardFeature, state => state.dateRange);\n\nexport const _selectDateList = createSelector(_selectDateRange, dateRange => {\n  return eachDay(dateRange.startDay, dateRange.endDay);\n});\nexport const _selectRangeType = createSelector(_selectDateRange, dateRange => dateRange.type);\n\nconst dashboardSelectors = {\n  dateList: _selectDateList,\n  rangeType: _selectRangeType\n};\n\nexport default dashboardSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-13.html":{"url":"interfaces/State-13.html","title":"interface - State-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/profile.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/profile.actions';\n\nexport interface State {\n  displayName: string;\n}\n\nconst initialState: State = {\n  displayName: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.LOAD_PROFILE_SUCCEEDED: {\n      return {\n        ...state,\n        ...action.profile\n      };\n    }\n    case actions.SET_PROFILE_DISPLAYNAME_SUCCEEDED: {\n      return {\n        ...state,\n        displayName: action.displayName\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-14.html":{"url":"interfaces/State-14.html","title":"interface - State-14","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     ProfileState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProfileState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromProfile from './profile.reducer';\n\nimport { Profile } from '../models';\n\nexport interface ProfileState {\n  info: fromProfile.State;\n}\n\nexport interface State {\n  profile: ProfileState;\n}\n\nexport const reducers: ActionReducerMap = {\n  info: fromProfile.reducer\n};\n\nexport const _selectProfileState = createFeatureSelector('profile');\nexport const _selectInfo = createSelector(_selectProfileState, state => state.info as Profile);\n\nconst profileSelectors = {\n  info: _selectInfo\n};\n\nexport default profileSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-15.html":{"url":"interfaces/State-15.html","title":"interface - State-15","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromStatus from './status.reducer';\nimport * as fromUser from './user.reducer';\n\nimport { User } from '../models';\n\nexport interface AuthState {\n  user: fromUser.State;\n  status: fromStatus.State;\n}\n\nexport interface State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: fromUser.reducer,\n  status: fromStatus.reducer\n};\n\nexport const _selectAuthState = createFeatureSelector('auth');\nexport const _selectUser = createSelector(_selectAuthState, state => state.user);\nexport const _selectStatus = createSelector(_selectAuthState, state => state.status);\n\nexport const _selectUserLoggedIn = createSelector(_selectUser, user => user.uid !== '');\nexport const _selectUserData = createSelector(_selectUser, user => user as User);\n\nexport const _selectStatusLoggingIn = createSelector(_selectStatus, status => status.attemptingLogin);\nexport const _selectStatusValidationMessage = createSelector(_selectStatus, status => status.validationMessage);\n\nconst authComponentSelectors = {\n  isUserLoggedIn: _selectUserLoggedIn,\n  user: _selectUserData,\n  loggingIn: _selectStatusLoggingIn,\n  validationMessage: _selectStatusValidationMessage\n};\n\nexport default authComponentSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-16.html":{"url":"interfaces/State-16.html","title":"interface - State-16","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/status.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attemptingLogin\n                                \n                                \n                                        validationMessage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attemptingLogin\n                                    \n                                \n                                \n                                    \n                                        attemptingLogin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationMessage\n                                    \n                                \n                                \n                                    \n                                        validationMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/status.actions';\n\nexport interface State {\n  attemptingLogin: boolean;\n  validationMessage: string;\n}\n\nconst initialState: State = {\n  attemptingLogin: false,\n  validationMessage: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_ATTEMPTING_LOGIN: {\n      return {\n        ...state,\n        attemptingLogin: action.attemptingLogin\n      };\n    }\n    case actions.SET_VALIDATION_MESSAGE: {\n      return {\n        ...state,\n        validationMessage: action.validationMessage\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-17.html":{"url":"interfaces/State-17.html","title":"interface - State-17","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/user.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        providerId\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerId\n                                    \n                                \n                                \n                                    \n                                        providerId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/user.actions';\n\nexport interface State {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nconst initialState: State = {\n  uid: '',\n  displayName: '',\n  email: '',\n  photoURL: '',\n  providerId: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.AUTHENTICATED: {\n      return {\n        ...state,\n        ...action.user\n      };\n    }\n    case actions.NOT_AUTHENTICATED: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-18.html":{"url":"interfaces/State-18.html","title":"interface - State-18","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/display.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entriesToShow\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entriesToShow\n                                    \n                                \n                                \n                                    \n                                        entriesToShow:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/display.actions';\n\nexport interface State {\n  entriesToShow: number;\n}\n\nconst initialState: State = {\n  entriesToShow: 4\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.INCREMENT_DAYS_TO_SHOW: {\n      return {\n        ...state,\n        entriesToShow: state.entriesToShow + action.amount\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-19.html":{"url":"interfaces/State-19.html","title":"interface - State-19","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tracker\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tracker\n                                    \n                                \n                                \n                                    \n                                        tracker:     TrackerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TrackerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromDisplay from './display.reducer';\n\nexport interface TrackerState {\n  display: fromDisplay.State;\n}\n\nexport interface State {\n  tracker: TrackerState;\n}\n\nexport const reducers: ActionReducerMap = {\n  display: fromDisplay.reducer\n};\n\nexport const _selectTrackerState = createFeatureSelector('tracker');\nexport const _selectDisplay = createSelector(_selectTrackerState, state => state.display);\n\nexport const _selectEntriesToShow = createSelector(_selectDisplay, display => display.entriesToShow);\n\nconst trackerSelectors = {\n  entriesToShow: _selectEntriesToShow\n};\n\nexport default trackerSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/history.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/history.actions';\n\nimport { UpdatePayload } from '../models';\n\nexport interface HistoryEntity {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_HISTORY_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_HISTORY_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_HISTORY_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_HISTORY_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.UPDATE_GAME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_PLATFORM_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_ELAPSED_TIME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getUpdatedState = (payload: UpdatePayload, currentState: State): State => {\n  const { itemId: id, ...changes } = payload;\n  return adapter.updateOne({\n    id,\n    changes\n  }, currentState);\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/platforms.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/platforms.actions';\n\nexport interface State {\n  options: string[];\n}\n\nconst initialState: State = {\n  options: []\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.LOAD_OPTIONS_SUCCEEDED: {\n      return {\n        ...state,\n        options: action.platforms\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/progress.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/progress.actions';\n\nexport interface ProgressEntity {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_PROGRESS_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_PROGRESS_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_PROGRESS_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_PROGRESS_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.MARK_COMPLETE_SUCCEEDED: {\n      const { itemId: id, ...changes } = action.payload;\n      return adapter.updateOne({\n        id,\n        changes\n      }, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        shared\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        shared\n                                    \n                                \n                                \n                                    \n                                        shared:     SharedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SharedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromHistory from './history.reducer';\nimport * as fromPlatforms from './platforms.reducer';\nimport * as fromProgress from './progress.reducer';\nimport * as fromTimer from './timer.reducer';\n\nimport { HistoryListItem, ProgressItem, TimerInfo } from '../models';\n\nimport { formatDate } from '../utils/date.utils';\nimport { getUniqueFrom } from '../utils/history-filter.utils';\nimport { getHistoryGroupingList, getHistoryListItemsMap } from '../utils/history.utils';\n\nexport interface SharedState {\n  history: fromHistory.State;\n  platforms: fromPlatforms.State;\n  progress: fromProgress.State;\n  timer: fromTimer.State;\n}\n\nexport interface State {\n  shared: SharedState;\n}\n\nexport const reducers: ActionReducerMap = {\n  history: fromHistory.reducer,\n  platforms: fromPlatforms.reducer,\n  progress: fromProgress.reducer,\n  timer: fromTimer.reducer\n};\n\nexport const _selectSharedState = createFeatureSelector('shared');\nexport const _selectHistory = createSelector(_selectSharedState, state => state.history);\nexport const _selectPlatforms = createSelector(_selectSharedState, state => state.platforms);\nexport const _selectProgress = createSelector(_selectSharedState, state => state.progress);\nexport const _selectTimer = createSelector(_selectSharedState, state => state.timer);\n\nexport const { selectAll: _selectAllProgress } = fromProgress.adapter.getSelectors(_selectProgress);\nexport const _selectPlayingProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId === '')\n    .map(entity => entity as ProgressItem));\nexport const _selectCompletedProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId !== '')\n    .map(entity => entity as ProgressItem));\n\nexport const { selectAll: _selectAllHistory } = fromHistory.adapter.getSelectors(_selectHistory);\nexport const _selectHistoryItems = createSelector(_selectAllHistory, _selectAllProgress,\n  (historyEntries, progress) => historyEntries.map(\n    historyEntry => {\n      ...historyEntry,\n      dateRange: [\n        new Date(historyEntry.startTime),\n        new Date(historyEntry.endTime),\n      ],\n      locked: progress.some(x => x.startEntryId === historyEntry.id || x.endEntryId === historyEntry.id)\n    }));\nexport const _selectSortedHistoryItems = createSelector(_selectHistoryItems, items => items.sort((a, b) => b.startTime - a.startTime));\nexport const _selectHistoryGroupingsByDate = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => formatDate(item.dateRange[0]));\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByPlatform = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.platform);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByGame = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.game);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryLoading = createSelector(_selectHistory, history => history.loading);\nexport const _selectTrackedGames = createSelector(_selectSortedHistoryItems, items => getUniqueFrom(items, item => item.game));\n\nexport const _selectPlatformsOptions = createSelector(_selectPlatforms, platforms => platforms.options);\nexport const _selectPlatformsLoaded = createSelector(_selectPlatformsOptions, platformOptions => platformOptions.length !== 0);\n\nexport const _selectTimerInfo = createSelector(_selectTimer, timer => timer as TimerInfo);\n\nexport const _selectUserDataLoaded = createSelector(_selectHistory, _selectProgress, _selectPlatformsLoaded,\n  (history, progress, platformsLoaded) => !history.loading && !progress.loading && platformsLoaded);\n\nconst sharedSelectors = {\n  historyGroupingsByDate: _selectHistoryGroupingsByDate,\n  historyGroupingsByPlatform: _selectHistoryGroupingsByPlatform,\n  historyGroupingsByGame: _selectHistoryGroupingsByGame,\n  historyLoading: _selectHistoryLoading,\n  historyTrackedGames: _selectTrackedGames,\n  platformsOptions: _selectPlatformsOptions,\n  progressPlaying: _selectPlayingProgress,\n  progressCompleted: _selectCompletedProgress,\n  timerInfo: _selectTimerInfo,\n  userDataLoaded: _selectUserDataLoaded\n};\n\nexport default sharedSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-6.html":{"url":"interfaces/State-6.html","title":"interface - State-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/timer.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/timer.actions';\n\nexport interface State {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nconst initialState: State = {\n  game: '',\n  platform: '',\n  startTime: 0\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.RESET_TIMER: {\n      return initialState;\n    }\n    case actions.SET_GAME: {\n      return {\n        ...state,\n        game: action.game\n      };\n    }\n    case actions.SET_PLATFORM: {\n      return {\n        ...state,\n        platform: action.platform\n      };\n    }\n    case actions.SET_START_TIME: {\n      return {\n        ...state,\n        startTime: action.startTime\n      };\n    }\n    case actions.SET_TIMER_INFO: {\n      return {\n        ...state,\n        ...action.info\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-7.html":{"url":"interfaces/State-7.html","title":"interface - State-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/add-playing.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/add-playing.actions';\n\nexport interface State {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nconst initialState: State = {\n  game: '',\n  platform: '',\n  startTime: 0\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_GAME: {\n      return {\n        ...state,\n        game: action.game,\n        platform: '',\n        startTime: 0\n      };\n    }\n    case actions.SET_PLATFORM: {\n      return {\n        ...state,\n        platform: action.platform,\n        startTime: 0\n      };\n    }\n    case actions.SET_STARTTIME: {\n      return {\n        ...state,\n        startTime: action.startTime\n      };\n    }\n    case actions.RESET: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-8.html":{"url":"interfaces/State-8.html","title":"interface - State-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/mark-complete.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/mark-complete.actions';\n\nexport interface MarkCompleteEntity {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\nexport interface State extends EntityState { }\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState();\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_SHOW_EXTRA: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          showExtra: action.showExtra\n        }\n      }, state);\n    }\n    case actions.SET_ENDTIME: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          endTime: action.endTime\n        }\n      }, state);\n    }\n    case actions.REMOVE: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.ADD_NEW_ITEM: {\n      return adapter.addOne(getMarkCompleteEntity(action.itemId), state);\n    }\n    case actions.LOAD_ITEMS: {\n      const items = action.itemIds.map(itemId => getMarkCompleteEntity(itemId));\n      return adapter.addAll(items, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getMarkCompleteEntity = (itemId: string): MarkCompleteEntity => {\n  return {\n    id: itemId,\n    showExtra: false,\n    endTime: 0\n  };\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-9.html":{"url":"interfaces/State-9.html","title":"interface - State-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        completion\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completion\n                                    \n                                \n                                \n                                    \n                                        completion:     CompletionState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompletionState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromPlaying from './add-playing.reducer';\nimport * as fromMarkComplete from './mark-complete.reducer';\nimport * as fromTab from './tab.reducer';\n\nimport { AddPlayingInfo } from '../models';\n\nexport interface CompletionState {\n  addPlaying: fromPlaying.State;\n  markComplete: fromMarkComplete.State;\n  tab: fromTab.State;\n}\n\nexport interface State {\n  completion: CompletionState;\n}\n\nexport const reducers: ActionReducerMap = {\n  addPlaying: fromPlaying.reducer,\n  markComplete: fromMarkComplete.reducer,\n  tab: fromTab.reducer\n};\n\nexport const _selectCompletionState = createFeatureSelector('completion');\nexport const _selectPlaying = createSelector(_selectCompletionState, state => state.addPlaying);\nexport const _selectMarkComplete = createSelector(_selectCompletionState, state => state.markComplete);\nexport const _selectTab = createSelector(_selectCompletionState, state => state.tab);\n\nexport const _selectAddPlayingInfo = createSelector(_selectPlaying, playing => playing as AddPlayingInfo);\n\nexport const { selectEntities: _selectMarkCompleteEntities } = fromMarkComplete.adapter.getSelectors(_selectMarkComplete);\n\nexport const _selectVisibleTab = createSelector(_selectTab, tab => tab.tab);\n\nconst completionSelectors = {\n  addPlayingInfo: _selectAddPlayingInfo,\n  markCompleteEntities: _selectMarkCompleteEntities,\n  visibleTab: _selectVisibleTab\n};\n\nexport default completionSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusEffects.html":{"url":"injectables/StatusEffects.html","title":"injectable - StatusEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatusEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/status.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error$\n                            \n                            \n                                login$\n                            \n                            \n                                postLogin$\n                            \n                            \n                                routeNavigate$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/status.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(appActions.APP_ERROR)\n      .pipe(\n        map(action => action as appActions.Error),\n        mergeMap(action => {\n          const validationMessage = getValidationMessage(action as Error);\n          return [\n            new statusActions.SetAttemptingLogin(false),\n            new statusActions.SetValidationMessage(validationMessage)\n          ];\n        })\n      )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.EMAIL_LOGIN,\n        userActions.SIGNUP,\n        userActions.GOOGLE_LOGIN,\n        userActions.FACEBOOK_LOGIN,\n        userActions.TWITTER_LOGIN)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(true)\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.AUTHENTICATED, userActions.NOT_AUTHENTICATED)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(false)\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeNavigate$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeNavigate$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(fromRouter.ROUTER_NAVIGATION)\n      .pipe(mergeMap(() => [\n        new statusActions.SetValidationMessage('')\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\nimport * as fromRouter from '@ngrx/router-store';\n\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as statusActions from '../actions/status.actions';\nimport * as userActions from '../actions/user.actions';\n\nimport { Error } from '../../../models';\n\nimport { getValidationMessage } from '../utils/validation.utils';\n\n@Injectable()\nexport class StatusEffects {\n\n  constructor(private actions$: Actions) { }\n\n  @Effect() error$ =\n    this.actions$\n      .ofType(appActions.APP_ERROR)\n      .pipe(\n        map(action => action as appActions.Error),\n        mergeMap(action => {\n          const validationMessage = getValidationMessage(action as Error);\n          return [\n            new statusActions.SetAttemptingLogin(false),\n            new statusActions.SetValidationMessage(validationMessage)\n          ];\n        })\n      );\n\n  @Effect() routeNavigate$ =\n    this.actions$\n      .ofType(fromRouter.ROUTER_NAVIGATION)\n      .pipe(mergeMap(() => [\n        new statusActions.SetValidationMessage('')\n      ]));\n\n  @Effect() login$ =\n    this.actions$\n      .ofType(userActions.EMAIL_LOGIN,\n        userActions.SIGNUP,\n        userActions.GOOGLE_LOGIN,\n        userActions.FACEBOOK_LOGIN,\n        userActions.TWITTER_LOGIN)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(true)\n      ]));\n\n  @Effect() postLogin$ =\n    this.actions$\n      .ofType(userActions.AUTHENTICATED, userActions.NOT_AUTHENTICATED)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(false)\n      ]));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/tabs/tabs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-tabs\n            \n\n            \n                styleUrls\n                ./tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setVisibleTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                completedCount\n                            \n                            \n                                playingCount\n                            \n                            \n                                visibleTab\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/tabs/tabs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        completedCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playingCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleTab\n                    \n                    \n                            \n                            Type :    TabType\n\n                            \n                        \n                            Default value : 'PLAYING'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVisibleTab\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVisibleTab(tab: TabType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/tab.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { TabType } from '../../models';\n\n@Component({\n  selector: 'app-completion-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsComponent implements OnInit {\n\n  @Input() visibleTab: TabType = 'PLAYING';\n  @Input() playingCount = 0;\n  @Input() completedCount = 0;\n  constructor(private store: Store) { }\n\n  ngOnInit() { }\n\n  setVisibleTab(tab: TabType) {\n    this.store.dispatch(new actions.SetVisibleTab(tab));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ playingCount }} in Progress\n    \n  \n\n  \n    \n      {{ completedCount }} Completed\n    \n  \n\n\n    \n\n    \n                \n                    ./tabs.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.tabs {\n  display: flex;\n  width: 100%;\n\n  .tab {\n    width: 100%;\n\n    .title {\n      background: $background-dark-accent;\n      color: $text-light;\n      padding: 10px;\n\n      .count {\n        font-weight: bold;\n      }\n    }\n\n    &.active {\n      .title {\n        background: $background-dark;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ playingCount }} in Progress                  {{ completedCount }} Completed      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeDateGraphComponent.html":{"url":"components/TimeDateGraphComponent.html","title":"component - TimeDateGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeDateGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-date-graph\n            \n\n            \n                styleUrls\n                ./time-date-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-date-graph.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    BarGraphConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { BarGraphConfig, GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-date-graph',\n  templateUrl: './time-date-graph.component.html',\n  styleUrls: ['./time-date-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeDateGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: BarGraphConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./time-date-graph.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeDateGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeGameGraphComponent.html":{"url":"components/TimeGameGraphComponent.html","title":"component - TimeGameGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeGameGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-game-graph\n            \n\n            \n                styleUrls\n                ./time-game-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-game-graph.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    BarGraphConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { BarGraphConfig, GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-game-graph',\n  templateUrl: './time-game-graph.component.html',\n  styleUrls: ['./time-game-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeGameGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: BarGraphConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./time-game-graph.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeGameGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/time.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(timeInSeconds: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/time.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInSeconds\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatTime } from '../../shared/utils/date.utils';\n\n@Pipe({ name: 'time' })\nexport class TimePipe implements PipeTransform {\n\n  transform(timeInSeconds: number): string {\n    return formatTime(timeInSeconds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimePlatformGraphComponent.html":{"url":"components/TimePlatformGraphComponent.html","title":"component - TimePlatformGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimePlatformGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-platform-graph\n            \n\n            \n                styleUrls\n                ./time-platform-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-platform-graph.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    PieChartConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { GraphDataItem, PieChartConfig } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-platform-graph',\n  templateUrl: './time-platform-graph.component.html',\n  styleUrls: ['./time-platform-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimePlatformGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: PieChartConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./time-platform-graph.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimePlatformGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/timer/timer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-timer\n            \n\n            \n                styleUrls\n                ./timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimer\n                            \n                            \n                                getCurrentTimeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDateTimePicker\n                            \n                            \n                                resetGame\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                            \n                                startTimer\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                elapsedTime\n                            \n                            \n                                game\n                            \n                            \n                                info\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/timer/timer.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        elapsedTime\n                    \n                    \n                        \n                            Default value : '00:00:00'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | NgSelectValue | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        info\n                    \n                    \n                            \n                            Type :    TimerInfo\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTimeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTimeDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Date\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDateTimePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDateTimePicker(el: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(startTimeEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    start: faPlayCircle,\n    stop: faStopCircle,\n    cancel: faBan\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faBan, faPlayCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as actions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { AddTimerInfo, NgSelectValue, TimerInfo } from '../../../../shared/models';\n\nimport { getValueFromNgSelect } from '../../../../shared/utils/ng-select.utils';\n\n@Component({\n  selector: 'app-tracker-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimerComponent implements OnInit {\n\n  @Input() info: TimerInfo;\n  @Input() elapsedTime = '00:00:00';\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  @Input() game: string | NgSelectValue | null = null;\n  userId = '';\n  icons = {\n    start: faPlayCircle,\n    stop: faStopCircle,\n    cancel: faBan\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  startTimer() {\n    const now = this.timerService.getNowTime();\n    this.store.dispatch(new actions.SetStartTime(now));\n    this.timerService.setTimer(this.userId, {\n      ...this.info,\n      startTime: now\n    });\n  }\n\n  stopTimer() {\n    const info = {\n      userId: this.userId,\n      game: this.info.game,\n      platform: this.info.platform,\n      startTime: this.info.startTime,\n      endTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new actions.SaveTimerInfo(info));\n    this.timerService.resetTimer(this.userId);\n  }\n\n  cancelTimer() {\n    this.store.dispatch(new actions.CancelTimer());\n    this.timerService.resetTimer(this.userId);\n  }\n\n  setGame() {\n    if (this.game) {\n      const game = getValueFromNgSelect(this.game);\n      this.store.dispatch(new actions.SetGame(game));\n      if (this.info.startTime !== 0) {\n        this.timerService.setGame(this.userId, game);\n      }\n    }\n  }\n\n  resetGame() {\n    this.store.dispatch(new actions.SetGame(''));\n    if (this.info.startTime !== 0) {\n      this.timerService.setGame(this.userId, '');\n    }\n  }\n\n  setPlatform(platformEl: HTMLSelectElement) {\n    const platform = platformEl.value;\n    this.store.dispatch(new actions.SetPlatform(platform));\n    if (this.info.startTime !== 0) {\n      this.timerService.setPlatform(this.userId, platform);\n    }\n  }\n\n  setStartTime(startTimeEl: HTMLInputElement) {\n    if (startTimeEl.value) {\n      const startTime = new Date(startTimeEl.value).getTime();\n      this.store.dispatch(new actions.SetStartTime(startTime));\n      if (this.info.startTime !== 0) {\n        this.timerService.setStartTime(this.userId, startTime);\n      }\n    }\n  }\n\n  openDateTimePicker(el: HTMLInputElement) {\n    if (this.info.startTime !== 0) {\n      el.click();\n    }\n  }\n\n  getCurrentTimeDate(): Date {\n    const now = this.timerService.getNowTime();\n    return new Date(now);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    {{ elapsedTime }}\n\n    \n      \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./timer.component.scss\n                \n                @import \"../../../../../variables.scss\";\n\n.timer {\n  display: flex;\n  align-items: center;\n  background: $background-light;\n  height: $timer-height;\n  padding: 0px 10px;\n  position: fixed;\n  width: $content-width;\n  z-index: 50;\n\n  .display-element {\n    font-size: $base-font-size;\n    font-family: $base-font-family;\n    width: 100%;\n    padding: 5px;\n    background: $background-light;\n  }\n\n  .game {\n    width: 55%;\n\n    input {\n      @extend .display-element;\n      outline: none;\n      border: none;\n    }\n  }\n\n  .platform {\n    width: 20%;\n\n    select {\n      @extend .display-element;\n      outline: none;\n      border: none;\n      appearance: none;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .time {\n    @extend .display-element;\n    display: flex;\n    justify-content: center;\n    width: 15%;\n\n    &.active:hover{\n      cursor: pointer;\n    }\n\n    .date-time-picker {\n      visibility: hidden;\n      width: 0px;\n      height: 0px;\n    }\n  }\n\n  .primary-action {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 5%;\n\n    .start {\n      color: $good-action-color;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n\n    .stop {\n      color: $bad-action-color;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n\n  .secondary-action {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 5%;\n\n    .cancel {\n      color: $neutral-action-color;\n\n      &:hover {\n        cursor: pointer;\n      }\n    }\n  }\n}\n\n@media only screen  and (max-width : $medium-breakpoint) {\n  .timer {\n    width: $small-content-width;\n  }\n}\n\n@media only screen and (max-width: $small-breakpoint) {\n  .timer {\n    width: 100%;\n    margin-top: $small-nav-banner-height;\n\n    .display-element {\n      font-size: $small-font-size;\n    }\n\n    .game {\n      width: 30%;\n\n      input {\n        text-overflow: ellipsis;\n      }\n    }\n\n    .platform {\n      width: 25%;\n\n      select {\n        text-overflow: ellipsis;\n      }\n    }\n\n    .time {\n      width: 25%;\n    }\n\n    .primary-action {\n      width: 10%;\n    }\n\n    .secondary-action {\n      width: 10%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}            {{ elapsedTime }}                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerEffects.html":{"url":"injectables/TimerEffects.html","title":"injectable - TimerEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/timer.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimer$\n                            \n                            \n                                loadTimerInfo$\n                            \n                            \n                                saveTimerInfo$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, historyService: HistoryService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/timer.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                    HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelTimer$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.CANCEL_TIMER)\n      .pipe(map(() => new timerActions.ResetTimer()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTimerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadTimerInfo$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.LOAD_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.LoadTimerInfo),\n        map(action => action.userId),\n        switchMap(userId => this.timerService.getTimerInfo(userId)\n          .pipe(\n            map(data => new timerActions.SetTimerInfo(data)),\n            catchError(err => of(new appActions.Error(timerActions.LOAD_TIMER_INFO, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveTimerInfo$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfo),\n        map(action => action.info),\n        switchMap(addTimerInfo => this.historyService.saveTimerInfo(addTimerInfo)\n          .pipe(\n            mergeMap(item => [\n              new timerActions.SaveTimerInfoSucceeded(item),\n              new timerActions.ResetTimer()\n            ]),\n            catchError(err => of(new appActions.Error(timerActions.SAVE_TIMER_INFO, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { HistoryService } from '../services/history.service';\nimport { TimerService } from '../services/timer.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\n\n@Injectable()\nexport class TimerEffects {\n\n  constructor(private actions$: Actions, private historyService: HistoryService, private timerService: TimerService) { }\n\n  @Effect() saveTimerInfo$ =\n    this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfo),\n        map(action => action.info),\n        switchMap(addTimerInfo => this.historyService.saveTimerInfo(addTimerInfo)\n          .pipe(\n            mergeMap(item => [\n              new timerActions.SaveTimerInfoSucceeded(item),\n              new timerActions.ResetTimer()\n            ]),\n            catchError(err => of(new appActions.Error(timerActions.SAVE_TIMER_INFO, err.message))))));\n\n  @Effect() cancelTimer$ =\n    this.actions$\n      .ofType(timerActions.CANCEL_TIMER)\n      .pipe(map(() => new timerActions.ResetTimer()));\n\n  @Effect() loadTimerInfo$ =\n    this.actions$\n      .ofType(timerActions.LOAD_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.LoadTimerInfo),\n        map(action => action.userId),\n        switchMap(userId => this.timerService.getTimerInfo(userId)\n          .pipe(\n            map(data => new timerActions.SetTimerInfo(data)),\n            catchError(err => of(new appActions.Error(timerActions.LOAD_TIMER_INFO, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimerInfo.html":{"url":"interfaces/TimerInfo.html","title":"interface - TimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/timer.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimerInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddTimerInfo {\n  userId: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/timer.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timerCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNowTime\n                            \n                            \n                                getTimerInfo\n                            \n                            \n                                resetTimer\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                            \n                                setTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/timer.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNowTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNowTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTimerInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTimerInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetTimer(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame(userId: string, game: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        game\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(userId: string, platform: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        platform\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(userId: string, startTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTimer(userId: string, info: TimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        info\n                                                        \n                                                                    TimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\n\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { TimerInfo } from '../../../shared/models';\n\n@Injectable()\nexport class TimerService {\n\n  private timerCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.timerCollection = this.afs.collection('timer');\n  }\n\n  setTimer(userId: string, info: TimerInfo) {\n    this.timerCollection.doc(userId).set({\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime\n    });\n  }\n\n  setGame(userId: string, game: string) {\n    this.timerCollection.doc(userId).set({ game }, { merge: true });\n  }\n\n  setPlatform(userId: string, platform: string) {\n    this.timerCollection.doc(userId).set({ platform }, { merge: true });\n  }\n\n  setStartTime(userId: string, startTime: number) {\n    this.timerCollection.doc(userId).set({ startTime }, { merge: true });\n  }\n\n  resetTimer(userId: string) {\n    this.timerCollection.doc(userId).set({\n      game: '',\n      platform: '',\n      startTime: 0\n    });\n  }\n\n  getTimerInfo(userId: string): Observable {\n    const timerDoc = this.timerCollection.doc(userId).valueChanges().pipe(first());\n    return timerDoc.pipe(map(timer => {\n      ...timer\n    }));\n  }\n\n  getNowTime(): number {\n    return new Date().getTime();\n  }\n}\n\nexport interface FirestoreTimerItem {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackerComponent.html":{"url":"components/TrackerComponent.html","title":"component - TrackerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrackerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/tracker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker\n            \n\n            \n                styleUrls\n                ./tracker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elapsedTime$\n                            \n                            \n                                game$\n                            \n                            \n                                historyGroupings$\n                            \n                            \n                                platformsOptions$\n                            \n                            \n                                showLoadMoreButton$\n                            \n                            \n                                timerInfo$\n                            \n                            \n                                trackedGames$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trackerStore: Store, sharedStore: Store, elapsedTimeService: ElapsedTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/tracker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackerStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedTimeService\n                                                  \n                                                        \n                                                                    ElapsedTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elapsedTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elapsedTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            historyGroupings$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyGroupings$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformsOptions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformsOptions$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLoadMoreButton$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showLoadMoreButton$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerInfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackedGames$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackedGames$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ElapsedTimeService } from '../../shared/services/elapsed-time.service';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport trackerSelectors, { State as TrackerState } from './reducers/root.reducer';\n\nimport { HistoryGrouping, NgSelectValue, TimerInfo } from '../../shared/models';\n\nimport { hasMoreToDisplay, takeFrom } from './utils/display.utils';\n\n@Component({\n  selector: 'app-tracker',\n  templateUrl: './tracker.component.html',\n  styleUrls: ['./tracker.component.scss']\n})\nexport class TrackerComponent implements OnInit {\n\n  timerInfo$: Observable;\n  platformsOptions$: Observable;\n  game$: Observable;\n  elapsedTime$: Observable;\n\n  historyGroupings$: Observable;\n  showLoadMoreButton$: Observable;\n\n  trackedGames$: Observable;\n  constructor(private trackerStore: Store,\n    private sharedStore: Store,\n    private elapsedTimeService: ElapsedTimeService) { }\n\n  ngOnInit() {\n    this.timerInfo$ = this.sharedStore.select(sharedSelectors.timerInfo);\n    this.game$ = this.timerInfo$.pipe(map(info => info.game ? info.game : null));\n    this.elapsedTime$ = this.elapsedTimeService.getElapsedTime('00:00:00');\n\n    const historyGroupings = this.sharedStore.select(sharedSelectors.historyGroupingsByDate);\n    const entriesToShow = this.trackerStore.select(trackerSelectors.entriesToShow);\n    const filteredGroupings = takeFrom(historyGroupings, entriesToShow);\n\n    this.historyGroupings$ = filteredGroupings;\n    this.showLoadMoreButton$ = hasMoreToDisplay(historyGroupings, filteredGroupings);\n\n    this.trackedGames$ = this.sharedStore.select(sharedSelectors.historyTrackedGames);\n    this.platformsOptions$ = this.sharedStore.select(sharedSelectors.platformsOptions);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./tracker.component.scss\n                \n                .content {\n  .load-more-button {\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackerModule.html":{"url":"modules/TrackerModule.html","title":"module - TrackerModule","body":"\n                   \n\n\n\n\n  Modules\n  TrackerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackerModule\n\n\n\ncluster_TrackerModule_declarations\n\n\n\ncluster_TrackerModule_imports\n\n\n\ncluster_TrackerModule_providers\n\n\n\n\nHistoryComponent\n\nHistoryComponent\n\n\n\nTrackerModule\n\nTrackerModule\n\nTrackerModule -->\n\nHistoryComponent->TrackerModule\n\n\n\n\n\nHistoryEntryComponent\n\nHistoryEntryComponent\n\nTrackerModule -->\n\nHistoryEntryComponent->TrackerModule\n\n\n\n\n\nLoadMoreComponent\n\nLoadMoreComponent\n\nTrackerModule -->\n\nLoadMoreComponent->TrackerModule\n\n\n\n\n\nLockedHistoryEntryComponent\n\nLockedHistoryEntryComponent\n\nTrackerModule -->\n\nLockedHistoryEntryComponent->TrackerModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nTrackerModule -->\n\nTimerComponent->TrackerModule\n\n\n\n\n\nTrackerComponent\n\nTrackerComponent\n\nTrackerModule -->\n\nTrackerComponent->TrackerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackerModule -->\n\nSharedModule->TrackerModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nTrackerModule -->\n\nElapsedTimeService->TrackerModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nTrackerModule -->\n\nHistoryService->TrackerModule\n\n\n\n\n\nPlatformsService\n\nPlatformsService\n\nTrackerModule -->\n\nPlatformsService->TrackerModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nTrackerModule -->\n\nTimerService->TrackerModule\n\n\n\n\n\nUserService\n\nUserService\n\nTrackerModule -->\n\nUserService->TrackerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tracker/tracker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HistoryComponent\n                            \n                            \n                                HistoryEntryComponent\n                            \n                            \n                                LoadMoreComponent\n                            \n                            \n                                LockedHistoryEntryComponent\n                            \n                            \n                                TimerComponent\n                            \n                            \n                                TrackerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ElapsedTimeService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     PlatformsService\n                            \n                            \n                                     TimerService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { HistoryEntryComponent } from './components/history-entry/history-entry.component';\nimport { HistoryComponent } from './components/history/history.component';\nimport { LoadMoreComponent } from './components/load-more/load-more.component';\nimport {\n    LockedHistoryEntryComponent\n} from './components/locked-history-entry/locked-history-entry.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { TrackerComponent } from './tracker.component';\n\nimport { HistoryEffects } from './effects/history.effects';\nimport { PlatformsEffects } from './effects/platforms.effects';\nimport { TimerEffects } from './effects/timer.effects';\n\nimport { ElapsedTimeService } from '../../shared/services/elapsed-time.service';\nimport { UserService } from '../auth/services/user.service';\nimport { HistoryService } from './services/history.service';\nimport { PlatformsService } from './services/platforms.service';\nimport { TimerService } from './services/timer.service';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    NgSelectModule,\n    FormsModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    SharedModule,\n    StoreModule.forFeature('tracker', reducers),\n    EffectsModule.forFeature([\n      TimerEffects,\n      HistoryEffects,\n      PlatformsEffects\n    ]),\n  ],\n  declarations: [\n    TrackerComponent,\n    TimerComponent,\n    HistoryComponent,\n    HistoryEntryComponent,\n    LoadMoreComponent,\n    LockedHistoryEntryComponent\n  ],\n  providers: [\n    HistoryService,\n    PlatformsService,\n    UserService,\n    TimerService,\n    ElapsedTimeService\n  ]\n})\nexport class TrackerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackerState.html":{"url":"interfaces/TrackerState.html","title":"interface - TrackerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrackerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     fromDisplay.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDisplay.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromDisplay from './display.reducer';\n\nexport interface TrackerState {\n  display: fromDisplay.State;\n}\n\nexport interface State {\n  tracker: TrackerState;\n}\n\nexport const reducers: ActionReducerMap = {\n  display: fromDisplay.reducer\n};\n\nexport const _selectTrackerState = createFeatureSelector('tracker');\nexport const _selectDisplay = createSelector(_selectTrackerState, state => state.display);\n\nexport const _selectEntriesToShow = createSelector(_selectDisplay, display => display.entriesToShow);\n\nconst trackerSelectors = {\n  entriesToShow: _selectEntriesToShow\n};\n\nexport default trackerSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwitterLogin.html":{"url":"classes/TwitterLogin.html","title":"class - TwitterLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwitterLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : TWITTER_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UUIDConfig.html":{"url":"interfaces/UUIDConfig.html","title":"interface - UUIDConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UUIDConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        namespace\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                    \n                                \n                                \n                                    \n                                        namespace:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  firebase: FirebaseConfig;\n  uuid: UUIDConfig;\n  googleTagManager: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\ninterface UUIDConfig {\n  domain: string;\n  namespace: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElapsedTime.html":{"url":"classes/UpdateElapsedTime.html","title":"class - UpdateElapsedTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElapsedTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemTimesPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemTimesPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemTimesPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_ELAPSED_TIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElapsedTimeSucceeded.html":{"url":"classes/UpdateElapsedTimeSucceeded.html","title":"class - UpdateElapsedTimeSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElapsedTimeSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemTimesPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemTimesPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemTimesPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_ELAPSED_TIME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGame.html":{"url":"classes/UpdateGame.html","title":"class - UpdateGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemGamePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemGamePayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemGamePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameSucceeded.html":{"url":"classes/UpdateGameSucceeded.html","title":"class - UpdateGameSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemGamePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemGamePayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemGamePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_GAME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemGamePayload.html":{"url":"interfaces/UpdateHistoryItemGamePayload.html","title":"interface - UpdateHistoryItemGamePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemGamePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemPlatformPayload.html":{"url":"interfaces/UpdateHistoryItemPlatformPayload.html","title":"interface - UpdateHistoryItemPlatformPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemPlatformPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemId\n                                \n                                \n                                        platform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemTimesPayload.html":{"url":"interfaces/UpdateHistoryItemTimesPayload.html","title":"interface - UpdateHistoryItemTimesPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemTimesPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        itemId\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlatform.html":{"url":"classes/UpdatePlatform.html","title":"class - UpdatePlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemPlatformPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemPlatformPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlatformSucceeded.html":{"url":"classes/UpdatePlatformSucceeded.html","title":"class - UpdatePlatformSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlatformSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemPlatformPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemPlatformPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_PLATFORM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        providerId\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerId\n                                    \n                                \n                                \n                                    \n                                        providerId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nexport interface UserInfo {\n  displayName: string;\n  email: string;\n  imgSrc: string;\n  provider: Provider;\n}\n\nexport type Provider = '' | 'PASSWORD' | 'GOOGLE' | 'FACEBOOK' | 'TWITTER';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/user.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin$\n                            \n                            \n                                facebookLogin$\n                            \n                            \n                                getUser$\n                            \n                            \n                                googleLogin$\n                            \n                            \n                                logout$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signUp$\n                            \n                            \n                                twitterLogin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthenticatedAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/user.effects.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthenticatedAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthenticatedAction(authData: AuthUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authData\n                                                        \n                                                                    AuthUser\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     userActions.Authenticated\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.EMAIL_LOGIN)\n      .pipe(\n        map(action => action as userActions.EmailLogin),\n        switchMap(action => this.authService.signInWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.EMAIL_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        facebookLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.FACEBOOK_LOGIN)\n      .pipe(\n        map(action => action as userActions.FacebookLogin),\n        switchMap(() => this.authService.signInWithFacebook()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.FACEBOOK_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.GET_USER)\n      .pipe(\n        map(action => action as userActions.GetUser),\n        switchMap(() => this.authService.getAuthState()\n          .pipe(\n            map(authData => {\n              if (authData) {\n                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'app';\n                this.router.navigate([returnUrl]);\n                return this.getAuthenticatedAction(authData);\n              }\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.GET_USER, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.GOOGLE_LOGIN)\n      .pipe(\n        map(action => action as userActions.GoogleLogin),\n        switchMap(() => this.authService.signInWithGoogle()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.GOOGLE_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logout$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.LOGOUT)\n      .pipe(\n        map(action => action as userActions.Logout),\n        switchMap(() => this.authService.signOut()\n          .pipe(\n            map(() => {\n              this.router.navigate(['login']);\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.LOGOUT, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPassword$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.RESET_PASSWORD)\n      .pipe(\n        map(action => action as userActions.ResetPassword),\n        switchMap(action => this.authService.resetPassword(action.email)\n          .pipe(catchError(err => of(new appActions.Error(userActions.RESET_PASSWORD, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUp$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signUp$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.SIGNUP)\n      .pipe(\n        map(action => action as userActions.SignUp),\n        switchMap(action => this.authService.signUpWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.SIGNUP, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        twitterLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.TWITTER_LOGIN)\n      .pipe(\n        map(action => action as userActions.TwitterLogin),\n        switchMap(() => this.authService.signInWithTwitter()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.TWITTER_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { User as AuthUser } from '@firebase/auth-types';\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as userActions from '../actions/user.actions';\n\nimport { User } from '../models';\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  @Effect() getUser$ =\n    this.actions$\n      .ofType(userActions.GET_USER)\n      .pipe(\n        map(action => action as userActions.GetUser),\n        switchMap(() => this.authService.getAuthState()\n          .pipe(\n            map(authData => {\n              if (authData) {\n                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'app';\n                this.router.navigate([returnUrl]);\n                return this.getAuthenticatedAction(authData);\n              }\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.GET_USER, err.message))))));\n\n  @Effect() googleLogin$ =\n    this.actions$\n      .ofType(userActions.GOOGLE_LOGIN)\n      .pipe(\n        map(action => action as userActions.GoogleLogin),\n        switchMap(() => this.authService.signInWithGoogle()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.GOOGLE_LOGIN, err.message))))));\n\n  @Effect() facebookLogin$ =\n    this.actions$\n      .ofType(userActions.FACEBOOK_LOGIN)\n      .pipe(\n        map(action => action as userActions.FacebookLogin),\n        switchMap(() => this.authService.signInWithFacebook()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.FACEBOOK_LOGIN, err.message))))));\n\n  @Effect() twitterLogin$ =\n    this.actions$\n      .ofType(userActions.TWITTER_LOGIN)\n      .pipe(\n        map(action => action as userActions.TwitterLogin),\n        switchMap(() => this.authService.signInWithTwitter()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.TWITTER_LOGIN, err.message))))));\n\n  @Effect() logout$ =\n    this.actions$\n      .ofType(userActions.LOGOUT)\n      .pipe(\n        map(action => action as userActions.Logout),\n        switchMap(() => this.authService.signOut()\n          .pipe(\n            map(() => {\n              this.router.navigate(['login']);\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.LOGOUT, err.message))))));\n\n  @Effect() signUp$ =\n    this.actions$\n      .ofType(userActions.SIGNUP)\n      .pipe(\n        map(action => action as userActions.SignUp),\n        switchMap(action => this.authService.signUpWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.SIGNUP, err.message))))));\n\n  @Effect() emailLogin$ =\n    this.actions$\n      .ofType(userActions.EMAIL_LOGIN)\n      .pipe(\n        map(action => action as userActions.EmailLogin),\n        switchMap(action => this.authService.signInWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.EMAIL_LOGIN, err.message))))));\n\n  @Effect() resetPassword$ =\n    this.actions$\n      .ofType(userActions.RESET_PASSWORD)\n      .pipe(\n        map(action => action as userActions.ResetPassword),\n        switchMap(action => this.authService.resetPassword(action.email)\n          .pipe(catchError(err => of(new appActions.Error(userActions.RESET_PASSWORD, err.message))))));\n\n  private getAuthenticatedAction(authData: AuthUser): userActions.Authenticated {\n    const providerData = authData.providerData[0];\n    const user = {\n      uid: authData.uid,\n      displayName: authData.displayName,\n      email: authData.email,\n      photoURL: authData.photoURL,\n      providerId: providerData ? providerData.providerId : ''\n    };\n    return new userActions.Authenticated(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:     Provider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nexport interface UserInfo {\n  displayName: string;\n  email: string;\n  imgSrc: string;\n  provider: Provider;\n}\n\nexport type Provider = '' | 'PASSWORD' | 'GOOGLE' | 'FACEBOOK' | 'TWITTER';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserInfo\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/user.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, Observable } from 'rxjs';\n\nimport * as userActions from '../actions/user.actions';\n\nimport profileComponentSelectors, {\n    State as ProfileState\n} from '../../profile/reducers/root.reducer';\nimport authComponentSelectors, { State } from '../reducers/root.reducer';\n\nimport { Profile } from '../../profile/models';\nimport { User, UserInfo } from '../models';\n\nimport {\n    getDisplayName, getEmail, getImgSrc, getProviderFrom\n} from '../../profile/utils/userinfo.utils';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private store: Store, private profileStore: Store) { }\n\n  getUser(): Observable {\n    return this.store.select(authComponentSelectors.user);\n  }\n\n  getUserInfo(): Observable {\n    const user$ = this.getUser();\n    const profile$ = this.profileStore.select(profileComponentSelectors.info);\n\n    return combineLatest(user$, profile$, (user: User, profile: Profile) => {\n      return {\n        displayName: getDisplayName(user, profile),\n        email: getEmail(user),\n        imgSrc: getImgSrc(user),\n        provider: getProviderFrom(user.providerId)\n      };\n    });\n  }\n\n  logout(): void {\n    this.store.dispatch(new userActions.Logout());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 7.0.2\n        \n            @angular/cdk : 7.0.2\n        \n            @angular/common : 7.0.2\n        \n            @angular/compiler : 7.0.2\n        \n            @angular/core : 7.0.2\n        \n            @angular/fire : ^5.1.0\n        \n            @angular/forms : 7.0.2\n        \n            @angular/http : 7.0.2\n        \n            @angular/platform-browser : 7.0.2\n        \n            @angular/platform-browser-dynamic : 7.0.2\n        \n            @angular/router : 7.0.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.7\n        \n            @fortawesome/free-brands-svg-icons : ^5.4.2\n        \n            @fortawesome/free-regular-svg-icons : ^5.4.2\n        \n            @fortawesome/free-solid-svg-icons : ^5.4.2\n        \n            @ng-select/ng-select : ^2.11.2\n        \n            @ngrx/effects : ^6.1.2\n        \n            @ngrx/entity : ^6.1.2\n        \n            @ngrx/router-store : ^6.1.2\n        \n            @ngrx/store : ^6.1.2\n        \n            @ngrx/store-devtools : ^6.1.2\n        \n            @swimlane/ngx-charts : ^10.0.0\n        \n            @swimlane/ngx-datatable : ^14.0.0\n        \n            core-js : ^2.5.7\n        \n            date-fns : ^1.29.0\n        \n            firebase : ^5.5.6\n        \n            insert-analytics-elements : ^0.0.4\n        \n            ng-pick-datetime : ^7.0.0\n        \n            rxjs : ^6.3.3\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearState   (src/.../clear.meta.reducer.ts)\n                        \n                        \n                            reducer   (src/.../display.reducer.ts)\n                        \n                        \n                            reducer   (src/.../history.reducer.ts)\n                        \n                        \n                            reducer   (src/.../platforms.reducer.ts)\n                        \n                        \n                            reducer   (src/.../progress.reducer.ts)\n                        \n                        \n                            reducer   (src/.../timer.reducer.ts)\n                        \n                        \n                            reducer   (src/.../add-playing.reducer.ts)\n                        \n                        \n                            reducer   (src/.../error.reducer.ts)\n                        \n                        \n                            reducer   (src/.../tab.reducer.ts)\n                        \n                        \n                            reducer   (src/.../date-range.reducer.ts)\n                        \n                        \n                            reducer   (src/.../profile.reducer.ts)\n                        \n                        \n                            reducer   (src/.../status.reducer.ts)\n                        \n                        \n                            reducer   (src/.../user.reducer.ts)\n                        \n                        \n                            reducer   (src/.../mark-complete.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/meta.reducers/clear.meta.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clearState\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearState(reducer)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/tracker/reducers/display.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/history.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/platforms.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/progress.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/timer.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/add-playing.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/reducers/error.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/tab.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/dashboard/reducers/date-range.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/profile/reducers/profile.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/auth/reducers/status.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/auth/reducers/user.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/mark-complete.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state, action)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTrackMyPlaytime\n\n\n\nA time tracker app specific to video games.\nDetailed information on the application structure can be found here: https://mzrimsek.github.io/track-my-playtime/\nTechnologies\n\nAngular (via angular-cli)\nRxJS\nRedux (via NGRX)\nFirebase (via @angular/fire)\nTravisCI\nFontAwesome (via angular-fontawesome)\nD3 (via ngx-charts)\nCompoDoc\n\nDevelopment\n\nStart the dev server: ng serve\nRun karma tests: ng test\nRun karma tests in headless mode: npm run test:mocha\nRun karma tests in headless mode the fun way: npm run test:nyan\n\nContributors\n\nssnjrthegr8 - Made the awesome logo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Mike Zrimsek\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompletionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompletionModule\n\n\n\ncluster_CompletionModule_declarations\n\n\n\ncluster_CompletionModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackerModule\n\n\n\ncluster_TrackerModule_declarations\n\n\n\ncluster_TrackerModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nHeaderComponent->DashboardModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nHeaderComponent->LibraryModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompletionModule\n\nCompletionModule\n\nAppModule -->\n\nCompletionModule->AppModule\n\n\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nCompletionModule -->\n\nSharedModule->CompletionModule\n\n\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\nLibraryModule -->\n\nSharedModule->LibraryModule\n\n\n\n\n\nTrackerModule\n\nTrackerModule\n\nTrackerModule -->\n\nSharedModule->TrackerModule\n\n\n\n\n\nElapsedTimePipe \n\nElapsedTimePipe \n\nElapsedTimePipe  -->\n\nSharedModule->ElapsedTimePipe \n\n\n\n\n\nPluralizePipe \n\nPluralizePipe \n\nPluralizePipe  -->\n\nSharedModule->PluralizePipe \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nTimePipe \n\nTimePipe \n\nTimePipe  -->\n\nSharedModule->TimePipe \n\n\n\nAppModule -->\n\nTrackerModule->AppModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nAppModule -->\n\nElapsedTimeService->AppModule\n\n\n\nTrackerModule -->\n\nElapsedTimeService->TrackerModule\n\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAddPlayingComponent\n\nAddPlayingComponent\n\nCompletionModule -->\n\nAddPlayingComponent->CompletionModule\n\n\n\n\n\nCompletedItemComponent\n\nCompletedItemComponent\n\nCompletionModule -->\n\nCompletedItemComponent->CompletionModule\n\n\n\n\n\nCompletionComponent\n\nCompletionComponent\n\nCompletionModule -->\n\nCompletionComponent->CompletionModule\n\n\n\n\n\nPlayingItemComponent\n\nPlayingItemComponent\n\nCompletionModule -->\n\nPlayingItemComponent->CompletionModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nCompletionModule -->\n\nTabsComponent->CompletionModule\n\n\n\n\n\nProgressService\n\nProgressService\n\nCompletionModule -->\n\nProgressService->CompletionModule\n\n\n\n\n\nUserService\n\nUserService\n\nCompletionModule -->\n\nUserService->CompletionModule\n\n\n\nTrackerModule -->\n\nUserService->TrackerModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nGraphTooltipComponent\n\nGraphTooltipComponent\n\nDashboardModule -->\n\nGraphTooltipComponent->DashboardModule\n\n\n\n\n\nTimeDateGraphComponent\n\nTimeDateGraphComponent\n\nDashboardModule -->\n\nTimeDateGraphComponent->DashboardModule\n\n\n\n\n\nTimeGameGraphComponent\n\nTimeGameGraphComponent\n\nDashboardModule -->\n\nTimeGameGraphComponent->DashboardModule\n\n\n\n\n\nTimePlatformGraphComponent\n\nTimePlatformGraphComponent\n\nDashboardModule -->\n\nTimePlatformGraphComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nLibraryComponent\n\nLibraryComponent\n\nLibraryModule -->\n\nLibraryComponent->LibraryModule\n\n\n\n\n\nEditDisplayNameComponent\n\nEditDisplayNameComponent\n\nProfileModule -->\n\nEditDisplayNameComponent->ProfileModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nElapsedTimePipe\n\nElapsedTimePipe\n\nSharedModule -->\n\nElapsedTimePipe->SharedModule\n\n\n\n\n\nPluralizePipe\n\nPluralizePipe\n\nSharedModule -->\n\nPluralizePipe->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nTimePipe\n\nTimePipe\n\nSharedModule -->\n\nTimePipe->SharedModule\n\n\n\n\n\nHistoryComponent\n\nHistoryComponent\n\nTrackerModule -->\n\nHistoryComponent->TrackerModule\n\n\n\n\n\nHistoryEntryComponent\n\nHistoryEntryComponent\n\nTrackerModule -->\n\nHistoryEntryComponent->TrackerModule\n\n\n\n\n\nLoadMoreComponent\n\nLoadMoreComponent\n\nTrackerModule -->\n\nLoadMoreComponent->TrackerModule\n\n\n\n\n\nLockedHistoryEntryComponent\n\nLockedHistoryEntryComponent\n\nTrackerModule -->\n\nLockedHistoryEntryComponent->TrackerModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nTrackerModule -->\n\nTimerComponent->TrackerModule\n\n\n\n\n\nTrackerComponent\n\nTrackerComponent\n\nTrackerModule -->\n\nTrackerComponent->TrackerModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nTrackerModule -->\n\nHistoryService->TrackerModule\n\n\n\n\n\nPlatformsService\n\nPlatformsService\n\nTrackerModule -->\n\nPlatformsService->TrackerModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nTrackerModule -->\n\nTimerService->TrackerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    64 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    69 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            All   (src/.../tab.actions.ts)\n                        \n                        \n                            All   (src/.../app.actions.ts)\n                        \n                        \n                            All   (src/.../platforms.actions.ts)\n                        \n                        \n                            All   (src/.../progress.actions.ts)\n                        \n                        \n                            All   (src/.../timer.actions.ts)\n                        \n                        \n                            All   (src/.../user.actions.ts)\n                        \n                        \n                            All   (src/.../status.actions.ts)\n                        \n                        \n                            All   (src/.../profile.actions.ts)\n                        \n                        \n                            All   (src/.../date-range.actions.ts)\n                        \n                        \n                            All   (src/.../add-playing.actions.ts)\n                        \n                        \n                            All   (src/.../mark-complete.actions.ts)\n                        \n                        \n                            All   (src/.../history.actions.ts)\n                        \n                        \n                            All   (src/.../display.actions.ts)\n                        \n                        \n                            ColorSetName   (src/.../colorScheme.utils.ts)\n                        \n                        \n                            DateRangeType   (src/.../date-range.models.ts)\n                        \n                        \n                            GraphDataModifier   (src/.../graph-data.utils.ts)\n                        \n                        \n                            HistoryListItemKeyFunction   (src/.../history.utils.ts)\n                        \n                        \n                            HistoryListItemMap   (src/.../history.utils.ts)\n                        \n                        \n                            HistoryListItemsMap   (src/.../history.utils.ts)\n                        \n                        \n                            Provider   (src/.../user.models.ts)\n                        \n                        \n                            TabType   (src/.../tabs.models.ts)\n                        \n                        \n                            UpdatePayload   (src/.../history.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/features/completion/actions/tab.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetVisibleTab\n\n                    \n                \n            \n        \n\n    src/app/actions/app.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     Error\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/platforms.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     LoadOptions | LoadOptionsSucceeded\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/progress.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     AddNewProgressItem | LoadProgressItems | LoadProgressItemsSucceeded | RemoveProgressItem | RemoveProgressItemSucceeded | MarkComplete | MarkCompleteSucceeded\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/timer.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     ResetTimer | SetGame | SetPlatform | SetStartTime | SaveTimerInfo | SaveTimerInfoSucceeded | CancelTimer | LoadTimerInfo | SetTimerInfo\n\n                    \n                \n            \n        \n\n    src/app/features/auth/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     GetUser | Authenticated | NotAuthenticated | GoogleLogin | FacebookLogin | TwitterLogin | Logout | SignUp | EmailLogin | ResetPassword\n\n                    \n                \n            \n        \n\n    src/app/features/auth/actions/status.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetAttemptingLogin | SetValidationMessage\n\n                    \n                \n            \n        \n\n    src/app/features/profile/actions/profile.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     LoadProfile | LoadProfileSucceeded | SetProfileDisplayName | SetProfileDisplayNameSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/actions/date-range.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetThisWeek | SetLastWeek | SetThisMonth | SetLastMonth\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/add-playing.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetGame | SetPlatform | SetStartTime | Reset | Save | SaveSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/mark-complete.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetShowExtra | SetEndTime | Remove | LoadItems | AddNewItem\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/history.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     AddNewHistoryItem | LoadHistoryItems | LoadHistoryItemsSucceeded | RemoveHistoryItem | RemoveHistoryItemSucceeded | UpdateGame | UpdateGameSucceeded | UpdatePlatform | UpdatePlatformSucceeded | UpdateElapsedTime | UpdateElapsedTimeSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/tracker/actions/display.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     IncrementDaysToShow\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/utils/colorScheme.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorSetName\n                    \n                \n                \n                    \n                        ColorSetName:     \"vivid\" | \"natural\" | \"cool\" | \"fire\" | \"solar\" | \"air\" | \"aqua\" | \"flame\" | \"ocean\" | \"forest\" | \"horizon\" | \"neons\" | \"picnic\" | \"night\" | \"nightLights\" | \"default\"\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/models/date-range.models.ts\n    \n        \n            \n                \n                    \n                        \n                        DateRangeType\n                    \n                \n                \n                    \n                        DateRangeType:     \"THIS_WEEK\" | \"LAST_WEEK\" | \"THIS_MONTH\" | \"LAST_MONTH\"\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/utils/graph-data.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        GraphDataModifier\n                    \n                \n                \n                    \n                        GraphDataModifier:     function\n\n                    \n                \n            \n        \n\n    src/app/shared/utils/history.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        HistoryListItemKeyFunction\n                    \n                \n                \n                    \n                        HistoryListItemKeyFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HistoryListItemMap\n                    \n                \n                \n                    \n                        HistoryListItemMap:     Map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HistoryListItemsMap\n                    \n                \n                \n                    \n                        HistoryListItemsMap:     Map\n\n                    \n                \n            \n        \n\n    src/app/features/auth/models/user.models.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                \n                    \n                        Provider:     \"\" | \"PASSWORD\" | \"GOOGLE\" | \"FACEBOOK\" | \"TWITTER\"\n\n                    \n                \n            \n        \n\n    src/app/features/completion/models/tabs.models.ts\n    \n        \n            \n                \n                    \n                        \n                        TabType\n                    \n                \n                \n                    \n                        TabType:     \"PLAYING\" | \"COMPLETED\"\n\n                    \n                \n            \n        \n\n    src/app/shared/models/history.models.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdatePayload\n                    \n                \n                \n                    \n                        UpdatePayload:     UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
