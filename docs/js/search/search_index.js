var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/classes/AddNewHistoryItem.html",[0,0.008,1,2.782]],["body/classes/AddNewHistoryItem.html",[0,0.014,1,3.738,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.447,12,2.24,13,0.246,14,0.471,15,2.722,16,3.564,17,0.76,18,5.711,19,0.61,20,0.005,21,0.507,22,0.569,23,3.883,24,0.39,25,0.585,26,3.959,27,0.267,28,0.492,29,1.812,30,3.032,31,3.032,32,3.032,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.338,41,1.194,42,3.068,43,2.384,44,0.767,45,3.338,46,2.649,47,3.151,48,3.338,49,2.241,50,3.068,51,1.736,52,3.338,53,3.151,54,3.338,55,4.864,56,1.072,57,2.918,58,3.384,59,3.338,60,3.151,61,3.338,62,1.043,63,2.918,64,3.338,65,3.151,66,3.338,67,3.338,68,1.464,69,2.918,70,3.338,71,3.151,72,0.003,73,0.003]],["title/classes/AddNewItem.html",[0,0.008,74,3.387]],["body/classes/AddNewItem.html",[0,0.014,2,0.045,3,0.045,4,0.039,6,1.297,7,1.423,8,0.112,9,0.299,10,2.226,11,1.829,12,2.198,13,0.247,14,0.62,17,0.884,19,0.804,20,0.005,21,0.668,22,0.75,24,0.514,25,0.771,27,0.202,28,0.649,34,0.076,35,0.843,37,1.241,38,1.603,39,2.201,41,1.07,44,0.856,49,3.465,51,2.92,68,1.312,72,0.004,73,0.004,74,5.292,75,5.921,76,3.587,77,3.438,78,6.942,79,5.118,80,5.79,81,5.102,82,4.624,83,2.645,84,2.631,85,3.587,86,3.762,87,4.663,88,3.307,89,2.008,90,5.102,91,3.438,92,4.486,93,2.12,94,1.225,95,5.102,96,4.663]],["title/classes/AddNewProgressItem.html",[0,0.008,97,3.144]],["body/classes/AddNewProgressItem.html",[0,0.014,2,0.04,3,0.04,4,0.036,6,1.315,7,1.434,8,0.101,9,0.278,10,2.128,11,2.533,12,2.216,13,0.247,14,0.558,15,3.229,17,0.837,19,0.724,20,0.005,21,0.601,22,0.675,24,0.462,25,0.694,27,0.294,28,0.584,33,0.775,34,0.076,35,0.864,37,1.117,38,1.443,39,2.257,41,1.349,43,2.233,44,0.758,46,2.481,49,2.533,51,1.963,58,2.626,72,0.003,73,0.003,82,3.381,83,1.934,97,4.647,98,2.977,99,4.316,100,6.456,101,4.606,102,5.007,103,3.094,104,4.004,105,5.212,106,4.337,107,3.893,108,4.337,109,4.025,110,4.337,111,3.893,112,4.337,113,4.025,114,4.337,115,3.298,116,4.337,117,4.025]],["title/interfaces/AddPlaying.html",[118,0.366,119,2.64]],["body/interfaces/AddPlaying.html",[2,0.063,3,0.063,4,0.055,8,0.157,9,0.372,13,0.218,20,0.005,34,0.067,43,2.871,44,0.904,56,1.348,62,1.312,72,0.004,73,0.004,94,1.718,118,0.671,119,4.515,120,6.434,121,6.434,122,5.602,123,4.824,124,2.354]],["title/components/AddPlayingComponent.html",[125,1.19,126,1.848]],["body/components/AddPlayingComponent.html",[0,0.004,2,0.055,3,0.024,4,0.021,6,0.625,7,0.421,8,0.06,9,0.189,11,0.727,13,0.215,14,0.334,17,1.014,19,0.86,20,0.005,21,0.89,22,1.116,24,0.729,25,1.094,27,0.329,28,0.35,33,0.464,34,0.021,35,0.651,36,1.664,37,1.977,41,0.576,43,2.042,44,0.705,56,1.484,62,1.391,68,1.747,72,0.002,73,0.003,83,2.282,94,1.051,119,2.866,122,1.612,123,3.677,124,0.904,125,1.609,126,2.287,127,1.063,128,1.063,129,1.063,130,9.125,131,8.175,132,2.757,133,2.111,134,1.01,135,2.191,136,2.191,137,3.812,138,3.506,139,1.794,140,1.693,141,4.392,142,1.693,143,4.392,144,3.869,145,1.355,146,2.407,147,6.242,148,6.242,149,2.852,150,2.007,151,2.007,152,4.164,153,2.046,154,4.527,155,1.409,156,2.901,157,4.093,158,2.757,159,2.757,160,4.034,161,2.757,162,3.199,163,2.757,164,2.757,165,2.757,166,2.757,167,2.757,168,1.477,169,2.706,170,2.757,171,2.757,172,2.757,173,3.934,174,5.337,175,2.757,176,2.281,177,3.934,178,2.757,179,2.47,180,2.649,181,5.473,182,2.757,183,2.757,184,1.376,185,0.592,186,1.612,187,1.663,188,1.522,189,1.663,190,1.663,191,1.612,192,2.139,193,2.139,194,0.569,195,1.142,196,1.344,197,2.757,198,2.757,199,2.757,200,0.826,201,0.978,202,1.852,203,2.95,204,1.719,205,3.228,206,3.803,207,2.47,208,2.281,209,2.47,210,2.757,211,2.47,212,2.47,213,3.078,214,2.757,215,2.47,216,2.757,217,2.757,218,2.757,219,2.47,220,2.244,221,2.281,222,3.633,223,0.904,224,1.693,225,1.665,226,1.693,227,2.407,228,1.063,229,2.281,230,1.063,231,1.01,232,1.063,233,1.01,234,2.103,235,1.063,236,1.01,237,1.693,238,0.994,239,1.063,240,0.994,241,1.063,242,1.01,243,0.877,244,1.063,245,0.994,246,1.063,247,0.994,248,1.063,249,1.063,250,1.01,251,2.341,252,1.045,253,1.063,254,1.88,255,2.111,256,1.045,257,1.01,258,2.618,259,1.063,260,1.01,261,1.693,262,0.994,263,1.063,264,0.994,265,1.063,266,1.01,267,1.063,268,1.01,269,0.947,270,0.994,271,1.063,272,1.01,273,1.063,274,1.01,275,0.994,276,1.063,277,0.994,278,1.063,279,1.01,280,1.027,281,1.063,282,1.01,283,1.063,284,1.01,285,2.111,286,1.01,287,1.01,288,1.01,289,1.063,290,0.994,291,1.063]],["title/injectables/AddPlayingEffects.html",[292,1.579,293,4.17]],["body/injectables/AddPlayingEffects.html",[0,0.009,2,0.049,3,0.049,4,0.043,7,1.479,8,0.123,9,0.319,13,0.142,14,0.682,17,0.83,19,0.884,20,0.005,21,0.734,22,0.824,24,0.564,25,0.847,27,0.376,34,0.043,38,2.748,72,0.004,73,0.004,185,1.208,190,3.392,191,3.288,192,4.364,193,4.364,200,1.685,201,1.995,292,2.587,293,6.116,294,8.26,295,5.625,296,4.278,297,3.392,298,6.162,299,5.625,300,4.61,301,7.394,302,4.377,303,5.669,304,7.394,305,7.394,306,7.394,307,7.394,308,7.394,309,7.394,310,7.394,311,4.967,312,4.967,313,7.394,314,4.967,315,3.507,316,5.15,317,5.625,318,2.945,319,2.096,320,3.778,321,2.288,322,4.134,323,3.778,324,2.33,325,4.653,326,5.039]],["title/interfaces/AddPlayingInfo.html",[118,0.366,123,3.387]],["body/interfaces/AddPlayingInfo.html",[2,0.062,3,0.062,4,0.054,8,0.154,9,0.368,13,0.231,20,0.005,34,0.066,43,2.112,44,0.901,56,1.787,62,1.739,72,0.004,73,0.004,94,2.193,118,0.666,119,3.691,120,6.315,121,6.315,122,4.121,123,5.727,124,3.122]],["title/interfaces/AddTimerInfo.html",[118,0.366,327,2.576]],["body/interfaces/AddTimerInfo.html",[2,0.059,3,0.059,4,0.052,8,0.147,9,0.357,13,0.243,20,0.005,34,0.064,43,2.806,44,0.911,56,1.805,62,1.757,72,0.004,73,0.004,93,3.88,94,2.375,118,0.651,124,3.153,327,4.228,328,6.013,329,3.067]],["title/components/AppComponent.html",[125,1.19,231,1.848]],["body/components/AppComponent.html",[0,0.006,2,0.033,3,0.033,4,0.029,6,0.798,8,0.083,9,0.242,13,0.168,14,0.459,17,0.884,19,0.595,20,0.005,21,0.871,22,0.554,27,0.353,28,0.48,34,0.029,35,0.361,36,1.703,37,0.918,41,0.791,56,0.71,62,0.691,68,1.71,72,0.003,73,0.003,83,2.359,89,2.199,125,1.858,126,1.387,127,1.459,128,1.459,129,1.459,133,2.573,134,1.387,137,3.932,138,3.616,139,1.24,140,2.16,142,2.16,145,1.729,146,2.844,153,1.24,156,2.946,168,1.357,169,1.41,185,0.813,194,0.78,200,1.134,201,2.366,223,1.24,224,2.16,225,2.124,226,2.16,227,2.844,228,1.459,230,1.459,231,2.703,232,1.459,233,1.387,234,2.429,235,1.459,236,1.387,237,2.16,238,1.364,239,1.459,240,1.364,241,1.459,242,1.387,243,1.203,244,1.459,245,1.364,246,1.459,247,1.364,248,1.459,249,1.459,250,1.387,251,2.704,252,1.434,253,1.459,254,2.291,255,2.573,256,1.434,257,1.387,258,2.972,259,1.459,260,1.387,261,2.16,262,1.364,263,1.459,264,1.364,265,1.459,266,1.387,267,1.459,268,1.387,269,1.3,270,1.364,271,1.459,272,1.387,273,1.459,274,1.387,275,1.364,276,1.459,277,1.364,278,1.459,279,1.387,280,1.41,281,1.459,282,1.387,283,1.459,284,1.387,285,2.573,286,1.387,287,1.387,288,1.387,289,1.459,290,1.364,291,1.459,319,1.41,330,3.784,331,4.347,332,5.603,333,5.603,334,7.375,335,6.1,336,7.375,337,2.781,338,5.319,339,6.671,340,7.375,341,5.731,342,5.603,343,3.927,344,3.784,345,3.784,346,3.743,347,3.784,348,3.13,349,2.936,350,2.36,351,3.784,352,3.39,353,3.13,354,3.784,355,2.936,356,2.936,357,2.445,358,2.36,359,2.781,360,2.652,361,3.39,362,3.784,363,3.784,364,3.784,365,5.603,366,3.784,367,3.784,368,3.784,369,3.784,370,3.784,371,3.784,372,2.282]],["title/modules/AppModule.html",[373,2.128,374,3.912]],["body/modules/AppModule.html",[0,0.006,2,0.034,3,0.034,4,0.03,20,0.005,27,0.403,28,0.717,34,0.044,35,0.366,72,0.003,73,0.003,138,1.359,156,1.531,185,0.823,195,1.588,223,1.256,231,3.434,254,2.845,272,3.035,318,2.007,338,2.39,341,5.563,348,4.679,349,2.974,355,2.974,356,2.974,360,5.548,361,3.434,373,2.388,374,7.933,375,2.175,376,4.054,377,4.054,378,3.791,379,3.434,380,3.434,381,3.434,382,3.434,383,3.434,384,6.087,385,6.087,386,6.087,387,6.087,388,6.087,389,6.087,390,6.087,391,5.164,392,6.087,393,3.411,394,1.276,395,2.241,396,3.833,397,3.306,398,5.656,399,5.656,400,3.833,401,4.157,402,2.687,403,2.575,404,2.817,405,5.656,406,3.833,407,2.687,408,7.421,409,2.575,410,3.833,411,3.434,412,3.833,413,3.171,414,5.656,415,3.434,416,5.656,417,2.115,418,3.833,419,3.171,420,3.833,421,3.833,422,3.833,423,3.171,424,2.817,425,3.434,426,3.833,427,3.833,428,3.833,429,3.833,430,3.833,431,3.833,432,3.833,433,2.817,434,3.833,435,3.171,436,3.833,437,4.389,438,3.434,439,5.067,440,3.833,441,4.157,442,1.682,443,3.833,444,3.833,445,3.833,446,3.833,447,3.833,448,3.833,449,3.833,450,3.833,451,3.833,452,3.833,453,3.833,454,3.833,455,3.833,456,3.833]],["title/modules/AppRoutingModule.html",[373,2.128,384,3.706]],["body/modules/AppRoutingModule.html",[0,0.009,2,0.05,3,0.05,4,0.044,20,0.005,27,0.395,34,0.057,35,0.539,72,0.004,73,0.004,83,1.692,125,2.286,138,2.003,185,1.213,238,2.673,240,2.673,243,1.796,251,1.94,256,2.141,258,2.036,262,2.673,264,2.673,270,2.673,275,2.673,277,2.673,290,2.673,350,3.522,373,2.384,384,5.449,397,4.334,437,5.753,438,5.06,457,5.648,458,5.06,459,6.642,460,4.992,461,5.648,462,5.648,463,5.648,464,5.648,465,5.648,466,5.648,467,5.648,468,5.648,469,8.857,470,2.886,471,4.672,472,5.06,473,5.648,474,5.648,475,5.06,476,5.648,477,5.648,478,5.648]],["title/injectables/AuthEffects.html",[292,1.579,479,4.17]],["body/injectables/AuthEffects.html",[0,0.009,2,0.051,3,0.051,4,0.045,7,1.489,8,0.127,9,0.326,13,0.147,14,0.705,17,0.849,19,0.915,20,0.005,21,0.76,22,0.853,24,0.584,25,0.877,27,0.388,34,0.045,38,3.113,72,0.004,73,0.004,185,1.25,200,1.744,292,2.63,297,3.51,300,4.714,302,3.772,303,4.886,315,3.629,316,5.236,318,3.048,321,2.367,322,4.278,324,2.411,479,6.254,480,5.821,481,4.906,482,5.821,483,6.773,484,6.773,485,6.773,486,7.561,487,7.561,488,7.561,489,7.561,490,7.561,491,5.821,492,4.815,493,4.815,494,5.214,495,5.214,496,4.516,497,4.516,498,4.278,499,4.08,500,3.761,501,5.214,502,4.815,503,5.821]],["title/components/AuthFormComponent.html",[125,1.19,233,1.848]],["body/components/AuthFormComponent.html",[0,0.005,2,0.026,3,0.026,4,0.023,6,0.662,8,0.065,9,0.201,13,0.205,14,0.359,17,1.03,19,0.466,20,0.005,21,0.749,22,0.434,24,0.576,25,0.865,27,0.256,33,0.499,34,0.023,36,1.414,37,0.719,38,2.036,41,0.62,44,0.415,56,0.556,62,0.542,68,1.471,72,0.002,73,0.002,83,2.115,125,1.667,126,1.087,127,1.143,128,1.143,129,1.143,133,2.213,134,1.087,135,2.321,136,2.321,137,3.842,138,3.534,139,0.972,140,1.794,142,1.794,144,4.008,145,1.435,146,2.506,152,3.828,153,0.972,168,1.437,169,2.631,180,2.805,184,1.479,185,0.637,186,1.733,188,1.636,200,0.888,223,0.972,224,1.794,225,1.763,226,1.794,227,2.506,228,1.143,230,1.143,231,1.087,232,1.143,233,2.382,234,2.767,235,1.143,236,1.087,237,1.794,238,1.069,239,1.143,240,1.069,241,1.143,242,1.087,243,0.943,244,1.143,245,1.069,246,1.143,247,1.069,248,1.143,249,1.143,250,1.087,251,2.425,252,1.124,253,1.143,254,1.971,255,2.213,256,1.124,257,1.087,258,2.701,259,1.143,260,1.087,261,1.794,262,1.069,263,1.143,264,1.069,265,1.143,266,1.087,267,1.143,268,1.087,269,1.018,270,1.069,271,1.143,272,1.087,273,1.143,274,1.087,275,1.069,276,1.143,277,1.069,278,1.143,279,1.087,280,1.105,281,1.143,282,1.087,283,1.143,284,1.087,285,2.213,286,1.087,287,1.087,288,1.087,289,1.143,290,1.069,291,1.143,504,9.26,505,8.295,506,2.965,507,4.652,508,4.652,509,4.652,510,6.5,511,6.5,512,6.5,513,6.5,514,6.5,515,4.219,516,4.403,517,7.417,518,7.018,519,5.74,520,5.74,521,5.74,522,5.74,523,2.965,524,5.823,525,2.965,526,4.167,527,2.719,528,2.965,529,2.965,530,2.965,531,4.556,532,8.033,533,2.965,534,2.965,535,2.965,536,2.965,537,2.965,538,2.965,539,2.965,540,2.965,541,2.965,542,5.823,543,2.965,544,3.404,545,5.74,546,3.492,547,5.74,548,3.492,549,5.74,550,2.965,551,2.301,552,2.179,553,2.656,554,2.179,555,2.965,556,2.656,557,2.171,558,4.167,559,2.656,560,2.218,561,2.965,562,2.965,563,2.965,564,2.965,565,2.965,566,2.965,567,2.965,568,2.965]],["title/guards/AuthGuard.html",[437,3.912,569,4.17]],["body/guards/AuthGuard.html",[0,0.009,2,0.052,3,0.052,4,0.045,6,0.838,8,0.128,13,0.192,14,0.713,17,0.855,19,1.196,20,0.005,21,0.994,22,1.116,27,0.373,28,0.746,34,0.045,72,0.004,73,0.004,145,2.35,155,3.007,156,3.783,168,1.816,185,1.263,194,1.841,195,2.438,200,1.763,201,2.087,234,1.816,292,2.385,302,2.936,319,2.193,321,2.393,324,2.438,338,6.01,346,3.704,350,3.669,437,5.909,472,7.997,527,3.44,569,4.868,570,5.885,571,5.885,572,7.615,573,8.927,574,6.927,575,5.885,576,5.885,577,5.885,578,4.125,579,5.885,580,5.885,581,5.885,582,4.566,583,5.272,584,5.885,585,3.44,586,5.885]],["title/modules/AuthModule.html",[373,2.128,385,3.706]],["body/modules/AuthModule.html",[0,0.008,2,0.046,3,0.046,4,0.04,20,0.005,27,0.401,28,0.659,34,0.054,72,0.004,73,0.004,185,1.116,195,2.153,223,1.704,233,3.352,234,1.604,247,3.297,270,3.297,277,3.297,318,2.722,373,2.961,375,2.95,376,4.789,377,3.135,378,4.057,385,7.429,393,4.231,394,1.73,395,3.038,397,4.101,401,5.156,402,3.643,403,3.492,404,3.82,409,3.492,425,4.656,442,3.078,479,5.803,505,4.656,587,4.656,588,4.656,589,4.656,590,4.656,591,6.723,592,6.723,593,5.198,594,4.533,595,3.241,596,5.198,597,5.198,598,4.656,599,4.3,600,4.656,601,5.198,602,5.198,603,5.198,604,5.803,605,5.198,606,5.803,607,5.198,608,4.656,609,5.803,610,7.015,611,5.198,612,5.198,613,4.3]],["title/modules/AuthRoutingModule.html",[373,2.128,591,3.706]],["body/modules/AuthRoutingModule.html",[0,0.011,2,0.063,3,0.063,4,0.055,20,0.005,27,0.377,34,0.066,35,0.682,72,0.004,73,0.004,125,1.686,185,1.534,247,3.098,350,4.454,373,3.015,397,5.024,458,6.399,459,7.699,460,5.56,469,6.399,591,6.317,598,6.399,599,5.909,600,6.399,614,7.143,615,7.143,616,7.143]],["title/injectables/AuthService.html",[292,1.579,592,3.706]],["body/injectables/AuthService.html",[0,0.007,2,0.039,3,0.039,4,0.034,8,0.098,13,0.201,14,0.542,17,1.083,19,1.252,20,0.005,21,1.04,22,1.167,27,0.314,34,0.034,35,0.7,38,2.296,44,0.878,72,0.003,73,0.003,145,1.95,168,2.062,185,0.959,200,1.338,201,3.306,292,2.296,319,1.665,346,4.369,378,3.745,415,4.002,557,3.421,560,4.371,592,4.644,617,4.468,618,4.173,619,7.969,620,4.173,621,3.309,622,6.318,623,7.969,624,7.969,625,7.969,626,7.969,627,6.318,628,4.173,629,4.468,630,7.969,631,4.468,632,6.318,633,4.468,634,8.729,635,4.468,636,4.468,637,6.318,638,4.468,639,6.318,640,4.468,641,4.468,642,4.468,643,4.468,644,4.468,645,6.318,646,4.468,647,4.468,648,3.284,649,4.468,650,4.468,651,4.468,652,4.468,653,4.468,654,4.468,655,4.468,656,4.468,657,4.468,658,4.468,659,7.33,660,4.468,661,4.468]],["title/interfaces/AuthState.html",[118,0.366,662,3.912]],["body/interfaces/AuthState.html",[2,0.05,3,0.05,4,0.044,8,0.124,9,0.321,13,0.188,20,0.005,24,0.57,27,0.347,28,0.721,33,0.957,34,0.077,35,0.936,72,0.004,73,0.004,118,0.603,194,1.712,204,3.544,234,1.754,442,2.494,515,4.178,578,5.218,662,6.442,663,5.092,664,7.418,665,4.975,666,7.437,667,7.437,668,3.899,669,2.977,670,2.977,671,5.092,672,5.092,673,5.092,674,5.092,675,5.092,676,5.092,677,5.092,678,5.092,679,5.092,680,6.669,681,5.092,682,5.092,683,5.092,684,6.669,685,6.669,686,6.669,687,6.669,688,6.669,689,5.092,690,6.669,691,5.092,692,5.092,693,3.984]],["title/classes/Authenticated.html",[0,0.008,481,2.782]],["body/classes/Authenticated.html",[0,0.014,2,0.037,3,0.037,4,0.033,6,1.348,7,1.461,8,0.093,9,0.263,10,2.054,12,2.257,13,0.248,14,1.072,17,0.801,19,0.668,20,0.005,21,0.555,22,0.623,24,0.427,25,0.641,27,0.241,28,0.539,33,0.716,34,0.078,35,0.893,39,1.943,44,0.735,72,0.003,73,0.003,234,2.885,394,1.416,470,3.982,481,4.994,544,2.228,546,2.286,548,2.286,557,3.637,560,3.402,618,3.195,620,3.195,621,3.195,628,3.195,665,4.771,694,2.487,695,4.254,696,6.102,697,4.254,698,3.68,699,3.278,700,3.68,701,3.463,702,3.68,703,4.424,704,3.68,705,3.68,706,4.321,707,4.554,708,3.68,709,3.278,710,3.68]],["title/interfaces/BarGraphConfig.html",[118,0.366,711,3.258]],["body/interfaces/BarGraphConfig.html",[2,0.05,3,0.05,4,0.044,8,0.124,9,0.321,13,0.247,20,0.005,21,0.741,25,0.855,34,0.068,44,0.864,72,0.004,73,0.004,89,4.058,94,2.244,118,0.663,711,4.804,712,4.401,713,5.002,714,6.17,715,6.47,716,6.47,717,6.47,718,6.47,719,6.47,720,6.47,721,6.47,722,6.47,723,6.47,724,3.469,725,3.421,726,4.169,727,3.976,728,4.169,729,3.81,730,4.169,731,4.169,732,4.169,733,4.401,734,3.81,735,4.169,736,4.169,737,4.169]],["title/classes/CancelTimer.html",[0,0.008,738,2.782]],["body/classes/CancelTimer.html",[0,0.014,2,0.079,3,0.039,4,0.034,6,1.346,7,1.46,8,0.098,9,0.273,11,1.177,12,2.256,13,0.245,14,0.966,16,2.618,17,0.709,20,0.005,24,0.448,25,0.673,27,0.289,28,0.566,29,2.085,33,0.752,34,0.077,35,0.89,39,2.237,41,0.934,43,1.338,44,0.653,46,1.487,56,1.186,62,1.154,68,1.145,72,0.003,73,0.003,84,3.02,94,1.069,124,1.464,149,2.887,150,2.887,151,2.887,220,2.283,296,3.081,327,3.228,329,2.887,394,1.487,738,4.045,739,2.694,740,6.318,741,4.571,742,3.94,743,5.263,744,3.586,745,3.309,746,3.309,747,3.94,748,3.94,749,3.487,750,3.94,751,3.586,752,2.612,753,3.94,754,3.586,755,3.94,756,3.693]],["title/interfaces/CompletedDisplayData.html",[118,0.366,757,3.706]],["body/interfaces/CompletedDisplayData.html",[2,0.06,3,0.06,4,0.053,8,0.15,9,0.363,11,2.553,13,0.212,20,0.005,27,0.331,34,0.065,72,0.004,73,0.004,94,2.011,115,3.518,118,0.659,196,3.357,757,6.178,758,6.168,759,6.168,760,7.06,761,6.261,762,4.77,763,6.522,764,5.061,765,6.168,766,5.061,767,6.168]],["title/interfaces/CompletedItem.html",[118,0.366,760,3.534]],["body/interfaces/CompletedItem.html",[2,0.058,3,0.058,4,0.051,8,0.143,9,0.352,13,0.241,20,0.005,34,0.069,44,0.908,51,1.996,56,1.744,62,1.697,72,0.004,73,0.004,93,3.85,94,2.409,104,3.527,118,0.675,122,3.837,124,3.046,760,5.721,761,4.242,766,6.83,768,5.43,769,2.825,770,5.089]],["title/components/CompletedItemComponent.html",[125,1.19,236,1.848]],["body/components/CompletedItemComponent.html",[0,0.005,2,0.03,3,0.03,4,0.027,6,0.745,8,0.075,9,0.226,11,1.378,13,0.178,14,0.418,17,0.894,19,0.542,20,0.005,21,0.824,22,0.506,24,0.525,25,0.788,27,0.326,28,0.438,33,0.581,34,0.027,36,1.59,37,0.837,41,0.721,43,2.11,44,0.466,49,3.126,56,0.648,62,0.63,68,1.94,72,0.003,73,0.003,83,2.777,91,3.513,125,1.787,126,1.265,127,1.331,128,1.331,129,1.331,133,2.435,134,1.265,135,2.609,136,2.609,137,3.9,138,3.587,139,1.131,140,2.017,142,2.017,144,4.296,145,1.614,146,2.716,152,3.599,153,1.131,155,1.764,156,3.182,157,4.446,168,1.064,169,1.949,180,3.154,184,1.722,185,0.741,186,2.018,187,2.082,188,1.905,189,2.082,194,0.712,195,1.43,200,1.034,201,1.224,202,2.319,203,2.319,204,2.152,206,1.808,220,2.672,221,4.326,222,5.827,223,1.131,224,2.017,225,1.982,226,2.017,227,2.716,228,1.331,229,4.326,230,1.331,231,1.265,232,1.331,233,1.265,234,2.336,235,1.331,236,2.582,237,2.017,238,1.244,239,1.331,240,1.244,241,1.331,242,1.265,243,1.097,244,1.331,245,1.244,246,1.331,247,1.244,248,1.331,249,1.331,250,1.265,251,2.6,252,1.308,253,1.331,254,2.169,255,2.435,256,1.308,257,1.265,258,2.871,259,1.331,260,1.265,261,2.017,262,1.244,263,1.331,264,1.244,265,1.331,266,1.265,267,1.331,268,1.265,269,1.186,270,1.244,271,1.331,272,1.265,273,1.331,274,1.265,275,1.244,276,1.331,277,1.244,278,1.331,279,1.265,280,1.286,281,1.331,282,1.265,283,1.331,284,1.265,285,2.435,286,1.265,287,1.265,288,1.265,289,1.331,290,1.244,291,1.331,496,2.678,497,2.678,757,4.641,771,8.275,772,7.412,773,3.092,774,4.685,775,4.685,776,5.656,777,3.452,778,3.452,779,3.092,780,3.452,781,5.223,782,3.452,783,3.452,784,3.092,785,3.092,786,5.23,787,5.23,788,4.326,789,5.23,790,5.23,791,5.23]],["title/components/CompletionComponent.html",[125,1.19,238,1.817]],["body/components/CompletionComponent.html",[0,0.005,2,0.053,3,0.028,4,0.025,6,0.707,8,0.07,9,0.214,13,0.22,14,0.391,17,0.998,19,0.507,20,0.005,21,0.791,22,0.473,27,0.344,28,0.409,33,0.543,34,0.025,35,0.578,36,1.51,37,0.783,41,0.674,56,1.715,62,0.589,68,1.552,72,0.003,73,0.003,83,2.564,105,2.669,123,4.934,125,1.734,126,1.182,127,1.244,128,1.244,129,1.244,133,2.335,134,1.182,137,3.875,138,3.564,139,1.058,140,1.915,142,1.915,145,1.533,146,2.623,153,1.058,156,3.228,160,2.085,162,4.293,168,1.232,169,1.202,185,0.693,194,1.024,195,1.337,196,1.573,200,0.967,201,1.144,205,3.651,223,1.058,224,1.915,225,1.883,226,1.915,227,2.623,228,1.244,230,1.244,231,1.182,232,1.244,233,1.182,234,2.266,235,1.244,236,1.182,237,1.915,238,2.452,239,1.244,240,1.163,241,1.244,242,1.182,243,1.026,244,1.244,245,1.163,246,1.244,247,1.163,248,1.244,249,1.244,250,1.182,251,2.523,252,1.223,253,1.244,254,2.08,255,2.335,256,1.223,257,1.182,258,2.796,259,1.244,260,1.182,261,1.915,262,1.163,263,1.244,264,1.163,265,1.244,266,1.182,267,1.244,268,1.182,269,1.108,270,1.163,271,1.244,272,1.182,273,1.244,274,1.182,275,1.163,276,1.244,277,1.163,278,1.244,279,1.182,280,1.202,281,1.244,282,1.182,283,1.244,284,1.182,285,2.335,286,1.182,287,1.182,288,1.182,289,1.244,290,1.163,291,1.244,319,1.202,321,1.312,324,1.337,337,2.372,343,3.482,346,4.367,357,2.085,358,2.012,359,2.372,757,5.398,764,5.398,792,3.227,793,4.967,794,4.967,795,6.802,796,6.802,797,5.278,798,6.056,799,4.967,800,3.227,801,3.227,802,3.227,803,3.227,804,3.227,805,3.227,806,3.227,807,3.227,808,3.227,809,2.669,810,2.669,811,2.504,812,2.372,813,3.227,814,3.227,815,3.227,816,2.669,817,3.227,818,3.227,819,3.227,820,2.669,821,5.425,822,2.669,823,3.227,824,3.227,825,3.227,826,6.056,827,3.227,828,3.227,829,4.569,830,3.227,831,4.967,832,4.45,833,3.227,834,3.227,835,3.227,836,2.262,837,3.227,838,3.227,839,3.227,840,3.227,841,3.482,842,3.227,843,3.227,844,3.227,845,3.227,846,3.227,847,3.227,848,3.227]],["title/modules/CompletionModule.html",[373,2.128,386,3.706]],["body/modules/CompletionModule.html",[0,0.007,2,0.043,3,0.043,4,0.038,20,0.005,27,0.402,28,0.617,34,0.052,72,0.003,73,0.003,126,3.286,131,4.359,157,4.818,185,1.045,189,2.935,195,2.016,223,1.595,236,3.286,238,3.233,274,3.286,282,3.286,293,5.548,298,5.795,318,2.548,325,4.025,373,2.831,375,2.762,376,4.628,377,2.935,378,3.921,386,7.473,391,5.592,393,4.045,394,1.62,395,2.845,397,3.921,401,4.93,402,3.411,403,3.269,404,3.577,409,3.269,433,3.577,442,2.943,552,3.577,594,4.334,595,3.034,609,5.548,613,4.025,772,4.359,849,4.359,850,4.359,851,4.866,852,4.359,853,4.866,854,6.008,855,3.776,856,4.025,857,4.025,858,4.866,859,4.866,860,4.866,861,4.866,862,6.707,863,4.866,864,4.359,865,4.866,866,4.866,867,4.866,868,5.548,869,4.866,870,4.93,871,4.866,872,4.866]],["title/interfaces/CompletionState.html",[118,0.366,811,3.912]],["body/interfaces/CompletionState.html",[2,0.049,3,0.049,4,0.043,8,0.121,9,0.315,13,0.207,20,0.005,24,0.555,27,0.357,28,0.701,33,0.931,34,0.077,35,0.931,37,1.342,72,0.004,73,0.004,82,2.897,83,1.657,115,4.631,118,0.595,119,4.747,123,5.503,139,2.397,194,1.797,442,2.427,668,3.829,669,2.897,670,2.897,797,4.292,810,6.049,811,6.356,841,3.877,873,4.955,874,6.844,875,7.339,876,7.339,877,7.339,878,4.955,879,4.955,880,4.955,881,4.955,882,4.955,883,4.955,884,4.955,885,4.955,886,4.955,887,4.955,888,4.955,889,4.955,890,7.339,891,4.955,892,4.955,893,4.955,894,4.955,895,4.955,896,6.551,897,4.955,898,4.955,899,6.551,900,4.955,901,6.551,902,4.955,903,4.955]],["title/classes/CustomRouterStateSerializer.html",[0,0.008,441,3.706]],["body/classes/CustomRouterStateSerializer.html",[0,0.011,2,0.049,3,0.049,4,0.043,6,1.048,8,0.122,13,0.141,17,0.627,19,0.878,20,0.005,21,0.73,22,0.819,24,0.561,27,0.359,28,0.709,33,0.941,34,0.072,35,0.892,44,0.498,72,0.004,73,0.004,118,0.535,145,2.272,156,2.233,168,1.498,194,1.698,331,4.337,338,4.591,350,3.485,407,3.918,441,5.412,442,2.452,460,4.966,574,6.791,582,6.389,668,3.856,669,2.927,670,2.927,904,4.623,905,7.363,906,6.091,907,5.589,908,6.091,909,6.389,910,7.725,911,4.337,912,4.623,913,4.623,914,6.109,915,4.623,916,4.623,917,4.623,918,4.623,919,4.623,920,4.623,921,6.091,922,4.623,923,6.091,924,6.052,925,4.623,926,4.623,927,6.091]],["title/components/DashboardComponent.html",[125,1.19,240,1.817]],["body/components/DashboardComponent.html",[0,0.004,2,0.025,3,0.025,4,0.022,6,0.632,8,0.061,9,0.191,13,0.216,14,0.339,17,0.978,19,0.439,20,0.005,21,0.721,22,0.409,24,0.689,25,1.034,27,0.331,28,0.354,33,0.47,34,0.022,35,0.6,36,1.35,37,0.678,41,0.584,56,1.036,62,0.51,68,1.963,72,0.002,73,0.002,83,2.056,125,1.62,126,1.024,127,1.078,128,1.078,129,1.078,133,2.129,134,1.024,137,3.818,138,3.511,139,2.249,140,1.712,142,1.712,145,1.37,146,2.425,153,1.81,156,3.059,168,0.569,169,1.041,185,0.6,194,0.915,195,1.158,200,0.837,201,2.716,223,0.916,224,1.712,225,1.683,226,1.712,227,2.425,228,1.078,230,1.078,231,1.024,232,1.078,233,1.024,234,2.117,235,1.078,236,1.024,237,1.712,238,1.007,239,1.078,240,2.267,241,1.078,242,1.024,243,0.889,244,1.078,245,1.007,246,1.078,247,1.007,248,1.078,249,1.078,250,1.024,251,2.63,252,1.059,253,1.078,254,1.897,255,2.129,256,1.059,257,1.024,258,2.633,259,1.078,260,1.024,261,1.712,262,1.007,263,1.078,264,1.007,265,1.078,266,1.024,267,1.078,268,1.024,269,0.96,270,1.007,271,1.078,272,1.024,273,1.078,274,1.024,275,1.007,276,1.078,277,1.007,278,1.078,279,1.024,280,1.041,281,1.078,282,1.024,283,1.078,284,1.024,285,2.129,286,1.024,287,1.024,288,1.024,289,1.078,290,1.007,291,1.078,319,1.041,321,1.137,324,1.158,337,2.054,343,3.111,346,4.015,357,1.806,358,1.743,359,2.054,527,4.903,585,5.092,711,5.42,714,5.569,715,3.263,716,3.263,717,3.263,718,3.263,719,3.263,720,3.263,721,3.263,722,5.369,723,5.369,725,1.685,726,3.263,727,3.111,728,3.263,729,2.982,730,3.263,731,3.263,732,3.263,734,4.225,735,3.263,736,3.263,737,3.263,820,2.312,822,2.312,928,2.795,929,4.439,930,4.439,931,6.29,932,6.29,933,5.324,934,6.29,935,6.29,936,6.29,937,6.29,938,6.29,939,4.064,940,5.522,941,2.795,942,2.795,943,6.29,944,4.947,945,4.439,946,3.672,947,2.795,948,6.29,949,6.29,950,2.795,951,2.795,952,2.795,953,4.439,954,2.795,955,2.795,956,2.795,957,2.795,958,2.795,959,2.795,960,2.312,961,2.168,962,2.312,963,2.795,964,2.795,965,2.795,966,2.795,967,2.795,968,2.795,969,5.203,970,2.795,971,2.795,972,2.503,973,2.795,974,2.795,975,2.795,976,2.795,977,2.795,978,2.795,979,2.795,980,2.795,981,2.795,982,2.795,983,2.795,984,2.795,985,2.054,986,2.795,987,1.542,988,2.795,989,2.795]],["title/modules/DashboardModule.html",[373,2.128,387,3.706]],["body/modules/DashboardModule.html",[0,0.008,2,0.048,3,0.048,4,0.042,20,0.005,27,0.397,28,0.687,34,0.056,56,1.354,62,1.318,72,0.004,73,0.004,153,2.364,185,1.164,195,2.245,223,1.776,240,3.337,250,3.393,254,2.478,284,3.393,286,3.393,287,3.393,373,3.045,375,3.076,376,4.891,377,3.268,378,2.769,387,7.466,391,5.773,393,4.351,394,1.804,395,3.168,397,4.217,409,3.64,433,3.983,435,4.483,442,3.165,594,4.662,595,3.379,990,4.855,991,4.855,992,5.419,993,5.419,994,7.214,995,4.483,996,4.483,997,5.419,998,4.855,999,5.419,1000,8.109,1001,6.292,1002,8.109,1003,5.419,1004,5.419]],["title/interfaces/DashboardState.html",[118,0.366,961,3.912]],["body/interfaces/DashboardState.html",[2,0.054,3,0.054,4,0.048,8,0.136,9,0.34,13,0.157,20,0.005,24,0.624,27,0.341,28,0.788,34,0.076,35,0.917,72,0.004,73,0.004,118,0.629,153,2.584,168,1.264,194,1.626,251,2.134,442,2.726,668,4.129,669,3.254,670,3.254,960,6.522,961,6.72,969,5.139,1005,5.566,1006,6.085,1007,7.759,1008,5.566,1009,4.821,1010,5.566,1011,5.566,1012,5.566,1013,5.566,1014,5.566,1015,5.566,1016,5.566,1017,5.566,1018,7.063,1019,7.063,1020,5.566,1021,5.566,1022,7.063,1023,5.566,1024,5.139]],["title/interfaces/Dictionary.html",[118,0.366,1025,3.912]],["body/interfaces/Dictionary.html",[2,0.064,3,0.064,4,0.057,8,0.16,17,0.824,20,0.005,34,0.072,44,0.86,72,0.004,73,0.004,118,0.701,160,4.743,769,4.013,1025,6.778,1026,6.071,1027,7.226,1028,7.34,1029,5.695,1030,4.93,1031,6.071]],["title/components/EditDisplayNameComponent.html",[125,1.19,242,1.848]],["body/components/EditDisplayNameComponent.html",[0,0.005,2,0.03,3,0.03,4,0.027,6,0.745,8,0.075,9,0.226,13,0.191,14,0.418,17,0.929,19,0.822,20,0.005,21,1.04,22,0.766,24,0.346,25,0.52,27,0.314,28,0.438,34,0.027,35,0.33,36,1.59,37,0.837,38,1.081,41,0.721,43,2.11,44,0.563,56,0.648,62,0.63,68,1.618,72,0.003,73,0.003,83,2.268,125,1.787,126,1.265,127,1.331,128,1.331,129,1.331,133,2.435,134,1.265,135,2.609,136,2.609,137,3.9,138,3.587,139,1.131,140,2.017,142,2.017,144,4.296,145,1.614,146,2.716,153,1.131,155,1.764,156,3.182,157,4.446,168,1.285,169,2.353,180,3.154,184,1.722,185,0.741,186,2.018,187,2.082,188,1.905,189,2.082,194,0.712,195,1.43,200,1.034,201,1.224,202,2.319,203,2.319,204,2.152,206,1.808,223,1.131,224,2.017,225,1.982,226,2.017,227,2.716,228,1.331,230,1.331,231,1.265,232,1.331,233,1.265,234,2.336,235,1.331,236,1.265,237,2.017,238,1.244,239,1.331,240,1.244,241,1.331,242,2.582,243,2.007,244,3.191,245,3.559,246,1.331,247,1.244,248,1.331,249,1.331,250,1.265,251,2.6,252,1.308,253,1.331,254,2.169,255,2.435,256,1.308,257,1.265,258,2.871,259,1.331,260,1.265,261,2.017,262,1.244,263,1.331,264,1.244,265,1.331,266,1.265,267,1.331,268,1.265,269,1.186,270,1.244,271,1.331,272,1.265,273,1.331,274,1.265,275,1.244,276,1.331,277,1.244,278,1.331,279,1.265,280,1.286,281,1.331,282,1.265,283,1.331,284,1.265,285,2.435,286,1.265,287,1.265,288,1.265,289,1.331,290,1.244,291,1.331,502,2.855,518,6.31,531,2.419,532,6.31,752,3.057,1032,8.523,1033,7.635,1034,3.452,1035,5.23,1036,5.23,1037,7.044,1038,4.326,1039,6.314,1040,3.452,1041,3.452,1042,3.452,1043,3.452,1044,5.23,1045,5.223,1046,3.452,1047,3.452,1048,5.23,1049,5.656,1050,5.223,1051,3.452,1052,3.452,1053,2.855,1054,3.452,1055,2.81,1056,5.23,1057,3.452,1058,3.452]],["title/pipes/ElapsedTimePipe.html",[302,2.515,1059,3.912]],["body/pipes/ElapsedTimePipe.html",[0,0.01,2,0.06,3,0.06,4,0.053,6,0.973,13,0.172,17,0.767,19,1.074,20,0.005,21,1.181,22,1.001,27,0.33,34,0.053,44,0.746,72,0.004,73,0.004,94,2.354,134,2.504,145,2.108,168,1.702,185,1.467,302,4.511,962,5.652,1059,6.491,1060,8.366,1061,6.833,1062,6.92,1063,5.652,1064,8.366,1065,9.423,1066,6.833,1067,6.833,1068,6.92,1069,6.121,1070,6.833]],["title/injectables/ElapsedTimeService.html",[292,1.579,341,3.387]],["body/injectables/ElapsedTimeService.html",[0,0.008,2,0.049,3,0.049,4,0.043,8,0.121,9,0.316,13,0.207,14,0.672,17,0.979,19,1.151,20,0.005,21,0.956,22,1.073,27,0.375,28,0.703,33,0.933,34,0.043,35,0.699,38,1.736,44,0.731,72,0.004,73,0.004,94,1.326,145,2.259,156,3.484,168,1.845,185,1.19,195,2.296,200,1.661,292,2.568,319,2.066,321,2.254,324,2.296,329,4.144,337,4.074,341,4.919,343,5.133,346,4.232,357,3.582,358,3.456,809,4.585,1069,4.965,1071,9.07,1072,5.543,1073,9.502,1074,8.723,1075,7.323,1076,7.323,1077,5.543,1078,7.323,1079,5.543,1080,7.323,1081,5.543,1082,4.585,1083,8.2,1084,5.543,1085,4.585,1086,4.965,1087,5.543,1088,5.543,1089,5.543]],["title/interfaces/EmailAuthEvent.html",[118,0.366,554,3.706]],["body/interfaces/EmailAuthEvent.html",[2,0.065,3,0.065,4,0.057,8,0.162,9,0.379,13,0.222,20,0.005,34,0.057,44,0.894,72,0.004,73,0.004,118,0.638,554,6.463,557,4.521,560,4.62,1090,7.421]],["title/classes/EmailLogin.html",[0,0.008,709,2.709]],["body/classes/EmailLogin.html",[0,0.014,2,0.036,3,0.036,4,0.032,6,1.341,7,1.455,8,0.091,9,0.259,10,2.245,12,2.247,13,0.249,14,1.065,17,0.866,19,0.653,20,0.005,21,0.542,22,0.609,24,0.417,25,0.626,27,0.236,28,0.527,33,0.699,34,0.077,35,0.888,39,1.922,44,0.856,72,0.003,73,0.003,234,2.87,394,1.383,470,3.939,481,4.702,544,2.176,546,2.232,548,2.232,557,4.196,560,4.288,618,3.142,620,3.142,621,3.142,628,3.142,665,3.847,694,2.429,698,3.618,699,3.223,700,3.618,701,3.405,702,3.618,703,4.376,704,3.618,705,3.618,706,4.282,707,4.512,708,4.246,709,3.783,710,3.618,1091,3.437,1092,5.999,1093,5.999]],["title/interfaces/Environment.html",[118,0.366,360,3.534]],["body/interfaces/Environment.html",[2,0.055,3,0.055,4,0.048,8,0.136,9,0.341,13,0.257,20,0.005,34,0.048,44,0.91,72,0.004,73,0.004,89,3.406,118,0.63,360,5.543,424,6.707,648,6.707,729,4.193,924,6.707,1094,5.592,1095,8.175,1096,8.175,1097,7.548,1098,8.617,1099,7.548,1100,5.592,1101,5.592,1102,5.592,1103,5.592,1104,5.592,1105,5.592,1106,5.592,1107,5.592,1108,5.592]],["title/classes/Error.html",[0,0.008,914,3.387]],["body/classes/Error.html",[0,0.012,2,0.056,3,0.056,4,0.049,6,1.136,7,1.515,8,0.138,9,0.344,10,2.491,12,2.062,13,0.25,14,0.767,17,1.03,19,0.995,20,0.005,21,0.827,22,0.927,24,0.635,25,0.954,27,0.25,28,0.803,34,0.067,35,0.604,39,1.578,44,0.898,72,0.004,73,0.004,138,2.245,297,3.818,516,6.019,914,6.161,1109,5.671,1110,7.979,1111,7.979,1112,8.737]],["title/classes/FacebookLogin.html",[0,0.008,618,2.64]],["body/classes/FacebookLogin.html",[0,0.014,2,0.038,3,0.038,4,0.034,6,1.356,7,1.469,8,0.096,9,0.269,10,1.643,12,2.27,13,0.246,14,1.106,17,0.7,20,0.005,24,0.44,25,0.661,27,0.246,28,0.556,33,0.738,34,0.078,35,0.899,39,1.97,44,0.744,72,0.003,73,0.003,234,2.904,394,1.46,470,4.038,481,4.788,544,2.297,546,2.357,548,2.357,557,3.688,560,3.461,618,3.8,620,3.266,621,3.266,628,3.266,665,3.943,694,2.564,698,3.762,699,3.351,700,3.762,701,3.54,702,3.762,703,4.486,704,4.377,705,3.762,706,4.373,707,4.608,708,3.762,709,3.351,710,3.762,1113,6.237]],["title/interfaces/FirebaseConfig.html",[118,0.366,1099,4.17]],["body/interfaces/FirebaseConfig.html",[2,0.056,3,0.056,4,0.049,8,0.138,9,0.344,13,0.244,20,0.005,34,0.049,44,0.933,72,0.004,73,0.004,89,2.484,118,0.634,360,4.437,424,4.653,648,4.653,729,4.253,924,4.653,1094,5.671,1095,5.671,1096,5.671,1097,5.237,1099,7.227,1100,5.671,1101,5.671,1102,5.671,1103,8.217,1104,8.217,1105,8.217,1106,8.217,1107,8.217,1108,8.217]],["title/interfaces/FirestoreHistoryItem.html",[118,0.366,1114,3.912]],["body/interfaces/FirestoreHistoryItem.html",[0,0.007,2,0.039,3,0.076,4,0.034,8,0.096,9,0.27,11,1.164,13,0.219,16,2.596,20,0.005,27,0.353,30,2.805,31,2.805,32,2.805,34,0.048,35,0.83,44,0.893,51,2.41,56,1.715,58,3.537,62,1.669,72,0.003,73,0.003,93,3.786,94,2.081,118,0.529,124,2.995,168,1.891,185,0.948,196,2.153,200,1.323,201,2.583,292,1.963,319,1.646,321,1.796,324,1.829,327,3.721,346,3.924,417,2.437,769,3.848,829,2.966,836,3.095,1114,6.495,1115,3.653,1116,3.556,1117,4.134,1118,2.506,1119,3.653,1120,3.095,1121,3.095,1122,2.854,1123,4.862,1124,2.506,1125,3.653,1126,3.653,1127,3.653,1128,3.653,1129,3.095,1130,3.653,1131,3.653,1132,3.653,1133,3.653,1134,3.095,1135,3.653,1136,3.653,1137,3.653,1138,3.653,1139,3.095,1140,3.095,1141,3.653,1142,5.105,1143,5.105,1144,3.653,1145,3.653,1146,3.653,1147,3.653,1148,3.246,1149,3.653,1150,3.653,1151,3.095,1152,3.653,1153,3.653,1154,3.653,1155,3.653,1156,3.653,1157,3.653,1158,3.653]],["title/interfaces/FirestorePlatformsItem.html",[118,0.366,1159,4.17]],["body/interfaces/FirestorePlatformsItem.html",[0,0.01,2,0.056,3,0.056,4,0.049,8,0.207,9,0.346,13,0.202,20,0.005,22,1.348,27,0.363,34,0.062,35,0.61,44,0.782,72,0.004,73,0.004,94,2.1,118,0.583,168,1.3,185,1.372,200,1.915,201,2.267,292,2.514,319,2.382,321,2.6,324,2.648,346,3.522,417,3.527,985,4.698,1116,4.555,1117,4.555,1118,3.627,1124,3.627,1159,6.64,1160,5.726,1161,4.48,1162,5.726,1163,5.726,1164,5.726,1165,5.726,1166,5.726,1167,5.726,1168,5.726,1169,4.959,1170,5.726,1171,5.726,1172,5.726,1173,5.726]],["title/interfaces/FirestoreProfileItem.html",[118,0.366,1174,4.17]],["body/interfaces/FirestoreProfileItem.html",[0,0.01,2,0.055,3,0.055,4,0.048,8,0.137,9,0.342,13,0.158,20,0.005,27,0.372,33,1.056,34,0.061,35,0.599,44,0.858,72,0.004,73,0.004,118,0.576,168,1.614,185,1.347,200,1.879,201,2.224,243,2.522,292,2.484,319,2.337,321,2.551,324,2.598,346,3.817,417,3.461,585,3.666,1055,5.174,1116,4.501,1117,4.501,1118,3.559,1124,3.559,1174,6.561,1175,5.618,1176,4.396,1177,5.618,1178,5.618,1179,5.618,1180,5.618,1181,5.618,1182,5.618,1183,5.618,1184,5.618,1185,5.618,1186,4.61,1187,5.618]],["title/interfaces/FirestoreProgressItem.html",[118,0.366,1188,3.912]],["body/interfaces/FirestoreProgressItem.html",[0,0.008,2,0.045,3,0.045,4,0.04,8,0.113,9,0.301,11,1.362,13,0.2,20,0.005,27,0.374,33,0.87,34,0.054,35,0.81,44,0.892,51,2.124,58,2.842,72,0.004,73,0.004,99,3.775,104,3.754,105,2.776,118,0.575,119,4.146,122,5.179,168,1.858,185,1.11,196,2.52,200,1.548,201,2.478,292,2.188,298,3.339,319,1.926,321,2.102,324,2.141,346,3.887,417,2.852,769,3.929,770,5.821,1116,3.966,1117,4.493,1118,2.933,1120,3.622,1121,3.622,1124,2.933,1129,3.622,1134,3.622,1139,3.622,1140,3.622,1142,3.622,1143,3.622,1151,3.622,1188,6.581,1189,4.275,1190,3.222,1191,5.422,1192,4.275,1193,4.275,1194,4.275,1195,4.275,1196,4.275,1197,4.275,1198,4.275,1199,4.275,1200,4.275,1201,4.275,1202,4.275,1203,4.275,1204,4.275,1205,4.275,1206,4.275,1207,4.275]],["title/interfaces/FirestoreTimerItem.html",[118,0.366,1208,4.17]],["body/interfaces/FirestoreTimerItem.html",[0,0.008,2,0.063,3,0.047,4,0.041,8,0.117,9,0.308,13,0.203,20,0.005,27,0.353,34,0.055,35,0.51,38,1.673,44,0.896,56,1.795,62,1.748,72,0.004,73,0.004,94,2.144,118,0.519,124,3.136,168,1.454,185,1.147,196,2.605,200,1.601,201,1.895,292,2.238,319,1.991,321,2.173,324,2.214,329,3.265,346,3.136,417,2.949,585,4.707,743,2.871,829,3.589,836,3.745,987,2.949,1085,4.42,1116,4.056,1117,4.056,1118,3.033,1124,3.033,1148,3.927,1186,5.918,1208,5.911,1209,4.787,1210,3.332,1211,4.787,1212,4.787,1213,4.787,1214,4.787,1215,8.027,1216,4.787,1217,4.787,1218,4.787,1219,4.787,1220,4.787,1221,4.787,1222,4.787,1223,4.787,1224,4.787]],["title/components/ForgotPasswordComponent.html",[125,1.19,247,1.817]],["body/components/ForgotPasswordComponent.html",[0,0.006,2,0.033,3,0.033,4,0.029,6,0.793,8,0.082,9,0.24,13,0.167,14,0.455,17,0.881,19,0.59,20,0.005,21,0.867,22,0.55,24,0.377,25,0.565,27,0.309,28,0.476,34,0.029,35,0.358,36,1.693,37,0.91,41,0.784,44,0.496,56,0.704,62,0.685,68,1.701,72,0.003,73,0.003,83,2.35,125,1.852,126,1.375,127,1.447,128,1.447,129,1.447,133,2.56,134,1.375,137,3.929,138,3.614,139,1.23,140,2.147,142,2.147,145,1.718,146,2.832,153,1.23,155,1.917,156,3.283,168,1.133,169,2.075,185,0.806,194,0.774,195,1.555,200,1.124,201,1.331,206,1.965,223,1.23,224,2.147,225,2.11,226,2.147,227,2.832,228,1.447,230,1.447,231,1.375,232,1.447,233,1.375,234,2.625,235,1.447,236,1.375,237,2.147,238,1.353,239,1.447,240,1.353,241,1.447,242,1.375,243,1.193,244,1.447,245,1.353,246,1.447,247,2.647,248,3.442,249,1.447,250,1.375,251,2.694,252,1.422,253,1.447,254,2.28,255,2.56,256,1.422,257,1.375,258,2.963,259,1.447,260,1.375,261,2.147,262,1.353,263,1.447,264,1.353,265,1.447,266,1.375,267,1.447,268,1.375,269,1.289,270,1.353,271,1.447,272,1.375,273,1.447,274,1.375,275,1.353,276,1.447,277,1.353,278,1.447,279,1.375,280,1.398,281,1.447,282,1.375,283,1.447,284,1.375,285,2.56,286,1.375,287,1.375,288,1.375,289,1.447,290,1.353,291,1.447,394,2.21,500,2.425,516,5.124,524,6.579,526,5.947,542,6.579,551,2.912,552,2.758,556,3.361,557,3.427,558,3.361,559,3.361,560,4.057,599,6.798,621,3.846,1225,8.219,1226,3.752,1227,5.568,1228,5.568,1229,7.344,1230,5.568,1231,3.752,1232,3.752,1233,3.752,1234,2.521,1235,3.752,1236,3.752,1237,3.752,1238,3.752,1239,2.912,1240,3.361]],["title/classes/GetUser.html",[0,0.008,699,2.709]],["body/classes/GetUser.html",[0,0.014,2,0.038,3,0.038,4,0.034,6,1.356,7,1.469,8,0.096,9,0.269,10,1.643,12,2.27,13,0.246,14,1.106,17,0.7,20,0.005,24,0.44,25,0.661,27,0.246,28,0.556,33,0.738,34,0.078,35,0.899,39,1.97,44,0.744,72,0.003,73,0.003,234,2.904,394,1.46,470,4.038,481,4.788,544,2.297,546,2.357,548,2.357,557,3.688,560,3.461,618,3.266,620,3.266,621,3.266,628,3.266,665,3.943,694,2.564,698,4.377,699,3.899,700,3.762,701,3.54,702,3.762,703,4.486,704,3.762,705,3.762,706,4.373,707,4.608,708,3.762,709,3.351,710,3.762,1241,6.237]],["title/classes/GoogleLogin.html",[0,0.008,620,2.64]],["body/classes/GoogleLogin.html",[0,0.014,2,0.038,3,0.038,4,0.034,6,1.356,7,1.469,8,0.096,9,0.269,10,1.643,12,2.27,13,0.246,14,1.106,17,0.7,20,0.005,24,0.44,25,0.661,27,0.246,28,0.556,33,0.738,34,0.078,35,0.899,39,1.97,44,0.744,72,0.003,73,0.003,234,2.904,394,1.46,470,4.038,481,4.788,544,2.297,546,2.357,548,2.357,557,3.688,560,3.461,618,3.266,620,3.8,621,3.266,628,3.266,665,3.943,694,2.564,698,3.762,699,3.351,700,3.762,701,3.54,702,4.377,703,4.486,704,3.762,705,3.762,706,4.373,707,4.608,708,3.762,709,3.351,710,3.762,1242,6.237]],["title/interfaces/GraphConfig.html",[118,0.366,714,3.534]],["body/interfaces/GraphConfig.html",[2,0.053,3,0.053,4,0.046,8,0.131,9,0.333,13,0.244,20,0.005,21,0.784,25,0.905,34,0.069,44,0.802,72,0.004,73,0.004,89,4.043,94,2.152,118,0.676,711,3.88,712,4.658,713,4.652,714,6.305,715,4.413,716,4.413,717,4.413,718,4.413,719,4.413,720,4.413,721,4.413,722,4.413,723,4.413,725,3.621,726,6.611,727,5.974,728,6.611,729,4.033,730,6.611,731,6.611,732,6.611,733,4.658,734,4.033,735,4.413,736,4.413,737,4.413,1098,6.91]],["title/interfaces/GraphDataItem.html",[118,0.366,725,3.041]],["body/interfaces/GraphDataItem.html",[2,0.056,3,0.056,4,0.049,8,0.139,9,0.345,13,0.202,20,0.005,21,1.2,25,1.384,34,0.071,44,0.861,72,0.004,73,0.004,89,3.981,94,2.313,118,0.687,711,4.111,712,4.936,713,4.826,714,6.137,715,4.675,716,4.675,717,4.675,718,4.675,719,4.675,720,4.675,721,4.675,722,4.675,723,4.675,725,4.826,726,4.675,727,4.459,728,4.675,729,4.273,730,4.675,731,4.675,732,4.675,733,4.936,734,4.273,735,4.675,736,4.675,737,4.675]],["title/components/GraphTooltipComponent.html",[125,1.19,250,1.848]],["body/components/GraphTooltipComponent.html",[0,0.006,2,0.037,3,0.037,4,0.033,6,0.868,8,0.093,13,0.107,14,0.864,17,0.8,20,0.005,21,0.796,27,0.24,33,1.311,34,0.033,36,1.853,37,1.03,41,0.888,56,0.797,62,0.776,68,2.114,72,0.003,73,0.003,83,2.471,125,1.947,126,1.557,127,1.638,128,1.638,129,1.638,133,2.749,134,1.557,135,3.041,136,3.041,137,3.968,138,3.65,139,1.392,140,2.35,142,2.35,145,1.881,146,3.003,152,3.979,153,1.392,168,0.864,169,1.583,184,2.119,185,0.912,223,1.392,224,2.35,225,2.31,226,2.35,227,3.003,228,1.638,230,1.638,231,1.557,232,1.638,233,1.557,234,2.545,235,1.638,236,1.557,237,2.35,238,1.531,239,1.638,240,1.531,241,1.638,242,1.557,243,1.35,244,1.638,245,1.531,246,1.638,247,1.531,248,1.638,249,1.638,250,2.854,251,3.037,252,3.351,253,1.638,254,2.448,255,2.749,256,1.61,257,1.557,258,3.094,259,1.638,260,1.557,261,2.35,262,1.531,263,1.638,264,1.531,265,1.638,266,1.557,267,1.638,268,1.557,269,1.459,270,1.531,271,1.638,272,1.557,273,1.638,274,1.557,275,1.531,276,1.638,277,1.531,278,1.638,279,1.557,280,1.583,281,1.638,282,1.557,283,1.638,284,1.557,285,2.749,286,1.557,287,1.557,288,1.557,289,1.638,290,1.531,291,1.638,725,4.299,998,6.977,1243,7.789,1244,4.248,1245,6.095,1246,6.095,1247,6.095,1248,6.095,1249,4.248,1250,6.095,1251,6.095]],["title/components/HeaderComponent.html",[125,1.19,254,1.732]],["body/components/HeaderComponent.html",[0,0.007,2,0.041,3,0.041,4,0.036,6,0.921,8,0.101,14,0.905,17,0.726,20,0.005,21,0.845,27,0.182,34,0.036,36,1.967,37,1.121,41,0.966,56,0.867,62,0.844,68,1.914,72,0.003,73,0.003,83,2.551,125,2.01,126,1.694,127,1.782,128,1.782,129,1.782,133,2.879,134,1.694,137,3.993,138,3.672,139,1.515,140,2.495,142,2.495,145,1.997,146,3.119,153,1.515,168,0.94,169,1.722,185,0.992,223,1.515,224,2.495,225,2.453,226,2.495,227,3.119,228,1.782,230,1.782,231,1.694,232,1.782,233,1.694,234,2.627,235,1.782,236,1.694,237,2.495,238,1.666,239,1.782,240,1.666,241,1.782,242,1.694,243,1.47,244,1.782,245,1.666,246,1.782,247,1.666,248,1.782,249,1.782,250,1.694,251,2.925,252,1.752,253,1.782,254,3.031,255,2.879,256,1.752,257,1.694,258,3.181,259,1.782,260,1.694,261,2.495,262,1.666,263,1.782,264,1.666,265,1.782,266,1.694,267,1.782,268,1.694,269,1.588,270,1.666,271,1.782,272,1.694,273,1.782,274,1.694,275,1.666,276,1.782,277,1.666,278,1.782,279,1.694,280,1.722,281,1.782,282,1.694,283,1.782,284,1.694,285,2.879,286,1.694,287,1.694,288,1.694,289,1.782,290,1.666,291,1.782,470,3.306,471,5.353,1252,4.622,1253,5.353,1254,5.353,1255,5.353,1256,4.622,1257,4.622]],["title/components/HeaderComponent-1.html",[125,0.995,254,1.448,372,2.542]],["body/components/HeaderComponent-1.html",[0,0.006,2,0.032,3,0.032,4,0.028,6,0.783,7,0.564,8,0.081,13,0.166,14,0.447,17,0.875,19,0.864,20,0.005,21,0.951,22,0.806,24,0.66,25,0.829,27,0.307,28,0.468,33,0.621,34,0.028,36,1.672,37,0.895,41,0.771,56,0.692,62,0.674,68,1.996,72,0.003,73,0.003,83,2.334,125,1.839,126,1.352,127,1.423,128,1.423,129,1.423,133,2.535,134,1.352,135,2.744,136,2.744,137,3.923,138,3.608,139,1.21,140,2.12,142,2.12,145,1.697,146,2.809,152,3.98,153,1.21,155,1.885,156,3.263,168,1.119,169,2.049,174,4.831,184,1.841,185,0.792,194,0.761,195,1.529,200,1.106,206,4.079,223,1.21,224,2.12,225,2.084,226,2.12,227,2.809,228,1.423,230,1.423,231,1.352,232,1.423,233,1.352,234,2.404,235,1.423,236,1.352,237,2.12,238,1.33,239,1.423,240,1.33,241,1.423,242,1.352,243,1.173,244,1.423,245,1.33,246,1.423,247,1.33,248,1.423,249,1.423,250,1.352,251,3.052,252,1.399,253,1.423,254,2.806,255,2.535,256,1.399,257,1.352,258,2.944,259,1.423,260,1.352,261,2.12,262,1.33,263,1.423,264,1.33,265,1.423,266,1.352,267,1.423,268,1.352,269,1.267,270,1.33,271,1.423,272,1.352,273,1.423,274,1.352,275,1.33,276,1.423,277,1.33,278,1.423,279,1.352,280,1.375,281,1.423,282,1.352,283,1.423,284,1.352,285,2.535,286,1.352,287,1.352,288,1.352,289,1.423,290,1.33,291,1.423,372,2.226,933,5.1,939,5.034,987,3.035,1024,5.437,1253,4.549,1254,4.549,1255,4.549,1258,3.69,1259,5.499,1260,5.499,1261,5.437,1262,3.69,1263,3.69,1264,5.499,1265,3.69,1266,3.69,1267,3.306,1268,3.306,1269,1.841,1270,3.69,1271,3.634,1272,5.499,1273,7.284,1274,3.052,1275,3.69,1276,3.052,1277,3.69,1278,3.052,1279,3.69,1280,5.354,1281,5.354,1282,5.354]],["title/components/HeaderComponent-2.html",[125,0.995,254,1.448,1283,3.486]],["body/components/HeaderComponent-2.html",[0,0.007,2,0.038,3,0.038,4,0.034,6,0.883,8,0.095,14,0.876,17,0.811,20,0.005,21,0.81,24,0.437,25,0.656,27,0.172,34,0.034,36,1.885,37,1.055,41,0.909,56,0.817,62,0.795,68,1.852,72,0.003,73,0.003,83,2.494,125,1.965,126,1.595,127,1.678,128,1.678,129,1.678,133,2.786,134,1.595,135,3.094,136,3.094,137,3.975,138,3.656,139,1.426,140,2.391,142,2.391,145,1.913,146,3.037,152,4.023,153,1.426,168,0.885,169,1.622,184,2.171,185,0.934,223,1.426,224,2.391,225,2.35,226,2.391,227,3.037,228,1.678,230,1.678,231,1.595,232,1.678,233,1.595,234,2.568,235,1.678,236,1.595,237,2.391,238,1.569,239,1.678,240,1.569,241,1.678,242,1.595,243,1.383,244,1.678,245,1.569,246,1.678,247,1.569,248,1.678,249,1.678,250,1.595,251,2.859,252,1.649,253,1.678,254,2.972,255,2.786,256,3.155,257,1.595,258,3.119,259,1.678,260,1.595,261,2.391,262,1.569,263,1.678,264,1.569,265,1.678,266,1.595,267,1.678,268,1.595,269,1.495,270,1.569,271,1.678,272,1.595,273,1.678,274,1.595,275,1.569,276,1.678,277,1.569,278,1.678,279,1.595,280,1.622,281,1.678,282,1.595,283,1.678,284,1.595,285,2.786,286,1.595,287,1.595,288,1.595,289,1.678,290,1.569,291,1.678,987,3.422,1253,5.129,1254,5.129,1255,5.129,1283,3.599,1284,4.351,1285,8.905,1286,6.201,1287,4.351,1288,4.351,1289,4.351]],["title/interfaces/HistoryCollection.html",[118,0.366,1123,3.912]],["body/interfaces/HistoryCollection.html",[0,0.007,2,0.041,3,0.066,4,0.036,8,0.102,9,0.282,11,2.145,13,0.118,16,2.707,20,0.005,27,0.359,30,2.925,31,2.925,32,2.925,34,0.05,35,0.846,44,0.859,51,2.474,56,1.606,58,3.605,62,1.563,72,0.003,73,0.003,93,3.546,94,1.564,118,0.546,124,2.805,168,1.917,185,1.006,196,2.285,200,1.404,201,2.668,292,2.047,319,1.747,321,1.906,324,1.942,327,3.844,346,3.991,417,2.587,769,3.502,829,3.149,836,3.285,1114,6.878,1115,3.877,1116,3.709,1117,4.27,1118,2.66,1119,3.877,1120,3.285,1121,3.285,1122,3.029,1123,5.837,1124,2.66,1125,3.877,1126,3.877,1127,3.877,1128,3.877,1129,3.285,1130,3.877,1131,3.877,1132,3.877,1133,3.877,1134,3.285,1135,3.877,1136,3.877,1137,3.877,1138,3.877,1139,3.285,1140,3.285,1141,3.877,1142,5.273,1143,5.273,1144,3.877,1145,3.877,1146,3.877,1147,3.877,1148,3.445,1149,3.877,1150,3.877,1151,3.285,1152,3.877,1153,3.877,1154,3.877,1155,3.877,1156,3.877,1157,3.877,1158,3.877]],["title/components/HistoryComponent.html",[125,1.19,257,1.848]],["body/components/HistoryComponent.html",[0,0.006,2,0.036,3,0.036,4,0.031,6,0.839,8,0.088,13,0.175,14,0.842,17,0.909,20,0.005,21,0.769,24,0.697,25,1.046,27,0.232,34,0.031,36,2.317,37,0.983,41,0.847,44,0.679,56,0.761,62,0.74,68,2.075,72,0.003,73,0.003,83,2.426,125,1.911,126,1.486,127,1.563,128,1.563,129,1.563,133,2.677,134,1.486,135,2.94,136,2.94,137,3.954,138,3.637,139,1.329,140,2.272,142,2.272,145,1.818,146,2.939,152,4.316,153,1.329,162,4.059,168,0.825,169,1.511,184,2.023,185,0.87,196,1.977,223,1.329,224,2.272,225,2.234,226,2.272,227,2.939,228,1.563,230,1.563,231,1.486,232,1.563,233,1.486,234,2.498,235,1.563,236,1.486,237,2.272,238,1.461,239,1.563,240,1.461,241,1.563,242,1.486,243,1.289,244,1.563,245,1.461,246,1.563,247,1.461,248,1.563,249,1.563,250,1.486,251,2.781,252,1.537,253,1.563,254,2.385,255,2.677,256,1.537,257,2.793,258,3.22,259,1.563,260,1.486,261,2.272,262,1.461,263,1.563,264,1.461,265,1.563,266,1.486,267,1.563,268,1.486,269,1.392,270,1.461,271,1.563,272,1.486,273,1.563,274,1.486,275,1.461,276,1.563,277,1.461,278,1.563,279,1.486,280,1.511,281,1.563,282,1.486,283,1.563,284,1.486,285,2.677,286,1.486,287,1.486,288,1.486,289,1.563,290,1.461,291,1.563,832,6.22,1290,4.054,1291,5.893,1292,5.893,1293,4.867,1294,5.387,1295,5.893,1296,4.054,1297,4.054,1298,4.054,1299,5.893,1300,5.893,1301,5.893,1302,5.893,1303,4.875]],["title/injectables/HistoryEffects.html",[292,1.579,1304,4.17]],["body/injectables/HistoryEffects.html",[0,0.006,2,0.033,3,0.033,4,0.029,7,1.49,8,0.081,9,0.238,13,0.094,14,0.45,17,0.952,19,0.583,20,0.005,21,0.484,22,0.544,24,0.821,25,1.233,27,0.343,34,0.029,38,2.915,42,3.924,50,3.924,57,3.732,63,3.732,69,3.732,72,0.003,73,0.003,185,0.797,190,2.238,191,2.169,200,1.112,201,1.316,292,2.065,297,2.238,300,5.803,302,4.952,303,6.135,311,6.085,312,6.085,314,6.085,315,5.103,316,5.865,318,1.943,319,1.383,320,2.493,321,1.509,323,2.493,324,1.537,492,3.069,493,3.069,498,2.727,499,2.601,751,4.145,1122,5.478,1304,4.568,1305,3.711,1306,3.711,1307,5.522,1308,5.522,1309,7.029,1310,5.522,1311,4.284,1312,5.522,1313,5.522,1314,3.711,1315,5.522,1316,5.522,1317,5.522,1318,4.284,1319,5.522,1320,5.522,1321,5.522,1322,3.711,1323,5.522,1324,5.522,1325,5.522,1326,3.711,1327,5.522,1328,5.522,1329,5.522,1330,6.351,1331,8.185,1332,5.522,1333,5.522,1334,3.711,1335,5.522,1336,5.522,1337,5.522,1338,5.522,1339,5.522,1340,3.711,1341,5.522,1342,5.522,1343,5.522,1344,5.522,1345,5.522,1346,3.711,1347,3.069]],["title/interfaces/HistoryEntity.html",[16,2.089,118,0.366]],["body/interfaces/HistoryEntity.html",[2,0.044,3,0.044,4,0.039,7,1.048,8,0.11,9,0.296,13,0.221,16,2.843,20,0.005,24,0.505,27,0.308,33,0.847,34,0.065,35,0.838,41,1.753,44,0.853,51,1.53,56,1.574,58,2.791,62,1.532,72,0.003,73,0.003,89,1.974,93,3.475,94,2.168,118,0.567,124,2.749,168,1.947,194,2.056,527,4.011,585,2.941,713,3.034,724,2.348,769,3.898,1269,2.51,1271,4.626,1348,4.162,1349,4.81,1350,4.81,1351,4.81,1352,3.38,1353,4.507,1354,4.434,1355,3.527,1356,3.506,1357,3.527,1358,2.51,1359,2.571,1360,2.571,1361,4.507,1362,3.904,1363,4.507,1364,4.507,1365,5.324,1366,3.904,1367,4.507,1368,3.527,1369,4.507,1370,6.995,1371,4.507,1372,4.507,1373,4.507,1374,6.147,1375,4.81,1376,3.527]],["title/components/HistoryEntryComponent.html",[125,1.19,260,1.848]],["body/components/HistoryEntryComponent.html",[0,0.004,2,0.023,3,0.023,4,0.02,6,0.6,8,0.057,9,0.182,11,1.393,13,0.207,14,0.317,17,0.99,19,0.952,20,0.005,21,0.926,22,1.039,24,0.666,25,1,27,0.324,28,0.332,30,1.171,31,1.171,32,1.171,34,0.02,35,0.712,36,2.359,37,0.635,38,1.319,41,0.547,43,1.815,44,0.691,49,2.784,51,1.607,56,1.331,57,3.095,58,2.886,62,1.213,63,2.152,68,1.355,69,2.152,72,0.002,73,0.002,83,1.989,93,1.745,124,1.732,125,1.567,126,0.959,127,1.009,128,1.009,129,1.009,133,2.038,134,0.959,135,2.101,136,2.101,137,3.789,138,3.485,139,0.858,140,1.624,142,1.624,144,3.769,145,1.3,146,2.336,152,3.811,153,0.858,155,1.337,156,2.834,157,4.008,160,3.915,168,1.518,169,2.78,174,3.885,176,2.165,180,2.54,184,1.306,185,0.562,186,1.53,187,1.578,188,1.444,189,1.578,194,0.54,195,1.084,196,1.276,200,0.784,201,1.494,202,1.758,203,1.758,204,1.632,205,1.923,206,3.477,208,2.165,223,0.858,224,1.624,225,1.596,226,1.624,227,2.336,228,1.009,230,1.009,231,0.959,232,1.009,233,0.959,234,2.049,235,1.009,236,0.959,237,1.624,238,0.943,239,1.009,240,0.943,241,1.009,242,0.959,243,0.832,244,1.009,245,0.943,246,1.009,247,0.943,248,1.009,249,1.009,250,0.959,251,2.281,252,0.992,253,1.009,254,1.815,255,2.038,256,0.992,257,0.959,258,2.797,259,1.009,260,2.22,261,1.624,262,0.943,263,1.009,264,0.943,265,1.009,266,0.959,267,1.009,268,0.959,269,0.899,270,0.943,271,1.009,272,0.959,273,1.009,274,0.959,275,0.943,276,1.009,277,0.943,278,1.009,279,0.959,280,0.975,281,1.009,282,0.959,283,1.009,284,0.959,285,2.038,286,0.959,287,0.959,288,0.959,289,1.009,290,0.943,291,1.009,329,2.768,492,2.165,493,2.165,498,1.923,499,1.834,762,3,781,4.372,1030,3.551,1045,5.869,1210,4.651,1293,3.705,1294,4.101,1377,8.928,1378,7.998,1379,2.344,1380,3.773,1381,3.773,1382,3.773,1383,3.773,1384,6.355,1385,2.617,1386,2.617,1387,2.617,1388,2.617,1389,2.344,1390,2.617,1391,3.773,1392,2.617,1393,2.344,1394,2.617,1395,2.617,1396,4.212,1397,2.617,1398,2.617,1399,2.617,1400,4.212,1401,2.617,1402,4.735,1403,2.617,1404,2.617,1405,1.923,1406,2.344,1407,2.344,1408,2.344,1409,6.058,1410,2.344,1411,2.617,1412,2.617,1413,2.344,1414,2.344,1415,2.165,1416,2.344,1417,2.165,1418,2.617,1419,2.617,1420,2.617,1421,2.617,1422,2.617,1423,2.617,1424,2.617,1425,2.617,1426,2.344,1427,5.427,1428,3.773,1429,3.773,1430,3.773,1431,3.773]],["title/interfaces/HistoryGrouping.html",[118,0.366,162,2.947]],["body/interfaces/HistoryGrouping.html",[2,0.055,3,0.055,4,0.048,8,0.137,9,0.342,13,0.23,20,0.005,30,3.545,31,3.545,32,3.545,34,0.074,44,0.902,51,2.642,56,1.486,62,1.446,72,0.004,73,0.004,89,2.455,93,3.281,94,2.339,118,0.699,124,2.596,153,2.596,162,4.629,213,6.402,269,2.149,762,5.184,769,2.692,939,5.902,1006,3.901,1354,4.043,1432,4.386,1433,6.713]],["title/interfaces/HistoryListItem.html",[118,0.366,762,2.861]],["body/interfaces/HistoryListItem.html",[2,0.051,3,0.051,4,0.045,8,0.128,9,0.327,13,0.246,20,0.005,30,3.394,31,3.394,32,3.394,34,0.073,44,0.91,51,2.559,56,1.731,62,1.685,72,0.004,73,0.004,89,3.302,93,3.822,94,2.359,118,0.686,124,3.024,153,3.099,162,3.417,213,4.098,269,3.059,762,4.776,769,3.832,939,3.778,1006,5.552,1354,3.778,1432,4.098,1433,4.297]],["title/injectables/HistoryService.html",[292,1.579,1122,3.258]],["body/injectables/HistoryService.html",[0,0.005,2,0.056,3,0.056,4,0.027,8,0.078,9,0.231,11,0.936,13,0.23,14,0.431,16,2.662,17,1.022,19,1.408,20,0.005,21,1.17,22,1.313,27,0.329,30,3.2,31,3.2,32,3.2,34,0.041,35,0.769,36,1.08,43,2.413,44,0.889,51,2.448,56,1.438,57,2.731,58,3.751,62,1.4,63,2.731,69,2.731,72,0.003,73,0.003,93,3.175,94,1.279,118,0.388,124,2.512,145,1.649,168,1.971,185,0.763,196,1.732,200,1.064,201,3.12,292,2.012,319,1.324,321,1.445,324,1.472,327,4.269,346,4.092,417,1.961,749,2.95,769,3.076,829,2.387,836,2.49,1114,6.483,1115,2.939,1116,4.057,1117,4.571,1118,2.016,1119,2.939,1120,2.49,1121,2.49,1122,3.454,1123,5.947,1124,3.034,1125,2.939,1126,2.939,1127,4.421,1128,2.939,1129,2.49,1130,2.939,1131,2.939,1132,2.939,1133,4.421,1134,2.49,1135,2.939,1136,2.939,1137,2.939,1138,4.421,1139,2.49,1140,2.49,1141,4.421,1142,4.504,1143,4.504,1144,4.421,1145,4.421,1146,4.421,1147,2.939,1148,2.611,1149,2.939,1150,2.939,1151,3.746,1152,2.939,1153,4.421,1154,2.939,1155,2.939,1156,2.939,1157,2.939,1158,2.939,1434,5.345,1435,5.345,1436,5.345,1437,5.345,1438,4.788,1439,2.611,1440,5.345,1441,3.553,1442,3.553,1443,3.553,1444,3.553,1445,3.553,1446,3.553,1447,3.553,1448,3.553,1449,3.553]],["title/components/HomeComponent.html",[125,1.19,262,1.817]],["body/components/HomeComponent.html",[0,0.007,2,0.039,3,0.039,4,0.034,6,0.892,8,0.096,9,0.27,13,0.111,14,0.883,17,0.818,20,0.005,21,0.818,24,0.443,25,0.665,27,0.174,34,0.034,36,1.905,37,1.071,41,0.923,44,0.558,56,1.367,62,0.807,68,2.145,72,0.003,73,0.003,83,2.508,125,1.976,126,1.618,127,1.703,128,1.703,129,1.703,133,2.809,134,1.618,137,3.98,138,3.66,139,1.447,140,2.416,142,2.416,145,1.934,146,3.057,153,1.447,168,0.898,169,1.646,185,0.948,223,1.447,224,2.416,225,2.375,226,2.416,227,3.057,228,1.703,230,1.703,231,1.618,232,1.703,233,1.618,234,2.583,235,1.703,236,1.618,237,2.416,238,1.592,239,1.703,240,1.592,241,1.703,242,1.618,243,1.404,244,1.703,245,1.592,246,1.703,247,1.592,248,1.703,249,1.703,250,1.618,251,2.875,252,1.674,253,1.703,254,2.502,255,2.809,256,1.674,257,1.618,258,3.134,259,1.703,260,1.618,261,2.416,262,2.858,263,1.703,264,1.592,265,1.703,266,1.618,267,1.703,268,1.618,269,1.517,270,1.592,271,1.703,272,1.618,273,1.703,274,1.618,275,1.592,276,1.703,277,1.592,278,1.703,279,1.618,280,1.646,281,1.703,282,1.618,283,1.703,284,1.618,285,2.809,286,1.618,287,1.618,288,1.618,289,1.703,290,1.592,291,1.703,1303,5.183,1450,4.416,1451,6.266,1452,6.266,1453,6.266,1454,8.696,1455,6.266,1456,4.416,1457,5.614,1458,6.266]],["title/modules/HomeModule.html",[373,2.128,388,3.706]],["body/modules/HomeModule.html",[0,0.011,2,0.061,3,0.061,4,0.054,20,0.005,27,0.373,34,0.065,72,0.004,73,0.004,185,1.49,223,2.274,262,3.559,373,3.565,375,3.938,376,5.491,377,4.185,378,3.545,388,7.257,393,5.093,394,2.31,395,4.056,397,4.937,594,5.457,595,4.327,1459,6.216,1460,6.216,1461,6.939,1462,6.939]],["title/interfaces/IHasId.html",[118,0.366,1029,3.912]],["body/interfaces/IHasId.html",[2,0.064,3,0.064,4,0.056,8,0.158,9,0.374,13,0.183,20,0.005,34,0.072,44,0.876,72,0.004,73,0.004,118,0.698,160,4.691,769,4.23,1025,5.633,1026,6.005,1027,6.005,1029,6.734,1030,4.877,1031,6.005]],["title/classes/IncrementDaysToShow.html",[0,0.008,1463,4.17]],["body/classes/IncrementDaysToShow.html",[0,0.012,2,0.058,3,0.058,4,0.051,6,1.164,7,1.359,8,0.144,9,0.353,10,2.154,12,2.099,13,0.249,14,0.798,17,0.998,19,1.034,20,0.005,21,0.859,22,0.964,24,0.66,25,0.992,27,0.259,28,0.834,34,0.069,35,0.628,39,1.641,72,0.004,73,0.004,85,4.612,94,2.288,245,2.372,1463,7.355,1464,5.895,1465,9.564,1466,6.58,1467,8.174,1468,6.58,1469,8.892,1470,6.58,1471,6.58]],["title/components/LibraryComponent.html",[125,1.19,264,1.817]],["body/components/LibraryComponent.html",[0,0.006,2,0.033,3,0.033,4,0.029,6,0.798,8,0.083,9,0.242,13,0.168,14,0.459,17,0.925,19,0.595,20,0.005,21,0.871,22,0.554,24,0.38,25,1.186,27,0.336,28,0.48,33,0.637,34,0.029,35,0.361,36,1.703,37,0.918,41,0.791,56,0.71,62,0.691,68,1.71,72,0.003,73,0.003,83,2.359,94,1.341,125,1.858,126,1.387,127,1.459,128,1.459,129,1.459,133,2.573,134,1.387,137,3.932,138,3.616,139,1.24,140,2.16,142,2.16,145,1.729,146,2.844,153,1.24,154,3.13,156,2.946,168,1.14,169,2.088,185,0.813,194,0.78,200,1.134,223,1.24,224,2.16,225,2.124,226,2.16,227,2.844,228,1.459,230,1.459,231,1.387,232,1.459,233,1.387,234,2.429,235,1.459,236,1.387,237,2.16,238,1.364,239,1.459,240,1.364,241,1.459,242,1.387,243,1.203,244,1.459,245,1.364,246,1.459,247,1.364,248,1.459,249,1.459,250,1.387,251,2.704,252,1.434,253,1.459,254,2.291,255,2.573,256,2.529,257,1.387,258,2.972,259,1.459,260,1.387,261,2.16,262,1.364,263,1.459,264,2.658,265,1.459,266,1.387,267,1.459,268,1.387,269,1.3,270,1.364,271,1.459,272,1.387,273,1.459,274,1.387,275,1.364,276,1.459,277,1.364,278,1.459,279,1.387,280,1.41,281,1.459,282,1.387,283,1.459,284,1.387,285,2.573,286,1.387,287,1.387,288,1.387,289,1.459,290,1.364,291,1.459,319,1.41,337,2.781,343,3.927,346,3.236,357,2.445,358,2.36,359,2.781,531,3.927,820,3.13,822,3.13,946,4.635,1472,3.784,1473,5.603,1474,5.603,1475,6.512,1476,7.375,1477,7.375,1478,6.671,1479,6.671,1480,5.603,1481,3.784,1482,3.784,1483,3.784,1484,3.784,1485,3.784,1486,3.784,1487,3.784,1488,3.784,1489,3.784,1490,3.784,1491,3.784,1492,3.784,1493,5.603,1494,3.784,1495,3.784,1496,3.784,1497,3.784,1498,5.603,1499,5.603]],["title/interfaces/LibraryEntry.html",[118,0.366,1475,4.17]],["body/interfaces/LibraryEntry.html",[2,0.062,3,0.062,4,0.055,8,0.154,9,0.368,13,0.24,20,0.005,34,0.055,44,0.884,56,1.789,72,0.004,73,0.004,94,2.373,118,0.62,939,6.16,1475,7.064,1500,7.068,1501,9.532,1502,9.532]],["title/modules/LibraryModule.html",[373,2.128,389,3.706]],["body/modules/LibraryModule.html",[0,0.01,2,0.056,3,0.056,4,0.05,20,0.005,27,0.392,34,0.062,72,0.004,73,0.004,185,1.382,223,2.11,254,2.769,264,3.495,373,3.404,375,3.654,376,5.31,377,3.883,378,3.289,389,7.311,391,6.045,393,4.863,394,2.143,395,3.763,397,4.713,433,4.732,435,5.325,594,5.21,595,4.014,995,5.325,1503,5.767,1504,5.767,1505,6.438,1506,6.438,1507,8.063,1508,5.767,1509,6.438]],["title/classes/LoadHistoryItems.html",[0,0.008,42,2.709]],["body/classes/LoadHistoryItems.html",[0,0.014,1,3.151,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.267,12,2.24,13,0.246,14,0.471,16,2.806,17,0.76,19,0.61,20,0.005,21,0.507,22,0.569,24,0.39,25,0.585,26,3.338,27,0.267,28,0.492,29,1.812,30,3.032,31,3.032,32,3.032,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.959,41,1.194,42,3.639,43,2.698,44,0.827,45,3.338,46,2.649,47,3.151,48,3.338,49,2.241,50,3.068,51,1.736,52,3.338,53,3.151,54,3.338,55,4.864,56,1.072,57,2.918,58,3.384,59,3.338,60,3.151,61,3.338,62,1.043,63,2.918,64,3.338,65,3.151,66,3.338,67,3.338,68,1.464,69,2.918,70,3.338,71,3.151,72,0.003,73,0.003,1510,2.27,1511,5.711,1512,3.883]],["title/classes/LoadHistoryItemsSucceeded.html",[0,0.008,47,2.782]],["body/classes/LoadHistoryItemsSucceeded.html",[0,0.014,1,3.151,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.447,12,2.24,13,0.246,14,0.471,15,2.722,16,3.564,17,0.76,19,0.61,20,0.005,21,0.507,22,0.569,24,0.39,25,0.585,26,3.338,27,0.267,28,0.492,29,1.812,30,3.032,31,3.032,32,3.032,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.338,41,1.194,42,3.068,43,2.384,44,0.767,45,3.959,46,2.649,47,3.738,48,3.338,49,2.241,50,3.068,51,1.736,52,3.338,53,3.151,54,3.338,55,4.864,56,1.072,57,2.918,58,3.384,59,3.338,60,3.151,61,3.338,62,1.043,63,2.918,64,3.338,65,3.151,66,3.338,67,3.338,68,1.464,69,2.918,70,3.338,71,3.151,72,0.003,73,0.003,1513,5.711,1514,3.883]],["title/classes/LoadItems.html",[0,0.008,96,3.387]],["body/classes/LoadItems.html",[0,0.014,2,0.045,3,0.045,4,0.039,6,1.297,7,1.423,8,0.112,9,0.299,10,2.226,11,1.829,12,2.198,13,0.247,14,0.62,17,0.884,19,0.804,20,0.005,21,0.668,22,0.75,24,0.514,25,0.771,27,0.202,28,0.649,34,0.076,35,0.843,37,1.241,38,1.603,39,2.201,41,1.07,44,0.856,49,3.465,51,2.92,68,1.312,72,0.004,73,0.004,74,4.663,75,5.921,76,3.587,77,3.438,80,5.102,81,5.102,82,4.624,83,2.645,84,2.631,85,3.587,86,3.762,87,4.663,88,3.307,89,2.008,90,5.102,91,3.438,92,4.486,93,2.12,94,1.225,95,5.79,96,5.292,1515,6.942,1516,5.118]],["title/components/LoadMoreComponent.html",[125,1.19,266,1.848]],["body/components/LoadMoreComponent.html",[0,0.006,2,0.036,3,0.036,4,0.032,6,0.848,7,0.628,8,0.09,9,0.257,13,0.15,14,0.498,17,0.861,19,0.646,20,0.005,21,0.914,22,0.602,24,0.412,25,0.619,27,0.302,28,0.521,34,0.032,36,1.81,37,0.997,41,1.91,56,0.771,62,0.751,68,1.793,72,0.003,73,0.003,83,2.439,94,1.424,125,1.922,126,1.506,127,1.585,128,1.585,129,1.585,133,2.698,134,1.506,137,3.958,138,3.64,139,1.347,140,2.295,142,2.295,145,1.837,146,2.958,153,1.347,155,2.1,156,3.391,168,1.211,169,2.218,185,0.883,194,0.848,195,1.703,200,1.231,206,2.152,223,1.347,224,2.295,225,2.256,226,2.295,227,2.958,228,1.585,230,1.585,231,1.506,232,1.585,233,1.506,234,2.512,235,1.585,236,1.506,237,2.295,238,1.482,239,1.585,240,1.482,241,1.585,242,1.506,243,1.307,244,1.585,245,1.482,246,1.585,247,1.482,248,1.585,249,1.585,250,1.506,251,2.796,252,1.558,253,1.585,254,2.403,255,2.698,256,1.558,257,1.506,258,3.232,259,1.585,260,1.506,261,2.295,262,1.482,263,1.585,264,1.482,265,1.585,266,2.811,267,1.585,268,1.506,269,1.412,270,1.482,271,1.585,272,1.506,273,1.585,274,1.506,275,1.482,276,1.585,277,1.482,278,1.585,279,1.506,280,1.532,281,1.585,282,1.506,283,1.585,284,1.506,285,2.698,286,1.506,287,1.506,288,1.506,289,1.585,290,1.482,291,1.585,1517,8.142,1518,7.293,1519,4.11,1520,7.671,1521,5.952,1522,5.952,1523,7.671,1524,7.671,1525,5.952,1526,4.11,1527,4.11,1528,4.924,1529,3.682,1530,4.11]],["title/classes/LoadOptions.html",[0,0.008,1531,3.706]],["body/classes/LoadOptions.html",[0,0.013,2,0.057,3,0.057,4,0.05,6,1.261,7,1.416,8,0.142,9,0.35,12,2.188,13,0.245,14,1.073,17,0.912,20,0.005,22,1.19,24,0.654,25,0.982,27,0.257,28,0.826,34,0.074,35,0.776,39,1.625,41,1.698,44,0.581,46,2.169,62,1.617,72,0.004,73,0.004,1531,6.507,1532,5.39,1533,8.124,1534,7.93,1535,7.278,1536,6.304]],["title/classes/LoadOptionsSucceeded.html",[0,0.008,1536,3.912]],["body/classes/LoadOptionsSucceeded.html",[0,0.013,2,0.055,3,0.055,4,0.048,6,1.235,7,1.393,8,0.136,9,0.341,10,2.081,12,2.152,13,0.249,14,0.957,17,0.973,19,0.978,20,0.005,21,0.813,22,1.27,24,0.625,25,0.938,27,0.245,28,0.789,34,0.073,35,0.754,39,1.553,41,1.65,44,0.838,46,2.073,62,1.784,72,0.004,73,0.004,1531,5.804,1532,5.151,1534,7.074,1535,7.767,1536,6.728,1537,5.151,1538,7.896,1539,6.228]],["title/classes/LoadProfile.html",[0,0.008,1540,3.387]],["body/classes/LoadProfile.html",[0,0.014,2,0.048,3,0.048,4,0.042,6,1.285,7,1.417,8,0.119,9,0.312,10,2.143,12,2.189,13,0.248,14,0.661,17,0.913,19,0.857,20,0.005,21,0.712,22,0.799,24,0.547,25,0.822,27,0.286,28,0.691,33,0.918,34,0.075,35,0.827,39,2.161,41,1.514,43,2.778,44,0.856,46,2.411,72,0.004,73,0.004,84,2.745,243,3.093,1055,4.656,1510,3.187,1540,5.464,1541,4.007,1542,7.243,1543,6.311,1544,5.452,1545,5.62,1546,5.077,1547,5.62,1548,5.077,1549,5.62,1550,5.077]],["title/classes/LoadProfileSucceeded.html",[0,0.008,1546,3.534]],["body/classes/LoadProfileSucceeded.html",[0,0.014,2,0.048,3,0.048,4,0.042,6,1.285,7,1.417,8,0.119,9,0.312,10,2.143,12,2.189,13,0.248,14,0.661,17,0.913,19,0.857,20,0.005,21,0.712,22,0.799,24,0.547,25,0.822,27,0.286,28,0.691,33,0.918,34,0.075,35,0.827,39,2.161,41,1.514,43,2.17,44,0.772,46,2.411,72,0.004,73,0.004,84,2.745,243,3.243,1055,4.656,1540,4.866,1541,4.007,1543,5.62,1545,6.311,1546,5.701,1547,5.62,1548,5.077,1549,5.62,1550,5.077,1551,5.452,1552,7.243,1553,5.452]],["title/classes/LoadProgressItems.html",[0,0.008,107,3.041]],["body/classes/LoadProgressItems.html",[0,0.014,2,0.04,3,0.04,4,0.036,6,1.315,7,1.434,8,0.101,9,0.278,10,2.128,11,2.385,12,2.216,13,0.247,14,0.558,17,0.837,19,0.724,20,0.005,21,0.601,22,0.675,24,0.462,25,0.694,27,0.294,28,0.584,33,0.775,34,0.076,35,0.864,37,1.117,38,1.443,39,2.257,41,1.349,43,2.712,44,0.836,46,2.481,49,2.533,51,1.963,58,2.626,72,0.003,73,0.003,82,3.381,83,1.934,97,4.025,98,2.977,99,3.554,102,4.337,103,3.094,104,4.004,105,5.212,106,5.007,107,4.495,108,4.337,109,4.025,110,4.337,111,3.893,112,4.337,113,4.025,114,4.337,115,3.298,116,4.337,117,4.025,1510,2.693,1554,6.456,1555,4.606]],["title/classes/LoadProgressItemsSucceeded.html",[0,0.008,109,3.144]],["body/classes/LoadProgressItemsSucceeded.html",[0,0.014,2,0.04,3,0.04,4,0.036,6,1.315,7,1.434,8,0.101,9,0.278,10,2.128,11,2.533,12,2.216,13,0.247,14,0.558,15,3.229,17,0.837,19,0.724,20,0.005,21,0.601,22,0.675,24,0.462,25,0.694,27,0.294,28,0.584,33,0.775,34,0.076,35,0.864,37,1.117,38,1.443,39,2.257,41,1.349,43,2.233,44,0.758,46,2.481,49,2.533,51,1.963,58,2.626,72,0.003,73,0.003,82,3.381,83,1.934,97,4.025,98,2.977,99,4.316,102,4.337,103,3.094,104,4.004,105,5.212,106,4.337,107,3.893,108,5.007,109,4.647,110,4.337,111,3.893,112,4.337,113,4.025,114,4.337,115,3.298,116,4.337,117,4.025,1556,6.456,1557,4.606]],["title/classes/LoadTimerInfo.html",[0,0.008,754,2.861]],["body/classes/LoadTimerInfo.html",[0,0.014,2,0.078,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,1.141,12,2.242,13,0.247,14,0.873,16,2.56,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,2.489,44,0.792,46,1.441,56,1.16,62,1.129,68,1.11,72,0.003,73,0.003,84,2.978,94,1.036,124,1.419,149,2.824,150,2.824,151,2.824,220,2.212,296,3.013,327,3.157,329,2.824,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.236,746,3.236,747,3.853,748,3.853,749,3.41,750,3.853,751,3.507,752,2.531,753,4.493,754,4.089,755,3.853,756,3.612,1510,2.531,1558,6.179,1559,4.33]],["title/components/LockedHistoryEntryComponent.html",[125,1.19,268,1.848]],["body/components/LockedHistoryEntryComponent.html",[0,0.005,2,0.029,3,0.029,4,0.025,6,0.716,8,0.072,9,0.217,11,1.612,13,0.173,14,0.397,17,0.876,19,0.515,20,0.005,21,0.799,22,0.48,24,0.505,25,0.758,27,0.331,28,0.416,34,0.025,35,0.313,36,2.97,37,0.795,41,0.685,43,2.055,44,0.448,56,0.944,62,0.918,68,1.568,72,0.003,73,0.003,83,2.216,124,1.074,125,1.746,126,1.201,127,1.264,128,1.264,129,1.264,133,2.359,134,1.201,135,2.509,136,2.509,137,3.881,138,3.57,139,1.074,140,1.939,142,1.939,144,4.198,145,1.551,146,2.645,152,3.504,153,1.074,155,1.675,156,3.118,157,4.366,168,1.023,169,1.874,180,3.032,184,1.636,185,0.704,186,1.916,187,1.977,188,1.809,189,1.977,194,0.676,195,1.358,196,1.598,200,0.982,201,1.783,202,2.202,203,2.202,204,2.044,206,1.717,223,1.074,224,1.939,225,1.906,226,1.939,227,2.645,228,1.264,230,1.264,231,1.201,232,1.264,233,1.201,234,2.283,235,1.264,236,1.201,237,1.939,238,1.182,239,1.264,240,1.182,241,1.264,242,1.201,243,1.042,244,1.264,245,1.182,246,1.264,247,1.182,248,1.264,249,1.264,250,1.201,251,2.541,252,1.243,253,1.264,254,2.101,255,2.359,256,1.243,257,1.201,258,3.023,259,1.264,260,1.201,261,1.939,262,1.182,263,1.264,264,1.182,265,1.264,266,1.201,267,1.264,268,2.514,269,2.953,270,1.182,271,1.264,272,1.201,273,1.264,274,1.201,275,1.182,276,1.264,277,1.182,278,1.264,279,1.201,280,1.222,281,1.264,282,1.201,283,1.264,284,1.201,285,2.359,286,1.201,287,1.201,288,1.201,289,1.264,290,1.182,291,1.264,329,3.134,498,2.409,499,2.298,762,3.471,1210,5.067,1379,2.937,1380,4.504,1381,4.504,1382,4.504,1384,6.993,1389,2.937,1402,5.479,1405,2.409,1413,2.937,1414,2.937,1415,2.712,1416,2.937,1417,2.712,1427,6.144,1428,4.504,1429,4.504,1430,4.504,1431,4.504,1560,8.127,1561,7.28,1562,3.278,1563,3.278,1564,3.278,1565,6.117,1566,3.278,1567,3.278,1568,4.159,1569,4.159]],["title/components/LoginComponent.html",[125,1.19,270,1.817]],["body/components/LoginComponent.html",[0,0.006,2,0.033,3,0.033,4,0.029,6,0.795,8,0.082,9,0.241,13,0.186,14,0.457,17,0.982,19,0.878,20,0.005,21,0.961,22,0.818,27,0.324,28,0.478,33,0.634,34,0.029,36,1.698,37,0.914,41,0.788,56,0.707,62,0.688,68,1.706,72,0.003,73,0.003,83,2.354,125,1.855,126,1.381,127,1.453,128,1.453,129,1.453,133,2.566,134,1.381,137,3.93,138,3.615,139,1.235,140,2.154,142,2.154,145,1.723,146,2.838,153,1.235,155,1.925,156,3.288,168,1.599,169,2.929,185,0.809,194,0.777,195,1.561,200,1.129,206,4.115,223,1.235,224,2.154,225,2.117,226,2.154,227,2.838,228,1.453,230,1.453,231,1.381,232,1.453,233,1.381,234,2.629,235,1.453,236,1.381,237,2.154,238,1.358,239,1.453,240,1.358,241,1.453,242,1.381,243,1.198,244,1.453,245,1.358,246,1.453,247,1.358,248,2.566,249,1.453,250,1.381,251,2.699,252,1.428,253,1.453,254,2.286,255,2.566,256,1.428,257,1.381,258,2.967,259,1.453,260,1.381,261,2.154,262,1.358,263,1.453,264,1.358,265,1.453,266,1.381,267,1.453,268,1.381,269,1.294,270,2.653,271,1.453,272,1.381,273,1.453,274,1.381,275,1.358,276,1.453,277,1.358,278,1.453,279,1.381,280,1.404,281,1.453,282,1.381,283,1.453,284,1.381,285,2.566,286,1.381,287,1.381,288,1.381,289,1.453,290,1.358,291,1.453,319,1.404,346,3.738,470,2.854,500,2.435,515,5.409,516,4.589,531,2.641,554,5.409,560,2.663,578,2.641,618,3.854,620,3.854,628,3.854,709,3.001,1234,2.531,1239,2.924,1570,3.768,1571,5.585,1572,5.585,1573,5.585,1574,5.585,1575,3.768,1576,3.768,1577,3.768,1578,3.768,1579,3.768,1580,3.768,1581,3.376,1582,3.376,1583,3.376,1584,3.376,1585,3.117,1586,3.117,1587,3.117,1588,3.768,1589,3.376]],["title/classes/Logout.html",[0,0.008,706,2.64]],["body/classes/Logout.html",[0,0.014,2,0.038,3,0.038,4,0.034,6,1.356,7,1.469,8,0.096,9,0.269,10,1.643,12,2.27,13,0.246,14,1.106,17,0.7,20,0.005,24,0.44,25,0.661,27,0.246,28,0.556,33,0.738,34,0.078,35,0.899,39,1.97,44,0.744,72,0.003,73,0.003,234,2.904,394,1.46,470,4.038,481,4.788,544,2.297,546,2.357,548,2.357,557,3.688,560,3.461,618,3.266,620,3.266,621,3.266,628,3.266,665,3.943,694,2.564,698,3.762,699,3.351,700,3.762,701,3.54,702,3.762,703,4.486,704,3.762,705,3.762,706,4.674,707,4.608,708,3.762,709,3.351,710,3.762,1590,6.237]],["title/classes/MarkComplete.html",[0,0.008,115,2.576]],["body/classes/MarkComplete.html",[0,0.014,2,0.039,3,0.039,4,0.035,6,1.307,7,1.426,8,0.098,9,0.273,10,2.304,11,2.368,12,2.203,13,0.247,14,0.544,17,0.897,19,0.705,20,0.005,21,0.586,22,0.658,24,0.451,25,0.677,27,0.29,28,0.569,33,0.756,34,0.076,35,0.858,37,1.089,38,1.406,39,2.24,41,1.325,43,2.692,44,0.832,46,2.447,49,2.488,51,1.928,58,3.655,72,0.003,73,0.003,82,3.32,83,1.9,97,3.954,98,2.902,99,3.505,102,4.259,103,3.016,104,4.828,105,5.189,106,4.259,107,3.824,108,4.259,109,3.954,110,4.259,111,3.824,112,4.259,113,3.954,114,4.938,115,3.756,116,4.259,117,3.954,1510,2.625,1591,6.341,1592,6.341]],["title/interfaces/MarkCompleteEntity.html",[118,0.366,841,3.534]],["body/interfaces/MarkCompleteEntity.html",[2,0.047,3,0.047,4,0.042,7,1.099,8,0.118,9,0.31,11,1.422,13,0.204,20,0.005,24,0.542,27,0.284,34,0.067,35,0.824,44,0.769,51,2.187,72,0.004,73,0.004,88,5.976,89,3.176,93,3.831,94,1.936,118,0.588,168,1.921,194,2.022,527,3.155,713,3.255,724,2.519,769,4.062,841,5.672,987,2.978,1269,2.693,1271,4.486,1318,5.582,1349,5.043,1350,5.043,1351,5.043,1352,3.626,1355,3.783,1356,3.676,1357,3.783,1358,2.693,1359,2.758,1360,2.758,1368,3.783,1375,5.043,1376,5.043,1593,4.465,1594,4.465,1595,4.188,1596,4.188,1597,4.835,1598,4.835,1599,4.835,1600,4.835,1601,4.835,1602,4.835,1603,4.835,1604,4.835,1605,4.835,1606,4.835,1607,4.835,1608,4.835]],["title/interfaces/MarkCompleteItem.html",[118,0.366,763,3.912]],["body/interfaces/MarkCompleteItem.html",[2,0.063,3,0.063,4,0.056,8,0.158,9,0.373,13,0.234,20,0.005,34,0.056,44,0.825,72,0.004,73,0.004,88,6.204,89,3.634,93,3.977,94,2.216,118,0.628,763,6.712,769,4.131,1609,7.221,1610,7.221]],["title/interfaces/MarkCompletePayload.html",[104,2.709,118,0.366]],["body/interfaces/MarkCompletePayload.html",[2,0.061,3,0.061,4,0.053,8,0.151,9,0.364,13,0.213,20,0.005,34,0.07,44,0.915,51,2.878,56,1.299,62,1.264,72,0.004,73,0.004,93,2.867,94,2.176,104,4.53,118,0.687,122,4.046,124,2.269,760,4.851,761,4.473,766,5.087,768,5.725,769,2.978,770,6.05]],["title/classes/MarkCompleteSucceeded.html",[0,0.008,117,3.144]],["body/classes/MarkCompleteSucceeded.html",[0,0.014,2,0.04,3,0.04,4,0.036,6,1.315,7,1.434,8,0.101,9,0.278,10,2.128,11,2.385,12,2.216,13,0.247,14,0.558,17,0.837,19,0.724,20,0.005,21,0.601,22,0.675,24,0.462,25,0.694,27,0.294,28,0.584,33,0.775,34,0.076,35,0.864,37,1.117,38,1.443,39,2.257,41,1.349,43,2.233,44,0.758,46,2.481,49,2.533,51,1.963,58,3.585,72,0.003,73,0.003,82,3.381,83,1.934,97,4.025,98,2.977,99,3.554,102,4.337,103,3.094,104,4.863,105,5.212,106,4.337,107,3.893,108,4.337,109,4.025,110,4.337,111,3.893,112,4.337,113,4.025,114,4.337,115,3.298,116,5.007,117,4.647,1611,3.574,1612,6.456,1613,4.606]],["title/components/NavComponent.html",[125,1.19,272,1.848]],["body/components/NavComponent.html",[0,0.004,2,0.025,3,0.025,4,0.022,6,0.635,8,0.061,9,0.192,13,0.194,14,0.341,17,0.979,19,0.442,20,0.005,21,0.724,22,0.412,24,0.77,25,1.157,27,0.289,33,0.473,34,0.022,36,1.356,37,0.682,41,0.588,56,0.528,62,0.514,68,1.421,72,0.002,73,0.002,83,2.3,125,1.625,126,1.031,127,1.084,128,1.084,129,1.084,133,2.138,134,1.031,135,2.226,136,2.226,137,3.821,138,3.531,139,0.922,140,1.72,142,1.72,144,5.091,145,1.377,146,2.434,152,3.225,153,0.922,157,3.935,168,1.128,169,2.066,180,2.691,184,1.403,185,0.604,186,2.608,187,1.696,188,2.462,200,0.843,223,0.922,224,1.72,225,1.691,226,1.72,227,2.434,228,1.084,230,1.084,231,1.031,232,1.084,233,1.031,234,2.124,235,1.084,236,1.031,237,1.72,238,1.014,239,1.084,240,1.014,241,1.084,242,1.031,243,0.894,244,1.084,245,1.014,246,1.084,247,1.014,248,1.084,249,1.084,250,1.031,251,2.637,252,1.066,253,1.084,254,1.905,255,2.138,256,2.102,257,1.031,258,3.029,259,1.084,260,1.031,261,1.72,262,1.014,263,1.084,264,1.014,265,1.084,266,1.031,267,1.084,268,1.031,269,0.966,270,1.014,271,1.084,272,2.313,273,1.084,274,1.031,275,1.014,276,1.084,277,1.014,278,1.084,279,1.031,280,1.048,281,1.084,282,1.031,283,1.084,284,1.031,285,2.138,286,1.031,287,1.031,288,1.031,289,1.084,290,1.014,291,1.084,338,5.44,460,3.807,475,3.997,517,7.217,585,4.912,706,4.17,788,3.69,1050,4.587,1303,3.69,1614,2.812,1615,4.461,1616,4.461,1617,4.461,1618,6.312,1619,6.312,1620,6.312,1621,6.312,1622,5.749,1623,6.312,1624,6.883,1625,2.812,1626,2.812,1627,2.812,1628,2.812,1629,2.812,1630,2.812,1631,7.325,1632,7.816,1633,4.461,1634,2.812,1635,2.812,1636,5.545,1637,4.461,1638,5.545,1639,3.997,1640,2.812,1641,4.461,1642,4.461,1643,2.812,1644,4.461,1645,7.134,1646,5.545,1647,4.461,1648,4.461,1649,5.545,1650,4.461,1651,4.461,1652,5.545,1653,4.461,1654,2.812,1655,5.545,1656,4.461,1657,2.812,1658,2.812,1659,2.519,1660,2.812,1661,2.812,1662,2.519,1663,2.519,1664,2.812,1665,4.461,1666,4.461,1667,4.461,1668,4.461,1669,3.997]],["title/interfaces/NgSelectValue.html",[118,0.366,1030,3.387]],["body/interfaces/NgSelectValue.html",[2,0.063,3,0.063,4,0.055,8,0.156,9,0.371,13,0.18,20,0.005,22,1.259,34,0.071,44,0.872,72,0.004,73,0.004,118,0.695,160,5.957,769,3.698,1025,5.543,1026,5.909,1027,5.909,1029,5.543,1030,5.773,1031,7.913]],["title/classes/NotAuthenticated.html",[0,0.008,701,2.861]],["body/classes/NotAuthenticated.html",[0,0.014,2,0.038,3,0.038,4,0.034,6,1.356,7,1.469,8,0.096,9,0.269,10,1.643,12,2.27,13,0.246,14,1.106,17,0.7,20,0.005,24,0.44,25,0.661,27,0.246,28,0.556,33,0.738,34,0.078,35,0.899,39,1.97,44,0.744,72,0.003,73,0.003,234,2.904,394,1.46,470,4.038,481,4.788,544,2.297,546,2.357,548,2.357,557,3.688,560,3.461,618,3.266,620,3.266,621,3.266,628,3.266,665,3.943,694,2.564,698,3.762,699,3.351,700,4.377,701,4.119,702,3.762,703,4.486,704,3.762,705,3.762,706,4.373,707,4.608,708,3.762,709,3.351,710,3.762,1670,6.237]],["title/interfaces/PieChartConfig.html",[118,0.366,734,3.387]],["body/interfaces/PieChartConfig.html",[2,0.055,3,0.055,4,0.048,8,0.136,9,0.341,13,0.219,20,0.005,21,0.813,25,0.938,34,0.07,44,0.812,72,0.004,73,0.004,89,4.058,94,2.182,118,0.683,711,4.024,712,4.832,713,5.229,714,6.391,715,4.577,716,4.577,717,4.577,718,4.577,719,4.577,720,4.577,721,4.577,722,4.577,723,4.577,725,3.756,726,4.577,727,4.365,728,4.577,729,4.183,730,4.577,731,4.577,732,4.577,733,4.832,734,5.304,735,6.701,736,6.701,737,6.701]],["title/injectables/PlatformsEffects.html",[292,1.579,1671,4.17]],["body/injectables/PlatformsEffects.html",[0,0.009,2,0.052,3,0.052,4,0.046,7,1.452,8,0.13,9,0.331,13,0.15,14,0.723,17,0.862,19,0.937,20,0.005,21,0.779,22,0.874,24,0.598,25,0.899,27,0.381,34,0.046,38,2.405,72,0.004,73,0.004,185,1.28,190,3.597,191,3.486,200,1.787,201,2.115,292,2.661,297,3.597,300,4.789,302,4.476,311,5.159,312,5.159,314,5.159,315,3.718,316,5.297,318,3.123,319,2.222,320,4.006,321,2.426,323,5.707,324,2.471,494,5.342,495,5.342,1161,6.777,1311,5.96,1531,6.595,1671,6.353,1672,5.964,1673,5.964,1674,7.681,1675,7.681,1676,7.681,1677,7.681,1678,5.964,1679,5.342]],["title/injectables/PlatformsService.html",[292,1.579,1161,3.534]],["body/injectables/PlatformsService.html",[0,0.009,2,0.054,3,0.054,4,0.047,8,0.17,9,0.337,13,0.197,14,0.741,17,0.965,19,0.961,20,0.005,21,0.798,22,1.143,27,0.357,34,0.06,35,0.584,44,0.545,72,0.004,73,0.004,94,1.463,118,0.444,145,2.408,168,1.588,185,1.313,200,1.832,201,3.049,292,2.692,319,2.278,321,2.487,324,2.533,346,3.772,417,3.374,985,4.493,1116,5.14,1117,5.14,1118,3.47,1124,4.429,1159,5.057,1160,5.477,1161,5.47,1162,8.112,1163,5.477,1164,5.477,1165,8.112,1166,5.477,1167,5.477,1168,5.477,1169,4.744,1170,5.477,1171,5.477,1172,5.477,1173,5.477,1439,4.493,1680,7.804,1681,6.114]],["title/interfaces/PlayingDisplayData.html",[118,0.366,764,3.706]],["body/interfaces/PlayingDisplayData.html",[2,0.057,3,0.057,4,0.05,8,0.143,9,0.351,11,2.515,13,0.241,20,0.005,27,0.321,34,0.063,72,0.004,73,0.004,94,2.328,115,4.739,118,0.643,196,3.185,757,4.801,758,5.852,759,5.852,760,6.212,761,6.167,762,5.264,763,7.197,764,5.98,765,8.309,766,6.818,767,8.309]],["title/components/PlayingItemComponent.html",[125,1.19,274,1.848]],["body/components/PlayingItemComponent.html",[0,0.004,2,0.026,3,0.026,4,0.023,6,0.657,8,0.064,9,0.199,11,1.503,13,0.188,14,0.356,17,0.955,19,0.725,20,0.005,21,0.844,22,0.947,24,0.572,25,0.859,27,0.342,28,0.372,33,0.494,34,0.023,35,0.441,36,1.734,37,0.712,41,0.614,43,1.937,44,0.411,49,2.928,51,0.893,56,0.551,62,0.536,68,2,72,0.002,73,0.003,82,2.417,83,2.6,91,3.1,92,2.983,93,1.912,115,3.303,125,1.659,126,1.076,127,1.132,128,1.132,129,1.132,133,2.199,134,1.076,135,2.303,136,2.303,137,3.838,138,3.53,139,2.558,140,1.78,142,1.78,144,3.989,145,1.424,146,2.493,152,3.591,153,0.962,154,4.718,155,1.5,156,2.98,157,4.193,162,3.334,168,1.43,169,2.619,174,4.192,180,2.784,184,1.465,185,0.63,186,1.716,187,1.771,188,1.62,189,1.771,190,1.771,191,1.716,194,0.605,195,1.216,196,1.431,200,0.88,201,1.041,202,1.972,203,1.972,204,1.831,206,3.68,219,2.63,220,2.358,221,3.818,222,5.348,223,0.962,224,1.78,225,1.749,226,1.78,227,2.493,228,1.132,229,3.818,230,1.132,231,1.076,232,1.132,233,1.076,234,2.168,235,1.132,236,1.076,237,1.78,238,1.058,239,1.132,240,1.058,241,1.132,242,1.076,243,0.933,244,1.132,245,1.058,246,1.132,247,1.058,248,1.132,249,1.132,250,1.076,251,2.414,252,1.113,253,1.132,254,1.959,255,2.199,256,1.113,257,1.076,258,2.69,259,1.132,260,1.076,261,1.78,262,1.058,263,1.132,264,1.058,265,1.132,266,1.076,267,1.132,268,1.076,269,1.008,270,1.058,271,1.132,272,1.076,273,1.132,274,2.369,275,1.058,276,1.132,277,1.058,278,1.132,279,1.076,280,1.094,281,1.132,282,1.076,283,1.132,284,1.076,285,2.199,286,1.076,287,1.076,288,1.076,289,1.132,290,1.058,291,1.132,496,2.278,497,2.278,764,4.192,770,1.831,773,2.63,774,4.135,775,4.135,776,5.109,779,2.63,781,4.718,784,2.63,785,4.135,788,3.818,864,7.773,1049,5.109,1050,4.718,1595,2.278,1596,2.278,1639,4.135,1682,8.677,1683,6.465,1684,2.936,1685,2.936,1686,2.936,1687,2.936,1688,2.936,1689,2.936,1690,4.616,1691,2.936,1692,2.936,1693,2.936,1694,2.936,1695,2.63,1696,2.936,1697,2.936,1698,2.936,1699,2.936,1700,2.936,1701,2.936,1702,4.616,1703,2.936,1704,2.936,1705,2.936,1706,2.936,1707,2.936,1708,2.63,1709,4.616,1710,4.616,1711,4.616,1712,4.616]],["title/pipes/PluralizePipe.html",[302,2.515,1713,3.912]],["body/pipes/PluralizePipe.html",[0,0.01,2,0.059,3,0.059,4,0.052,6,0.961,13,0.17,17,0.757,19,1.06,20,0.005,21,1.174,22,0.988,25,1.251,27,0.266,34,0.052,44,0.894,72,0.004,73,0.004,94,2.151,134,2.472,145,2.082,168,1.829,185,1.449,302,4.486,372,4.069,1063,5.581,1068,6.866,1713,6.441,1714,6.747,1715,8.301,1716,8.301,1717,9.382,1718,9.382,1719,6.747]],["title/interfaces/Profile.html",[118,0.366,243,1.603]],["body/interfaces/Profile.html",[2,0.067,3,0.067,4,0.059,8,0.166,9,0.385,13,0.192,20,0.005,34,0.059,44,0.844,72,0.005,73,0.005,118,0.648,243,2.838,1055,5.248,1720,7.612]],["title/components/ProfileComponent.html",[125,1.19,275,1.817]],["body/components/ProfileComponent.html",[0,0.005,2,0.031,3,0.031,4,0.027,6,0.751,8,0.076,9,0.228,13,0.192,14,0.423,17,0.96,19,0.829,20,0.005,21,1.045,22,0.773,24,0.638,25,0.958,27,0.327,28,0.443,34,0.027,36,1.604,37,0.847,41,0.73,44,0.47,56,0.655,62,0.638,68,1.63,72,0.003,73,0.003,83,2.279,89,2.495,125,1.796,126,1.28,127,1.347,128,1.347,129,1.347,133,2.452,134,1.28,137,3.904,138,3.591,139,1.145,140,2.035,142,2.035,144,4.318,145,1.628,146,2.733,153,1.145,155,1.784,156,3.196,157,4.463,168,1.294,169,2.37,180,3.182,185,0.75,186,2.041,187,2.106,188,1.927,189,2.106,194,0.72,200,1.046,201,1.239,206,1.829,223,1.145,224,2.035,225,2,226,2.035,227,2.733,228,1.347,230,1.347,231,1.28,232,1.347,233,1.28,234,2.348,235,1.347,236,1.28,237,2.035,238,1.259,239,1.347,240,1.259,241,1.347,242,1.28,243,2.022,244,2.452,245,2.292,246,1.347,247,1.259,248,1.347,249,1.347,250,1.28,251,2.613,252,1.324,253,1.347,254,2.184,255,2.452,256,1.324,257,1.28,258,2.884,259,1.347,260,1.28,261,2.035,262,1.259,263,1.347,264,1.259,265,1.347,266,1.28,267,1.347,268,1.28,269,1.2,270,1.259,271,1.347,272,1.28,273,1.347,274,1.28,275,2.554,276,1.347,277,1.259,278,1.347,279,1.28,280,1.301,281,1.347,282,1.28,283,1.347,284,1.28,285,2.452,286,1.28,287,1.28,288,1.28,289,1.347,290,1.259,291,1.347,394,2.117,500,2.257,501,3.129,516,4.989,527,3.084,557,2.967,560,3.032,662,2.71,1239,2.71,1240,3.129,1622,6.136,1662,3.129,1663,3.129,1669,4.727,1721,3.492,1722,5.276,1723,5.276,1724,8.001,1725,7.086,1726,5.276,1727,3.492,1728,3.492,1729,3.492,1730,5.276,1731,3.492,1732,3.492,1733,6.359,1734,3.492,1735,3.492,1736,3.492,1737,3.492,1738,3.492,1739,3.492,1740,3.492,1741,3.492,1742,5.276,1743,5.276]],["title/injectables/ProfileEffects.html",[292,1.579,1744,4.17]],["body/injectables/ProfileEffects.html",[0,0.008,2,0.046,3,0.046,4,0.04,7,1.489,8,0.114,9,0.303,13,0.132,14,0.632,17,0.893,19,0.82,20,0.005,21,0.681,22,0.764,24,0.706,25,1.06,27,0.369,34,0.04,38,2.667,72,0.004,73,0.004,185,1.12,190,3.147,191,3.05,200,1.563,201,1.851,292,2.492,297,3.147,300,5.309,302,4.748,303,5.502,311,5.72,312,5.72,314,5.72,315,4.386,316,5.543,318,2.733,319,1.945,320,3.505,321,2.122,323,3.505,324,2.162,502,4.316,1038,7.043,1053,4.316,1176,6.56,1309,6.607,1311,6.607,1540,5.72,1744,5.818,1745,5.218,1746,5.218,1747,7.034,1748,7.034,1749,7.034,1750,7.034,1751,7.034,1752,5.218,1753,7.034,1754,7.034,1755,7.034,1756,6.301,1757,7.034,1758,7.034,1759,5.218,1760,4.674]],["title/modules/ProfileModule.html",[373,2.128,390,3.706]],["body/modules/ProfileModule.html",[0,0.009,2,0.052,3,0.052,4,0.046,20,0.005,27,0.396,28,0.753,34,0.059,72,0.004,73,0.004,185,1.275,195,2.46,223,1.946,242,3.479,245,2.761,275,3.422,318,3.109,373,3.233,375,3.37,376,5.113,377,3.581,378,4.332,390,7.329,393,4.619,394,1.976,395,3.47,397,4.477,401,5.629,402,4.161,403,3.988,404,4.364,409,3.988,442,3.36,594,4.949,595,3.702,1033,5.318,1176,6.654,1744,4.911,1760,5.318,1761,5.318,1762,5.318,1763,5.318,1764,5.937,1765,5.937,1766,5.937,1767,5.937,1768,5.937,1769,5.937,1770,5.937]],["title/injectables/ProfileService.html",[292,1.579,1176,3.534]],["body/injectables/ProfileService.html",[0,0.008,2,0.049,3,0.049,4,0.043,8,0.121,9,0.317,13,0.22,14,0.675,17,0.981,19,1.291,20,0.005,21,1.073,22,1.204,27,0.358,33,0.937,34,0.057,35,0.531,43,2.2,44,0.879,72,0.004,73,0.004,118,0.404,145,2.266,168,1.778,185,1.195,200,1.667,201,2.914,243,2.335,292,2.574,319,2.074,321,2.264,324,2.306,346,3.985,417,3.072,585,3.254,1038,6.074,1055,4.88,1116,4.959,1117,4.959,1118,3.159,1124,4.167,1174,4.604,1175,4.986,1176,5.147,1177,7.827,1178,4.986,1179,4.986,1180,6.578,1181,4.986,1182,4.986,1183,4.986,1184,6.578,1185,4.986,1186,4.091,1187,4.986,1439,4.091,1771,7.343,1772,7.343,1773,5.566,1774,5.566]],["title/interfaces/ProfileState.html",[118,0.366,1775,3.912]],["body/interfaces/ProfileState.html",[2,0.087,3,0.058,4,0.051,8,0.143,9,0.352,13,0.166,20,0.005,24,0.659,27,0.35,28,0.832,33,1.105,34,0.075,35,0.887,72,0.004,73,0.004,118,0.645,194,1.683,243,2.824,442,2.88,668,4.274,669,3.437,670,3.437,1775,6.892,1776,5.88,1777,7.957,1778,5.88,1779,5.88,1780,5.88,1781,5.88,1782,5.88,1783,7.311,1784,5.88,1785,5.88,1786,7.311]],["title/interfaces/ProgressCollection.html",[118,0.366,1191,3.912]],["body/interfaces/ProgressCollection.html",[0,0.008,2,0.047,3,0.047,4,0.041,8,0.116,9,0.307,11,2.26,13,0.134,20,0.005,27,0.377,33,0.894,34,0.055,35,0.819,44,0.851,51,2.164,58,2.895,72,0.004,73,0.004,99,3.828,104,3.824,105,2.854,118,0.583,119,4.204,122,4.161,168,1.873,185,1.14,196,2.59,200,1.591,201,2.524,292,2.229,298,3.432,319,1.979,321,2.16,324,2.2,346,3.924,417,2.931,769,3.454,770,5.347,1116,4.04,1117,4.556,1118,3.014,1120,3.723,1121,3.723,1124,3.014,1129,3.723,1134,3.723,1139,3.723,1140,3.723,1142,3.723,1143,3.723,1151,3.723,1188,6.939,1189,4.394,1190,3.312,1191,6.229,1192,4.394,1193,4.394,1194,4.394,1195,4.394,1196,4.394,1197,4.394,1198,4.394,1199,4.394,1200,4.394,1201,4.394,1202,4.394,1203,4.394,1204,4.394,1205,4.394,1206,4.394,1207,4.394]],["title/injectables/ProgressEffects.html",[292,1.579,868,4.17]],["body/injectables/ProgressEffects.html",[0,0.006,2,0.035,3,0.035,4,0.031,7,1.471,8,0.088,9,0.253,13,0.101,14,0.487,17,0.906,19,0.631,20,0.005,21,0.525,22,0.589,24,0.762,25,1.144,27,0.358,34,0.031,38,3.056,72,0.003,73,0.003,107,4.577,111,4.577,115,3.878,185,0.863,190,2.423,191,2.348,192,3.117,193,3.117,200,1.204,201,1.425,292,2.163,297,2.423,298,5.618,300,5.555,302,4.803,303,5.965,311,5.657,312,5.657,314,5.657,315,4.732,316,5.665,318,2.104,319,1.497,320,2.699,321,1.634,322,2.953,323,2.699,324,1.664,325,3.323,326,3.599,496,3.117,497,3.117,868,4.843,1309,6.534,1318,4.543,1330,4.543,1595,3.117,1596,3.117,1695,3.599,1708,5.245,1787,4.018,1788,7.59,1789,4.018,1790,5.855,1791,5.855,1792,5.855,1793,5.855,1794,5.855,1795,5.855,1796,4.843,1797,4.843,1798,5.855,1799,5.855,1800,4.018,1801,5.855,1802,5.855,1803,5.855,1804,5.855,1805,5.855,1806,5.855,1807,4.018,1808,5.855,1809,5.855,1810,5.855,1811,5.855,1812,5.855,1813,5.855,1814,5.855,1815,4.018,1816,5.855,1817,5.855,1818,5.855,1819,5.245,1820,5.855,1821,5.855,1822,4.018]],["title/interfaces/ProgressEntity.html",[99,2.404,118,0.366]],["body/interfaces/ProgressEntity.html",[2,0.049,3,0.049,4,0.043,7,1.122,8,0.121,9,0.317,13,0.207,20,0.005,24,0.559,27,0.289,34,0.067,35,0.834,41,1.826,44,0.87,51,1.692,72,0.004,73,0.004,89,2.184,99,3.501,118,0.597,122,5.107,168,1.898,194,2.033,527,4.292,585,3.254,713,3.357,724,2.597,769,4.014,770,5.448,1269,2.777,1271,4.531,1330,4.319,1349,5.147,1350,5.147,1351,5.147,1352,3.739,1355,3.901,1356,3.752,1357,3.901,1358,2.777,1359,2.844,1360,2.844,1362,4.319,1365,5.697,1366,4.319,1368,3.901,1375,5.147,1376,3.901,1823,4.604,1824,4.986,1825,4.986,1826,4.986,1827,4.986,1828,4.986,1829,4.986]],["title/interfaces/ProgressItem.html",[118,0.366,761,3.258]],["body/interfaces/ProgressItem.html",[2,0.06,3,0.06,4,0.052,8,0.148,9,0.36,13,0.228,20,0.005,34,0.07,44,0.92,51,2.067,56,1.276,62,1.242,72,0.004,73,0.004,93,2.816,94,2.159,104,3.652,118,0.683,122,5.499,124,2.228,760,4.765,761,5.389,766,4.997,768,5.623,769,4.048,770,6.019]],["title/injectables/ProgressService.html",[292,1.579,298,3.258]],["body/injectables/ProgressService.html",[0,0.006,2,0.037,3,0.037,4,0.033,8,0.093,9,0.263,11,1.123,13,0.228,14,0.516,17,1.016,19,1.39,20,0.005,21,1.155,22,1.296,27,0.357,33,0.717,34,0.047,35,0.745,43,2.337,44,0.886,49,2.397,51,2.371,58,3.172,72,0.003,73,0.003,99,3.405,104,4.191,105,2.289,115,3.121,118,0.444,119,4.827,122,3.571,145,1.885,168,1.946,185,0.915,196,2.078,200,1.277,201,3.047,292,2.237,298,3.948,319,1.588,321,1.733,324,1.765,346,4.045,417,2.351,769,3.073,770,4.863,1116,4.427,1117,4.877,1118,2.418,1120,2.987,1121,2.987,1124,3.467,1129,2.987,1134,2.987,1139,2.987,1140,2.987,1142,2.987,1143,2.987,1151,4.282,1188,6.052,1189,3.525,1190,2.657,1191,6.407,1192,3.525,1193,3.525,1194,5.053,1195,3.525,1196,3.525,1197,3.525,1198,5.053,1199,3.525,1200,3.525,1201,3.525,1202,5.053,1203,5.053,1204,5.053,1205,3.525,1206,3.525,1207,3.525,1438,5.472,1439,3.132,1830,6.109,1831,6.109,1832,6.109,1833,6.109,1834,4.261,1835,4.261,1836,4.261,1837,4.261,1838,4.261,1839,4.261]],["title/components/RegisterComponent.html",[125,1.19,277,1.817]],["body/components/RegisterComponent.html",[0,0.006,2,0.033,3,0.033,4,0.029,6,0.8,8,0.083,9,0.242,13,0.186,14,0.461,17,0.985,19,0.883,20,0.005,21,0.965,22,0.823,27,0.325,28,0.482,33,0.64,34,0.029,36,1.709,37,0.922,41,0.794,56,0.713,62,0.694,68,1.714,72,0.003,73,0.003,83,2.363,125,1.862,126,1.393,127,1.465,128,1.465,129,1.465,133,2.579,134,1.393,137,3.933,138,3.617,139,1.246,140,2.167,142,2.167,145,1.734,146,2.85,153,1.246,155,1.942,156,3.298,168,1.605,169,2.939,185,0.816,194,0.784,195,1.574,200,1.139,206,3.87,223,1.246,224,2.167,225,2.13,226,2.167,227,2.85,228,1.465,230,1.465,231,1.393,232,1.465,233,1.393,234,2.636,235,1.465,236,1.393,237,2.167,238,1.37,239,1.465,240,1.37,241,1.465,242,1.393,243,1.208,244,1.465,245,1.37,246,1.465,247,1.37,248,1.465,249,1.465,250,1.393,251,2.709,252,1.44,253,1.465,254,2.297,255,2.579,256,1.44,257,1.393,258,2.976,259,1.465,260,1.393,261,2.167,262,1.37,263,1.465,264,1.37,265,1.465,266,1.393,267,1.465,268,1.393,269,1.305,270,1.37,271,1.465,272,1.393,273,1.465,274,1.393,275,1.37,276,1.465,277,2.664,278,1.465,279,1.393,280,1.416,281,1.465,282,1.393,283,1.465,284,1.393,285,2.579,286,1.393,287,1.393,288,1.393,289,1.465,290,1.37,291,1.465,319,1.416,346,3.748,471,4.649,500,2.456,515,5.432,516,4.608,531,2.664,554,5.432,578,2.664,1234,2.553,1239,2.949,1582,3.404,1583,3.404,1584,3.404,1585,3.144,1586,3.144,1587,3.144,1589,3.404,1840,3.8,1841,5.621,1842,5.621,1843,5.621,1844,7.39,1845,7.39,1846,7.39,1847,5.621,1848,5.621,1849,3.8,1850,3.8,1851,3.8,1852,3.8,1853,3.8,1854,3.8,1855,3.8]],["title/classes/Remove.html",[0,0.008,49,1.978]],["body/classes/Remove.html",[0,0.014,2,0.045,3,0.045,4,0.039,6,1.297,7,1.423,8,0.112,9,0.299,10,2.226,11,1.829,12,2.198,13,0.247,14,0.62,17,0.884,19,0.804,20,0.005,21,0.668,22,0.75,24,0.514,25,0.771,27,0.202,28,0.649,34,0.076,35,0.843,37,1.241,38,1.603,39,2.201,41,1.07,44,0.856,49,3.654,51,2.92,68,1.312,72,0.004,73,0.004,74,4.663,75,5.921,76,3.587,77,3.438,80,5.102,81,5.102,82,4.624,83,2.645,84,2.631,85,3.587,86,3.762,87,4.663,88,3.307,89,2.008,90,5.102,91,3.438,92,4.486,93,2.12,94,1.225,95,5.102,96,4.663,1856,6.942,1857,5.118]],["title/classes/RemoveHistoryItem.html",[0,0.008,50,2.709]],["body/classes/RemoveHistoryItem.html",[0,0.014,1,3.102,2,0.033,3,0.033,4,0.029,5,2.157,6,1.332,7,1.444,8,0.083,9,0.242,10,2.311,11,2.251,12,2.231,13,0.247,14,0.461,16,2.771,17,0.83,19,0.597,20,0.005,21,0.496,22,0.557,24,0.381,25,0.573,26,3.285,27,0.264,28,0.482,29,1.773,30,2.994,31,2.994,32,2.994,33,0.64,34,0.077,35,0.882,36,2.844,37,0.922,38,1.19,39,2.304,40,3.285,41,1.175,42,3.02,43,2.683,44,0.856,45,3.285,46,2.625,47,3.102,48,3.91,49,2.206,50,3.593,51,2.597,52,3.285,53,3.102,54,3.285,55,4.826,56,1.055,57,2.872,58,3.358,59,3.285,60,3.102,61,3.285,62,1.027,63,2.872,64,3.285,65,3.102,66,3.285,67,3.285,68,1.44,69,2.872,70,3.285,71,3.102,72,0.003,73,0.003,1510,2.222,1858,5.621,1859,5.621]],["title/classes/RemoveHistoryItemSucceeded.html",[0,0.008,53,2.782]],["body/classes/RemoveHistoryItemSucceeded.html",[0,0.014,1,3.151,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.267,12,2.24,13,0.246,14,0.471,16,2.806,17,0.76,19,0.61,20,0.005,21,0.507,22,0.569,24,0.39,25,0.585,26,3.338,27,0.267,28,0.492,29,1.812,30,3.032,31,3.032,32,3.032,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.338,41,1.194,42,3.068,43,2.384,44,0.827,45,3.338,46,2.649,47,3.151,48,3.338,49,2.241,50,3.068,51,2.53,52,3.959,53,3.738,54,3.338,55,4.864,56,1.072,57,2.918,58,3.384,59,3.338,60,3.151,61,3.338,62,1.043,63,2.918,64,3.338,65,3.151,66,3.338,67,3.338,68,1.464,69,2.918,70,3.338,71,3.151,72,0.003,73,0.003,77,2.609,1860,5.711,1861,3.883]],["title/classes/RemoveProgressItem.html",[0,0.008,111,3.041]],["body/classes/RemoveProgressItem.html",[0,0.014,2,0.039,3,0.039,4,0.035,6,1.307,7,1.426,8,0.098,9,0.273,10,2.304,11,2.368,12,2.203,13,0.247,14,0.544,17,0.897,19,0.705,20,0.005,21,0.586,22,0.658,24,0.451,25,0.677,27,0.29,28,0.569,33,0.756,34,0.076,35,0.858,37,1.089,38,1.406,39,2.24,41,1.325,43,2.692,44,0.868,46,2.447,49,2.488,51,2.732,58,2.579,72,0.003,73,0.003,82,3.32,83,1.9,97,3.954,98,2.902,99,3.505,102,4.259,103,3.016,104,3.949,105,5.189,106,4.259,107,3.824,108,4.259,109,3.954,110,4.938,111,4.433,112,4.259,113,3.954,114,4.259,115,3.24,116,4.259,117,3.954,1510,2.625,1862,6.341,1863,6.341]],["title/classes/RemoveProgressItemSucceeded.html",[0,0.008,113,3.144]],["body/classes/RemoveProgressItemSucceeded.html",[0,0.014,2,0.04,3,0.04,4,0.036,6,1.315,7,1.434,8,0.101,9,0.278,10,2.128,11,2.385,12,2.216,13,0.247,14,0.558,17,0.837,19,0.724,20,0.005,21,0.601,22,0.675,24,0.462,25,0.694,27,0.294,28,0.584,33,0.775,34,0.076,35,0.864,37,1.117,38,1.443,39,2.257,41,1.349,43,2.233,44,0.836,46,2.481,49,2.533,51,2.68,58,2.626,72,0.003,73,0.003,77,3.094,82,3.381,83,1.934,97,4.025,98,2.977,99,3.554,102,4.337,103,3.094,104,4.004,105,5.212,106,4.337,107,3.893,108,4.337,109,4.025,110,4.337,111,3.893,112,5.007,113,4.647,114,4.337,115,3.298,116,4.337,117,4.025,1864,6.456,1865,4.606]],["title/classes/Reset.html",[0,0.008,394,1.678]],["body/classes/Reset.html",[0,0.014,2,0.045,3,0.045,4,0.039,6,1.323,7,1.445,8,0.111,9,0.298,11,1.338,12,2.232,13,0.245,14,0.951,17,0.775,20,0.005,24,0.51,25,0.765,27,0.309,28,0.644,33,0.855,34,0.077,35,0.867,37,2.204,39,2.196,44,0.615,46,1.691,56,1.296,62,1.261,72,0.003,73,0.003,84,2.974,94,1.215,99,3.293,119,4.109,124,2.264,139,2.978,149,3.156,150,3.156,151,3.156,296,4.43,394,3.094,745,3.617,746,3.617,1190,3.167,1866,5.271,1867,3.412,1868,6.906,1869,4.841,1870,4.841,1871,4.463]],["title/classes/ResetPassword.html",[0,0.008,621,2.64]],["body/classes/ResetPassword.html",[0,0.014,2,0.037,3,0.037,4,0.033,6,1.348,7,1.461,8,0.093,9,0.263,10,2.054,12,2.257,13,0.248,14,1.072,17,0.801,19,0.668,20,0.005,21,0.555,22,0.623,24,0.427,25,0.641,27,0.241,28,0.539,33,0.716,34,0.078,35,0.893,39,1.943,44,0.821,72,0.003,73,0.003,234,2.885,394,1.416,470,3.982,481,4.739,544,2.228,546,2.286,548,2.286,557,4.223,560,3.402,618,3.195,620,3.195,621,3.736,628,3.195,665,3.889,694,2.487,698,3.68,699,3.278,700,3.68,701,3.463,702,3.68,703,4.424,704,3.68,705,3.68,706,4.321,707,4.554,708,3.68,709,3.278,710,4.303,1091,3.519,1872,6.102,1873,4.254]],["title/classes/ResetTimer.html",[0,0.008,744,2.861]],["body/classes/ResetTimer.html",[0,0.014,2,0.079,3,0.039,4,0.034,6,1.346,7,1.46,8,0.098,9,0.273,11,1.177,12,2.256,13,0.245,14,0.966,16,2.618,17,0.709,20,0.005,24,0.448,25,0.673,27,0.289,28,0.566,29,2.085,33,0.752,34,0.077,35,0.89,39,2.237,41,0.934,43,1.338,44,0.653,46,1.487,56,1.186,62,1.154,68,1.145,72,0.003,73,0.003,84,3.02,94,1.069,124,1.464,149,2.887,150,2.887,151,2.887,220,2.283,296,3.081,327,3.228,329,2.887,394,1.487,738,3.487,739,2.694,741,3.94,742,4.571,743,5.263,744,4.16,745,3.309,746,3.309,747,3.94,748,3.94,749,3.487,750,3.94,751,3.586,752,2.612,753,3.94,754,3.586,755,3.94,756,3.693,1874,6.318]],["title/interfaces/RouteEntry.html",[118,0.366,1631,4.17]],["body/interfaces/RouteEntry.html",[2,0.058,3,0.058,4,0.051,8,0.145,9,0.355,13,0.242,20,0.005,22,1.368,27,0.263,34,0.051,44,0.899,72,0.004,73,0.004,89,3.509,118,0.598,144,5.301,188,3.677,338,5.824,517,7.727,1631,6.814,1632,8.368,1645,8.368,1875,6.663,1876,9.341,1877,5.968,1878,5.968]],["title/interfaces/RouterStateUrl.html",[118,0.366,909,3.912]],["body/interfaces/RouterStateUrl.html",[0,0.008,2,0.049,3,0.049,4,0.043,6,0.789,8,0.121,9,0.316,13,0.207,20,0.005,24,0.556,27,0.358,28,0.703,33,0.933,34,0.072,35,0.889,44,0.731,72,0.004,73,0.004,118,0.595,156,2.214,168,1.128,194,1.691,331,4.301,338,4.566,350,3.456,407,3.885,441,4.074,442,2.432,460,4.946,574,5.682,582,7.229,668,3.835,669,2.903,670,2.903,904,4.585,906,4.585,908,4.585,909,6.363,910,8.317,911,4.301,912,4.585,913,4.585,914,6.093,915,4.585,916,4.585,917,4.585,918,4.585,919,4.585,920,4.585,921,6.057,922,4.585,923,6.057,924,6.848,925,4.585,926,4.585,927,6.057]],["title/classes/Save.html",[0,0.008,296,2.458]],["body/classes/Save.html",[0,0.014,2,0.043,3,0.043,4,0.038,6,1.31,7,1.432,8,0.107,9,0.29,10,1.774,11,1.289,12,2.213,13,0.247,14,0.816,17,0.864,19,0.769,20,0.005,21,0.639,22,0.717,24,0.491,25,0.737,27,0.303,28,0.62,33,0.824,34,0.076,35,0.858,37,2.179,39,2.167,44,0.6,46,1.629,56,1.263,62,1.23,72,0.003,73,0.003,84,2.917,94,1.171,99,3.21,119,5.091,124,2.207,139,2.944,149,3.076,150,3.076,151,3.076,296,4.571,394,2.893,745,3.525,746,3.525,1190,3.051,1866,5.569,1867,3.287,1869,4.719,1870,4.719,1871,4.35,1879,4.893,1880,6.732,1881,4.893]],["title/classes/SaveSucceeded.html",[0,0.008,1871,3.258]],["body/classes/SaveSucceeded.html",[0,0.014,2,0.043,3,0.043,4,0.038,6,1.31,7,1.432,8,0.107,9,0.29,10,1.774,11,2.29,12,2.213,13,0.247,14,0.816,15,3.43,17,0.864,19,0.769,20,0.005,21,0.639,22,0.717,24,0.491,25,0.737,27,0.303,28,0.62,33,0.824,34,0.076,35,0.858,37,2.179,39,2.167,44,0.6,46,1.629,56,1.263,62,1.23,72,0.003,73,0.003,84,2.917,94,1.171,99,4.283,119,4.03,124,2.207,139,2.944,149,3.076,150,3.076,151,3.076,296,4.38,394,2.893,745,3.525,746,3.525,1190,3.051,1866,5.569,1867,3.287,1869,4.719,1870,5.395,1871,4.973,1882,6.732,1883,4.893]],["title/classes/SaveTimerInfo.html",[0,0.008,749,2.782]],["body/classes/SaveTimerInfo.html",[0,0.014,2,0.083,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,1.141,12,2.242,13,0.247,14,0.873,16,2.56,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,1.297,44,0.642,46,1.441,56,1.16,62,1.129,68,1.11,72,0.003,73,0.003,84,2.978,94,1.036,124,1.419,149,2.824,150,2.824,151,2.824,220,2.212,296,3.013,327,4.414,329,2.824,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.236,746,3.236,747,3.853,748,4.493,749,3.976,750,3.853,751,3.507,752,2.531,753,3.853,754,3.507,755,3.853,756,3.612,1884,3.879,1885,6.179,1886,4.33]],["title/classes/SaveTimerInfoSucceeded.html",[0,0.008,751,2.861]],["body/classes/SaveTimerInfoSucceeded.html",[0,0.014,2,0.078,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,2.189,12,2.242,13,0.247,14,0.873,15,3.035,16,3.579,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,1.297,44,0.642,46,1.441,56,1.16,62,1.129,68,1.11,72,0.003,73,0.003,84,2.978,94,1.036,124,1.419,149,2.824,150,2.824,151,2.824,220,2.212,296,3.013,327,3.157,329,2.824,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.236,746,3.236,747,3.853,748,3.853,749,3.41,750,4.493,751,4.089,752,2.531,753,3.853,754,3.507,755,3.853,756,3.612,1887,6.179,1888,4.33]],["title/classes/SetAttemptingLogin.html",[0,0.008,1889,3.912]],["body/classes/SetAttemptingLogin.html",[0,0.013,2,0.054,3,0.054,4,0.048,6,1.231,7,1.39,8,0.135,9,0.339,10,2.071,12,2.147,13,0.249,14,0.75,17,0.97,19,0.972,20,0.005,21,0.807,22,0.906,24,0.621,25,0.932,27,0.244,28,0.784,34,0.072,35,0.75,39,1.96,44,0.551,72,0.004,73,0.004,84,2.98,89,3.684,470,3.16,516,3.856,551,4.799,664,6.1,693,4.335,703,3.51,1889,6.706,1890,5.116,1891,7.766,1892,6.184,1893,7.861,1894,6.184,1895,7.742,1896,7.042,1897,6.1]],["title/classes/SetEndTime.html",[0,0.008,92,3.258]],["body/classes/SetEndTime.html",[0,0.014,2,0.044,3,0.044,4,0.038,6,1.285,7,1.412,8,0.108,9,0.293,10,2.378,11,1.792,12,2.181,13,0.248,14,0.602,17,0.936,19,0.78,20,0.005,21,0.648,22,0.727,24,0.498,25,0.748,27,0.196,28,0.63,34,0.075,35,0.834,37,1.205,38,1.555,39,2.178,41,1.038,44,0.85,49,3.429,51,2.901,68,1.273,72,0.003,73,0.003,74,4.568,75,6.125,76,3.481,77,3.336,80,4.999,81,4.999,82,4.576,83,2.618,84,2.578,85,3.481,86,3.65,87,4.568,88,3.209,89,1.949,90,5.701,91,3.336,92,5.012,93,3.738,94,2.091,95,4.999,96,4.568,1898,6.801,1899,6.801]],["title/classes/SetGame.html",[0,0.008,149,2.304]],["body/classes/SetGame.html",[0,0.014,2,0.078,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,1.141,12,2.242,13,0.247,14,0.873,16,2.56,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,1.297,44,0.792,46,1.441,56,1.621,62,1.129,68,1.11,72,0.003,73,0.003,84,2.978,94,1.036,124,1.419,149,3.292,150,2.824,151,2.824,220,2.212,296,3.013,327,3.157,329,2.824,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.773,746,3.236,747,3.853,748,3.853,749,3.41,750,3.853,751,3.507,752,2.531,753,3.853,754,3.507,755,3.853,756,3.612,1900,3.879,1901,6.179,1902,4.33]],["title/classes/SetGame-1.html",[0,0.006,149,1.926,372,2.542]],["body/classes/SetGame-1.html",[0,0.014,2,0.043,3,0.043,4,0.038,6,1.31,7,1.432,8,0.107,9,0.29,10,1.774,11,1.289,12,2.213,13,0.247,14,0.816,17,0.864,19,0.769,20,0.005,21,0.639,22,0.717,24,0.491,25,0.737,27,0.303,28,0.62,33,0.824,34,0.076,35,0.858,37,2.179,39,2.167,44,0.8,46,1.629,56,1.686,62,1.23,72,0.003,73,0.003,84,2.917,94,1.171,99,3.21,119,4.03,124,2.207,139,2.944,149,3.517,150,3.076,151,3.076,296,4.38,394,2.893,745,4.03,746,3.525,1190,3.051,1866,5.569,1867,3.287,1869,4.719,1870,4.719,1871,4.35,1900,4.383,1903,6.732,1904,4.893]],["title/classes/SetLastMonth.html",[0,0.008,1905,3.534]],["body/classes/SetLastMonth.html",[0,0.014,2,0.051,3,0.051,4,0.045,6,1.313,7,1.444,8,0.127,9,0.327,12,2.23,13,0.246,14,1.145,17,0.85,20,0.005,24,0.585,25,0.879,27,0.23,28,0.739,34,0.076,35,0.849,72,0.004,73,0.004,84,3.372,251,3.056,1280,5.565,1281,5.565,1282,5.565,1905,5.893,1906,6.179,1907,4.287,1908,7.572,1909,6.523,1910,5.875,1911,5.307,1912,5.875,1913,5.307,1914,5.875,1915,5.307]],["title/classes/SetLastWeek.html",[0,0.008,1913,3.534]],["body/classes/SetLastWeek.html",[0,0.014,2,0.051,3,0.051,4,0.045,6,1.313,7,1.444,8,0.127,9,0.327,12,2.23,13,0.246,14,1.145,17,0.85,20,0.005,24,0.585,25,0.879,27,0.23,28,0.739,34,0.076,35,0.849,72,0.004,73,0.004,84,3.372,251,3.056,1280,5.565,1281,5.565,1282,5.565,1905,5.307,1906,6.179,1907,4.287,1909,5.875,1910,5.875,1911,5.307,1912,6.523,1913,5.893,1914,5.875,1915,5.307,1916,7.572]],["title/classes/SetPlatform.html",[0,0.008,150,2.304]],["body/classes/SetPlatform.html",[0,0.014,2,0.078,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,1.141,12,2.242,13,0.247,14,0.873,16,2.56,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,1.297,44,0.792,46,1.441,56,1.16,62,1.578,68,1.11,72,0.003,73,0.003,84,2.978,94,1.036,124,1.419,149,2.824,150,3.292,151,2.824,220,2.212,296,3.013,327,3.157,329,2.824,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.236,746,3.773,747,3.853,748,3.853,749,3.41,750,3.853,751,3.507,752,2.531,753,3.853,754,3.507,755,3.853,756,3.612,1537,3.582,1917,6.179,1918,4.33]],["title/classes/SetPlatform-1.html",[0,0.006,150,1.926,372,2.542]],["body/classes/SetPlatform-1.html",[0,0.014,2,0.043,3,0.043,4,0.038,6,1.31,7,1.432,8,0.107,9,0.29,10,1.774,11,1.289,12,2.213,13,0.247,14,0.816,17,0.864,19,0.769,20,0.005,21,0.639,22,0.717,24,0.491,25,0.737,27,0.303,28,0.62,33,0.824,34,0.076,35,0.858,37,2.179,39,2.167,44,0.8,46,1.629,56,1.263,62,1.641,72,0.003,73,0.003,84,2.917,94,1.171,99,3.21,119,4.03,124,2.207,139,2.944,149,3.076,150,3.517,151,3.076,296,4.38,394,2.893,745,3.525,746,4.03,1190,3.051,1537,4.048,1866,5.569,1867,3.287,1869,4.719,1870,4.719,1871,4.35,1919,6.732,1920,4.893]],["title/classes/SetProfileDisplayName.html",[0,0.008,1548,3.534]],["body/classes/SetProfileDisplayName.html",[0,0.014,2,0.046,3,0.046,4,0.041,6,1.272,7,1.405,8,0.115,9,0.306,10,2.353,12,2.17,13,0.249,14,0.641,17,0.961,19,0.831,20,0.005,21,0.691,22,0.775,24,0.531,25,0.797,27,0.28,28,0.671,33,0.891,34,0.075,35,0.817,39,2.135,41,1.484,43,2.755,44,0.885,46,2.363,72,0.004,73,0.004,84,2.691,243,3.074,1055,5.195,1510,3.093,1540,4.769,1541,3.888,1543,5.508,1545,5.508,1546,4.976,1547,6.217,1548,5.616,1549,5.508,1550,4.976,1921,7.099,1922,7.099]],["title/classes/SetProfileDisplayNameSucceeded.html",[0,0.008,1550,3.534]],["body/classes/SetProfileDisplayNameSucceeded.html",[0,0.014,2,0.048,3,0.048,4,0.042,6,1.285,7,1.417,8,0.119,9,0.312,10,2.143,12,2.189,13,0.248,14,0.661,17,0.913,19,0.857,20,0.005,21,0.712,22,0.799,24,0.547,25,0.822,27,0.286,28,0.691,33,0.918,34,0.075,35,0.827,39,2.161,41,1.514,43,2.17,44,0.856,46,2.411,72,0.004,73,0.004,84,2.745,243,3.093,1055,5.164,1540,4.866,1541,4.007,1543,5.62,1545,5.62,1546,5.077,1547,5.62,1548,5.077,1549,6.311,1550,5.701,1923,5.452,1924,7.243,1925,5.452]],["title/classes/SetShowExtra.html",[0,0.008,87,3.387]],["body/classes/SetShowExtra.html",[0,0.014,2,0.044,3,0.044,4,0.038,6,1.285,7,1.412,8,0.108,9,0.293,10,2.378,11,1.792,12,2.181,13,0.248,14,0.602,17,0.936,19,0.78,20,0.005,21,0.648,22,0.727,24,0.498,25,0.748,27,0.196,28,0.63,34,0.075,35,0.834,37,1.205,38,1.555,39,2.178,41,1.038,44,0.85,49,3.429,51,2.901,68,1.273,72,0.003,73,0.003,74,4.568,75,6.125,76,3.481,77,3.336,80,4.999,81,5.701,82,4.576,83,2.618,84,2.578,85,3.481,86,3.65,87,5.21,88,5.831,89,3.429,90,4.999,91,3.336,92,4.395,93,2.057,94,1.188,95,4.999,96,4.568,1926,6.801,1927,6.801]],["title/classes/SetStartTime.html",[0,0.008,151,2.304]],["body/classes/SetStartTime.html",[0,0.014,2,0.078,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,1.141,12,2.242,13,0.247,14,0.873,16,2.56,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,1.297,44,0.642,46,1.441,56,1.16,62,1.129,68,1.11,72,0.003,73,0.003,84,2.978,94,1.988,124,2.723,149,2.824,150,2.824,151,3.292,220,2.212,296,3.013,327,3.157,329,2.824,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.236,746,3.236,747,4.493,748,3.853,749,3.41,750,3.853,751,3.507,752,2.531,753,3.853,754,3.507,755,3.853,756,3.612,1928,3.879,1929,6.179,1930,4.33]],["title/classes/SetStartTime-1.html",[0,0.006,151,1.926,372,2.542]],["body/classes/SetStartTime-1.html",[0,0.014,2,0.043,3,0.043,4,0.038,6,1.31,7,1.432,8,0.107,9,0.29,10,1.774,11,1.289,12,2.213,13,0.247,14,0.816,17,0.864,19,0.769,20,0.005,21,0.639,22,0.717,24,0.491,25,0.737,27,0.303,28,0.62,33,0.824,34,0.076,35,0.858,37,2.179,39,2.167,44,0.6,46,1.629,56,1.263,62,1.23,72,0.003,73,0.003,84,2.917,94,2.08,99,3.21,119,4.03,124,2.944,139,2.944,149,3.076,150,3.076,151,3.517,296,4.38,394,2.893,745,3.525,746,3.525,1190,3.051,1866,5.569,1867,3.287,1869,5.395,1870,4.719,1871,4.35,1928,4.383,1931,6.732,1932,4.893]],["title/classes/SetThisMonth.html",[0,0.008,1915,3.534]],["body/classes/SetThisMonth.html",[0,0.014,2,0.051,3,0.051,4,0.045,6,1.313,7,1.444,8,0.127,9,0.327,12,2.23,13,0.246,14,1.145,17,0.85,20,0.005,24,0.585,25,0.879,27,0.23,28,0.739,34,0.076,35,0.849,72,0.004,73,0.004,84,3.372,251,3.056,1280,5.565,1281,5.565,1282,5.565,1905,5.307,1906,6.179,1907,4.287,1909,5.875,1910,5.875,1911,5.307,1912,5.875,1913,5.307,1914,6.523,1915,5.893,1933,7.572]],["title/classes/SetThisWeek.html",[0,0.008,1911,3.534]],["body/classes/SetThisWeek.html",[0,0.014,2,0.051,3,0.051,4,0.045,6,1.313,7,1.444,8,0.127,9,0.327,12,2.23,13,0.246,14,1.145,17,0.85,20,0.005,24,0.585,25,0.879,27,0.23,28,0.739,34,0.076,35,0.849,72,0.004,73,0.004,84,3.372,251,3.056,1280,5.565,1281,5.565,1282,5.565,1905,5.307,1906,6.179,1907,4.287,1909,5.875,1910,6.523,1911,5.893,1912,5.875,1913,5.307,1914,5.875,1915,5.307,1934,7.572]],["title/classes/SetTimerInfo.html",[0,0.008,756,2.947]],["body/classes/SetTimerInfo.html",[0,0.014,2,0.083,3,0.038,4,0.033,6,1.337,7,1.451,8,0.095,9,0.267,10,1.628,11,1.141,12,2.242,13,0.247,14,0.873,16,2.56,17,0.809,19,0.68,20,0.005,21,0.565,22,0.634,24,0.435,25,0.652,27,0.284,28,0.549,29,2.021,33,0.729,34,0.077,35,0.883,39,2.217,41,0.905,43,1.297,44,0.642,46,1.441,56,1.16,62,1.129,68,1.11,72,0.003,73,0.003,84,2.978,94,1.036,124,1.419,149,2.824,150,2.824,151,2.824,220,2.212,296,3.013,327,3.157,329,3.948,394,1.441,738,3.41,739,2.612,741,3.853,742,3.853,743,5.237,744,3.507,745,3.236,746,3.236,747,3.853,748,3.853,749,3.41,750,3.853,751,3.507,752,2.531,753,3.853,754,3.507,755,4.493,756,4.212,1884,3.879,1935,6.179,1936,4.33]],["title/classes/SetValidationMessage.html",[0,0.008,1897,3.912]],["body/classes/SetValidationMessage.html",[0,0.013,2,0.054,3,0.054,4,0.048,6,1.231,7,1.39,8,0.135,9,0.339,10,2.071,12,2.147,13,0.249,14,0.75,17,0.97,19,0.972,20,0.005,21,0.807,22,0.906,24,0.621,25,0.932,27,0.244,28,0.784,34,0.072,35,0.75,39,1.96,44,0.837,72,0.004,73,0.004,84,2.98,89,2.427,470,3.16,516,3.856,551,4.799,664,6.1,693,6.581,703,3.51,1889,6.1,1890,5.116,1891,5.116,1895,7.042,1896,7.742,1897,6.706,1937,6.184,1938,7.861,1939,6.184]],["title/classes/SetVisibleTab.html",[0,0.008,1940,3.912]],["body/classes/SetVisibleTab.html",[0,0.012,2,0.057,3,0.057,4,0.05,6,1.155,7,1.351,8,0.142,9,0.35,10,2.138,12,2.087,13,0.249,14,0.788,17,0.993,19,1.021,20,0.005,21,0.849,22,0.952,24,0.652,25,0.979,27,0.32,28,0.824,33,1.094,34,0.068,35,0.621,39,1.621,72,0.004,73,0.004,84,2.464,812,7.143,874,7.245,1940,6.861,1941,5.823,1942,6.5,1943,8.112,1944,6.5,1945,8.843,1946,6.5]],["title/modules/SharedModule.html",[373,2.128,391,3.144]],["body/modules/SharedModule.html",[0,0.009,2,0.049,3,0.049,4,0.043,20,0.005,27,0.386,28,0.712,34,0.068,72,0.004,73,0.004,185,1.205,195,2.325,223,1.84,279,3.671,373,3.117,375,3.185,376,4.976,377,3.385,378,2.868,391,6.359,393,4.453,394,1.868,395,3.281,397,4.316,409,3.77,442,3.24,594,4.771,595,3.5,870,7.362,1059,7.772,1713,7.772,1947,5.028,1948,5.028,1949,5.028,1950,5.613,1951,5.613,1952,5.613,1953,5.613,1954,5.613,1955,5.613,1956,5.613]],["title/interfaces/SharedState.html",[118,0.366,358,3.144]],["body/interfaces/SharedState.html",[2,0.033,3,0.033,4,0.029,8,0.081,9,0.238,11,2.345,13,0.184,20,0.005,24,0.372,27,0.351,28,0.47,33,0.625,34,0.077,35,0.957,36,2.577,38,1.729,62,1.495,72,0.003,73,0.003,105,4.554,118,0.479,168,1.342,194,1.61,269,1.274,280,1.383,329,3.013,335,3.069,357,3.568,358,4.112,442,1.628,668,2.892,669,1.943,670,1.943,743,4.554,761,4.261,762,2.106,816,3.069,985,2.727,987,2.048,1006,2.314,1082,3.069,1169,2.879,1293,2.601,1568,4.568,1569,3.069,1796,4.568,1797,4.568,1957,3.324,1958,5.908,1959,5.908,1960,5.908,1961,5.908,1962,3.324,1963,3.324,1964,3.324,1965,3.324,1966,3.324,1967,3.324,1968,3.324,1969,3.324,1970,3.324,1971,3.324,1972,3.324,1973,3.324,1974,3.324,1975,3.324,1976,3.324,1977,3.324,1978,3.324,1979,3.324,1980,3.324,1981,3.324,1982,3.324,1983,6.543,1984,3.324,1985,3.324,1986,3.324,1987,4.946,1988,3.324,1989,3.324,1990,3.324,1991,4.946,1992,4.946,1993,3.324,1994,4.946,1995,4.946,1996,6.543,1997,4.946,1998,4.946,1999,3.324,2000,3.324,2001,3.324,2002,3.324,2003,5.908,2004,3.324,2005,3.324,2006,3.324,2007,3.324,2008,3.324,2009,4.946,2010,3.324,2011,3.324,2012,3.324,2013,3.324,2014,3.324,2015,4.946,2016,6.543,2017,5.455,2018,5.908,2019,3.324,2020,5.908,2021,4.946,2022,4.946,2023,4.946,2024,4.946,2025,4.946,2026,4.946,2027,3.324,2028,4.946,2029,3.324,2030,3.324,2031,4.946,2032,3.324,2033,3.324,2034,3.324,2035,4.946,2036,3.324,2037,4.946,2038,4.946,2039,3.324,2040,3.324,2041,3.324,2042,3.324,2043,3.324,2044,3.324,2045,3.324,2046,3.324]],["title/classes/SignUp.html",[0,0.008,707,2.782]],["body/classes/SignUp.html",[0,0.014,2,0.036,3,0.036,4,0.032,6,1.341,7,1.455,8,0.091,9,0.259,10,2.245,12,2.247,13,0.249,14,1.065,17,0.866,19,0.653,20,0.005,21,0.542,22,0.609,24,0.417,25,0.626,27,0.236,28,0.527,33,0.699,34,0.077,35,0.888,39,1.922,44,0.856,72,0.003,73,0.003,234,2.87,394,1.383,470,3.939,481,4.702,544,2.176,546,2.232,548,2.232,557,4.196,560,4.288,618,3.142,620,3.142,621,3.142,628,3.142,665,3.847,694,2.429,698,3.618,699,3.223,700,3.618,701,3.405,702,3.618,703,4.376,704,3.618,705,3.618,706,4.282,707,4.847,708,3.618,709,3.223,710,3.618,1091,3.437,2047,5.999,2048,5.999]],["title/components/SpinnerComponent.html",[125,1.19,279,1.848]],["body/components/SpinnerComponent.html",[0,0.007,2,0.041,3,0.041,4,0.036,6,0.924,8,0.101,14,0.907,17,0.728,20,0.005,21,0.847,27,0.183,34,0.036,36,1.972,37,1.125,41,0.969,56,0.87,62,0.847,68,1.917,72,0.003,73,0.003,83,2.554,125,2.012,126,1.7,127,1.789,128,1.789,129,1.789,133,2.885,134,1.7,137,3.994,138,3.673,139,1.52,140,2.501,142,2.501,145,2.002,146,3.124,153,1.52,168,0.944,169,1.728,185,0.996,223,1.52,224,2.501,225,2.459,226,2.501,227,3.124,228,1.789,230,1.789,231,1.7,232,1.789,233,1.7,234,2.631,235,1.789,236,1.7,237,2.501,238,1.672,239,1.789,240,1.672,241,1.789,242,1.7,243,1.475,244,1.789,245,1.672,246,1.789,247,1.672,248,1.789,249,1.789,250,1.7,251,2.928,252,1.758,253,1.789,254,2.569,255,2.885,256,1.758,257,1.7,258,3.185,259,1.789,260,1.7,261,2.501,262,1.672,263,1.789,264,1.672,265,1.789,266,1.7,267,1.789,268,1.7,269,1.593,270,1.672,271,1.789,272,1.7,273,1.789,274,1.7,275,1.672,276,1.789,277,1.672,278,1.789,279,2.969,280,2.788,281,1.789,282,1.7,283,1.789,284,1.7,285,2.885,286,1.7,287,1.7,288,1.7,289,1.789,290,1.672,291,1.789,2049,4.638,2050,6.487,2051,6.487,2052,6.487,2053,4.638,2054,4.638]],["title/interfaces/State.html",[118,0.366,194,1.04]],["body/interfaces/State.html",[2,0.058,3,0.058,4,0.051,7,1.526,8,0.144,9,0.353,13,0.206,20,0.005,24,0.66,27,0.259,34,0.063,35,0.628,44,0.869,72,0.004,73,0.004,118,0.593,168,1.663,191,3.847,194,2.038,516,6.078,724,3.071,1269,3.283,1271,3.283,1356,4.176,1358,3.283,1359,3.362,1360,3.362,2055,5.895,2056,6.58,2057,6.58,2058,6.58]],["title/interfaces/State-1.html",[118,0.306,194,0.869,372,2.542]],["body/interfaces/State-1.html",[0,0.009,2,0.049,3,0.049,4,0.043,6,0.801,8,0.123,9,0.319,13,0.187,20,0.005,24,0.564,27,0.359,28,0.713,33,0.947,34,0.072,35,0.893,44,0.501,72,0.004,73,0.004,118,0.6,156,2.247,168,1.144,194,1.809,331,4.364,338,5.682,350,3.507,407,3.942,441,4.134,442,2.468,460,4.981,574,5.737,582,6.409,668,3.872,669,2.945,670,2.945,904,4.653,906,4.653,908,4.653,909,5.737,910,7.739,911,4.364,912,4.653,913,4.653,914,6.5,915,6.832,916,6.832,917,4.653,918,4.653,919,4.653,920,4.653,921,6.116,922,4.653,923,6.116,924,6.071,925,4.653,926,4.653,927,6.116]],["title/interfaces/State-10.html",[118,0.306,194,0.869,946,3.486]],["body/interfaces/State-10.html",[2,0.046,3,0.046,4,0.04,7,1.073,8,0.114,9,0.303,13,0.243,20,0.005,24,0.523,27,0.313,33,0.877,34,0.054,35,0.951,38,1.631,72,0.004,73,0.004,118,0.51,153,3.193,168,1.862,194,1.929,372,4.236,724,2.43,933,6.893,1009,4.041,1261,4.308,1267,4.665,1268,4.665,1269,2.598,1271,4.245,1274,4.308,1276,4.308,1278,4.308,1356,4.061,1358,2.598,1359,2.661,1360,2.661,2059,4.665,2060,4.665,2061,9.152,2062,9.152,2063,5.208,2064,5.208,2065,5.208,2066,5.208,2067,5.208,2068,5.208,2069,4.665,2070,5.208,2071,7.024,2072,7.024,2073,5.208,2074,5.208,2075,5.208,2076,5.208,2077,5.208,2078,7.024,2079,5.208,2080,5.208,2081,5.208,2082,5.208,2083,5.208,2084,5.208,2085,7.024,2086,7.024,2087,5.208,2088,5.208,2089,5.208,2090,5.208,2091,7.024,2092,5.208,2093,5.208,2094,5.208,2095,5.208]],["title/interfaces/State-11.html",[118,0.306,194,0.869,2096,3.776]],["body/interfaces/State-11.html",[2,0.054,3,0.054,4,0.048,8,0.136,9,0.34,13,0.157,20,0.005,24,0.624,27,0.341,28,0.788,34,0.076,35,0.917,72,0.004,73,0.004,118,0.629,153,2.584,168,1.264,194,1.786,251,3.129,442,2.726,668,4.129,669,3.254,670,3.254,960,6.522,961,7.069,969,5.139,1005,5.566,1006,5.68,1007,5.566,1008,5.566,1009,4.821,1010,5.566,1011,5.566,1012,5.566,1013,5.566,1014,5.566,1015,5.566,1016,5.566,1017,5.566,1018,7.063,1019,7.063,1020,5.566,1021,5.566,1022,7.063,1023,5.566,1024,5.139]],["title/interfaces/State-12.html",[118,0.306,194,0.869,2097,4.215]],["body/interfaces/State-12.html",[2,0.052,3,0.052,4,0.046,7,1.172,8,0.13,9,0.331,13,0.214,20,0.005,24,0.597,27,0.235,34,0.059,35,0.568,44,0.847,56,1.783,62,1.765,72,0.004,73,0.004,94,2.031,118,0.557,124,3.209,168,1.888,192,4.617,193,4.617,194,2.04,212,5.33,724,2.777,987,4.683,1269,2.969,1271,4.473,1356,4.336,1358,2.969,1359,3.04,1360,3.04,2098,5.33,2099,5.33,2100,5.33,2101,5.33,2102,5.33,2103,4.922,2104,5.95,2105,5.33]],["title/interfaces/State-13.html",[118,0.306,194,0.869,2106,4.215]],["body/interfaces/State-13.html",[2,0.05,3,0.05,4,0.044,7,1.133,11,1.488,20,0.005,24,0.567,27,0.292,34,0.068,35,0.839,44,0.661,51,2.254,72,0.004,73,0.004,88,5.348,89,2.216,93,3.429,94,1.351,118,0.601,168,1.942,194,2.054,527,3.302,713,4.472,724,2.636,769,3.781,841,5.197,987,3.117,1269,2.818,1271,4.553,1318,5.753,1349,5.197,1350,5.197,1351,5.801,1352,3.794,1355,3.959,1356,3.788,1357,3.959,1358,2.818,1359,2.886,1360,2.886,1368,3.959,1375,5.197,1376,5.197,1593,4.672,1594,4.672,1595,4.383,1596,4.383,1597,5.06,1598,5.06,1599,5.06,1600,5.06,1601,5.06,1602,5.06,1603,5.06,1604,5.06,1605,5.06,1606,5.06,1607,5.06,1608,5.06]],["title/interfaces/State-14.html",[118,0.306,194,0.869,2107,4.215]],["body/interfaces/State-14.html",[2,0.05,3,0.05,4,0.044,8,0.124,9,0.322,13,0.144,20,0.005,24,0.572,27,0.361,28,0.722,33,0.959,34,0.077,35,0.937,37,1.382,72,0.004,73,0.004,82,2.983,83,2.641,115,3.809,118,0.603,119,3.904,123,5.583,139,2.444,194,1.887,442,2.5,668,3.904,669,2.983,670,2.983,797,4.42,810,6.167,811,6.841,841,3.993,873,5.103,874,6.109,875,5.103,876,5.103,877,5.103,878,5.103,879,5.103,880,5.103,881,5.103,882,5.103,883,5.103,884,5.103,885,5.103,886,5.103,887,5.103,888,5.103,889,5.103,890,7.445,891,5.103,892,5.103,893,5.103,894,5.103,895,5.103,896,6.679,897,5.103,898,5.103,899,6.679,900,5.103,901,6.679,902,5.103,903,5.103]],["title/interfaces/State-15.html",[118,0.306,194,0.869,2108,4.215]],["body/interfaces/State-15.html",[2,0.059,3,0.059,4,0.052,7,1.264,8,0.147,9,0.357,13,0.169,20,0.005,24,0.674,27,0.326,33,1.13,34,0.064,35,0.641,72,0.004,73,0.004,118,0.601,139,2.2,168,1.684,194,2.047,724,3.132,812,6.883,874,7.2,1269,3.349,1271,3.349,1356,4.228,1358,3.349,1359,3.43,1360,3.43,2109,6.013,2110,6.013,2111,6.713,2112,6.713]],["title/interfaces/State-16.html",[118,0.306,194,0.869,2113,4.215]],["body/interfaces/State-16.html",[2,0.058,3,0.058,4,0.051,7,1.257,8,0.145,9,0.355,13,0.168,20,0.005,24,0.667,27,0.262,34,0.063,35,0.634,44,0.796,72,0.004,73,0.004,118,0.597,168,1.817,194,2.063,724,3.101,1053,5.497,1055,5.25,1269,3.316,1271,4.103,1356,4.202,1358,3.316,1359,3.395,1360,3.395,1756,5.953,2114,5.953,2115,6.646,2116,6.646,2117,6.646]],["title/interfaces/State-17.html",[118,0.306,194,0.869,2118,3.776]],["body/interfaces/State-17.html",[2,0.081,3,0.058,4,0.051,8,0.143,9,0.352,13,0.166,20,0.005,24,0.659,27,0.35,28,0.832,33,1.105,34,0.075,35,0.887,72,0.004,73,0.004,118,0.645,194,1.832,243,3.097,442,2.88,668,4.274,669,3.437,670,3.437,1775,7.21,1776,5.88,1777,5.88,1778,5.88,1779,5.88,1780,5.88,1781,5.88,1782,5.88,1783,7.311,1784,5.88,1785,5.88,1786,7.311]],["title/interfaces/State-18.html",[118,0.306,194,0.869,2119,4.215]],["body/interfaces/State-18.html",[2,0.059,3,0.059,4,0.052,7,1.27,8,0.148,9,0.359,13,0.171,20,0.005,24,0.679,27,0.267,34,0.064,35,0.646,72,0.004,73,0.004,94,2.154,118,0.604,168,1.691,194,2.05,724,3.156,1269,3.374,1271,3.374,1356,4.248,1358,3.374,1359,3.456,1360,3.456,1528,5.595,1529,6.059,2120,6.059,2121,7.614,2122,6.764,2123,6.764,2124,6.764]],["title/interfaces/State-19.html",[118,0.306,194,0.869,2125,4.215]],["body/interfaces/State-19.html",[2,0.057,3,0.057,4,0.05,8,0.143,9,0.351,13,0.165,20,0.005,24,0.656,27,0.321,28,0.828,34,0.076,35,0.911,72,0.004,73,0.004,118,0.643,194,1.827,245,3.195,258,3.344,442,2.866,668,4.261,669,3.421,670,3.421,2121,5.068,2126,5.852,2127,7.197,2128,5.852,2129,5.852,2130,5.852,2131,5.852,2132,5.852,2133,5.852,2134,5.852,2135,5.852,2136,5.852,2137,7.289,2138,5.852,2139,5.852,2140,6.731]],["title/interfaces/State-2.html",[118,0.306,194,0.869,1283,3.486]],["body/interfaces/State-2.html",[2,0.046,3,0.046,4,0.041,7,1.085,8,0.115,9,0.306,13,0.133,16,2.192,20,0.005,24,0.531,27,0.316,33,0.891,34,0.066,35,0.853,41,1.963,44,0.714,51,1.608,56,0.993,58,2.887,62,0.966,72,0.004,73,0.004,89,3.144,93,2.192,94,1.699,118,0.582,124,1.734,168,1.967,194,2.08,527,4.15,585,3.093,713,4.281,724,2.469,769,3.447,1269,2.639,1271,4.686,1348,4.376,1349,4.976,1350,4.976,1351,5.616,1352,3.554,1353,4.739,1354,4.587,1355,3.708,1356,3.627,1357,3.708,1358,2.639,1359,2.703,1360,2.703,1361,4.739,1362,4.105,1363,4.739,1364,4.739,1365,5.508,1366,4.105,1367,4.739,1368,3.708,1369,4.739,1370,7.177,1371,4.739,1372,4.739,1373,4.739,1374,6.359,1375,4.976,1376,3.708]],["title/interfaces/State-3.html",[118,0.306,194,0.869,2141,3.776]],["body/interfaces/State-3.html",[2,0.06,3,0.06,4,0.052,7,1.274,8,0.148,9,0.36,13,0.171,20,0.005,22,1.439,24,0.682,27,0.268,34,0.064,35,0.649,44,0.804,72,0.004,73,0.004,118,0.606,168,1.697,194,2.052,724,3.172,1269,3.392,1271,3.392,1356,4.261,1358,3.392,1359,3.473,1360,3.473,2103,5.623,2142,6.09,2143,6.798,2144,6.798]],["title/interfaces/State-4.html",[118,0.306,194,0.869,1528,3.486]],["body/interfaces/State-4.html",[2,0.05,3,0.05,4,0.044,7,1.141,8,0.125,9,0.322,13,0.144,20,0.005,24,0.573,27,0.294,34,0.068,35,0.842,41,2,44,0.741,51,1.736,72,0.004,73,0.004,89,3.265,99,2.722,118,0.604,122,3.337,168,1.911,194,2.058,527,4.364,585,3.337,713,4.503,724,2.664,769,3.58,770,3.559,1269,2.848,1271,4.569,1330,4.43,1349,5.233,1350,5.233,1351,5.831,1352,3.835,1355,4.001,1356,3.814,1357,4.001,1358,2.848,1359,2.917,1360,2.917,1362,4.43,1365,5.793,1366,4.43,1368,4.001,1375,5.233,1376,4.001,1823,4.722,1824,5.114,1825,5.114,1826,5.114,1827,5.114,1828,5.114,1829,5.114]],["title/interfaces/State-5.html",[118,0.306,194,0.869,2145,4.215]],["body/interfaces/State-5.html",[2,0.034,3,0.034,4,0.029,8,0.083,9,0.243,11,2.364,13,0.096,20,0.005,24,0.384,27,0.354,28,0.485,33,0.643,34,0.077,35,0.96,36,2.253,38,1.768,62,1.226,72,0.003,73,0.003,105,3.981,118,0.487,168,1.365,194,1.706,269,1.313,280,2.762,329,3.066,335,3.162,357,3.647,358,4.621,442,1.677,668,2.956,669,2.002,670,2.002,743,3.981,761,4.336,762,2.169,816,3.162,985,2.809,987,2.109,1006,2.383,1082,3.162,1169,2.966,1293,2.679,1568,4.669,1569,3.162,1796,4.669,1797,4.669,1957,3.424,1958,3.424,1959,3.424,1960,3.424,1961,3.424,1962,3.424,1963,3.424,1964,3.424,1965,3.424,1966,3.424,1967,3.424,1968,3.424,1969,3.424,1970,3.424,1971,3.424,1972,3.424,1973,3.424,1974,3.424,1975,3.424,1976,3.424,1977,3.424,1978,3.424,1979,3.424,1980,3.424,1981,3.424,1982,3.424,1983,6.639,1984,3.424,1985,3.424,1986,3.424,1987,5.056,1988,3.424,1989,3.424,1990,3.424,1991,5.056,1992,5.056,1993,3.424,1994,5.056,1995,5.056,1996,6.639,1997,5.056,1998,5.056,1999,3.424,2000,3.424,2001,3.424,2002,3.424,2003,6.011,2004,3.424,2005,3.424,2006,3.424,2007,3.424,2008,3.424,2009,5.056,2010,3.424,2011,3.424,2012,3.424,2013,3.424,2014,3.424,2015,5.056,2016,6.639,2017,5.551,2018,6.011,2019,3.424,2020,6.011,2021,5.056,2022,5.056,2023,5.056,2024,5.056,2025,5.056,2026,5.056,2027,3.424,2028,5.056,2029,3.424,2030,3.424,2031,5.056,2032,3.424,2033,3.424,2034,3.424,2035,5.056,2036,3.424,2037,5.056,2038,5.056,2039,3.424,2040,3.424,2041,3.424,2042,3.424,2043,3.424,2044,3.424,2045,3.424,2046,3.424]],["title/interfaces/State-6.html",[118,0.306,194,0.869,2146,4.215]],["body/interfaces/State-6.html",[2,0.052,3,0.052,4,0.046,7,1.17,8,0.13,9,0.33,13,0.214,20,0.005,24,0.596,27,0.234,34,0.059,35,0.567,44,0.846,56,1.782,62,1.734,72,0.004,73,0.004,94,2.029,118,0.556,124,3.112,168,1.932,194,2.056,724,2.77,987,3.276,1269,2.962,1271,4.626,1356,4.332,1358,2.962,1359,3.033,1360,3.033,2100,5.318,2101,5.318,2102,5.318,2103,4.911,2105,5.318,2147,5.318,2148,5.937,2149,5.937,2150,5.937,2151,5.937,2152,5.318]],["title/interfaces/State-7.html",[118,0.306,194,0.869,2153,4.215]],["body/interfaces/State-7.html",[2,0.051,3,0.051,4,0.045,8,0.126,9,0.324,13,0.146,20,0.005,24,0.579,27,0.349,28,0.731,33,0.971,34,0.077,35,0.939,72,0.004,73,0.004,118,0.607,194,1.827,204,3.598,234,2.734,442,2.532,515,4.241,578,5.27,662,6.875,663,5.169,664,6.875,665,4.854,666,5.169,667,5.169,668,3.937,669,3.022,670,3.022,671,5.169,672,5.169,673,5.169,674,5.169,675,5.169,676,5.169,677,5.169,678,5.169,679,5.169,680,6.735,681,5.169,682,5.169,683,5.169,684,6.735,685,6.735,686,6.735,687,6.735,688,6.735,689,5.169,690,6.735,691,5.169,692,5.169,693,4.045]],["title/interfaces/State-8.html",[118,0.306,194,0.869,2154,4.215]],["body/interfaces/State-8.html",[2,0.057,3,0.057,4,0.05,7,1.234,8,0.141,9,0.348,13,0.204,20,0.005,24,0.648,27,0.254,34,0.062,35,0.616,44,0.785,72,0.004,73,0.004,89,3.458,118,0.586,168,1.793,194,2.052,527,3.772,693,6.799,724,3.011,1269,3.22,1271,4.029,1356,4.126,1358,3.22,1359,3.297,1360,3.297,1891,8.024,2155,5.781,2156,5.781,2157,6.453,2158,6.453,2159,6.453,2160,6.453]],["title/interfaces/State-9.html",[118,0.306,194,0.869,2161,4.215]],["body/interfaces/State-9.html",[2,0.053,3,0.053,4,0.047,7,1.184,8,0.132,9,0.334,13,0.235,20,0.005,24,0.607,27,0.238,34,0.06,35,0.577,44,0.913,72,0.004,73,0.004,118,0.563,168,1.74,194,2,557,4.351,724,2.821,1055,5.009,1234,4.06,1269,3.016,1271,3.865,1356,4.368,1358,3.016,1359,3.088,1360,3.088,2162,5.415,2163,7.234,2164,7.234,2165,7.234,2166,6.045,2167,6.045,2168,6.045]],["title/injectables/StatusEffects.html",[292,1.579,604,4.17]],["body/injectables/StatusEffects.html",[0,0.007,2,0.041,3,0.041,4,0.036,7,1.42,8,0.103,9,0.283,13,0.119,14,0.572,17,0.963,19,0.742,20,0.005,21,0.616,22,0.691,24,0.819,25,1.23,27,0.372,33,0.795,34,0.036,35,0.627,38,2.993,72,0.003,73,0.003,156,1.885,168,1.336,185,1.013,190,2.847,191,2.759,200,1.414,292,2.365,297,2.847,300,5.795,302,3.276,303,4.243,315,5.09,316,5.885,318,2.472,321,1.92,322,3.469,324,1.956,407,3.309,470,4.171,483,5.883,485,5.883,500,3.05,604,5.432,693,4.603,911,3.663,914,6.122,1234,3.171,2156,4.228,2169,4.72,2170,8.164,2171,8.164,2172,4.72,2173,6.567,2174,6.567,2175,6.567,2176,8.164,2177,6.567,2178,4.72,2179,5.883,2180,5.883,2181,6.567,2182,6.567,2183,6.567,2184,8.884,2185,6.567,2186,4.72,2187,6.567,2188,4.72,2189,6.567,2190,6.567,2191,4.72,2192,4.72,2193,4.72,2194,4.72]],["title/components/TabsComponent.html",[125,1.19,282,1.848]],["body/components/TabsComponent.html",[0,0.006,2,0.034,3,0.034,4,0.03,6,0.811,7,0.591,8,0.084,13,0.17,14,0.469,17,0.933,19,0.894,20,0.005,21,0.973,22,0.834,24,0.678,25,1.018,27,0.313,28,0.49,33,0.651,34,0.03,36,1.731,37,0.938,41,0.808,56,0.726,62,0.706,68,1.731,72,0.003,73,0.003,83,2.695,105,3.058,125,1.875,126,1.417,127,1.491,128,1.491,129,1.491,133,2.605,134,1.417,135,2.84,136,2.84,137,3.939,138,3.623,139,2.214,140,2.195,142,2.195,145,1.756,146,2.874,152,4.245,153,1.267,155,1.975,156,3.319,168,1.158,169,2.121,184,1.929,185,0.83,194,0.797,195,1.602,200,1.158,206,2.025,223,1.267,224,2.195,225,2.158,226,2.195,227,2.874,228,1.491,230,1.491,231,1.417,232,1.491,233,1.417,234,2.451,235,1.491,236,1.417,237,2.195,238,1.394,239,1.491,240,1.394,241,1.491,242,1.417,243,1.229,244,1.491,245,1.394,246,1.491,247,1.394,248,1.491,249,1.491,250,1.417,251,2.728,252,1.465,253,1.491,254,2.32,255,2.605,256,1.465,257,1.417,258,2.995,259,1.491,260,1.417,261,2.195,262,1.394,263,1.491,264,1.394,265,1.491,266,1.417,267,1.491,268,1.417,269,1.328,270,1.394,271,1.491,272,1.417,273,1.491,274,1.417,275,1.394,276,1.491,277,1.394,278,1.491,279,1.417,280,1.441,281,1.491,282,2.731,283,1.491,284,1.417,285,2.605,286,1.417,287,1.417,288,1.417,289,1.491,290,1.394,291,1.491,797,5.242,812,6.106,874,4.965,987,4.112,1940,4.417,2110,3.464,2195,3.866,2196,5.692,2197,5.692,2198,7.943,2199,7.943,2200,5.692,2201,3.866,2202,3.866,2203,3.866,2204,5.692,2205,3.866,2206,3.866]],["title/components/TimeDateGraphComponent.html",[125,1.19,284,1.848]],["body/components/TimeDateGraphComponent.html",[0,0.006,2,0.036,3,0.036,4,0.032,6,0.855,8,0.091,13,0.152,14,0.854,17,0.866,20,0.005,21,0.784,27,0.237,33,0.7,34,0.032,36,1.826,37,1.009,41,0.87,56,0.781,62,0.76,68,2.349,72,0.003,73,0.003,83,2.451,125,1.931,126,1.525,127,1.605,128,1.605,129,1.605,133,2.717,134,1.525,135,2.996,136,2.996,137,3.962,138,3.644,139,1.364,140,2.316,142,2.316,145,1.853,146,2.975,152,4.18,153,3.233,168,0.847,169,1.551,184,2.076,185,0.893,223,1.364,224,2.316,225,2.276,226,2.316,227,2.975,228,1.605,230,1.605,231,1.525,232,1.605,233,1.525,234,2.524,235,1.605,236,1.525,237,2.316,238,1.5,239,1.605,240,1.5,241,1.605,242,1.525,243,1.323,244,1.605,245,1.5,246,1.605,247,1.5,248,1.605,249,1.605,250,1.525,251,3.018,252,2.671,253,1.605,254,2.42,255,2.717,256,1.577,257,1.525,258,3.073,259,1.605,260,1.525,261,2.316,262,1.5,263,1.605,264,1.5,265,1.605,266,1.525,267,1.605,268,1.525,269,1.429,270,1.5,271,1.605,272,1.525,273,1.605,274,1.525,275,1.5,276,1.605,277,1.5,278,1.605,279,1.525,280,1.551,281,1.605,282,1.525,283,1.605,284,2.828,285,2.717,286,1.525,287,1.525,288,1.525,289,1.605,290,1.5,291,1.605,711,4.554,725,4.25,1001,6.348,2207,6.767,2208,3.442,2209,4.968,2210,4.968,2211,5.829,2212,5.829,2213,4.968,2214,3.442,2215,3.442]],["title/components/TimeGameGraphComponent.html",[125,1.19,286,1.848]],["body/components/TimeGameGraphComponent.html",[0,0.006,2,0.036,3,0.036,4,0.032,6,0.855,8,0.091,13,0.152,14,0.854,17,0.866,20,0.005,21,0.784,27,0.237,33,0.7,34,0.032,36,1.826,37,1.009,41,0.87,56,1.851,62,0.76,68,2.349,72,0.003,73,0.003,83,2.451,125,1.931,126,1.525,127,1.605,128,1.605,129,1.605,133,2.717,134,1.525,135,2.996,136,2.996,137,3.962,138,3.644,139,1.364,140,2.316,142,2.316,145,1.853,146,2.975,152,4.18,153,1.364,168,0.847,169,1.551,184,2.076,185,0.893,223,1.364,224,2.316,225,2.276,226,2.316,227,2.975,228,1.605,230,1.605,231,1.525,232,1.605,233,1.525,234,2.524,235,1.605,236,1.525,237,2.316,238,1.5,239,1.605,240,1.5,241,1.605,242,1.525,243,1.323,244,1.605,245,1.5,246,1.605,247,1.5,248,1.605,249,1.605,250,1.525,251,3.018,252,2.671,253,1.605,254,2.42,255,2.717,256,1.577,257,1.525,258,3.073,259,1.605,260,1.525,261,2.316,262,1.5,263,1.605,264,1.5,265,1.605,266,1.525,267,1.605,268,1.525,269,1.429,270,1.5,271,1.605,272,1.525,273,1.605,274,1.525,275,1.5,276,1.605,277,1.5,278,1.605,279,1.525,280,1.551,281,1.605,282,1.525,283,1.605,284,1.525,285,2.717,286,2.828,287,1.525,288,1.525,289,1.605,290,1.5,291,1.605,711,4.554,725,4.25,1001,6.348,2207,6.767,2208,3.442,2209,4.968,2210,4.968,2211,5.829,2212,5.829,2213,4.968,2214,3.442,2215,3.442]],["title/pipes/TimePipe.html",[302,2.515,870,3.706]],["body/pipes/TimePipe.html",[0,0.011,2,0.061,3,0.061,4,0.054,6,0.996,13,0.176,17,0.785,19,1.099,20,0.005,21,1.193,22,1.025,27,0.335,34,0.054,44,0.756,68,2.175,72,0.004,73,0.004,94,2.186,134,2.563,145,2.158,168,1.726,185,1.502,302,4.558,870,6.237,944,6.265,962,5.785,1063,5.785,1068,7.019,2216,6.994,2217,8.486,2218,6.994,2219,6.994,2220,6.994]],["title/components/TimePlatformGraphComponent.html",[125,1.19,287,1.848]],["body/components/TimePlatformGraphComponent.html",[0,0.006,2,0.036,3,0.036,4,0.032,6,0.855,8,0.091,13,0.152,14,0.854,17,0.866,20,0.005,21,0.784,27,0.237,33,0.7,34,0.032,36,1.826,37,1.009,41,0.87,56,0.781,62,1.801,68,2.349,72,0.003,73,0.003,83,2.451,125,1.931,126,1.525,127,1.605,128,1.605,129,1.605,133,2.717,134,1.525,135,2.996,136,2.996,137,3.962,138,3.644,139,1.364,140,2.316,142,2.316,145,1.853,146,2.975,152,4.18,153,1.364,168,0.847,169,1.551,184,2.076,185,0.893,223,1.364,224,2.316,225,2.276,226,2.316,227,2.975,228,1.605,230,1.605,231,1.525,232,1.605,233,1.525,234,2.524,235,1.605,236,1.525,237,2.316,238,1.5,239,1.605,240,1.5,241,1.605,242,1.525,243,1.323,244,1.605,245,1.5,246,1.605,247,1.5,248,1.605,249,1.605,250,1.525,251,3.018,252,2.671,253,1.605,254,2.42,255,2.717,256,1.577,257,1.525,258,3.073,259,1.605,260,1.525,261,2.316,262,1.5,263,1.605,264,1.5,265,1.605,266,1.525,267,1.605,268,1.525,269,1.429,270,1.5,271,1.605,272,1.525,273,1.605,274,1.525,275,1.5,276,1.605,277,1.5,278,1.605,279,1.525,280,1.551,281,1.605,282,1.525,283,1.605,284,1.525,285,2.717,286,1.525,287,2.828,288,1.525,289,1.605,290,1.5,291,1.605,725,4.25,734,4.734,1001,6.348,2207,6.767,2208,3.442,2209,4.968,2210,4.968,2211,5.829,2212,5.829,2213,4.968,2214,3.442,2215,3.442]],["title/components/TimerComponent.html",[125,1.19,288,1.848]],["body/components/TimerComponent.html",[0,0.004,2,0.058,3,0.023,4,0.02,6,0.596,7,0.397,8,0.057,9,0.181,13,0.207,14,0.315,17,1.03,19,0.948,20,0.005,21,0.923,22,1.036,24,0.71,25,1.066,27,0.315,28,0.329,34,0.02,35,0.675,36,1.273,37,0.63,38,1.312,41,0.543,43,1.982,44,0.69,56,1.396,62,1.292,68,1.348,72,0.002,73,0.002,83,1.982,93,1.077,124,2.537,125,1.562,126,0.952,127,1.002,128,1.002,129,1.002,133,2.029,134,0.952,135,2.09,136,2.09,137,3.786,138,3.482,139,0.852,140,1.615,142,1.615,144,3.755,145,1.292,146,2.327,149,2.757,150,1.914,151,1.914,152,3.954,153,1.724,155,1.328,156,2.825,157,3.997,160,3.899,168,1.706,169,2.977,173,3.752,174,3.867,176,2.15,177,3.752,179,2.328,180,2.526,184,1.297,185,0.558,186,1.519,187,1.567,188,1.434,189,1.567,194,0.536,195,1.077,196,1.267,200,0.779,201,1.485,202,1.746,203,2.814,204,1.62,205,1.91,206,3.895,207,2.328,208,2.15,209,2.328,211,2.328,215,2.328,220,2.14,223,0.852,224,1.615,225,1.588,226,1.615,227,2.327,228,1.002,230,1.002,231,0.952,232,1.002,233,0.952,234,2.042,235,1.002,236,0.952,237,1.615,238,0.937,239,1.002,240,0.937,241,1.002,242,0.952,243,0.826,244,1.002,245,0.937,246,1.002,247,0.937,248,1.002,249,1.002,250,0.952,251,2.273,252,0.985,253,1.002,254,1.807,255,2.029,256,0.985,257,0.952,258,2.79,259,1.002,260,0.952,261,1.615,262,0.937,263,1.002,264,0.937,265,1.002,266,0.952,267,1.002,268,0.952,269,0.893,270,0.937,271,1.002,272,0.952,273,1.002,274,0.952,275,0.937,276,1.002,277,0.937,278,1.002,279,0.952,280,0.968,281,1.002,282,0.952,283,1.002,284,0.952,285,2.029,286,0.952,287,0.952,288,2.211,289,1.002,290,0.937,291,1.002,327,1.328,329,2.404,499,1.822,738,3.33,743,2.25,752,2.448,987,3.652,1030,3.534,1045,5.85,1062,5.474,1210,4.638,1293,3.688,1294,4.082,1383,3.752,1391,3.752,1393,2.328,1405,1.91,1406,2.328,1407,2.328,1408,2.328,1410,2.328,1415,4.352,1417,2.15,1426,2.328,2069,4.713,2221,2.599,2222,4.189,2223,4.189,2224,6.034,2225,6.034,2226,6.034,2227,2.599,2228,4.189,2229,2.599,2230,2.599,2231,2.599,2232,2.599,2233,2.599,2234,2.599,2235,2.599,2236,2.599,2237,2.599,2238,2.599,2239,2.599,2240,2.599,2241,2.599,2242,2.599,2243,2.599,2244,5.261,2245,4.189,2246,5.261,2247,5.261,2248,2.599,2249,2.599,2250,2.599,2251,2.599,2252,2.599,2253,7.073,2254,2.599,2255,4.189,2256,2.599,2257,4.189,2258,2.599,2259,2.599,2260,2.599,2261,2.599,2262,2.599,2263,2.599]],["title/injectables/TimerEffects.html",[292,1.579,2264,4.17]],["body/injectables/TimerEffects.html",[0,0.007,2,0.041,3,0.041,4,0.036,7,1.459,8,0.102,9,0.282,13,0.118,14,0.569,17,0.914,19,0.738,20,0.005,21,0.613,22,0.688,24,0.756,25,1.135,27,0.366,34,0.036,38,2.907,72,0.003,73,0.003,185,1.008,190,2.832,191,2.745,200,1.407,201,2.32,292,2.358,297,2.832,300,5.53,302,4.631,303,5.998,311,5.471,312,5.471,314,5.471,315,4.695,316,5.674,318,2.459,319,1.75,320,3.154,321,1.91,322,3.451,323,3.154,324,1.945,498,3.451,499,3.291,738,4.495,749,4.495,754,4.623,1122,5.88,1210,5.674,1311,5.077,1347,3.884,1405,3.451,1819,5.861,2152,5.861,2264,5.412,2265,4.695,2266,4.695,2267,6.543,2268,6.543,2269,8.145,2270,4.695,2271,6.543,2272,6.543,2273,6.543,2274,6.543,2275,6.543,2276,6.543,2277,6.543,2278,4.695,2279,6.543,2280,6.543,2281,6.543,2282,6.543,2283,6.543,2284,6.543,2285,4.695]],["title/interfaces/TimerInfo.html",[118,0.366,329,2.304]],["body/interfaces/TimerInfo.html",[2,0.061,3,0.061,4,0.054,8,0.152,9,0.365,13,0.23,20,0.005,34,0.065,43,2.084,44,0.906,56,1.823,62,1.775,72,0.004,73,0.004,93,2.882,94,2.325,118,0.662,124,3.185,327,3.555,328,6.233,329,3.865]],["title/injectables/TimerService.html",[292,1.579,1210,3.144]],["body/injectables/TimerService.html",[0,0.007,2,0.069,3,0.038,4,0.033,8,0.093,9,0.264,13,0.229,14,0.519,17,1.036,19,1.392,20,0.005,21,1.157,22,1.298,27,0.326,34,0.047,35,0.409,38,1.341,43,2.579,44,0.908,56,1.663,62,1.619,72,0.003,73,0.003,94,2.059,118,0.311,124,2.905,145,1.891,149,2.801,150,2.801,151,2.801,168,1.878,169,3.083,185,0.919,196,2.088,200,1.283,201,2.539,292,2.243,319,1.596,321,1.741,324,1.774,329,3.572,346,3.142,417,2.363,585,4.185,743,2.3,744,3.479,829,2.876,836,3.001,987,2.363,1085,3.542,1116,4.437,1117,4.437,1118,2.43,1124,3.479,1148,3.147,1186,5.263,1208,3.542,1209,3.835,1210,3.822,1211,7.003,1212,3.835,1213,3.835,1214,5.491,1215,7.411,1216,5.491,1217,5.491,1218,5.491,1219,5.491,1220,5.491,1221,3.835,1222,3.835,1223,3.835,1224,7.003,1439,3.147,2286,6.13,2287,6.13,2288,6.13,2289,4.282,2290,4.282,2291,4.282,2292,4.282,2293,4.282,2294,4.282,2295,4.282]],["title/components/TrackerComponent.html",[125,1.19,290,1.817]],["body/components/TrackerComponent.html",[0,0.005,2,0.031,3,0.031,4,0.027,6,0.751,8,0.076,9,0.227,13,0.216,14,0.423,17,0.982,19,0.548,20,0.005,21,0.83,22,0.511,27,0.345,28,0.442,34,0.027,35,0.607,36,1.603,37,0.846,41,0.729,56,1.427,62,0.637,68,1.628,72,0.003,73,0.003,83,2.278,125,1.795,126,1.278,127,1.345,128,1.345,129,1.345,133,2.45,134,1.278,137,3.904,138,3.59,139,1.143,140,2.033,142,2.033,145,1.626,146,2.731,153,1.143,156,3.317,160,2.254,162,4.675,168,0.71,169,1.3,185,0.749,194,1.087,195,1.445,196,1.701,200,1.045,201,1.869,205,2.564,223,1.143,224,2.033,225,1.998,226,2.033,227,2.731,228,1.345,230,1.345,231,1.278,232,1.345,233,1.278,234,2.346,235,1.345,236,1.278,237,2.033,238,1.257,239,1.345,240,1.257,241,1.345,242,1.278,243,1.109,244,1.345,245,1.257,246,1.345,247,1.257,248,1.345,249,1.345,250,1.278,251,2.612,252,1.322,253,1.345,254,2.182,255,2.45,256,1.322,257,1.278,258,3.082,259,1.345,260,1.278,261,2.033,262,1.257,263,1.345,264,1.257,265,1.345,266,1.278,267,1.345,268,1.278,269,1.198,270,1.257,271,1.345,272,1.278,273,1.345,274,1.278,275,1.257,276,1.345,277,1.257,278,1.345,279,1.278,280,1.3,281,1.345,282,1.278,283,1.345,284,1.278,285,2.45,286,1.278,287,1.278,288,1.278,289,1.345,290,2.553,291,1.345,319,1.3,321,1.419,324,1.445,329,3.474,341,5.578,343,4.454,346,4.322,355,2.706,356,2.706,357,2.254,358,2.175,359,2.564,821,3.124,829,3.541,972,3.124,1030,2.343,1062,5.858,1086,3.124,1293,4.964,1294,5.495,2121,4.09,2127,2.706,2140,2.885,2296,3.488,2297,5.271,2298,5.271,2299,7.082,2300,3.488,2301,5.271,2302,5.271,2303,3.488,2304,3.488,2305,3.488,2306,3.488,2307,3.488,2308,3.488,2309,3.488,2310,3.488,2311,3.488,2312,3.488,2313,3.488,2314,3.488,2315,3.488,2316,3.488,2317,3.488,2318,6.354,2319,3.488,2320,3.488,2321,3.488,2322,3.488,2323,3.488,2324,3.488,2325,3.488]],["title/modules/TrackerModule.html",[373,2.128,392,3.706]],["body/modules/TrackerModule.html",[0,0.007,2,0.038,3,0.038,4,0.034,20,0.005,27,0.402,28,0.552,34,0.048,36,1.885,72,0.003,73,0.003,157,4.649,185,0.934,189,2.624,195,1.803,223,1.426,257,3.171,260,3.171,266,3.171,268,3.171,288,3.171,290,3.119,318,2.279,341,5.813,355,3.376,356,3.376,373,2.618,375,2.47,376,4.357,377,2.624,378,3.691,391,5.395,392,7.53,393,3.74,394,1.448,395,2.544,397,3.625,401,4.558,402,3.05,403,2.923,404,3.198,409,2.923,433,3.198,442,2.721,552,3.198,594,4.007,595,2.713,609,5.129,613,3.599,854,5.555,855,4.811,856,3.599,857,3.599,1122,5.592,1161,6.065,1210,5.395,1304,5.129,1347,3.599,1378,3.898,1405,3.198,1518,3.898,1561,3.898,1671,5.129,1679,3.898,2264,5.129,2326,3.898,2327,3.898,2328,4.351,2329,3.898,2330,4.351,2331,6.201,2332,6.201,2333,3.898,2334,3.898,2335,4.351,2336,6.201,2337,4.351,2338,4.351,2339,4.351,2340,4.351,2341,4.351,2342,4.351,2343,4.351,2344,4.351,2345,4.351,2346,4.351]],["title/interfaces/TrackerState.html",[118,0.366,2127,3.912]],["body/interfaces/TrackerState.html",[2,0.057,3,0.057,4,0.05,8,0.143,9,0.351,13,0.165,20,0.005,24,0.656,27,0.321,28,0.828,34,0.076,35,0.911,72,0.004,73,0.004,118,0.643,194,1.678,245,3.507,258,2.355,442,2.866,668,4.261,669,3.421,670,3.421,2121,5.068,2126,5.852,2127,6.876,2128,5.852,2129,5.852,2130,7.939,2131,5.852,2132,5.852,2133,5.852,2134,5.852,2135,5.852,2136,5.852,2137,7.289,2138,5.852,2139,5.852,2140,6.731]],["title/classes/TwitterLogin.html",[0,0.008,628,2.64]],["body/classes/TwitterLogin.html",[0,0.014,2,0.038,3,0.038,4,0.034,6,1.356,7,1.469,8,0.096,9,0.269,10,1.643,12,2.27,13,0.246,14,1.106,17,0.7,20,0.005,24,0.44,25,0.661,27,0.246,28,0.556,33,0.738,34,0.078,35,0.899,39,1.97,44,0.744,72,0.003,73,0.003,234,2.904,394,1.46,470,4.038,481,4.788,544,2.297,546,2.357,548,2.357,557,3.688,560,3.461,618,3.266,620,3.266,621,3.266,628,3.8,665,3.943,694,2.564,698,3.762,699,3.351,700,3.762,701,3.54,702,3.762,703,4.486,704,3.762,705,4.377,706,4.373,707,4.608,708,3.762,709,3.351,710,3.762,2347,6.237]],["title/classes/UpdateElapsedTime.html",[0,0.008,69,2.576]],["body/classes/UpdateElapsedTime.html",[0,0.014,1,3.102,2,0.033,3,0.033,4,0.029,5,2.157,6,1.332,7,1.444,8,0.083,9,0.242,10,2.311,11,2.251,12,2.231,13,0.247,14,0.461,16,2.771,17,0.83,19,0.597,20,0.005,21,0.496,22,0.557,24,0.381,25,0.573,26,3.285,27,0.264,28,0.482,29,1.773,30,2.994,31,2.994,32,3.824,33,0.64,34,0.077,35,0.882,36,2.844,37,0.922,38,1.19,39,2.304,40,3.285,41,1.175,42,3.02,43,2.683,44,0.824,45,3.285,46,2.625,47,3.102,48,3.285,49,2.206,50,3.02,51,1.709,52,3.285,53,3.102,54,3.285,55,4.826,56,1.055,57,2.872,58,3.759,59,3.285,60,3.102,61,3.285,62,1.027,63,2.872,64,3.285,65,3.102,66,3.91,67,3.285,68,1.44,69,3.417,70,3.285,71,3.102,72,0.003,73,0.003,1510,2.222,2348,5.621,2349,5.621]],["title/classes/UpdateElapsedTimeSucceeded.html",[0,0.008,71,2.782]],["body/classes/UpdateElapsedTimeSucceeded.html",[0,0.014,1,3.151,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.267,12,2.24,13,0.246,14,0.471,16,2.806,17,0.76,19,0.61,20,0.005,21,0.507,22,0.569,24,0.39,25,0.585,26,3.338,27,0.267,28,0.492,29,1.812,30,3.032,31,3.032,32,3.851,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.338,41,1.194,42,3.068,43,2.384,44,0.767,45,3.338,46,2.649,47,3.151,48,3.338,49,2.241,50,3.068,51,1.736,52,3.338,53,3.151,54,3.338,55,4.864,56,1.072,57,2.918,58,3.725,59,3.338,60,3.151,61,3.338,62,1.043,63,2.918,64,3.338,65,3.151,66,3.338,67,3.338,68,1.464,69,2.918,70,3.959,71,3.738,72,0.003,73,0.003,1611,3.013,2350,5.711,2351,3.883]],["title/classes/UpdateGame.html",[0,0.008,57,2.576]],["body/classes/UpdateGame.html",[0,0.014,1,3.102,2,0.033,3,0.033,4,0.029,5,2.157,6,1.332,7,1.444,8,0.083,9,0.242,10,2.311,11,2.251,12,2.231,13,0.247,14,0.461,16,2.771,17,0.83,19,0.597,20,0.005,21,0.496,22,0.557,24,0.381,25,0.573,26,3.285,27,0.264,28,0.482,29,1.773,30,3.824,31,2.994,32,2.994,33,0.64,34,0.077,35,0.882,36,2.844,37,0.922,38,1.19,39,2.304,40,3.285,41,1.175,42,3.02,43,2.683,44,0.824,45,3.285,46,2.625,47,3.102,48,3.285,49,2.206,50,3.02,51,1.709,52,3.285,53,3.102,54,3.91,55,4.826,56,1.055,57,3.417,58,3.759,59,3.285,60,3.102,61,3.285,62,1.027,63,2.872,64,3.285,65,3.102,66,3.285,67,3.285,68,1.44,69,2.872,70,3.285,71,3.102,72,0.003,73,0.003,1510,2.222,2352,5.621,2353,5.621]],["title/classes/UpdateGameSucceeded.html",[0,0.008,60,2.782]],["body/classes/UpdateGameSucceeded.html",[0,0.014,1,3.151,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.267,12,2.24,13,0.246,14,0.471,16,2.806,17,0.76,19,0.61,20,0.005,21,0.507,22,0.569,24,0.39,25,0.585,26,3.338,27,0.267,28,0.492,29,1.812,30,3.851,31,3.032,32,3.032,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.338,41,1.194,42,3.068,43,2.384,44,0.767,45,3.338,46,2.649,47,3.151,48,3.338,49,2.241,50,3.068,51,1.736,52,3.338,53,3.151,54,3.338,55,4.864,56,1.072,57,2.918,58,3.725,59,3.959,60,3.738,61,3.338,62,1.043,63,2.918,64,3.338,65,3.151,66,3.338,67,3.338,68,1.464,69,2.918,70,3.338,71,3.151,72,0.003,73,0.003,1611,3.013,2354,5.711,2355,3.883]],["title/interfaces/UpdateHistoryItemGamePayload.html",[30,2.257,118,0.366]],["body/interfaces/UpdateHistoryItemGamePayload.html",[2,0.056,3,0.056,4,0.049,8,0.139,9,0.345,13,0.221,20,0.005,30,3.92,31,3.582,32,3.582,34,0.075,44,0.912,51,2.939,56,1.777,62,1.462,72,0.004,73,0.004,89,2.496,93,3.315,94,2.266,118,0.702,124,2.623,153,2.623,162,3.718,213,4.459,269,2.185,762,4.542,769,2.737,939,4.111,1006,3.966,1354,4.111,1432,4.459,1433,4.675]],["title/interfaces/UpdateHistoryItemPlatformPayload.html",[31,2.257,118,0.366]],["body/interfaces/UpdateHistoryItemPlatformPayload.html",[2,0.056,3,0.056,4,0.049,8,0.139,9,0.345,13,0.221,20,0.005,30,3.582,31,3.92,32,3.582,34,0.075,44,0.912,51,2.939,56,1.502,62,1.729,72,0.004,73,0.004,89,2.496,93,3.315,94,2.266,118,0.702,124,2.623,153,2.623,162,3.718,213,4.459,269,2.185,762,4.542,769,2.737,939,4.111,1006,3.966,1354,4.111,1432,4.459,1433,4.675]],["title/interfaces/UpdateHistoryItemTimesPayload.html",[32,2.257,118,0.366]],["body/interfaces/UpdateHistoryItemTimesPayload.html",[2,0.055,3,0.055,4,0.048,8,0.137,9,0.342,13,0.23,20,0.005,30,3.545,31,3.545,32,3.89,34,0.074,44,0.902,51,2.926,56,1.486,62,1.446,72,0.004,73,0.004,89,2.455,93,3.903,94,2.389,118,0.699,124,3.088,153,2.596,162,3.657,213,4.386,269,2.149,762,4.495,769,2.692,939,4.043,1006,3.901,1354,4.043,1432,4.386,1433,4.599]],["title/classes/UpdatePlatform.html",[0,0.008,63,2.576]],["body/classes/UpdatePlatform.html",[0,0.014,1,3.102,2,0.033,3,0.033,4,0.029,5,2.157,6,1.332,7,1.444,8,0.083,9,0.242,10,2.311,11,2.251,12,2.231,13,0.247,14,0.461,16,2.771,17,0.83,19,0.597,20,0.005,21,0.496,22,0.557,24,0.381,25,0.573,26,3.285,27,0.264,28,0.482,29,1.773,30,2.994,31,3.824,32,2.994,33,0.64,34,0.077,35,0.882,36,2.844,37,0.922,38,1.19,39,2.304,40,3.285,41,1.175,42,3.02,43,2.683,44,0.824,45,3.285,46,2.625,47,3.102,48,3.285,49,2.206,50,3.02,51,1.709,52,3.285,53,3.102,54,3.285,55,4.826,56,1.055,57,2.872,58,3.759,59,3.285,60,3.102,61,3.91,62,1.027,63,3.417,64,3.285,65,3.102,66,3.285,67,3.285,68,1.44,69,2.872,70,3.285,71,3.102,72,0.003,73,0.003,1510,2.222,2356,5.621,2357,5.621]],["title/classes/UpdatePlatformSucceeded.html",[0,0.008,65,2.782]],["body/classes/UpdatePlatformSucceeded.html",[0,0.014,1,3.151,2,0.034,3,0.034,4,0.03,5,2.204,6,1.338,7,1.45,8,0.085,9,0.246,10,2.193,11,2.267,12,2.24,13,0.246,14,0.471,16,2.806,17,0.76,19,0.61,20,0.005,21,0.507,22,0.569,24,0.39,25,0.585,26,3.338,27,0.267,28,0.492,29,1.812,30,3.032,31,3.851,32,3.032,33,0.654,34,0.077,35,0.886,36,2.856,37,0.942,38,1.216,39,2.315,40,3.338,41,1.194,42,3.068,43,2.384,44,0.767,45,3.338,46,2.649,47,3.151,48,3.338,49,2.241,50,3.068,51,1.736,52,3.338,53,3.151,54,3.338,55,4.864,56,1.072,57,2.918,58,3.725,59,3.338,60,3.151,61,3.338,62,1.043,63,2.918,64,3.959,65,3.738,66,3.338,67,3.338,68,1.464,69,2.918,70,3.338,71,3.151,72,0.003,73,0.003,1611,3.013,2358,5.711,2359,3.883]],["title/interfaces/User.html",[118,0.366,665,2.515]],["body/interfaces/User.html",[2,0.057,3,0.057,4,0.05,8,0.141,9,0.349,13,0.245,20,0.005,34,0.068,44,0.927,72,0.004,73,0.004,118,0.641,378,4.508,544,3.388,546,3.476,548,3.476,557,4.441,560,3.085,665,4.035,1055,5.113,1622,4.534,2163,7.173,2164,7.173,2165,7.173,2360,5.351,2361,5.351]],["title/injectables/UserEffects.html",[292,1.579,606,4.17]],["body/injectables/UserEffects.html",[0,0.004,2,0.025,3,0.025,4,0.022,7,1.46,8,0.061,9,0.192,13,0.14,14,0.341,17,0.943,19,0.701,20,0.005,21,0.582,22,0.654,24,0.799,25,1.2,27,0.331,33,0.473,34,0.022,35,0.603,38,2.841,72,0.002,73,0.002,138,1.582,145,1.377,168,1.62,185,0.604,190,1.696,191,1.644,200,0.843,201,2.598,292,1.737,297,1.696,300,5.713,302,4.917,303,5.921,311,6.025,312,6.155,314,6.155,315,4.965,316,5.764,318,1.473,319,1.048,320,1.889,321,3.601,323,5.761,324,1.165,338,4.787,350,1.754,460,3.344,484,3.997,500,1.817,557,1.312,583,3.997,592,5.642,606,3.69,608,2.519,618,3.305,620,3.305,621,3.305,628,3.305,665,2.767,699,3.391,706,3.305,707,3.483,709,3.391,1055,1.511,1234,1.889,1309,5.683,1581,7.816,1585,3.69,1586,3.69,1587,3.69,2163,2.182,2164,2.182,2165,2.182,2179,3.997,2180,3.997,2362,2.812,2363,4.461,2364,6.312,2365,2.812,2366,4.461,2367,6.312,2368,2.812,2369,5.545,2370,4.461,2371,4.461,2372,6.312,2373,4.461,2374,2.812,2375,4.461,2376,4.461,2377,4.461,2378,2.812,2379,4.461,2380,4.461,2381,4.461,2382,4.461,2383,4.461,2384,4.461,2385,6.312,2386,4.461,2387,2.812,2388,4.461,2389,4.461,2390,4.461,2391,2.812,2392,4.461,2393,3.997,2394,4.461,2395,4.461,2396,4.461,2397,2.812,2398,4.461,2399,4.461,2400,4.461,2401,4.461,2402,4.461,2403,2.812,2404,4.461,2405,4.461,2406,4.461,2407,2.812,2408,4.461,2409,4.461,2410,4.461,2411,2.812,2412,2.812,2413,4.461,2414,2.812,2415,2.812,2416,2.812,2417,2.812,2418,2.812,2419,2.812,2420,2.812]],["title/interfaces/UserInfo.html",[118,0.366,1622,3.534]],["body/interfaces/UserInfo.html",[2,0.058,3,0.058,4,0.051,8,0.144,9,0.353,13,0.241,20,0.005,34,0.069,44,0.919,72,0.004,73,0.004,118,0.646,378,5.103,544,3.446,546,3.535,548,3.535,557,4.463,560,3.138,665,3.283,1055,5.138,1622,5.729,2163,5.106,2164,5.106,2165,5.106,2360,5.443,2361,7.693]],["title/injectables/UserService.html",[157,2.709,292,1.579]],["body/injectables/UserService.html",[0,0.008,2,0.048,3,0.048,4,0.042,8,0.119,13,0.138,14,0.662,17,0.974,19,0.858,20,0.005,21,0.713,22,0.8,27,0.384,28,0.693,33,0.92,34,0.042,35,0.692,72,0.004,73,0.004,145,2.238,155,2.791,156,3.888,157,3.897,168,1.888,169,2.703,185,1.173,194,1.496,195,2.263,200,1.637,201,1.938,206,2.861,243,2.95,292,2.55,319,2.036,346,3.961,378,2.791,500,3.531,557,2.55,578,3.83,665,4.327,699,4.66,706,4.542,809,4.519,1055,2.935,1234,3.67,1622,3.83,1775,4.239,2361,4.519,2393,4.894,2421,5.464,2422,8.674,2423,8.142,2424,5.464,2425,5.464,2426,5.464,2427,5.464,2428,5.464,2429,5.464,2430,5.464,2431,5.464,2432,5.464,2433,5.464,2434,5.464,2435,5.464,2436,5.464,2437,5.464,2438,5.464,2439,5.464,2440,5.464,2441,5.464,2442,5.464,2443,5.464]],["title/dependencies.html",[375,3.44,2444,4.215]],["body/dependencies.html",[20,0.005,28,0.957,72,0.004,73,0.004,144,4.761,153,1.904,156,2.32,185,1.247,186,4.904,187,3.503,188,4.902,225,2.201,318,3.041,319,2.164,348,6.246,349,5.858,350,3.621,352,5.203,353,4.804,375,3.296,402,4.071,403,3.901,407,4.071,411,5.203,413,4.804,419,4.804,423,4.804,424,4.269,552,4.269,553,5.203,595,3.621,648,4.269,855,5.858,856,4.804,857,4.804,995,6.246,996,4.804,1009,4.507,1097,4.804,1352,3.901,1508,5.203,1659,5.203,1877,5.203,1878,6.764,2333,5.203,2334,5.203,2445,5.808,2446,9.848,2447,5.808,2448,5.808,2449,5.808,2450,5.808,2451,5.808,2452,5.808,2453,5.808,2454,8.389,2455,5.808,2456,9.208,2457,5.808,2458,5.808,2459,5.808,2460,5.808,2461,5.808,2462,5.808,2463,5.808,2464,5.808,2465,5.808,2466,5.808,2467,5.808,2468,5.808,2469,5.808,2470,5.808,2471,5.808,2472,5.808]],["title/miscellaneous/functions.html",[724,2.828,2473,3.27]],["body/miscellaneous/functions.html",[7,1.579,8,0.11,19,1.567,20,0.005,21,1.302,22,1.461,72,0.003,73,0.003,194,2.045,439,6.155,442,4.541,724,2.352,727,7.254,1348,4.17,1358,4.948,1593,4.17,1594,5.683,1823,4.17,2055,4.516,2059,4.516,2060,6.155,2098,4.516,2099,6.155,2109,4.516,2114,4.516,2120,4.516,2142,4.516,2147,4.516,2155,4.516,2162,4.516,2473,3.911,2474,5.041,2475,5.041,2476,5.041,2477,5.041,2478,5.041,2479,5.041,2480,5.041,2481,5.041,2482,4.516,2483,4.516,2484,4.516,2485,5.041,2486,5.041,2487,5.041,2488,5.041,2489,5.041]],["title/index.html",[8,0.092,220,2.153,2490,3.776]],["body/index.html",[20,0.004,56,1.26,68,1.72,72,0.004,73,0.004,138,2.381,220,3.43,258,2.42,319,2.501,353,5.553,403,5.559,413,5.553,419,5.553,423,5.553,424,6.082,544,3.515,648,4.934,855,6.421,996,5.553,1457,6.013,2491,6.713,2492,6.713,2493,6.713,2494,6.713,2495,8.971,2496,9.926,2497,6.713,2498,6.713,2499,6.713,2500,6.713,2501,6.713,2502,6.713,2503,6.713,2504,6.713,2505,6.713,2506,6.713,2507,9.619,2508,8.971,2509,9.365,2510,8.275,2511,8.275,2512,8.275,2513,6.713,2514,6.713,2515,6.713,2516,6.713,2517,6.713,2518,6.713,2519,6.713,2520,6.713]],["title/license.html",[220,2.153,2490,3.776,2521,3.776]],["body/license.html",[4,0.049,7,0.967,20,0.004,72,0.004,73,0.004,378,3.235,395,3.701,531,4.437,1186,4.653,2521,5.671,2522,7.979,2523,8.737,2524,6.331,2525,6.331,2526,6.331,2527,6.331,2528,7.979,2529,6.331,2530,6.331,2531,6.331,2532,6.331,2533,7.979,2534,6.331,2535,9.172,2536,10.004,2537,6.331,2538,6.331,2539,7.979,2540,8.737,2541,6.331,2542,8.737,2543,7.979,2544,6.331,2545,7.979,2546,6.331,2547,6.331,2548,6.331,2549,6.331,2550,6.331,2551,6.331,2552,6.331,2553,6.331,2554,6.331,2555,6.331,2556,6.331,2557,6.331,2558,7.979,2559,7.979,2560,6.331,2561,6.331,2562,7.979,2563,6.331,2564,6.331,2565,6.331,2566,6.331,2567,6.331,2568,6.331,2569,6.331,2570,6.331,2571,6.331,2572,6.331,2573,6.331,2574,6.331,2575,6.331,2576,6.331,2577,6.331,2578,6.331,2579,6.331,2580,6.331,2581,6.331,2582,6.331]],["title/modules.html",[373,2.901]],["body/modules.html",[20,0.004,72,0.004,73,0.004,188,5.614,252,3.216,349,7.894,373,2.952,374,5.427,384,5.14,385,5.14,386,5.14,387,5.14,388,5.14,389,5.14,390,5.14,391,4.361,392,5.14,591,5.14,2583,10.173,2584,10.279,2585,8.486]],["title/overview.html",[2586,6.155]],["body/overview.html",[0,0.005,20,0.005,34,0.028,72,0.003,73,0.003,118,0.262,125,0.853,126,2.38,157,3.874,223,1.185,231,3.08,233,2.38,236,2.38,238,2.341,240,2.341,242,2.38,247,2.341,250,2.38,254,2.23,257,2.38,260,2.38,262,2.341,264,2.341,266,2.38,268,2.38,270,2.341,272,2.38,274,2.38,275,2.341,277,2.341,279,3.08,282,2.38,284,2.38,286,2.38,287,2.38,288,2.38,290,2.341,292,1.132,298,4.196,302,1.804,341,4.844,360,4.551,372,2.18,373,2.286,374,7.866,375,2.052,376,2.18,377,2.18,378,1.847,379,3.239,380,3.239,381,3.239,382,3.239,383,3.239,384,4.772,385,7.002,386,7.178,387,7.002,388,5.676,389,6.177,390,6.496,391,6.09,392,7.385,393,3.266,394,1.203,395,2.113,460,2.18,569,2.99,587,3.239,588,3.239,589,3.239,590,3.239,591,4.772,592,4.772,849,3.239,850,3.239,852,3.239,870,6.177,990,3.239,991,3.239,1059,6.521,1122,4.196,1161,4.551,1176,4.551,1210,4.049,1459,3.239,1460,3.239,1503,3.239,1504,3.239,1713,6.521,1761,3.239,1762,3.239,1763,3.239,1947,3.239,1948,3.239,1949,3.239,2096,4.851,2118,3.239,2141,3.239,2326,3.239,2327,3.239,2329,3.239,2586,3.239,2587,3.615,2588,3.615,2589,3.615]],["title/routes.html",[460,4.144]],["body/routes.html",[20,0.005,72,0.005,73,0.005,460,4.898]],["title/miscellaneous/typealiases.html",[2473,3.27,2590,6.061]],["body/miscellaneous/typealiases.html",[1,2.529,5,2.601,8,0.1,13,0.116,20,0.005,24,0.46,30,2.051,31,2.051,32,2.051,42,2.462,47,2.529,49,1.798,50,2.462,53,2.529,57,2.341,60,2.529,63,2.341,65,2.529,69,2.341,71,2.529,72,0.003,73,0.003,74,3.078,75,3.212,76,4.509,83,1.373,87,3.078,92,2.961,96,3.078,97,2.857,98,2.961,107,2.764,109,2.857,111,2.764,113,2.857,115,2.341,117,2.857,139,1.502,149,2.939,150,2.939,151,2.939,296,2.234,321,2.616,378,3.797,394,1.525,481,2.529,544,2.4,546,2.462,548,2.462,560,2.185,618,2.4,620,2.4,621,2.4,628,2.4,694,2.679,699,2.462,701,2.601,706,2.4,707,2.529,709,2.462,724,3.002,738,2.529,739,2.764,744,2.601,749,2.529,751,2.601,754,2.601,756,2.679,812,5.463,914,3.078,933,5.767,1109,4.105,1261,3.791,1274,3.791,1276,3.791,1278,3.791,1354,4.803,1432,3.212,1463,3.791,1464,4.105,1531,3.368,1532,3.791,1536,3.556,1540,3.078,1541,3.368,1546,3.212,1548,3.212,1550,3.212,1866,3.078,1867,4.321,1871,2.961,1889,3.556,1890,3.791,1897,3.556,1905,3.212,1906,3.368,1907,4.728,1911,3.212,1913,3.212,1915,3.212,1940,3.556,1941,4.105,2017,6.148,2360,3.791,2473,3.556,2482,5.762,2483,4.105,2484,4.105,2591,4.583,2592,4.583,2593,4.583,2594,4.583,2595,4.583,2596,4.583,2597,4.583,2598,4.583,2599,4.583,2600,4.583,2601,4.583,2602,7.432,2603,4.583,2604,6.432,2605,7.432,2606,4.583,2607,6.432,2608,7.432,2609,7.432,2610,7.432,2611,4.583,2612,4.583,2613,4.583,2614,4.583,2615,4.583,2616,4.583,2617,4.583,2618,4.583,2619,4.583,2620,4.583,2621,4.583,2622,4.583,2623,4.583,2624,4.583,2625,4.583,2626,4.583,2627,4.583,2628,4.583,2629,4.583,2630,4.583,2631,4.583,2632,4.583,2633,4.583]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":987,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/SharedState.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["0.0.4",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["0.1.1",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["00:00:00",{"_index":2228,"title":{},"body":{"components/TimerComponent.html":{}}}],["1",{"_index":372,"title":{"components/HeaderComponent-1.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-1.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent-1.html":{},"pipes/PluralizePipe.html":{},"interfaces/State-10.html":{},"overview.html":{}}}],["1.2.4",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["1.29.0",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":946,"title":{"interfaces/State-10.html":{}},"body":{"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["11",{"_index":2096,"title":{"interfaces/State-11.html":{}},"body":{"overview.html":{}}}],["12",{"_index":2097,"title":{"interfaces/State-12.html":{}},"body":{}}],["13",{"_index":2106,"title":{"interfaces/State-13.html":{}},"body":{}}],["13.1.0",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2107,"title":{"interfaces/State-14.html":{}},"body":{}}],["15",{"_index":2108,"title":{"interfaces/State-15.html":{}},"body":{}}],["16",{"_index":2113,"title":{"interfaces/State-16.html":{}},"body":{}}],["17",{"_index":2118,"title":{"interfaces/State-17.html":{}},"body":{"overview.html":{}}}],["18",{"_index":2119,"title":{"interfaces/State-18.html":{}},"body":{}}],["19",{"_index":2125,"title":{"interfaces/State-19.html":{}},"body":{}}],["2",{"_index":1283,"title":{"components/HeaderComponent-2.html":{},"interfaces/State-2.html":{}},"body":{"components/HeaderComponent-2.html":{}}}],["2.5.7",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["2.7.1",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":2525,"title":{},"body":{"license.html":{}}}],["3",{"_index":2141,"title":{"interfaces/State-3.html":{}},"body":{"overview.html":{}}}],["3.3.2",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2587,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":945,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4",{"_index":1528,"title":{"interfaces/State-4.html":{}},"body":{"components/LoadMoreComponent.html":{},"interfaces/State-18.html":{}}}],["5",{"_index":2145,"title":{"interfaces/State-5.html":{}},"body":{}}],["5.0.0",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["5.4.2",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":2146,"title":{"interfaces/State-6.html":{}},"body":{}}],["6.0.16",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":2588,"title":{},"body":{"overview.html":{}}}],["68",{"_index":2589,"title":{},"body":{"overview.html":{}}}],["7",{"_index":2153,"title":{"interfaces/State-7.html":{}},"body":{}}],["8",{"_index":2154,"title":{"interfaces/State-8.html":{}},"body":{}}],["9",{"_index":2161,"title":{"interfaces/State-9.html":{}},"body":{}}],["9.0.0",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["_rout",{"_index":576,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_selectaddplayinginfo",{"_index":896,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["_selectallhistori",{"_index":1999,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectallprogress",{"_index":1992,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectauthst",{"_index":677,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectcompletedprogress",{"_index":1998,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectcompletionst",{"_index":887,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["_selectdashboardfeatur",{"_index":1013,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["_selectdatelist",{"_index":1018,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["_selectdaterang",{"_index":1015,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["_selectdisplay",{"_index":2134,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selectentriestoshow",{"_index":2137,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selecterror",{"_index":921,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["_selecterrorst",{"_index":919,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["_selecthistori",{"_index":1982,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbyd",{"_index":2015,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbygam",{"_index":2022,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistorygroupingsbyplatform",{"_index":2021,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistoryitem",{"_index":2001,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecthistoryload",{"_index":2023,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectinfo",{"_index":1783,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["_selectmarkcomplet",{"_index":892,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["_selectmarkcompleteent",{"_index":899,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["_selectplatform",{"_index":1985,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplatformsload",{"_index":2031,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplatformsopt",{"_index":2028,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectplay",{"_index":889,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["_selectplayingprogress",{"_index":1994,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectprofilest",{"_index":1781,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["_selectprogress",{"_index":1987,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectrangetyp",{"_index":1022,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["_selectsharedst",{"_index":1980,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectsortedhistoryitem",{"_index":2011,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectstatu",{"_index":682,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectstatusloggingin",{"_index":687,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectstatusvalidationmessag",{"_index":690,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selecttab",{"_index":894,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["_selecttim",{"_index":1989,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttimerinfo",{"_index":2035,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttrackedgam",{"_index":2026,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selecttrackerst",{"_index":2132,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["_selectus",{"_index":679,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectuserdata",{"_index":686,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectuserdataload",{"_index":2037,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["_selectuserloggedin",{"_index":684,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["_selectvisibletab",{"_index":901,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["a.index",{"_index":1170,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["a.starttim",{"_index":2014,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["abov",{"_index":2557,"title":{},"body":{"license.html":{}}}],["account",{"_index":1743,"title":{},"body":{"components/ProfileComponent.html":{}}}],["action",{"_index":7,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action.act",{"_index":2057,"title":{},"body":{"interfaces/State.html":{}}}],["action.addplay",{"_index":305,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["action.amount",{"_index":2124,"title":{},"body":{"interfaces/State-18.html":{}}}],["action.attemptinglogin",{"_index":2158,"title":{},"body":{"interfaces/State-8.html":{}}}],["action.displaynam",{"_index":1756,"title":{},"body":{"injectables/ProfileEffects.html":{},"interfaces/State-16.html":{}}}],["action.endtim",{"_index":1600,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["action.gam",{"_index":2101,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-6.html":{}}}],["action.info",{"_index":2152,"title":{},"body":{"interfaces/State-6.html":{},"injectables/TimerEffects.html":{}}}],["action.item",{"_index":1818,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["action.itemid",{"_index":1318,"title":{},"body":{"injectables/HistoryEffects.html":{},"interfaces/MarkCompleteEntity.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-13.html":{}}}],["action.itemids.map(itemid",{"_index":1605,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["action.messag",{"_index":2058,"title":{},"body":{"interfaces/State.html":{}}}],["action.password",{"_index":2372,"title":{},"body":{"injectables/UserEffects.html":{}}}],["action.payload",{"_index":1330,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["action.platform",{"_index":2103,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-3.html":{},"interfaces/State-6.html":{}}}],["action.profil",{"_index":2116,"title":{},"body":{"interfaces/State-16.html":{}}}],["action.showextra",{"_index":1598,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["action.starttim",{"_index":2105,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-6.html":{}}}],["action.tab",{"_index":2112,"title":{},"body":{"interfaces/State-15.html":{}}}],["action.typ",{"_index":1360,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["action.us",{"_index":2167,"title":{},"body":{"interfaces/State-9.html":{}}}],["action.userid",{"_index":2273,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["action.validationmessag",{"_index":2160,"title":{},"body":{"interfaces/State-8.html":{}}}],["actionreducermap",{"_index":668,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"interfaces/State-14.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/TrackerState.html":{}}}],["actions.add_new_history_item",{"_index":1361,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.add_new_item",{"_index":1602,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["actions.add_new_progress_item",{"_index":1825,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.al",{"_index":1359,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["actions.app_error",{"_index":2056,"title":{},"body":{"interfaces/State.html":{}}}],["actions.authent",{"_index":2166,"title":{},"body":{"interfaces/State-9.html":{}}}],["actions.canceltim",{"_index":2256,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.increment_days_to_show",{"_index":2122,"title":{},"body":{"interfaces/State-18.html":{}}}],["actions.incrementdaystoshow(this.amount_to_load",{"_index":1530,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["actions.load_history_item",{"_index":1363,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.load_history_items_succeed",{"_index":1364,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.load_item",{"_index":1604,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["actions.load_options_succeed",{"_index":2144,"title":{},"body":{"interfaces/State-3.html":{}}}],["actions.load_profile_succeed",{"_index":2115,"title":{},"body":{"interfaces/State-16.html":{}}}],["actions.load_progress_item",{"_index":1826,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.load_progress_items_succeed",{"_index":1827,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.mark_complete_succeed",{"_index":1829,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.not_authent",{"_index":2168,"title":{},"body":{"interfaces/State-9.html":{}}}],["actions.remov",{"_index":1601,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["actions.remove_history_item_succeed",{"_index":1367,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.remove_progress_item_succeed",{"_index":1828,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions.reset",{"_index":212,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/State-12.html":{}}}],["actions.reset_tim",{"_index":2149,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.save(addplay",{"_index":217,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["actions.savetimerinfo(info",{"_index":2254,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.set_attempting_login",{"_index":2157,"title":{},"body":{"interfaces/State-8.html":{}}}],["actions.set_endtim",{"_index":1599,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["actions.set_gam",{"_index":2100,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-6.html":{}}}],["actions.set_last_month",{"_index":2089,"title":{},"body":{"interfaces/State-10.html":{}}}],["actions.set_last_week",{"_index":2076,"title":{},"body":{"interfaces/State-10.html":{}}}],["actions.set_platform",{"_index":2102,"title":{},"body":{"interfaces/State-12.html":{},"interfaces/State-6.html":{}}}],["actions.set_profile_displayname_succeed",{"_index":2117,"title":{},"body":{"interfaces/State-16.html":{}}}],["actions.set_show_extra",{"_index":1597,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["actions.set_start_tim",{"_index":2150,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.set_starttim",{"_index":2104,"title":{},"body":{"interfaces/State-12.html":{}}}],["actions.set_this_month",{"_index":2083,"title":{},"body":{"interfaces/State-10.html":{}}}],["actions.set_this_week",{"_index":2075,"title":{},"body":{"interfaces/State-10.html":{}}}],["actions.set_timer_info",{"_index":2151,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions.set_validation_messag",{"_index":2159,"title":{},"body":{"interfaces/State-8.html":{}}}],["actions.set_visible_tab",{"_index":2111,"title":{},"body":{"interfaces/State-15.html":{}}}],["actions.setgam",{"_index":2258,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.setgame(gam",{"_index":207,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setlastmonth",{"_index":1279,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setlastweek",{"_index":1275,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setplatform(platform",{"_index":209,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setstarttime(now",{"_index":2250,"title":{},"body":{"components/TimerComponent.html":{}}}],["actions.setstarttime(starttim",{"_index":211,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["actions.setthismonth",{"_index":1277,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setthisweek",{"_index":1272,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["actions.setvisibletab(tab",{"_index":2206,"title":{},"body":{"components/TabsComponent.html":{}}}],["actions.update_elapsed_time_succeed",{"_index":1372,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.update_game_succeed",{"_index":1369,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions.update_platform_succeed",{"_index":1371,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions/add",{"_index":192,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-12.html":{}}}],["actions/app.act",{"_index":191,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["actions/d",{"_index":1267,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{}}}],["actions/display.act",{"_index":1529,"title":{},"body":{"components/LoadMoreComponent.html":{},"interfaces/State-18.html":{}}}],["actions/history.act",{"_index":1353,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["actions/mark",{"_index":1595,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-13.html":{}}}],["actions/platforms.act",{"_index":2143,"title":{},"body":{"interfaces/State-3.html":{}}}],["actions/profile.act",{"_index":1053,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{},"interfaces/State-16.html":{}}}],["actions/progress.act",{"_index":1824,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{}}}],["actions/status.act",{"_index":2156,"title":{},"body":{"interfaces/State-8.html":{},"injectables/StatusEffects.html":{}}}],["actions/tab.act",{"_index":2110,"title":{},"body":{"interfaces/State-15.html":{},"components/TabsComponent.html":{}}}],["actions/timer.act",{"_index":2148,"title":{},"body":{"interfaces/State-6.html":{}}}],["actions/user.act",{"_index":1234,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["activatedrout",{"_index":2364,"title":{},"body":{"injectables/UserEffects.html":{}}}],["activatedroutesnapshot",{"_index":573,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_compon",{"_index":291,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["adapt",{"_index":1355,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addall(action.item",{"_index":1366,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addall(item",{"_index":1607,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["adapter.addone(action.item",{"_index":1362,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.addone(getmarkcompleteentity(action.itemid",{"_index":1603,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["adapter.getinitialst",{"_index":1357,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.removeone(action.itemid",{"_index":1368,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adapter.updateon",{"_index":1376,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["adclient",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":37,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime-1.html":{},"components/SpinnerComponent.html":{},"interfaces/State-14.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["add_new_history_item",{"_index":26,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["add_new_item",{"_index":80,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["add_new_progress_item",{"_index":102,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["addnewhistoryitem",{"_index":1,"title":{"classes/AddNewHistoryItem.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["addnewitem",{"_index":74,"title":{"classes/AddNewItem.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["addnewprogressitem",{"_index":97,"title":{"classes/AddNewProgressItem.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["addplay",{"_index":119,"title":{"interfaces/AddPlaying.html":{}},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/CompletionState.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-14.html":{}}}],["addplaying.startentryid",{"_index":1206,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["addplayingact",{"_index":326,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{}}}],["addplayingactions.reset",{"_index":310,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingactions.sav",{"_index":304,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingactions.savesucceed",{"_index":1817,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["addplayingactions.savesucceeded(newitem",{"_index":309,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["addplayingcompon",{"_index":126,"title":{"components/AddPlayingComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["addplayingeffect",{"_index":293,"title":{"injectables/AddPlayingEffects.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{}}}],["addplayinginfo",{"_index":123,"title":{"interfaces/AddPlayingInfo.html":{}},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["addtimerinfo",{"_index":327,"title":{"interfaces/AddTimerInfo.html":{}},"body":{"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{}}}],["adsens",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"dependencies.html":{},"index.html":{}}}],["adsensemodul",{"_index":422,"title":{},"body":{"modules/AppModule.html":{}}}],["adsensemodule.forroot",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["adslot",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["af",{"_index":1124,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["afauth",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["air",{"_index":2620,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alias",{"_index":2591,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amount",{"_index":1465,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["amount_to_load",{"_index":1523,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["analyt",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"index.html":{}}}],["and/or",{"_index":2550,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2495,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":595,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":185,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":552,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/CompletionModule.html":{},"components/ForgotPasswordComponent.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":348,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angularfire2/auth",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angularfire2/firestor",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfireauth",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfireauthmodul",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestor",{"_index":1116,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfirestorecollect",{"_index":1117,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["angularfirestoremodul",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartics2/gtm",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2googletagmanag",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2modul",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["angulartics2module.forroot([angulartics2googletagmanag",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["anim",{"_index":732,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["apikey",{"_index":1103,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["app",{"_index":138,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"index.html":{}}}],["app.compon",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["app/complet",{"_index":1651,"title":{},"body":{"components/NavComponent.html":{}}}],["app/dashboard",{"_index":1644,"title":{},"body":{"components/NavComponent.html":{}}}],["app/librari",{"_index":1648,"title":{},"body":{"components/NavComponent.html":{}}}],["app/profil",{"_index":1641,"title":{},"body":{"components/NavComponent.html":{}}}],["app/track",{"_index":475,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavComponent.html":{}}}],["app_error",{"_index":1112,"title":{},"body":{"classes/Error.html":{}}}],["appact",{"_index":190,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["appactions.error",{"_index":2174,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["appactions.error(actions.sav",{"_index":218,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["appactions.error(addplayingactions.sav",{"_index":313,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["appactions.error(historyactions.load_history_item",{"_index":1313,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.remove_history_item",{"_index":1321,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_elapsed_tim",{"_index":1333,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_gam",{"_index":1339,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(historyactions.update_platform",{"_index":1345,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["appactions.error(platformsactions.load_opt",{"_index":1677,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["appactions.error(profileactions.load_profil",{"_index":1751,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["appactions.error(profileactions.set_profile_displaynam",{"_index":1758,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["appactions.error(progressactions.load_progress_item",{"_index":1799,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["appactions.error(progressactions.mark_complet",{"_index":1708,"title":{},"body":{"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["appactions.error(progressactions.remove_progress_item",{"_index":1814,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["appactions.error(timeractions.load_timer_info",{"_index":2277,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["appactions.error(timeractions.save_timer_info",{"_index":2284,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["appactions.error(useractions.email_login",{"_index":2373,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.facebook_login",{"_index":2377,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.get_us",{"_index":2386,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.google_login",{"_index":2390,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.logout",{"_index":2396,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.reset_password",{"_index":2402,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.signup",{"_index":2406,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appactions.error(useractions.twitter_login",{"_index":2410,"title":{},"body":{"injectables/UserEffects.html":{}}}],["appcompon",{"_index":231,"title":{"components/AppComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["appmodul",{"_index":374,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":384,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":2621,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["argument",{"_index":1481,"title":{},"body":{"components/LibraryComponent.html":{}}}],["aris",{"_index":2581,"title":{},"body":{"license.html":{}}}],["associ",{"_index":2537,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":703,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["attemptinglogin",{"_index":1891,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-8.html":{}}}],["auth",{"_index":234,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{}}}],["auth/actions/user.act",{"_index":501,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ProfileComponent.html":{}}}],["auth/model",{"_index":1738,"title":{},"body":{"components/ProfileComponent.html":{}}}],["auth/reducers/root.reduc",{"_index":1737,"title":{},"body":{"components/ProfileComponent.html":{}}}],["auth/services/user.servic",{"_index":189,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{}}}],["authcomponentselector",{"_index":578,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-7.html":{},"injectables/UserService.html":{}}}],["authdata",{"_index":2369,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.displaynam",{"_index":2416,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.email",{"_index":2417,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.photourl",{"_index":2418,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.providerdata[0",{"_index":2414,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdata.uid",{"_index":2415,"title":{},"body":{"injectables/UserEffects.html":{}}}],["authdomain",{"_index":1104,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["autheffect",{"_index":479,"title":{"injectables/AuthEffects.html":{}},"body":{"injectables/AuthEffects.html":{},"modules/AuthModule.html":{}}}],["authent",{"_index":481,"title":{"classes/Authenticated.html":{}},"body":{"injectables/AuthEffects.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["authform",{"_index":510,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["authformcompon",{"_index":233,"title":{"components/AuthFormComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["authguard",{"_index":437,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["authmodul",{"_index":385,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2571,"title":{},"body":{"license.html":{}}}],["authroutingmodul",{"_index":591,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservic",{"_index":592,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UserEffects.html":{},"overview.html":{}}}],["authstat",{"_index":662,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AuthState.html":{},"components/ProfileComponent.html":{},"interfaces/State-7.html":{}}}],["authus",{"_index":2367,"title":{},"body":{"injectables/UserEffects.html":{}}}],["avail",{"_index":2585,"title":{},"body":{"modules.html":{}}}],["awesom",{"_index":2519,"title":{},"body":{"index.html":{}}}],["axistickformat",{"_index":715,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["b",{"_index":985,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["b.index",{"_index":1171,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["b.starttim",{"_index":2013,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["b.valu",{"_index":986,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bannerrout",{"_index":1618,"title":{},"body":{"components/NavComponent.html":{}}}],["bannerroute.capt",{"_index":1666,"title":{},"body":{"components/NavComponent.html":{}}}],["bargraphbaseconfig",{"_index":931,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bargraphconfig",{"_index":711,"title":{"interfaces/BarGraphConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"classes/AddNewItem.html":{},"components/AppComponent.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/PieChartConfig.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"interfaces/RouteEntry.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["bootstrap",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["brand",{"_index":553,"title":{},"body":{"components/AuthFormComponent.html":{},"dependencies.html":{}}}],["break",{"_index":1273,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["brows",{"_index":2584,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["builder",{"_index":526,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["c",{"_index":2524,"title":{},"body":{"license.html":{}}}],["canactiv",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(_rout",{"_index":572,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":752,"title":{},"body":{"classes/CancelTimer.html":{},"components/EditDisplayNameComponent.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{}}}],["cancel_tim",{"_index":741,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["canceltim",{"_index":738,"title":{"classes/CancelTimer.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["caption",{"_index":1632,"title":{},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["case",{"_index":1271,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["catcherror",{"_index":320,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["catcherror(err",{"_index":311,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["chang",{"_index":1375,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["changedetect",{"_index":135,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["changedetectionstrategi",{"_index":184,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":136,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["charg",{"_index":2532,"title":{},"body":{"license.html":{}}}],["chart",{"_index":996,"title":{},"body":{"modules/DashboardModule.html":{},"dependencies.html":{},"index.html":{}}}],["children",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["claim",{"_index":2574,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["clearstat",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["clearstate(reduc",{"_index":2489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cli",{"_index":2497,"title":{},"body":{"index.html":{}}}],["client",{"_index":1101,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["close",{"_index":1639,"title":{},"body":{"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["cluster_appmodul",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":587,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":588,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":589,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":590,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_completionmodul",{"_index":849,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_completionmodule_declar",{"_index":850,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_completionmodule_import",{"_index":851,"title":{},"body":{"modules/CompletionModule.html":{}}}],["cluster_completionmodule_provid",{"_index":852,"title":{},"body":{"modules/CompletionModule.html":{},"overview.html":{}}}],["cluster_dashboardmodul",{"_index":990,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":991,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":992,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_homemodul",{"_index":1459,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declar",{"_index":1460,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_librarymodul",{"_index":1503,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_declar",{"_index":1504,"title":{},"body":{"modules/LibraryModule.html":{},"overview.html":{}}}],["cluster_librarymodule_import",{"_index":1505,"title":{},"body":{"modules/LibraryModule.html":{}}}],["cluster_profilemodul",{"_index":1761,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declar",{"_index":1762,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_provid",{"_index":1763,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":1947,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":1948,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":1949,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_trackermodul",{"_index":2326,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["cluster_trackermodule_declar",{"_index":2327,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["cluster_trackermodule_import",{"_index":2328,"title":{},"body":{"modules/TrackerModule.html":{}}}],["cluster_trackermodule_provid",{"_index":2329,"title":{},"body":{"modules/TrackerModule.html":{},"overview.html":{}}}],["colorschem",{"_index":728,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["colorsetnam",{"_index":2602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":809,"title":{},"body":{"components/CompletionComponent.html":{},"injectables/ElapsedTimeService.html":{},"injectables/UserService.html":{}}}],["combinelatest(currenttim",{"_index":1088,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["combinelatest(this.historygroup",{"_index":831,"title":{},"body":{"components/CompletionComponent.html":{}}}],["combinelatest(us",{"_index":2439,"title":{},"body":{"injectables/UserService.html":{}}}],["commonmodul",{"_index":594,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["complet",{"_index":83,"title":{},"body":{"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"components/SpinnerComponent.html":{},"interfaces/State-14.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["complete.act",{"_index":1596,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-13.html":{}}}],["complete.actions.t",{"_index":76,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["complete.actions.ts:11",{"_index":1898,"title":{},"body":{"classes/SetEndTime.html":{}}}],["complete.actions.ts:12",{"_index":1899,"title":{},"body":{"classes/SetEndTime.html":{}}}],["complete.actions.ts:17",{"_index":1856,"title":{},"body":{"classes/Remove.html":{}}}],["complete.actions.ts:18",{"_index":1857,"title":{},"body":{"classes/Remove.html":{}}}],["complete.actions.ts:23",{"_index":1515,"title":{},"body":{"classes/LoadItems.html":{}}}],["complete.actions.ts:24",{"_index":1516,"title":{},"body":{"classes/LoadItems.html":{}}}],["complete.actions.ts:29",{"_index":78,"title":{},"body":{"classes/AddNewItem.html":{}}}],["complete.actions.ts:30",{"_index":79,"title":{},"body":{"classes/AddNewItem.html":{}}}],["complete.actions.ts:5",{"_index":1926,"title":{},"body":{"classes/SetShowExtra.html":{}}}],["complete.actions.ts:6",{"_index":1927,"title":{},"body":{"classes/SetShowExtra.html":{}}}],["complete.models.t",{"_index":1610,"title":{},"body":{"interfaces/MarkCompleteItem.html":{}}}],["complete.reduc",{"_index":881,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["complete.reducer.t",{"_index":1594,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{},"miscellaneous/functions.html":{}}}],["completedcount",{"_index":2198,"title":{},"body":{"components/TabsComponent.html":{}}}],["completeddisplaydata",{"_index":757,"title":{"interfaces/CompletedDisplayData.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/PlayingDisplayData.html":{}}}],["completeditem",{"_index":760,"title":{"interfaces/CompletedItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{}}}],["completeditemcompon",{"_index":236,"title":{"components/CompletedItemComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["completedprogerssitem",{"_index":839,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completion'},{'nam",{"_index":239,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["completion.compon",{"_index":858,"title":{},"body":{"modules/CompletionModule.html":{}}}],["completion.component.html",{"_index":794,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completion.component.scss",{"_index":793,"title":{},"body":{"components/CompletionComponent.html":{}}}],["completioncompon",{"_index":238,"title":{"components/CompletionComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["completionmodul",{"_index":386,"title":{"modules/CompletionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules.html":{},"overview.html":{}}}],["completionselector",{"_index":810,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["completionst",{"_index":811,"title":{"interfaces/CompletionState.html":{}},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["completionstor",{"_index":798,"title":{},"body":{"components/CompletionComponent.html":{}}}],["compon",{"_index":125,"title":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthRoutingModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["component_templ",{"_index":228,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["components/add",{"_index":859,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/auth",{"_index":596,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/complet",{"_index":861,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/edit",{"_index":1765,"title":{},"body":{"modules/ProfileModule.html":{}}}],["components/forgot",{"_index":598,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/graph",{"_index":997,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/header/header.compon",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{}}}],["components/histori",{"_index":2335,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/history/history.compon",{"_index":2337,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/load",{"_index":2338,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/lock",{"_index":2340,"title":{},"body":{"modules/TrackerModule.html":{}}}],["components/login/login.compon",{"_index":601,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/nav/nav.compon",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["components/play",{"_index":863,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/register/register.compon",{"_index":602,"title":{},"body":{"modules/AuthModule.html":{}}}],["components/spinner/spinner.compon",{"_index":1951,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/tabs/tabs.compon",{"_index":865,"title":{},"body":{"modules/CompletionModule.html":{}}}],["components/tim",{"_index":1000,"title":{},"body":{"modules/DashboardModule.html":{}}}],["components/timer/timer.compon",{"_index":2341,"title":{},"body":{"modules/TrackerModule.html":{}}}],["condit",{"_index":2556,"title":{},"body":{"license.html":{}}}],["config",{"_index":2211,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["confirm",{"_index":1048,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["connect",{"_index":2582,"title":{},"body":{"license.html":{}}}],["const",{"_index":35,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(act",{"_index":297,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"classes/Error.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["constructor(addplay",{"_index":1879,"title":{},"body":{"classes/Save.html":{}}}],["constructor(af",{"_index":1439,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["constructor(afauth",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(amount",{"_index":1466,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["constructor(attemptinglogin",{"_index":1892,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["constructor(build",{"_index":523,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["constructor(displaynam",{"_index":1923,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["constructor(email",{"_index":1091,"title":{},"body":{"classes/EmailLogin.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{}}}],["constructor(gam",{"_index":1900,"title":{},"body":{"classes/SetGame.html":{},"classes/SetGame-1.html":{}}}],["constructor(info",{"_index":1884,"title":{},"body":{"classes/SaveTimerInfo.html":{},"classes/SetTimerInfo.html":{}}}],["constructor(item",{"_index":15,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfoSucceeded.html":{}}}],["constructor(itemid",{"_index":77,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["constructor(payload",{"_index":1611,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["constructor(platform",{"_index":1537,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{}}}],["constructor(priv",{"_index":200,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["constructor(profil",{"_index":1551,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["constructor(publ",{"_index":39,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["constructor(sharedstor",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{}}}],["constructor(starttim",{"_index":1928,"title":{},"body":{"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{}}}],["constructor(stor",{"_index":155,"title":{},"body":{"components/AddPlayingComponent.html":{},"guards/AuthGuard.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/UserService.html":{}}}],["constructor(tab",{"_index":1942,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["constructor(trackerstor",{"_index":2300,"title":{},"body":{"components/TrackerComponent.html":{}}}],["constructor(us",{"_index":695,"title":{},"body":{"classes/Authenticated.html":{}}}],["constructor(userid",{"_index":1510,"title":{},"body":{"classes/LoadHistoryItems.html":{},"classes/LoadProfile.html":{},"classes/LoadProgressItems.html":{},"classes/LoadTimerInfo.html":{},"classes/MarkComplete.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveProgressItem.html":{},"classes/SetProfileDisplayName.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateGame.html":{},"classes/UpdatePlatform.html":{}}}],["constructor(userservic",{"_index":1625,"title":{},"body":{"components/NavComponent.html":{}}}],["constructor(validationmessag",{"_index":1937,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["contract",{"_index":2578,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2517,"title":{},"body":{"index.html":{}}}],["cool",{"_index":2617,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["copi",{"_index":2535,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2523,"title":{},"body":{"license.html":{}}}],["core",{"_index":1878,"title":{},"body":{"interfaces/RouteEntry.html":{},"dependencies.html":{}}}],["createentityadapt",{"_index":1349,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["createfeatureselector",{"_index":669,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"interfaces/State-14.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/TrackerState.html":{}}}],["createfeatureselector('auth",{"_index":678,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["createfeatureselector('complet",{"_index":888,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["createfeatureselector('dashboard",{"_index":1014,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["createfeatureselector('error",{"_index":920,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["createfeatureselector('profil",{"_index":1782,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["createfeatureselector('shar",{"_index":1981,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createfeatureselector('track",{"_index":2133,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector",{"_index":670,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"interfaces/State-14.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selectallhistori",{"_index":2002,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectallprogress",{"_index":1995,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectauthst",{"_index":680,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["createselector(_selectcompletionst",{"_index":890,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["createselector(_selectdashboardfeatur",{"_index":1016,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["createselector(_selectdaterang",{"_index":1019,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["createselector(_selectdisplay",{"_index":2138,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selecterrorst",{"_index":922,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["createselector(_selecthistori",{"_index":2024,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selecthistoryitem",{"_index":2012,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplatform",{"_index":2029,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplatformsopt",{"_index":2032,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectplay",{"_index":897,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["createselector(_selectprofilest",{"_index":1784,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["createselector(_selectsharedst",{"_index":1983,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectsortedhistoryitem",{"_index":2016,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selectstatu",{"_index":688,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["createselector(_selecttab",{"_index":902,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["createselector(_selecttim",{"_index":2036,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["createselector(_selecttrackerst",{"_index":2135,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["createselector(_selectus",{"_index":685,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["currentrout",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["currentroute.indexof('/app",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["currentst",{"_index":1374,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["currenttim",{"_index":1073,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["customrouterstateseri",{"_index":441,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"modules/AppModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["d3",{"_index":2501,"title":{},"body":{"index.html":{}}}],["damag",{"_index":2575,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":251,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"components/SpinnerComponent.html":{},"interfaces/State-11.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["dashboard'},{'nam",{"_index":241,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["dashboard.compon",{"_index":1003,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboard.component.html",{"_index":930,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":929,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcompon",{"_index":240,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":387,"title":{"modules/DashboardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardselector",{"_index":960,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["dashboardst",{"_index":961,"title":{"interfaces/DashboardState.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["dashboardstor",{"_index":940,"title":{},"body":{"components/DashboardComponent.html":{}}}],["data",{"_index":2212,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["data.models.t",{"_index":759,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["data.util",{"_index":820,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["data.utils.t",{"_index":2607,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databaseurl",{"_index":1105,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["datat",{"_index":1508,"title":{},"body":{"modules/LibraryModule.html":{},"dependencies.html":{}}}],["date",{"_index":153,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"dependencies.html":{}}}],["date().gettim",{"_index":1085,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["date(datestrings[0]).gettim",{"_index":1423,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["date(datestrings[1]).gettim",{"_index":1424,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["date(historyentry.endtim",{"_index":2006,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["date(historyentry.starttim",{"_index":2005,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["date(now",{"_index":2263,"title":{},"body":{"components/TimerComponent.html":{}}}],["date(starttimeel.value).gettim",{"_index":2261,"title":{},"body":{"components/TimerComponent.html":{}}}],["date:'m/d/i",{"_index":221,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["date:'mm/d/yyyi",{"_index":1498,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date:'shorttim",{"_index":1428,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["date:\\'m/d/i",{"_index":229,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["date:\\'mm/d/yyyi",{"_index":1499,"title":{},"body":{"components/LibraryComponent.html":{}}}],["date:\\'shorttim",{"_index":1431,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["dategraphconfig",{"_index":932,"title":{},"body":{"components/DashboardComponent.html":{}}}],["datelist",{"_index":969,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["daterang",{"_index":1006,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/SharedState.html":{},"interfaces/State-11.html":{},"interfaces/State-5.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["daterange.endday",{"_index":1021,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["daterange.typ",{"_index":1023,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["daterangeel",{"_index":1266,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["daterangeel.valu",{"_index":1270,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["daterangetyp",{"_index":933,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{},"miscellaneous/typealiases.html":{}}}],["datestr",{"_index":1420,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["datestring.trim",{"_index":1422,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["datetim",{"_index":2334,"title":{},"body":{"modules/TrackerModule.html":{},"dependencies.html":{}}}],["day",{"_index":1471,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["deal",{"_index":2539,"title":{},"body":{"license.html":{}}}],["declar",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["decor",{"_index":315,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["default",{"_index":24,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"interfaces/ProfileState.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["defin",{"_index":17,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["deletehistoryitem",{"_index":1434,"title":{},"body":{"injectables/HistoryService.html":{}}}],["deletehistoryitem(userid",{"_index":1138,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["depend",{"_index":375,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":2504,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2503,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dictionari",{"_index":1025,"title":{"interfaces/Dictionary.html":{}},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["direct",{"_index":226,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["display",{"_index":245,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-19.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["display.entriestoshow",{"_index":2139,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["display.reduc",{"_index":2129,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["displaydata",{"_index":776,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["displaydata.completeditem.endtim",{"_index":791,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.gam",{"_index":786,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.platform",{"_index":787,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.starttim",{"_index":790,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.completeditem.timeplay",{"_index":789,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["displaydata.startentrydata.gam",{"_index":1709,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.startentrydata.platform",{"_index":1710,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.startentrydata.starttim",{"_index":1712,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaydata.timeplay",{"_index":1711,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["displaynam",{"_index":1055,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"interfaces/State-16.html":{},"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["displaynameel",{"_index":1047,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["displaynameel.valu",{"_index":1056,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["distribut",{"_index":2548,"title":{},"body":{"license.html":{}}}],["document",{"_index":2538,"title":{},"body":{"license.html":{}}}],["dom",{"_index":128,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["domain",{"_index":729,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["doughnut",{"_index":737,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["dynam",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["eachday",{"_index":1008,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["eachday(daterange.startday",{"_index":1020,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["edit",{"_index":244,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["editdisplaynamecompon",{"_index":242,"title":{"components/EditDisplayNameComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["editnam",{"_index":1724,"title":{},"body":{"components/ProfileComponent.html":{}}}],["effect",{"_index":316,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["effects/add",{"_index":866,"title":{},"body":{"modules/CompletionModule.html":{}}}],["effects/auth.effect",{"_index":603,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/history.effect",{"_index":2343,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/platforms.effect",{"_index":2344,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/profile.effect",{"_index":1768,"title":{},"body":{"modules/ProfileModule.html":{}}}],["effects/progress.effect",{"_index":869,"title":{},"body":{"modules/CompletionModule.html":{}}}],["effects/status.effect",{"_index":605,"title":{},"body":{"modules/AuthModule.html":{}}}],["effects/timer.effect",{"_index":2345,"title":{},"body":{"modules/TrackerModule.html":{}}}],["effects/user.effect",{"_index":607,"title":{},"body":{"modules/AuthModule.html":{}}}],["effectsmodul",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{}}}],["effectsmodule.forfeatur",{"_index":613,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["effectsmodule.forfeature([profileeffect",{"_index":1770,"title":{},"body":{"modules/ProfileModule.html":{}}}],["effectsmodule.forroot",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":1393,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["el.click",{"_index":1426,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["elaps",{"_index":67,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["elapsedtim",{"_index":1062,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["elapsedtime:item.endtim",{"_index":1430,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["elapsedtimeel",{"_index":1398,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimeel.valu",{"_index":1419,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimeel.value.split('~').map(datestr",{"_index":1421,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["elapsedtimepip",{"_index":1059,"title":{"pipes/ElapsedTimePipe.html":{}},"body":{"pipes/ElapsedTimePipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["elapsedtimeservic",{"_index":341,"title":{"injectables/ElapsedTimeService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ElapsedTimeService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["element",{"_index":225,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"dependencies.html":{}}}],["elements/googletagmanag",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":557,"title":{},"body":{"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"interfaces/State-9.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["email_login",{"_index":708,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["emailauth",{"_index":519,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emailauthev",{"_index":554,"title":{"interfaces/EmailAuthEvent.html":{}},"body":{"components/AuthFormComponent.html":{},"interfaces/EmailAuthEvent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emaillogin",{"_index":709,"title":{"classes/EmailLogin.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["emaillogin(ev",{"_index":1574,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailsignup",{"_index":1843,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailsignup(ev",{"_index":1848,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emitemailauth",{"_index":511,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emitfacebookauth",{"_index":512,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emitfinishedit",{"_index":1037,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["emitgoogleauth",{"_index":513,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["emittwitterauth",{"_index":514,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["end",{"_index":91,"title":{},"body":{"classes/AddNewItem.html":{},"components/CompletedItemComponent.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["enddat",{"_index":767,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["endday",{"_index":2061,"title":{},"body":{"interfaces/State-10.html":{}}}],["endentryid",{"_index":770,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/MarkCompletePayload.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-4.html":{}}}],["enditem",{"_index":1702,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["enditem.id",{"_index":1707,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["endlastmonth",{"_index":2091,"title":{},"body":{"interfaces/State-10.html":{}}}],["endlastweek",{"_index":2078,"title":{},"body":{"interfaces/State-10.html":{}}}],["endmonth",{"_index":2086,"title":{},"body":{"interfaces/State-10.html":{}}}],["endofmonth",{"_index":2063,"title":{},"body":{"interfaces/State-10.html":{}}}],["endofmonth(now",{"_index":2087,"title":{},"body":{"interfaces/State-10.html":{}}}],["endofweek",{"_index":2064,"title":{},"body":{"interfaces/State-10.html":{}}}],["endofweek(now",{"_index":2073,"title":{},"body":{"interfaces/State-10.html":{}}}],["endtim",{"_index":93,"title":{},"body":{"classes/AddNewItem.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressItem.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["endtimeel",{"_index":1692,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["endtimeinm",{"_index":1065,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["endweek",{"_index":2072,"title":{},"body":{"interfaces/State-10.html":{}}}],["entiti",{"_index":1996,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entities.filter(ent",{"_index":1997,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entity.endentryid",{"_index":1796,"title":{},"body":{"injectables/ProgressEffects.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["entity.id",{"_index":1798,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["entityadapt",{"_index":1350,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["entityst",{"_index":1351,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["entri",{"_index":1380,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entriestoshow",{"_index":2121,"title":{},"body":{"interfaces/State-18.html":{},"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["entry'},{'nam",{"_index":261,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["entry.compon",{"_index":2336,"title":{},"body":{"modules/TrackerModule.html":{}}}],["entry.component.html",{"_index":1382,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.scss",{"_index":1381,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.t",{"_index":1379,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:23",{"_index":1563,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:24",{"_index":1567,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:25",{"_index":1566,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:28",{"_index":1562,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:29",{"_index":1387,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:30",{"_index":1388,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:31",{"_index":1389,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:32",{"_index":1386,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:33",{"_index":1404,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:34",{"_index":1403,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:35",{"_index":1564,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["entry.component.ts:37",{"_index":1385,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:40",{"_index":1390,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:44",{"_index":1399,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:54",{"_index":1401,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:62",{"_index":1394,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:72",{"_index":1395,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:76",{"_index":1397,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry.component.ts:91",{"_index":1392,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["entry/histori",{"_index":1378,"title":{},"body":{"components/HistoryEntryComponent.html":{},"modules/TrackerModule.html":{}}}],["entry/lock",{"_index":1561,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"modules/TrackerModule.html":{}}}],["environ",{"_index":360,"title":{"interfaces/Environment.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"overview.html":{}}}],["environment.adsense.cli",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.adsense.navadslot",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.product",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["err.messag",{"_index":314,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["error",{"_index":914,"title":{"classes/Error.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Error.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"miscellaneous/typealiases.html":{}}}],["error.reduc",{"_index":913,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["event",{"_index":531,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["event.password",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["eventemitt",{"_index":532,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{}}}],["exact",{"_index":1645,"title":{},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["explodeslic",{"_index":736,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["express",{"_index":2564,"title":{},"body":{"license.html":{}}}],["extend",{"_index":713,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/PieChartConfig.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["extra",{"_index":86,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["faban",{"_index":2247,"title":{},"body":{"components/TimerComponent.html":{}}}],["fabar",{"_index":1638,"title":{},"body":{"components/NavComponent.html":{}}}],["facebook",{"_index":546,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["facebook_login",{"_index":704,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["facebookauth",{"_index":520,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["facebooklogin",{"_index":618,"title":{"classes/FacebookLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["facebooksignup",{"_index":1844,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fachartbar",{"_index":1646,"title":{},"body":{"components/NavComponent.html":{}}}],["facheck",{"_index":1049,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/PlayingItemComponent.html":{}}}],["faclipboardlist",{"_index":1652,"title":{},"body":{"components/NavComponent.html":{}}}],["faclock",{"_index":1655,"title":{},"body":{"components/NavComponent.html":{}}}],["faedit",{"_index":1733,"title":{},"body":{"components/ProfileComponent.html":{}}}],["fafacebook",{"_index":547,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["fagoogl",{"_index":545,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["falist",{"_index":1649,"title":{},"body":{"components/NavComponent.html":{}}}],["falock",{"_index":1565,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["fals",{"_index":527,"title":{},"body":{"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/State-8.html":{}}}],["faplay",{"_index":1402,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["faplaycircl",{"_index":2244,"title":{},"body":{"components/TimerComponent.html":{}}}],["faplussquar",{"_index":181,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["fasignoutalt",{"_index":1636,"title":{},"body":{"components/NavComponent.html":{}}}],["fastopcircl",{"_index":2246,"title":{},"body":{"components/TimerComponent.html":{}}}],["fatim",{"_index":1050,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["fatrash",{"_index":781,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["fatwitt",{"_index":549,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["features/auth/auth.modul",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["features/auth/components/login/login.compon",{"_index":461,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/auth/components/register/register.compon",{"_index":462,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/auth/guards/auth.guard",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["features/auth/model",{"_index":1661,"title":{},"body":{"components/NavComponent.html":{}}}],["features/auth/services/user.servic",{"_index":1660,"title":{},"body":{"components/NavComponent.html":{}}}],["features/completion/completion.compon",{"_index":463,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/completion/completion.modul",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["features/dashboard/dashboard.compon",{"_index":464,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/dashboard/dashboard.modul",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["features/home/home.compon",{"_index":465,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/home/home.modul",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["features/library/library.compon",{"_index":466,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/library/library.modul",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["features/profile/profile.compon",{"_index":467,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/profile/profile.modul",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["features/tracker/tracker.compon",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["features/tracker/tracker.modul",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"license.html":{}}}],["filter.util",{"_index":816,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["filteredgroup",{"_index":2318,"title":{},"body":{"components/TrackerComponent.html":{}}}],["filterplatform",{"_index":813,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterplatforms(group",{"_index":833,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterstarttim",{"_index":814,"title":{},"body":{"components/CompletionComponent.html":{}}}],["filterstarttimes(group",{"_index":835,"title":{},"body":{"components/CompletionComponent.html":{}}}],["findmatchinghistoryentri",{"_index":197,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["findmatchinghistoryentry(this.gamegroup",{"_index":214,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["finishedit",{"_index":1039,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["fire",{"_index":2618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["firebas",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"dependencies.html":{},"index.html":{}}}],["firebase.auth.facebookauthprovid",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.googleauthprovid",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase.auth.twitterauthprovid",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/app",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["firebase/auth",{"_index":2412,"title":{},"body":{"injectables/UserEffects.html":{}}}],["firebaseconfig",{"_index":1099,"title":{"interfaces/FirebaseConfig.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["firestorehistoryitem",{"_index":1114,"title":{"interfaces/FirestoreHistoryItem.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["firestoreplatformsitem",{"_index":1159,"title":{"interfaces/FirestorePlatformsItem.html":{}},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["firestoreprofileitem",{"_index":1174,"title":{"interfaces/FirestoreProfileItem.html":{}},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["firestoreprogressitem",{"_index":1188,"title":{"interfaces/FirestoreProgressItem.html":{}},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["firestoretimeritem",{"_index":1208,"title":{"interfaces/FirestoreTimerItem.html":{}},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["first",{"_index":1118,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"injectables/TimerService.html":{}}}],["firstplay",{"_index":1501,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["fit",{"_index":2567,"title":{},"body":{"license.html":{}}}],["flame",{"_index":2622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fn",{"_index":1009,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"dependencies.html":{}}}],["follow",{"_index":2555,"title":{},"body":{"license.html":{}}}],["fontawesom",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"index.html":{}}}],["fontawesomemodul",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{}}}],["forest",{"_index":2624,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["forgot",{"_index":248,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["forgotpassword",{"_index":615,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["forgotpasswordcompon",{"_index":247,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["form",{"_index":507,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form'},{'nam",{"_index":235,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["form.compon",{"_index":597,"title":{},"body":{"modules/AuthModule.html":{}}}],["form.component.html",{"_index":509,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.scss",{"_index":508,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.t",{"_index":506,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:18",{"_index":529,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:19",{"_index":528,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:20",{"_index":530,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:21",{"_index":533,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:22",{"_index":535,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:23",{"_index":534,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:24",{"_index":536,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:25",{"_index":543,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:26",{"_index":550,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:30",{"_index":525,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:33",{"_index":541,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:46",{"_index":537,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:55",{"_index":539,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:59",{"_index":538,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form.component.ts:63",{"_index":540,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["form/auth",{"_index":505,"title":{},"body":{"components/AuthFormComponent.html":{},"modules/AuthModule.html":{}}}],["formatd",{"_index":1970,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["formatdate(item.daterange[0",{"_index":2019,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["formatelapsedtim",{"_index":1069,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{}}}],["formatelapsedtime(starttimeinm",{"_index":1070,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["formatelapsedtime(timerinfo.starttim",{"_index":1089,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["formattim",{"_index":944,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/TimePipe.html":{}}}],["formattime(timeinsecond",{"_index":2220,"title":{},"body":{"pipes/TimePipe.html":{}}}],["formbuild",{"_index":524,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["formgroup",{"_index":542,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["formsmodul",{"_index":609,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["fortawesome/angular",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/ProfileModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":1877,"title":{},"body":{"interfaces/RouteEntry.html":{},"dependencies.html":{}}}],["fortawesome/fre",{"_index":186,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["found",{"_index":219,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/PlayingItemComponent.html":{}}}],["free",{"_index":2531,"title":{},"body":{"license.html":{}}}],["from(this.afauth.auth.createuserwithemailandpassword(email",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.sendpasswordresetemail(email",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signinwithemailandpassword(email",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.afauth.auth.signout",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.facebooklogin",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.googlelogin",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(this.twitterlogin",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{}}}],["fromdaterang",{"_index":1010,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["fromdaterange.reduc",{"_index":1012,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["fromdaterange.st",{"_index":1007,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["fromdisplay",{"_index":2128,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromdisplay.reduc",{"_index":2131,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromdisplay.st",{"_index":2130,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["fromerror",{"_index":912,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromerror.reduc",{"_index":918,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromerror.st",{"_index":916,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromhistori",{"_index":1962,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.adapter.getselectors(_selecthistori",{"_index":2000,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.reduc",{"_index":1976,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromhistory.st",{"_index":1958,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["frommarkcomplet",{"_index":880,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["frommarkcomplete.adapter.getselectors(_selectmarkcomplet",{"_index":900,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["frommarkcomplete.reduc",{"_index":885,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["frommarkcomplete.st",{"_index":876,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromplatform",{"_index":1964,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplatforms.reduc",{"_index":1977,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplatforms.st",{"_index":1959,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromplay",{"_index":878,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromplaying.reduc",{"_index":884,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromplaying.st",{"_index":875,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromprofil",{"_index":1778,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["fromprofile.reduc",{"_index":1780,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["fromprofile.st",{"_index":1777,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["fromprogress",{"_index":1966,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.adapter.getselectors(_selectprogress",{"_index":1993,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.reduc",{"_index":1978,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromprogress.st",{"_index":1960,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromrout",{"_index":911,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{}}}],["fromrouter.routerreduc",{"_index":917,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromrouter.routerreducerst",{"_index":915,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromrouter.routerstateseri",{"_index":925,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["fromstatu",{"_index":671,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromstatus.reduc",{"_index":676,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromstatus.st",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromtab",{"_index":882,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromtab.reduc",{"_index":886,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromtab.st",{"_index":877,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["fromtim",{"_index":1968,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromtimer.reduc",{"_index":1979,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromtimer.st",{"_index":1961,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["fromus",{"_index":673,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromuser.reduc",{"_index":675,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["fromuser.st",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["full",{"_index":477,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fun",{"_index":2514,"title":{},"body":{"index.html":{}}}],["function",{"_index":724,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["furnish",{"_index":2553,"title":{},"body":{"license.html":{}}}],["game",{"_index":56,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompletePayload.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressItem.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"index.html":{}}}],["gamecount",{"_index":1285,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["gamegraphconfig",{"_index":934,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gamegroup",{"_index":154,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/LibraryComponent.html":{},"components/PlayingItemComponent.html":{}}}],["get",{"_index":2490,"title":{"index.html":{},"license.html":{}},"body":{}}],["get_us",{"_index":698,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["getauthenticatedact",{"_index":2363,"title":{},"body":{"injectables/UserEffects.html":{}}}],["getauthenticatedaction(authdata",{"_index":2366,"title":{},"body":{"injectables/UserEffects.html":{}}}],["getauthst",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcompleteddisplaydataitem",{"_index":817,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getcompleteddisplaydataitems(completedprogerssitem",{"_index":846,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getcurrenttim",{"_index":1074,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getcurrenttimed",{"_index":2224,"title":{},"body":{"components/TimerComponent.html":{}}}],["getdisplaynam",{"_index":2431,"title":{},"body":{"injectables/UserService.html":{}}}],["getdisplayname(us",{"_index":2440,"title":{},"body":{"injectables/UserService.html":{}}}],["getelapsedtim",{"_index":1075,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getelapsedtime(inactivevalu",{"_index":1078,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["getemail",{"_index":2432,"title":{},"body":{"injectables/UserService.html":{}}}],["getemail(us",{"_index":2441,"title":{},"body":{"injectables/UserService.html":{}}}],["getenditem",{"_index":1696,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["getenditem(this.gamegroup",{"_index":1703,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["getgraphdata",{"_index":965,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getgraphdata(groupingsbyplatform",{"_index":979,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gethistoryent",{"_index":1435,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistoryentity(histori",{"_index":1153,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["gethistorygroupinglist",{"_index":1973,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorygroupinglist(historylistitemsmap",{"_index":2020,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorylist",{"_index":1436,"title":{},"body":{"injectables/HistoryService.html":{}}}],["gethistorylist(userid",{"_index":1127,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["gethistorylistitemsmap",{"_index":1974,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["gethistorylistitemsmap(item",{"_index":2018,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getimgsrc",{"_index":2433,"title":{},"body":{"injectables/UserService.html":{}}}],["getimgsrc(us",{"_index":2442,"title":{},"body":{"injectables/UserService.html":{}}}],["getmarkcompleteent",{"_index":1608,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["getmarkcompleteentity(itemid",{"_index":1606,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{}}}],["getnewhistoryitem",{"_index":1437,"title":{},"body":{"injectables/HistoryService.html":{}}}],["getnewhistoryitem(info",{"_index":1146,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["getnewprogressitem",{"_index":1830,"title":{},"body":{"injectables/ProgressService.html":{}}}],["getnewprogressitem(addplay",{"_index":1204,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getnowtim",{"_index":1224,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["getnumentriestoshow",{"_index":1488,"title":{},"body":{"components/LibraryComponent.html":{}}}],["getnumentriestoshow(window.innerheight",{"_index":1497,"title":{},"body":{"components/LibraryComponent.html":{}}}],["getpaddedgraphdata",{"_index":966,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpaddedgraphdata(groupingsbyd",{"_index":977,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getplatformsopt",{"_index":1165,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["getplayingdisplaydataitem",{"_index":818,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getplayingdisplaydataitems(playingprogressitem",{"_index":844,"title":{},"body":{"components/CompletionComponent.html":{}}}],["getprofil",{"_index":1771,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofile(userid",{"_index":1180,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["getprogresslist",{"_index":1831,"title":{},"body":{"injectables/ProgressService.html":{}}}],["getprogresslist(userid",{"_index":1194,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getproviderfrom",{"_index":2434,"title":{},"body":{"injectables/UserService.html":{}}}],["getproviderfrom(user.providerid",{"_index":2443,"title":{},"body":{"injectables/UserService.html":{}}}],["getsortedgraphdata",{"_index":967,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getsortedgraphdata(groupingsbygam",{"_index":981,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getstat",{"_index":2068,"title":{},"body":{"interfaces/State-10.html":{}}}],["getstate(startlastmonth",{"_index":2095,"title":{},"body":{"interfaces/State-10.html":{}}}],["getstate(startlastweek",{"_index":2082,"title":{},"body":{"interfaces/State-10.html":{}}}],["getstate(startmonth",{"_index":2088,"title":{},"body":{"interfaces/State-10.html":{}}}],["getstate(startweek",{"_index":2074,"title":{},"body":{"interfaces/State-10.html":{}}}],["gettimerinfo",{"_index":2286,"title":{},"body":{"injectables/TimerService.html":{}}}],["gettimerinfo(userid",{"_index":1220,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["getuniquefrom",{"_index":1971,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getuniquefrom(item",{"_index":2027,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["getupdatedst",{"_index":1373,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["getupdatedstate(action.payload",{"_index":1370,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{}}}],["getus",{"_index":699,"title":{"classes/GetUser.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["getuserinfo",{"_index":2422,"title":{},"body":{"injectables/UserService.html":{}}}],["getuseritemcollect",{"_index":1438,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ProgressService.html":{}}}],["getuseritemcollection(userid",{"_index":1151,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid",{"_index":1120,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid(addplaying.userid",{"_index":1205,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["getuuid(info.userid",{"_index":1147,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["getvalidationmessag",{"_index":2193,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["getvalidationmessage(act",{"_index":2175,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["getvaluefromngselect",{"_index":1406,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["getvaluefromngselect(this.gam",{"_index":1410,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["googl",{"_index":544,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["google_login",{"_index":702,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["googleauth",{"_index":521,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["googlelogin",{"_index":620,"title":{"classes/GoogleLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["googlesignup",{"_index":1845,"title":{},"body":{"components/RegisterComponent.html":{}}}],["googletagmanag",{"_index":1095,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["gradient",{"_index":731,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["grant",{"_index":2530,"title":{},"body":{"license.html":{}}}],["graph",{"_index":252,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules.html":{}}}],["graph'},{'nam",{"_index":285,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["graph.compon",{"_index":1002,"title":{},"body":{"modules/DashboardModule.html":{}}}],["graph.component.html",{"_index":2210,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.scss",{"_index":2209,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.t",{"_index":2208,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:13",{"_index":2214,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:14",{"_index":2213,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph.component.ts:17",{"_index":2215,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graph/tim",{"_index":1001,"title":{},"body":{"modules/DashboardModule.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graphconfig",{"_index":714,"title":{"interfaces/GraphConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["graphdataitem",{"_index":725,"title":{"interfaces/GraphDataItem.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"interfaces/PieChartConfig.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["graphdatamodifi",{"_index":2605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["graphtooltipcompon",{"_index":250,"title":{"components/GraphTooltipComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["group",{"_index":832,"title":{},"body":{"components/CompletionComponent.html":{},"components/HistoryComponent.html":{}}}],["group.key",{"_index":1299,"title":{},"body":{"components/HistoryComponent.html":{}}}],["group.totaltim",{"_index":1300,"title":{},"body":{"components/HistoryComponent.html":{}}}],["groupings.map(item",{"_index":824,"title":{},"body":{"components/CompletionComponent.html":{}}}],["groupingsbyd",{"_index":971,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupingsbygam",{"_index":975,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupingsbyplatform",{"_index":973,"title":{},"body":{"components/DashboardComponent.html":{}}}],["guard",{"_index":569,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"overview.html":{}}}],["hasmoretodisplay",{"_index":2310,"title":{},"body":{"components/TrackerComponent.html":{}}}],["hasmoretodisplay(historygroup",{"_index":2321,"title":{},"body":{"components/TrackerComponent.html":{}}}],["header",{"_index":1253,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["header'},{'nam",{"_index":255,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["header.component.html",{"_index":1255,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["header.component.scss",{"_index":1254,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}}}],["headercompon",{"_index":254,"title":{"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["headless",{"_index":2510,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":2529,"title":{},"body":{"license.html":{}}}],["hh:mm",{"_index":222,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["hidenavcont",{"_index":1619,"title":{},"body":{"components/NavComponent.html":{}}}],["histori",{"_index":36,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["histories.map(histori",{"_index":1131,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history'},{'nam",{"_index":259,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["history.component.html",{"_index":1292,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.component.scss",{"_index":1291,"title":{},"body":{"components/HistoryComponent.html":{}}}],["history.endtim",{"_index":1158,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.gam",{"_index":1155,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.id",{"_index":1154,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.load",{"_index":2025,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["history.platform",{"_index":1156,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["history.reduc",{"_index":1963,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["history.starttim",{"_index":1157,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historyact",{"_index":492,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{}}}],["historyactions.addnewhistoryitem(action.item",{"_index":1325,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.loadhistoryitem",{"_index":1308,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.loadhistoryitems(action.user.uid",{"_index":487,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["historyactions.loadhistoryitemssucceeded(data",{"_index":1312,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.removehistoryitem",{"_index":1316,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.removehistoryitem(this.userid",{"_index":1418,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.removehistoryitemsucceeded(itemid",{"_index":1320,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateelapsedtim",{"_index":1328,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateelapsedtime(this.userid",{"_index":1425,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updateelapsedtimesucceeded(payload",{"_index":1332,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updategam",{"_index":1336,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updategame(this.userid",{"_index":1411,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updategamesucceeded(payload",{"_index":1338,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateplatform",{"_index":1342,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historyactions.updateplatform(this.userid",{"_index":1412,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["historyactions.updateplatformsucceeded(payload",{"_index":1344,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["historycollect",{"_index":1123,"title":{"interfaces/HistoryCollection.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historycompon",{"_index":257,"title":{"components/HistoryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historyeffect",{"_index":1304,"title":{"injectables/HistoryEffects.html":{}},"body":{"injectables/HistoryEffects.html":{},"modules/TrackerModule.html":{}}}],["historyent",{"_index":16,"title":{"interfaces/HistoryEntity.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/CancelTimer.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-2.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["historyentri",{"_index":2003,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentries.map",{"_index":2004,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentry.id",{"_index":2009,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyentrycompon",{"_index":260,"title":{"components/HistoryEntryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historygroup",{"_index":162,"title":{"interfaces/HistoryGrouping.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/PlayingItemComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historygroupingsbyd",{"_index":2040,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historygroupingsbygam",{"_index":2042,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historygroupingsbyplatform",{"_index":2041,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyitem",{"_index":213,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historyitem.id",{"_index":216,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["historylist",{"_index":1128,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historylist.pipe(map(histori",{"_index":1130,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["historylistitem",{"_index":762,"title":{"interfaces/HistoryListItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["historylistitemkeyfunct",{"_index":2608,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historylistitemmap",{"_index":2610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["historylistitemsmap",{"_index":2017,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"miscellaneous/typealiases.html":{}}}],["historyload",{"_index":2043,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["historyservic",{"_index":1122,"title":{"injectables/HistoryService.html":{}},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["historytrackedgam",{"_index":2044,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["holder",{"_index":2572,"title":{},"body":{"license.html":{}}}],["home",{"_index":1451,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'nam",{"_index":263,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["home.compon",{"_index":1462,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":1453,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1452,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":262,"title":{"components/HomeComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["homemodul",{"_index":388,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["horizon",{"_index":2625,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["hostlisten",{"_index":1478,"title":{},"body":{"components/LibraryComponent.html":{}}}],["hostlistener('window:res",{"_index":1494,"title":{},"body":{"components/LibraryComponent.html":{}}}],["html",{"_index":224,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["htmlinputel",{"_index":1045,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["htmlselectel",{"_index":174,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["icon",{"_index":144,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteEntry.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["icondefinit",{"_index":1876,"title":{},"body":{"interfaces/RouteEntry.html":{}}}],["id",{"_index":769,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/Dictionary.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"interfaces/IHasId.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["ihasid",{"_index":1029,"title":{"interfaces/IHasId.html":{}},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["imgsrc",{"_index":2361,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["implement",{"_index":6,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State-1.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["impli",{"_index":2565,"title":{},"body":{"license.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["inactivevalu",{"_index":1080,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["includ",{"_index":2542,"title":{},"body":{"license.html":{}}}],["increment",{"_index":1470,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["increment_days_to_show",{"_index":1469,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["incrementdaystoshow",{"_index":1463,"title":{"classes/IncrementDaysToShow.html":{}},"body":{"classes/IncrementDaysToShow.html":{},"miscellaneous/typealiases.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["info.endtim",{"_index":1149,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["info.gam",{"_index":829,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["info.platform",{"_index":836,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{}}}],["info.starttim",{"_index":1148,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"injectables/TimerService.html":{}}}],["initialst",{"_index":1356,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["inject",{"_index":292,"title":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/ElapsedTimeService.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":152,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{}}}],["insert",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["insertanalyticsel",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["insertanalyticselements(environment.googletagmanag",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["interfac",{"_index":118,"title":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/AuthState.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/CompletionState.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"interfaces/EmailAuthEvent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/PieChartConfig.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/Profile.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/TimerInfo.html":{},"interfaces/TrackerState.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{}},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/AuthState.html":{},"interfaces/BarGraphConfig.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"interfaces/EmailAuthEvent.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/NgSelectValue.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/TrackerState.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"overview.html":{}}}],["interv",{"_index":1081,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["interval(1000).pipe(map",{"_index":1084,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["isuserloggedin",{"_index":692,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["item",{"_index":11,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletedItemComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-13.html":{},"interfaces/State-5.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["item'},{'nam",{"_index":237,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["item.compon",{"_index":862,"title":{},"body":{"modules/CompletionModule.html":{}}}],["item.component.html",{"_index":775,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.scss",{"_index":774,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.t",{"_index":773,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.ts:22",{"_index":778,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:23",{"_index":783,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:24",{"_index":782,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:26",{"_index":777,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:27",{"_index":1685,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:28",{"_index":1686,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:29",{"_index":779,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["item.component.ts:30",{"_index":1694,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:33",{"_index":780,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["item.component.ts:34",{"_index":1684,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:37",{"_index":1688,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:41",{"_index":1693,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:45",{"_index":1689,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:49",{"_index":1691,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.component.ts:54",{"_index":1687,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["item.endtim",{"_index":1429,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["item.gam",{"_index":1568,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["item.key",{"_index":825,"title":{},"body":{"components/CompletionComponent.html":{}}}],["item.opt",{"_index":1173,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["item.platform",{"_index":1569,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["item.starttim",{"_index":1427,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["item/complet",{"_index":772,"title":{},"body":{"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{}}}],["item/play",{"_index":864,"title":{},"body":{"modules/CompletionModule.html":{},"components/PlayingItemComponent.html":{}}}],["itemid",{"_index":51,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["items.sort((a",{"_index":1169,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["js",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":2508,"title":{},"body":{"index.html":{}}}],["key",{"_index":1433,"title":{},"body":{"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["kind",{"_index":2563,"title":{},"body":{"license.html":{}}}],["label",{"_index":1031,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["last",{"_index":1281,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["last_month",{"_index":1278,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{},"miscellaneous/typealiases.html":{}}}],["last_week",{"_index":1274,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{},"miscellaneous/typealiases.html":{}}}],["lastplay",{"_index":1502,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["legend",{"_index":223,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["liabil",{"_index":2576,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":2573,"title":{},"body":{"license.html":{}}}],["librari",{"_index":256,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["library'},{'nam",{"_index":265,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["library.compon",{"_index":1509,"title":{},"body":{"modules/LibraryModule.html":{}}}],["library.component.html",{"_index":1474,"title":{},"body":{"components/LibraryComponent.html":{}}}],["library.component.scss",{"_index":1473,"title":{},"body":{"components/LibraryComponent.html":{}}}],["librarycompon",{"_index":264,"title":{"components/LibraryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"modules/LibraryModule.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["libraryentri",{"_index":1475,"title":{"interfaces/LibraryEntry.html":{}},"body":{"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{}}}],["librarymodul",{"_index":389,"title":{"modules/LibraryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["licens",{"_index":2521,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":2543,"title":{},"body":{"license.html":{}}}],["liter",{"_index":1098,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/GraphConfig.html":{}}}],["load",{"_index":41,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressEntity.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_history_item",{"_index":40,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_history_items_succeed",{"_index":45,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["load_item",{"_index":95,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["load_opt",{"_index":1534,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{}}}],["load_options_succeed",{"_index":1535,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{}}}],["load_profil",{"_index":1543,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["load_profile_succeed",{"_index":1545,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["load_progress_item",{"_index":106,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["load_progress_items_succeed",{"_index":108,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["load_timer_info",{"_index":753,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["loadhistoryitem",{"_index":42,"title":{"classes/LoadHistoryItems.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistoryitemssucceed",{"_index":47,"title":{"classes/LoadHistoryItemsSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loaditem",{"_index":96,"title":{"classes/LoadItems.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["loadmorecompon",{"_index":266,"title":{"components/LoadMoreComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["loadmoreentri",{"_index":1524,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["loadopt",{"_index":1531,"title":{"classes/LoadOptions.html":{}},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"injectables/PlatformsEffects.html":{},"miscellaneous/typealiases.html":{}}}],["loadoptionssucceed",{"_index":1536,"title":{"classes/LoadOptionsSucceeded.html":{}},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprofil",{"_index":1540,"title":{"classes/LoadProfile.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"injectables/ProfileEffects.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprofilesucceed",{"_index":1546,"title":{"classes/LoadProfileSucceeded.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprogressitem",{"_index":107,"title":{"classes/LoadProgressItems.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/ProgressEffects.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadprogressitemssucceed",{"_index":109,"title":{"classes/LoadProgressItemsSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["loadtimerinfo",{"_index":754,"title":{"classes/LoadTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["lock",{"_index":269,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["lockedhistoryentrycompon",{"_index":268,"title":{"components/LockedHistoryEntryComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["loggingin",{"_index":515,"title":{},"body":{"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/State-7.html":{}}}],["login",{"_index":470,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"classes/TwitterLogin.html":{}}}],["login'},{'nam",{"_index":271,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["login.component.html",{"_index":1572,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1571,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":270,"title":{"components/LoginComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["logo",{"_index":2520,"title":{},"body":{"index.html":{}}}],["logout",{"_index":706,"title":{"classes/Logout.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["made",{"_index":1457,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["map",{"_index":321,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["map(act",{"_index":303,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["map(auth",{"_index":580,"title":{},"body":{"guards/AuthGuard.html":{}}}],["map(authdata",{"_index":2381,"title":{},"body":{"injectables/UserEffects.html":{}}}],["map(data",{"_index":1311,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/TimerEffects.html":{}}}],["map(ent",{"_index":1797,"title":{},"body":{"injectables/ProgressEffects.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["map(item",{"_index":1172,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["map(itemid",{"_index":1319,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["map(payload",{"_index":1331,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["mapgroup",{"_index":1486,"title":{},"body":{"components/LibraryComponent.html":{}}}],["mapgroupings(gamegroup",{"_index":1492,"title":{},"body":{"components/LibraryComponent.html":{}}}],["mark",{"_index":82,"title":{},"body":{"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/CompletionState.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-14.html":{}}}],["mark_complet",{"_index":114,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["mark_complete_succeed",{"_index":116,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["markcomplet",{"_index":115,"title":{"classes/MarkComplete.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletionState.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/State-14.html":{},"miscellaneous/typealiases.html":{}}}],["markcompleteact",{"_index":1695,"title":{},"body":{"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["markcompleteactions.addnewitem(item.id",{"_index":1821,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.loaditems(entities.filter(ent",{"_index":1795,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.remove(data.itemid",{"_index":1806,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.remove(itemid",{"_index":1813,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["markcompleteactions.setendtime(this.displaydata.item.id",{"_index":1701,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["markcompleteactions.setshowextra(this.displaydata.item.id",{"_index":1698,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["markcompleted(userid",{"_index":1202,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["markcompleteent",{"_index":841,"title":{"interfaces/MarkCompleteEntity.html":{}},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{}}}],["markcompleteitem",{"_index":763,"title":{"interfaces/MarkCompleteItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/PlayingDisplayData.html":{}}}],["markcompletepayload",{"_index":104,"title":{"interfaces/MarkCompletePayload.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["markcompletesucceed",{"_index":117,"title":{"classes/MarkCompleteSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["match",{"_index":73,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["menu",{"_index":1637,"title":{},"body":{"components/NavComponent.html":{}}}],["merchant",{"_index":2566,"title":{},"body":{"license.html":{}}}],["merg",{"_index":1186,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/ProfileService.html":{},"injectables/TimerService.html":{},"license.html":{}}}],["mergemap",{"_index":322,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{}}}],["mergemap(act",{"_index":485,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/StatusEffects.html":{}}}],["mergemap(data",{"_index":1804,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(ent",{"_index":1793,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(item",{"_index":1819,"title":{},"body":{"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{}}}],["mergemap(itemid",{"_index":1811,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["mergemap(newitem",{"_index":308,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["messag",{"_index":516,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State.html":{}}}],["messagingsenderid",{"_index":1108,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["metadata",{"_index":134,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["metareduc",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["method",{"_index":145,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["mike",{"_index":2526,"title":{},"body":{"license.html":{}}}],["miscellan",{"_index":2473,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":2522,"title":{},"body":{"license.html":{}}}],["mode",{"_index":2511,"title":{},"body":{"index.html":{}}}],["model",{"_index":33,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-17.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["model.nam",{"_index":1250,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["model.valu",{"_index":1251,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["modifi",{"_index":2546,"title":{},"body":{"license.html":{}}}],["modul",{"_index":373,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":1282,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["more",{"_index":1520,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more'},{'nam",{"_index":267,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["more.compon",{"_index":2339,"title":{},"body":{"modules/TrackerModule.html":{}}}],["more.component.html",{"_index":1522,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.scss",{"_index":1521,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.t",{"_index":1519,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:16",{"_index":1525,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:19",{"_index":1526,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more.component.ts:23",{"_index":1527,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["more/load",{"_index":1518,"title":{},"body":{"components/LoadMoreComponent.html":{},"modules/TrackerModule.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name'},{'nam",{"_index":246,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["name.compon",{"_index":1766,"title":{},"body":{"modules/ProfileModule.html":{}}}],["name.component.html",{"_index":1036,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.scss",{"_index":1035,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.t",{"_index":1034,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:20",{"_index":1041,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:21",{"_index":1052,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:22",{"_index":1051,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:25",{"_index":1040,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:28",{"_index":1043,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:32",{"_index":1042,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name.component.ts:36",{"_index":1046,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["name/edit",{"_index":1033,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"modules/ProfileModule.html":{}}}],["namespac",{"_index":1100,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["natur",{"_index":2616,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nav",{"_index":1615,"title":{},"body":{"components/NavComponent.html":{}}}],["nav'},{'nam",{"_index":273,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["nav.component.html",{"_index":1617,"title":{},"body":{"components/NavComponent.html":{}}}],["nav.component.scss",{"_index":1616,"title":{},"body":{"components/NavComponent.html":{}}}],["navadslot",{"_index":1102,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["navbann",{"_index":1633,"title":{},"body":{"components/NavComponent.html":{}}}],["navcomplet",{"_index":1653,"title":{},"body":{"components/NavComponent.html":{}}}],["navcompon",{"_index":272,"title":{"components/NavComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["navdashboard",{"_index":1647,"title":{},"body":{"components/NavComponent.html":{}}}],["navlibrari",{"_index":1650,"title":{},"body":{"components/NavComponent.html":{}}}],["navprofil",{"_index":1642,"title":{},"body":{"components/NavComponent.html":{}}}],["navtrack",{"_index":1656,"title":{},"body":{"components/NavComponent.html":{}}}],["neon",{"_index":2626,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":38,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/SharedState.html":{},"interfaces/State-10.html":{},"interfaces/State-5.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{}}}],["newitem",{"_index":1134,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["newstat",{"_index":1365,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{}}}],["ng",{"_index":855,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":423,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodul",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["ngoninit",{"_index":146,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["ngrx",{"_index":2499,"title":{},"body":{"index.html":{}}}],["ngrx/effect",{"_index":318,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":1352,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-13.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":28,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"interfaces/State-14.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["ngselectmodul",{"_index":854,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{}}}],["ngselectvalu",{"_index":1030,"title":{"interfaces/NgSelectValue.html":{}},"body":{"interfaces/Dictionary.html":{},"components/HistoryEntryComponent.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["ngx",{"_index":2502,"title":{},"body":{"index.html":{}}}],["ngxchartsmodul",{"_index":994,"title":{},"body":{"modules/DashboardModule.html":{}}}],["ngxdatatablemodul",{"_index":1507,"title":{},"body":{"modules/LibraryModule.html":{}}}],["night",{"_index":2628,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nightlight",{"_index":2629,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["node_modules/@angular/form",{"_index":611,"title":{},"body":{"modules/AuthModule.html":{}}}],["noninfring",{"_index":2570,"title":{},"body":{"license.html":{}}}],["not_authent",{"_index":700,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["notauthent",{"_index":701,"title":{"classes/NotAuthenticated.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["noth",{"_index":1301,"title":{},"body":{"components/HistoryComponent.html":{}}}],["notic",{"_index":2558,"title":{},"body":{"license.html":{}}}],["now",{"_index":2069,"title":{},"body":{"interfaces/State-10.html":{},"components/TimerComponent.html":{}}}],["npm",{"_index":2512,"title":{},"body":{"index.html":{}}}],["null",{"_index":160,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"interfaces/Dictionary.html":{},"components/HistoryEntryComponent.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["number",{"_index":94,"title":{},"body":{"classes/AddNewItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"pipes/PluralizePipe.html":{},"interfaces/ProgressItem.html":{},"classes/Remove.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"pipes/TimePipe.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["number.parseint(endtimeel.valu",{"_index":1700,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["number.parseint(starttimeel.valu",{"_index":210,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["numentriestoshow",{"_index":1476,"title":{},"body":{"components/LibraryComponent.html":{}}}],["object",{"_index":180,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["observ",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["obtain",{"_index":2534,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":2623,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["of(displaynam",{"_index":1187,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["of(itemid",{"_index":1140,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(new",{"_index":312,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["of(newitem",{"_index":1201,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(payload",{"_index":1143,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["of(this.gethistoryentity(newitem",{"_index":1137,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["oftype(addplayingactions.sav",{"_index":301,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["oftype(addplayingactions.save_succeed",{"_index":1816,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(appactions.app_error",{"_index":2173,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["oftype(fromrouter.router_navig",{"_index":2189,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["oftype(historyactions.load_history_item",{"_index":1307,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.remove_history_item",{"_index":1315,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_elapsed_tim",{"_index":1327,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_gam",{"_index":1335,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(historyactions.update_platform",{"_index":1341,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(platformsactions.load_opt",{"_index":1674,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["oftype(profileactions.load_profil",{"_index":1747,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["oftype(profileactions.set_profile_displaynam",{"_index":1753,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["oftype(progressactions.load_progress_item",{"_index":1790,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(progressactions.mark_complet",{"_index":1801,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(progressactions.remove_progress_item",{"_index":1808,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["oftype(timeractions.cancel_tim",{"_index":2267,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.load_timer_info",{"_index":2271,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.save_timer_info",{"_index":2279,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["oftype(timeractions.save_timer_info_succeed",{"_index":1323,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["oftype(useractions.authent",{"_index":483,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/StatusEffects.html":{}}}],["oftype(useractions.email_login",{"_index":2179,"title":{},"body":{"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(useractions.facebook_login",{"_index":2375,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.get_us",{"_index":2379,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.google_login",{"_index":2388,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.logout",{"_index":2392,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.reset_password",{"_index":2398,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.signup",{"_index":2404,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oftype(useractions.twitter_login",{"_index":2408,"title":{},"body":{"injectables/UserEffects.html":{}}}],["oninit",{"_index":133,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["onres",{"_index":1495,"title":{},"body":{"components/LibraryComponent.html":{}}}],["opendatetimepick",{"_index":1383,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["opendatetimepicker(el",{"_index":1391,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["option",{"_index":22,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"interfaces/FirestorePlatformsItem.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"interfaces/RouteEntry.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"interfaces/State-3.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwis",{"_index":2580,"title":{},"body":{"license.html":{}}}],["out",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":518,"title":{},"body":{"components/AuthFormComponent.html":{},"components/EditDisplayNameComponent.html":{}}}],["overview",{"_index":2586,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owldatetimemodul",{"_index":2331,"title":{},"body":{"modules/TrackerModule.html":{}}}],["owlnativedatetimemodul",{"_index":2332,"title":{},"body":{"modules/TrackerModule.html":{}}}],["packag",{"_index":2444,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":910,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["paramet",{"_index":19,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":2568,"title":{},"body":{"license.html":{}}}],["password",{"_index":560,"title":{},"body":{"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["password'},{'nam",{"_index":249,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["password.compon",{"_index":600,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["password.component.html",{"_index":1228,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.scss",{"_index":1227,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.t",{"_index":1226,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1233,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1230,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1231,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1232,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/forgot",{"_index":599,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/ForgotPasswordComponent.html":{}}}],["passwordform",{"_index":1229,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["path",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["pathmatch",{"_index":476,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":58,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/State-2.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["permiss",{"_index":2528,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2552,"title":{},"body":{"license.html":{}}}],["person",{"_index":2533,"title":{},"body":{"license.html":{}}}],["photourl",{"_index":2163,"title":{},"body":{"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["pick",{"_index":2333,"title":{},"body":{"modules/TrackerModule.html":{},"dependencies.html":{}}}],["picnic",{"_index":2627,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["piechartconfig",{"_index":734,"title":{"interfaces/PieChartConfig.html":{}},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"components/TimePlatformGraphComponent.html":{}}}],["pipe",{"_index":302,"title":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"pipes/PluralizePipe.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"pipes/TimePipe.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{},"overview.html":{}}}],["pipe(catcherror(err",{"_index":2401,"title":{},"body":{"injectables/UserEffects.html":{}}}],["pipe(map",{"_index":2268,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["pipe(mergemap",{"_index":2184,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["pipes/elaps",{"_index":1952,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/pluralize.pip",{"_index":1954,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes/time.pip",{"_index":1955,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":1068,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}}}],["platform",{"_index":62,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompletePayload.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProgressItem.html":{},"components/RegisterComponent.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["platformel",{"_index":176,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["platformel.valu",{"_index":208,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["platformgraphconfig",{"_index":935,"title":{},"body":{"components/DashboardComponent.html":{}}}],["platformopt",{"_index":2033,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformoptions.length",{"_index":2034,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platforms.opt",{"_index":2030,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platforms.reduc",{"_index":1965,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformsact",{"_index":494,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PlatformsEffects.html":{}}}],["platformsactions.loadopt",{"_index":486,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["platformsactions.loadoptionssucceeded(data",{"_index":1676,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["platformscollect",{"_index":1162,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformseffect",{"_index":1671,"title":{"injectables/PlatformsEffects.html":{}},"body":{"injectables/PlatformsEffects.html":{},"modules/TrackerModule.html":{}}}],["platformsitem",{"_index":1166,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformsitems.pipe(map(item",{"_index":1168,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["platformsload",{"_index":2038,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["platformsopt",{"_index":1293,"title":{},"body":{"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["platformsservic",{"_index":1161,"title":{"injectables/PlatformsService.html":{}},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["play",{"_index":139,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"components/SpinnerComponent.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["playing'},{'nam",{"_index":230,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["playing.act",{"_index":193,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/ProgressEffects.html":{},"interfaces/State-12.html":{}}}],["playing.actions.t",{"_index":1867,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["playing.actions.ts:10",{"_index":1904,"title":{},"body":{"classes/SetGame-1.html":{}}}],["playing.actions.ts:15",{"_index":1919,"title":{},"body":{"classes/SetPlatform-1.html":{}}}],["playing.actions.ts:16",{"_index":1920,"title":{},"body":{"classes/SetPlatform-1.html":{}}}],["playing.actions.ts:21",{"_index":1931,"title":{},"body":{"classes/SetStartTime-1.html":{}}}],["playing.actions.ts:22",{"_index":1932,"title":{},"body":{"classes/SetStartTime-1.html":{}}}],["playing.actions.ts:27",{"_index":1868,"title":{},"body":{"classes/Reset.html":{}}}],["playing.actions.ts:33",{"_index":1880,"title":{},"body":{"classes/Save.html":{}}}],["playing.actions.ts:34",{"_index":1881,"title":{},"body":{"classes/Save.html":{}}}],["playing.actions.ts:39",{"_index":1882,"title":{},"body":{"classes/SaveSucceeded.html":{}}}],["playing.actions.ts:40",{"_index":1883,"title":{},"body":{"classes/SaveSucceeded.html":{}}}],["playing.actions.ts:9",{"_index":1903,"title":{},"body":{"classes/SetGame-1.html":{}}}],["playing.compon",{"_index":860,"title":{},"body":{"modules/CompletionModule.html":{}}}],["playing.component.html",{"_index":143,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.scss",{"_index":141,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.t",{"_index":132,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:26",{"_index":163,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:27",{"_index":164,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:28",{"_index":161,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:29",{"_index":165,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:30",{"_index":166,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:31",{"_index":159,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:32",{"_index":183,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:33",{"_index":182,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:35",{"_index":158,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:38",{"_index":167,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:42",{"_index":172,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:49",{"_index":175,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:54",{"_index":178,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:59",{"_index":170,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.component.ts:63",{"_index":171,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing.effect",{"_index":867,"title":{},"body":{"modules/CompletionModule.html":{}}}],["playing.effects.t",{"_index":295,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.effects.ts:14",{"_index":299,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.effects.ts:18",{"_index":317,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["playing.models.t",{"_index":121,"title":{},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{}}}],["playing.reduc",{"_index":879,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["playing.reducer.t",{"_index":2099,"title":{},"body":{"interfaces/State-12.html":{},"miscellaneous/functions.html":{}}}],["playing.util",{"_index":199,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["playing/add",{"_index":131,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/CompletionModule.html":{}}}],["playingcount",{"_index":2199,"title":{},"body":{"components/TabsComponent.html":{}}}],["playingdisplaydata",{"_index":764,"title":{"interfaces/PlayingDisplayData.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"components/CompletionComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{}}}],["playingitemcompon",{"_index":274,"title":{"components/PlayingItemComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["playingprogressitem",{"_index":837,"title":{},"body":{"components/CompletionComponent.html":{}}}],["playtim",{"_index":788,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{}}}],["playtime').subscribe(titl",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["plural",{"_index":1715,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["pluralize:'game':'gam",{"_index":1288,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["pluralize:\\'game\\':\\'gam",{"_index":1289,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["pluralizepip",{"_index":1713,"title":{"pipes/PluralizePipe.html":{}},"body":{"pipes/PluralizePipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["pluralword",{"_index":1718,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["portion",{"_index":2561,"title":{},"body":{"license.html":{}}}],["postlogin",{"_index":2170,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["potentiald",{"_index":795,"title":{},"body":{"components/CompletionComponent.html":{}}}],["potentialplatform",{"_index":796,"title":{},"body":{"components/CompletionComponent.html":{}}}],["privat",{"_index":201,"title":{},"body":{"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LockedHistoryEntryComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["product",{"_index":1096,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["profil",{"_index":243,"title":{"interfaces/Profile.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"components/SpinnerComponent.html":{},"interfaces/State-17.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["profile'},{'nam",{"_index":276,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["profile.compon",{"_index":1767,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.component.html",{"_index":1723,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1722,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.reduc",{"_index":1779,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["profile/actions/profile.act",{"_index":503,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["profile/model",{"_index":2430,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/reducers/root.reduc",{"_index":2429,"title":{},"body":{"injectables/UserService.html":{}}}],["profile/utils/userinfo.util",{"_index":2435,"title":{},"body":{"injectables/UserService.html":{}}}],["profileact",{"_index":502,"title":{},"body":{"injectables/AuthEffects.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{}}}],["profileactions.loadprofil",{"_index":1748,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.loadprofile(action.user.uid",{"_index":490,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["profileactions.loadprofilesucceeded(data",{"_index":1750,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.setprofiledisplaynam",{"_index":1754,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profileactions.setprofiledisplayname(this.userid",{"_index":1057,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["profileactions.setprofiledisplaynamesucceeded(data",{"_index":1757,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["profilecollect",{"_index":1177,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profilecompon",{"_index":275,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["profilecomponentselector",{"_index":2428,"title":{},"body":{"injectables/UserService.html":{}}}],["profiledoc",{"_index":1181,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profiledoc.pipe(map(profil",{"_index":1183,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["profileeffect",{"_index":1744,"title":{"injectables/ProfileEffects.html":{}},"body":{"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{}}}],["profilemodul",{"_index":390,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerout",{"_index":1620,"title":{},"body":{"components/NavComponent.html":{}}}],["profileselector",{"_index":1786,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["profileservic",{"_index":1176,"title":{"injectables/ProfileService.html":{}},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"overview.html":{}}}],["profilest",{"_index":1775,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{},"injectables/UserService.html":{}}}],["profilestor",{"_index":2423,"title":{},"body":{"injectables/UserService.html":{}}}],["progress",{"_index":105,"title":{},"body":{"classes/AddNewProgressItem.html":{},"components/CompletionComponent.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{}}}],["progress.load",{"_index":2039,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progress.reduc",{"_index":1967,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progress.some(x",{"_index":2007,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progressact",{"_index":496,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["progressactions.addnewprogressitem(item",{"_index":1820,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.loadprogressitem",{"_index":1791,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.loadprogressitems(action.user.uid",{"_index":489,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["progressactions.loadprogressitemssucceeded(ent",{"_index":1794,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.markcomplet",{"_index":1802,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.markcomplete(this.userid",{"_index":1706,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["progressactions.markcompletesucceeded(data",{"_index":1805,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.removeprogressitem",{"_index":1809,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progressactions.removeprogressitem(this.userid",{"_index":784,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["progressactions.removeprogressitemsucceeded(itemid",{"_index":1812,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["progresscollect",{"_index":1191,"title":{"interfaces/ProgressCollection.html":{}},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresscomplet",{"_index":2046,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progresseffect",{"_index":868,"title":{"injectables/ProgressEffects.html":{}},"body":{"modules/CompletionModule.html":{},"injectables/ProgressEffects.html":{}}}],["progressent",{"_index":99,"title":{"interfaces/ProgressEntity.html":{}},"body":{"classes/AddNewProgressItem.html":{},"interfaces/FirestoreProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"interfaces/State-4.html":{}}}],["progressitem",{"_index":761,"title":{"interfaces/ProgressItem.html":{}},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progresslist",{"_index":1195,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresslist.pipe(map(progresslistitem",{"_index":1196,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progresslistitems.map(progress",{"_index":1197,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["progressplay",{"_index":2045,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["progressservic",{"_index":298,"title":{"injectables/ProgressService.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"overview.html":{}}}],["projectid",{"_index":1106,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["promis",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["properti",{"_index":9,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["provid",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"license.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["providerdata",{"_index":2413,"title":{},"body":{"injectables/UserEffects.html":{}}}],["providerdata.providerid",{"_index":2419,"title":{},"body":{"injectables/UserEffects.html":{}}}],["providerid",{"_index":2164,"title":{},"body":{"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetPassword.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["publish",{"_index":2547,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":2569,"title":{},"body":{"license.html":{}}}],["queryparam",{"_index":582,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["quickstart",{"_index":1384,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["range.act",{"_index":1268,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{}}}],["range.actions.t",{"_index":1907,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["range.actions.ts:11",{"_index":1916,"title":{},"body":{"classes/SetLastWeek.html":{}}}],["range.actions.ts:17",{"_index":1933,"title":{},"body":{"classes/SetThisMonth.html":{}}}],["range.actions.ts:23",{"_index":1908,"title":{},"body":{"classes/SetLastMonth.html":{}}}],["range.actions.ts:5",{"_index":1934,"title":{},"body":{"classes/SetThisWeek.html":{}}}],["range.models.t",{"_index":2604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["range.reduc",{"_index":1011,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["range.reducer.t",{"_index":2060,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["rangetyp",{"_index":1024,"title":{},"body":{"interfaces/DashboardState.html":{},"components/HeaderComponent-1.html":{},"interfaces/State-11.html":{}}}],["rc.12",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":610,"title":{},"body":{"modules/AuthModule.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/NotAuthenticated.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["redirectto",{"_index":474,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/AuthState.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"modules/ProfileModule.html":{},"interfaces/ProfileState.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interfaces/State-1.html":{},"interfaces/State-11.html":{},"interfaces/State-14.html":{},"interfaces/State-17.html":{},"interfaces/State-19.html":{},"interfaces/State-5.html":{},"interfaces/State-7.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"miscellaneous/functions.html":{}}}],["reducer(st",{"_index":1358,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["reducers/clear.meta.reduc",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["reducers/history.reduc",{"_index":29,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/CancelTimer.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["reducers/progress.reduc",{"_index":103,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["reducers/root.reduc",{"_index":195,"title":{},"body":{"components/AddPlayingComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"modules/ProfileModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserService.html":{}}}],["redux",{"_index":2498,"title":{},"body":{"index.html":{}}}],["regist",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'nam",{"_index":278,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["register.component.html",{"_index":1842,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1841,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercompon",{"_index":277,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"modules/AuthModule.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["regular",{"_index":1659,"title":{},"body":{"components/NavComponent.html":{},"dependencies.html":{}}}],["remov",{"_index":49,"title":{"classes/Remove.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/CompletedItemComponent.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["remove(userid",{"_index":1203,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["remove_history_item",{"_index":48,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["remove_history_item_succeed",{"_index":52,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["remove_progress_item",{"_index":110,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["remove_progress_item_succeed",{"_index":112,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{}}}],["removehistoryitem",{"_index":50,"title":{"classes/RemoveHistoryItem.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removehistoryitemsucceed",{"_index":53,"title":{"classes/RemoveHistoryItemSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removeprogressitem",{"_index":111,"title":{"classes/RemoveProgressItem.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"injectables/ProgressEffects.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["removeprogressitemsucceed",{"_index":113,"title":{"classes/RemoveProgressItemSucceeded.html":{}},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":394,"title":{"classes/Reset.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/Authenticated.html":{},"classes/CancelTimer.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"classes/LoadTimerInfo.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"components/ProfileComponent.html":{},"modules/ProfileModule.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"modules/SharedModule.html":{},"classes/SignUp.html":{},"modules/TrackerModule.html":{},"classes/TwitterLogin.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["reset_password",{"_index":710,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["reset_tim",{"_index":742,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["resetgam",{"_index":2225,"title":{},"body":{"components/TimerComponent.html":{}}}],["resetinfo",{"_index":147,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["resetpassword",{"_index":621,"title":{"classes/ResetPassword.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["resetpassword(email",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["resettim",{"_index":744,"title":{"classes/ResetTimer.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["resettimer(userid",{"_index":1219,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["restrict",{"_index":2541,"title":{},"body":{"license.html":{}}}],["result",{"_index":72,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":168,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"components/NavComponent.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["returnurl",{"_index":583,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UserEffects.html":{}}}],["right",{"_index":2544,"title":{},"body":{"license.html":{}}}],["root",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["root'},{'nam",{"_index":232,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["rootcomponentselector",{"_index":923,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["rout",{"_index":460,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"classes/CustomRouterStateSerializer.html":{},"components/NavComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{},"overview.html":{},"routes.html":{}}}],["route.capt",{"_index":1668,"title":{},"body":{"components/NavComponent.html":{}}}],["route.firstchild",{"_index":927,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routeentri",{"_index":1631,"title":{"interfaces/RouteEntry.html":{}},"body":{"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["routenavig",{"_index":2171,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["router",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"components/NavComponent.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/UserEffects.html":{}}}],["routermodul",{"_index":459,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":616,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":478,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerst",{"_index":908,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstate.root",{"_index":926,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstateseri",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstatesnapshot",{"_index":574,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routerstateurl",{"_index":909,"title":{"interfaces/RouterStateUrl.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["routing.modul",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["routing.module.t",{"_index":458,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{}}}],["run",{"_index":2507,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":319,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"components/LibraryComponent.html":{},"components/LoginComponent.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/oper",{"_index":324,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuard.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryEffects.html":{},"injectables/HistoryService.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"injectables/ProgressService.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserEffects.html":{}}}],["save",{"_index":296,"title":{"classes/Save.html":{}},"body":{"injectables/AddPlayingEffects.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["save_succeed",{"_index":1870,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["save_timer_info",{"_index":748,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["save_timer_info_succeed",{"_index":750,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["saveaddplay",{"_index":1832,"title":{},"body":{"injectables/ProgressService.html":{}}}],["saveaddplaying(addplay",{"_index":1198,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["saveaddplayingsucceed",{"_index":1788,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["saveplay",{"_index":148,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["savesucceed",{"_index":1871,"title":{"classes/SaveSucceeded.html":{}},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["savetimerinfo",{"_index":749,"title":{"classes/SaveTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"injectables/TimerEffects.html":{},"miscellaneous/typealiases.html":{}}}],["savetimerinfo(info",{"_index":1133,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["savetimerinfosucceed",{"_index":751,"title":{"classes/SaveTimerInfoSucceeded.html":{}},"body":{"classes/CancelTimer.html":{},"injectables/HistoryEffects.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["scalemax",{"_index":716,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["select",{"_index":857,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["select.util",{"_index":1408,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["select/ng",{"_index":856,"title":{},"body":{"modules/CompletionModule.html":{},"modules/TrackerModule.html":{},"dependencies.html":{}}}],["selectal",{"_index":1991,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["selectcolorschem",{"_index":963,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectcolorscheme('cool",{"_index":953,"title":{},"body":{"components/DashboardComponent.html":{}}}],["selectent",{"_index":898,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["selector",{"_index":137,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["sell",{"_index":2551,"title":{},"body":{"license.html":{}}}],["sendresetpasswordlink",{"_index":1725,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sent",{"_index":1240,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["serial",{"_index":905,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerst",{"_index":906,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["serv",{"_index":2506,"title":{},"body":{"index.html":{}}}],["server",{"_index":2505,"title":{},"body":{"index.html":{}}}],["services/auth.servic",{"_index":608,"title":{},"body":{"modules/AuthModule.html":{},"injectables/UserEffects.html":{}}}],["services/history.servic",{"_index":1347,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["services/platforms.servic",{"_index":1679,"title":{},"body":{"injectables/PlatformsEffects.html":{},"modules/TrackerModule.html":{}}}],["services/profile.servic",{"_index":1760,"title":{},"body":{"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{}}}],["services/progress.servic",{"_index":325,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"modules/CompletionModule.html":{},"injectables/ProgressEffects.html":{}}}],["services/timer.servic",{"_index":1405,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["set",{"_index":84,"title":{},"body":{"classes/AddNewItem.html":{},"classes/CancelTimer.html":{},"classes/LoadItems.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/Remove.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{}}}],["set_attempting_login",{"_index":1895,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["set_endtim",{"_index":90,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["set_gam",{"_index":745,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{}}}],["set_last_month",{"_index":1909,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_last_week",{"_index":1912,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_platform",{"_index":746,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{}}}],["set_profile_displaynam",{"_index":1547,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["set_profile_displayname_succeed",{"_index":1549,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{}}}],["set_show_extra",{"_index":81,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["set_start_tim",{"_index":747,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["set_starttim",{"_index":1869,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["set_this_month",{"_index":1914,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_this_week",{"_index":1910,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["set_timer_info",{"_index":755,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{}}}],["set_validation_messag",{"_index":1896,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["set_visible_tab",{"_index":1945,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["setattemptinglogin",{"_index":1889,"title":{"classes/SetAttemptingLogin.html":{}},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["setdisplaynam",{"_index":1038,"title":{},"body":{"components/EditDisplayNameComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{}}}],["setdisplayname(displaynameel",{"_index":1044,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["setdisplayname(userid",{"_index":1184,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["seteditnam",{"_index":1726,"title":{},"body":{"components/ProfileComponent.html":{}}}],["seteditname(editnam",{"_index":1730,"title":{},"body":{"components/ProfileComponent.html":{}}}],["setendtim",{"_index":92,"title":{"classes/SetEndTime.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"components/PlayingItemComponent.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["setendtime(endtimeel",{"_index":1690,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["setgam",{"_index":149,"title":{"classes/SetGame.html":{},"classes/SetGame-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setgame(userid",{"_index":1216,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setlastmonth",{"_index":1905,"title":{"classes/SetLastMonth.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setlastweek",{"_index":1913,"title":{"classes/SetLastWeek.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setnumentriestoshow",{"_index":1477,"title":{},"body":{"components/LibraryComponent.html":{}}}],["setplatform",{"_index":150,"title":{"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setplatform(platformel",{"_index":173,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["setplatform(userid",{"_index":1217,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setprofiledisplaynam",{"_index":1548,"title":{"classes/SetProfileDisplayName.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["setprofiledisplaynamesucceed",{"_index":1550,"title":{"classes/SetProfileDisplayNameSucceeded.html":{}},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["setshowextra",{"_index":87,"title":{"classes/SetShowExtra.html":{}},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["setstarttim",{"_index":151,"title":{"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"miscellaneous/typealiases.html":{}}}],["setstarttime(starttimeel",{"_index":177,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["setstarttime(userid",{"_index":1218,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["setthismonth",{"_index":1915,"title":{"classes/SetThisMonth.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["setthisweek",{"_index":1911,"title":{"classes/SetThisWeek.html":{}},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["settim",{"_index":2287,"title":{},"body":{"injectables/TimerService.html":{}}}],["settimer(userid",{"_index":1214,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["settimerinfo",{"_index":756,"title":{"classes/SetTimerInfo.html":{}},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["setvalidationmessag",{"_index":1897,"title":{"classes/SetValidationMessage.html":{}},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibletab",{"_index":1940,"title":{"classes/SetVisibleTab.html":{}},"body":{"classes/SetVisibleTab.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibletab(tab",{"_index":2204,"title":{},"body":{"components/TabsComponent.html":{}}}],["shall",{"_index":2559,"title":{},"body":{"license.html":{}}}],["share",{"_index":280,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/SharedState.html":{},"components/SpinnerComponent.html":{},"interfaces/State-5.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["shared/actions/history.act",{"_index":493,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{}}}],["shared/actions/platforms.act",{"_index":495,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/PlatformsEffects.html":{}}}],["shared/actions/progress.act",{"_index":497,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{},"injectables/ProgressEffects.html":{}}}],["shared/actions/timer.act",{"_index":499,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{}}}],["shared/model",{"_index":196,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/CompletedDisplayData.html":{},"components/CompletionComponent.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["shared/pipes/time.pip",{"_index":871,"title":{},"body":{"modules/CompletionModule.html":{}}}],["shared/reducers/history.reduc",{"_index":1119,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["shared/reducers/progress.reduc",{"_index":1190,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{},"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{}}}],["shared/reducers/root.reduc",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{},"components/TrackerComponent.html":{}}}],["shared/services/elaps",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{}}}],["shared/shared.modul",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"modules/TrackerModule.html":{}}}],["shared/utils/date.util",{"_index":962,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/ElapsedTimePipe.html":{},"pipes/TimePipe.html":{}}}],["shared/utils/histori",{"_index":815,"title":{},"body":{"components/CompletionComponent.html":{}}}],["shared/utils/ng",{"_index":1407,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["shared/utils/uuid.util",{"_index":1121,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["sharedmodul",{"_index":391,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedselector",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TrackerComponent.html":{}}}],["sharedst",{"_index":358,"title":{"interfaces/SharedState.html":{}},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TrackerComponent.html":{}}}],["sharedstor",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/LibraryComponent.html":{},"components/TrackerComponent.html":{}}}],["shouldshowhead",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":85,"title":{},"body":{"classes/AddNewItem.html":{},"classes/IncrementDaysToShow.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{}}}],["show...get",{"_index":1302,"title":{},"body":{"components/HistoryComponent.html":{}}}],["showextra",{"_index":88,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"interfaces/State-13.html":{}}}],["showgridlin",{"_index":717,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showlabel",{"_index":735,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showlegend",{"_index":730,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showloadmorebutton",{"_index":2299,"title":{},"body":{"components/TrackerComponent.html":{}}}],["showxaxi",{"_index":718,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showxaxislabel",{"_index":719,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showyaxi",{"_index":720,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["showyaxislabel",{"_index":721,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["signinwithemail",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithemail(email",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithfacebook",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithgoogl",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinwithtwitt",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["signout",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":707,"title":{"classes/SignUp.html":{}},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["signupwithemail",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["signupwithemail(email",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{}}}],["simpl",{"_index":1458,"title":{},"body":{"components/HomeComponent.html":{}}}],["singlularword",{"_index":1717,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["softwar",{"_index":2536,"title":{},"body":{"license.html":{}}}],["solar",{"_index":2619,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["solid",{"_index":187,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/DashboardState.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"modules/LibraryModule.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["specif",{"_index":2492,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":2050,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'nam",{"_index":281,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["spinner.component.html",{"_index":2052,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":2051,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercompon",{"_index":279,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["src/.../add",{"_index":2483,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../app.actions.t",{"_index":2592,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../clear.meta.reducer.t",{"_index":2474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../colorscheme.utils.t",{"_index":2603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../date",{"_index":2482,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../display.actions.t",{"_index":2593,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../display.reducer.t",{"_index":2475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../error.reducer.t",{"_index":2481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../graph",{"_index":2606,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.actions.t",{"_index":2601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.models.t",{"_index":2613,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.reducer.t",{"_index":2476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../history.utils.t",{"_index":2609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mark",{"_index":2484,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../platforms.actions.t",{"_index":2594,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../platforms.reducer.t",{"_index":2477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../profile.actions.t",{"_index":2597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../profile.reducer.t",{"_index":2486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../progress.actions.t",{"_index":2595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../progress.reducer.t",{"_index":2478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../status.actions.t",{"_index":2599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../status.reducer.t",{"_index":2480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tab.actions.t",{"_index":2598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../tab.reducer.t",{"_index":2485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tabs.models.t",{"_index":2612,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timer.actions.t",{"_index":2596,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../timer.reducer.t",{"_index":2479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.actions.t",{"_index":2600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.models.t",{"_index":2611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.t",{"_index":2487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/actions/app.actions.t",{"_index":1109,"title":{},"body":{"classes/Error.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/actions/app.actions.ts:5",{"_index":1110,"title":{},"body":{"classes/Error.html":{}}}],["src/app/actions/app.actions.ts:6",{"_index":1111,"title":{},"body":{"classes/Error.html":{}}}],["src/app/app",{"_index":457,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/header/header.component.t",{"_index":1252,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:12",{"_index":1257,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:8",{"_index":1256,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/nav/nav.component.t",{"_index":1614,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:21",{"_index":1627,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:22",{"_index":1657,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:29",{"_index":1634,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:34",{"_index":1643,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:39",{"_index":1654,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:61",{"_index":1635,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:62",{"_index":1658,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:63",{"_index":1640,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:67",{"_index":1626,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:70",{"_index":1629,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:74",{"_index":1628,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/components/nav/nav.component.ts:78",{"_index":1630,"title":{},"body":{"components/NavComponent.html":{}}}],["src/app/features/auth/actions/status.actions.t",{"_index":1890,"title":{},"body":{"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/actions/status.actions.ts:11",{"_index":1938,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["src/app/features/auth/actions/status.actions.ts:12",{"_index":1939,"title":{},"body":{"classes/SetValidationMessage.html":{}}}],["src/app/features/auth/actions/status.actions.ts:5",{"_index":1893,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["src/app/features/auth/actions/status.actions.ts:6",{"_index":1894,"title":{},"body":{"classes/SetAttemptingLogin.html":{}}}],["src/app/features/auth/actions/user.actions.t",{"_index":694,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/actions/user.actions.ts:13",{"_index":696,"title":{},"body":{"classes/Authenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:14",{"_index":697,"title":{},"body":{"classes/Authenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:19",{"_index":1670,"title":{},"body":{"classes/NotAuthenticated.html":{}}}],["src/app/features/auth/actions/user.actions.ts:25",{"_index":1242,"title":{},"body":{"classes/GoogleLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:31",{"_index":1113,"title":{},"body":{"classes/FacebookLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:37",{"_index":2347,"title":{},"body":{"classes/TwitterLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:43",{"_index":1590,"title":{},"body":{"classes/Logout.html":{}}}],["src/app/features/auth/actions/user.actions.ts:49",{"_index":2047,"title":{},"body":{"classes/SignUp.html":{}}}],["src/app/features/auth/actions/user.actions.ts:50",{"_index":2048,"title":{},"body":{"classes/SignUp.html":{}}}],["src/app/features/auth/actions/user.actions.ts:55",{"_index":1092,"title":{},"body":{"classes/EmailLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:56",{"_index":1093,"title":{},"body":{"classes/EmailLogin.html":{}}}],["src/app/features/auth/actions/user.actions.ts:61",{"_index":1872,"title":{},"body":{"classes/ResetPassword.html":{}}}],["src/app/features/auth/actions/user.actions.ts:62",{"_index":1873,"title":{},"body":{"classes/ResetPassword.html":{}}}],["src/app/features/auth/actions/user.actions.ts:7",{"_index":1241,"title":{},"body":{"classes/GetUser.html":{}}}],["src/app/features/auth/auth",{"_index":614,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/features/auth/auth.module.t",{"_index":593,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/features/auth/components/auth",{"_index":504,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1225,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/login/login.component.t",{"_index":1570,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:20",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:21",{"_index":1573,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:24",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:30",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:34",{"_index":1576,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:38",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:42",{"_index":1575,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.t",{"_index":1840,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:20",{"_index":1854,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:21",{"_index":1847,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:24",{"_index":1852,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:29",{"_index":1851,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:33",{"_index":1850,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:37",{"_index":1853,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:41",{"_index":1849,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/effects/auth.effects.t",{"_index":480,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/auth.effects.ts:15",{"_index":482,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/auth.effects.ts:19",{"_index":491,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/features/auth/effects/status.effects.t",{"_index":2169,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:17",{"_index":2172,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:21",{"_index":2178,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:35",{"_index":2191,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:42",{"_index":2186,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/status.effects.ts:53",{"_index":2188,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["src/app/features/auth/effects/user.effects.t",{"_index":2362,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:102",{"_index":2403,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:110",{"_index":2368,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:18",{"_index":2365,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:22",{"_index":2387,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:39",{"_index":2391,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:49",{"_index":2378,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:59",{"_index":2411,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:69",{"_index":2397,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:82",{"_index":2407,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/effects/user.effects.ts:92",{"_index":2374,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/features/auth/guards/auth.guard.t",{"_index":570,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/guards/auth.guard.ts:12",{"_index":571,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/guards/auth.guard.ts:15",{"_index":575,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/features/auth/models/events.models.t",{"_index":1090,"title":{},"body":{"interfaces/EmailAuthEvent.html":{}}}],["src/app/features/auth/models/user.models.t",{"_index":2360,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/auth/reducers/root.reducer.t",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["src/app/features/auth/reducers/status.reducer.t",{"_index":2155,"title":{},"body":{"interfaces/State-8.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/auth/reducers/user.reducer.t",{"_index":2162,"title":{},"body":{"interfaces/State-9.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/auth/services/auth.service.t",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:11",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:15",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:19",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:23",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:27",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:31",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:35",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:39",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:43",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:48",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:53",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/auth.service.ts:8",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/features/auth/services/user.service.t",{"_index":2421,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:22",{"_index":2424,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:26",{"_index":2425,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:30",{"_index":2426,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/auth/services/user.service.ts:44",{"_index":2427,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/features/completion/actions/add",{"_index":1866,"title":{},"body":{"classes/Reset.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime-1.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/mark",{"_index":75,"title":{},"body":{"classes/AddNewItem.html":{},"classes/LoadItems.html":{},"classes/Remove.html":{},"classes/SetEndTime.html":{},"classes/SetShowExtra.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/tab.actions.t",{"_index":1941,"title":{},"body":{"classes/SetVisibleTab.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/actions/tab.actions.ts:7",{"_index":1943,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["src/app/features/completion/actions/tab.actions.ts:8",{"_index":1944,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["src/app/features/completion/completion.component.t",{"_index":792,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:26",{"_index":805,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:27",{"_index":804,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:28",{"_index":801,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:29",{"_index":803,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:30",{"_index":808,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:31",{"_index":807,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:33",{"_index":806,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:34",{"_index":802,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:36",{"_index":799,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.component.ts:39",{"_index":800,"title":{},"body":{"components/CompletionComponent.html":{}}}],["src/app/features/completion/completion.module.t",{"_index":853,"title":{},"body":{"modules/CompletionModule.html":{}}}],["src/app/features/completion/components/add",{"_index":130,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["src/app/features/completion/components/complet",{"_index":771,"title":{},"body":{"components/CompletedItemComponent.html":{}}}],["src/app/features/completion/components/play",{"_index":1682,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.t",{"_index":2195,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:19",{"_index":2202,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:20",{"_index":2201,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:21",{"_index":2200,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:24",{"_index":2203,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/components/tabs/tabs.component.ts:26",{"_index":2205,"title":{},"body":{"components/TabsComponent.html":{}}}],["src/app/features/completion/effects/add",{"_index":294,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.t",{"_index":1787,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:16",{"_index":1789,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:20",{"_index":1800,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:33",{"_index":1822,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:44",{"_index":1807,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/effects/progress.effects.ts:57",{"_index":1815,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["src/app/features/completion/models/add",{"_index":120,"title":{},"body":{"interfaces/AddPlaying.html":{},"interfaces/AddPlayingInfo.html":{}}}],["src/app/features/completion/models/display",{"_index":758,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["src/app/features/completion/models/mark",{"_index":1609,"title":{},"body":{"interfaces/MarkCompleteItem.html":{}}}],["src/app/features/completion/models/tabs.models.t",{"_index":2633,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/completion/reducers/add",{"_index":2098,"title":{},"body":{"interfaces/State-12.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/reducers/mark",{"_index":1593,"title":{},"body":{"interfaces/MarkCompleteEntity.html":{},"interfaces/State-13.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/reducers/root.reducer.t",{"_index":873,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["src/app/features/completion/reducers/tab.reducer.t",{"_index":2109,"title":{},"body":{"interfaces/State-15.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/completion/services/progress.service.t",{"_index":1189,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:17",{"_index":1833,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:22",{"_index":1835,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:27",{"_index":1839,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:33",{"_index":1837,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:39",{"_index":1838,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:44",{"_index":1834,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/completion/services/progress.service.ts:53",{"_index":1836,"title":{},"body":{"injectables/ProgressService.html":{}}}],["src/app/features/dashboard/actions/d",{"_index":1906,"title":{},"body":{"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/components/graph",{"_index":1243,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["src/app/features/dashboard/components/header/header.component.t",{"_index":1258,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:19",{"_index":1262,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:20",{"_index":1260,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:23",{"_index":1263,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/header/header.component.ts:25",{"_index":1265,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["src/app/features/dashboard/components/tim",{"_index":2207,"title":{},"body":{"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.t",{"_index":928,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:26",{"_index":956,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:27",{"_index":958,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:28",{"_index":957,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:30",{"_index":959,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:32",{"_index":951,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:34",{"_index":954,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:43",{"_index":947,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:55",{"_index":950,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:60",{"_index":952,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:65",{"_index":955,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:70",{"_index":941,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.component.ts:73",{"_index":942,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/features/dashboard/dashboard.module.t",{"_index":993,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/features/dashboard/models/d",{"_index":2630,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/models/graph.models.t",{"_index":712,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["src/app/features/dashboard/reducers/d",{"_index":2059,"title":{},"body":{"interfaces/State-10.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/dashboard/reducers/root.reducer.t",{"_index":1005,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["src/app/features/dashboard/utils/colorscheme.utils.t",{"_index":2614,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/dashboard/utils/graph",{"_index":2631,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/features/home/home.component.t",{"_index":1450,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:10",{"_index":1455,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:13",{"_index":1456,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.module.t",{"_index":1461,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/features/library/components/header/header.component.t",{"_index":1284,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/components/header/header.component.ts:11",{"_index":1286,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/components/header/header.component.ts:14",{"_index":1287,"title":{},"body":{"components/HeaderComponent-2.html":{}}}],["src/app/features/library/library.component.t",{"_index":1472,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:22",{"_index":1485,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:23",{"_index":1480,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:26",{"_index":1483,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:33",{"_index":1482,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.component.ts:37",{"_index":1484,"title":{},"body":{"components/LibraryComponent.html":{}}}],["src/app/features/library/library.module.t",{"_index":1506,"title":{},"body":{"modules/LibraryModule.html":{}}}],["src/app/features/library/models/library.models.t",{"_index":1500,"title":{},"body":{"interfaces/LibraryEntry.html":{}}}],["src/app/features/profile/actions/profile.actions.t",{"_index":1541,"title":{},"body":{"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:13",{"_index":1552,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:14",{"_index":1553,"title":{},"body":{"classes/LoadProfileSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:19",{"_index":1921,"title":{},"body":{"classes/SetProfileDisplayName.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:20",{"_index":1922,"title":{},"body":{"classes/SetProfileDisplayName.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:25",{"_index":1924,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:26",{"_index":1925,"title":{},"body":{"classes/SetProfileDisplayNameSucceeded.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:7",{"_index":1542,"title":{},"body":{"classes/LoadProfile.html":{}}}],["src/app/features/profile/actions/profile.actions.ts:8",{"_index":1544,"title":{},"body":{"classes/LoadProfile.html":{}}}],["src/app/features/profile/components/edit",{"_index":1032,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["src/app/features/profile/effects/profile.effects.t",{"_index":1745,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:14",{"_index":1746,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:18",{"_index":1752,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/effects/profile.effects.ts:28",{"_index":1759,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["src/app/features/profile/models/profile.models.t",{"_index":1720,"title":{},"body":{"interfaces/Profile.html":{}}}],["src/app/features/profile/profile.component.t",{"_index":1721,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:21",{"_index":1736,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:22",{"_index":1735,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:23",{"_index":1732,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:24",{"_index":1734,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:26",{"_index":1727,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:29",{"_index":1728,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:33",{"_index":1729,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.component.ts:38",{"_index":1731,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/features/profile/profile.module.t",{"_index":1764,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/app/features/profile/reducers/profile.reducer.t",{"_index":2114,"title":{},"body":{"interfaces/State-16.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/profile/reducers/root.reducer.t",{"_index":1776,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["src/app/features/profile/services/profile.service.t",{"_index":1175,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:12",{"_index":1772,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:17",{"_index":1773,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/profile/services/profile.service.ts:24",{"_index":1774,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/features/tracker/actions/display.actions.t",{"_index":1464,"title":{},"body":{"classes/IncrementDaysToShow.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/tracker/actions/display.actions.ts:5",{"_index":1467,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["src/app/features/tracker/actions/display.actions.ts:6",{"_index":1468,"title":{},"body":{"classes/IncrementDaysToShow.html":{}}}],["src/app/features/tracker/components/histori",{"_index":1377,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.t",{"_index":1290,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:13",{"_index":1296,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:14",{"_index":1297,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:15",{"_index":1295,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/history/history.component.ts:18",{"_index":1298,"title":{},"body":{"components/HistoryComponent.html":{}}}],["src/app/features/tracker/components/load",{"_index":1517,"title":{},"body":{"components/LoadMoreComponent.html":{}}}],["src/app/features/tracker/components/lock",{"_index":1560,"title":{},"body":{"components/LockedHistoryEntryComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.t",{"_index":2221,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:103",{"_index":2237,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:109",{"_index":2235,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:25",{"_index":2231,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:26",{"_index":2229,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:27",{"_index":2232,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:28",{"_index":2233,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:29",{"_index":2230,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:30",{"_index":2249,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:31",{"_index":2248,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:35",{"_index":2227,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:38",{"_index":2236,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:42",{"_index":2242,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:51",{"_index":2243,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:63",{"_index":2234,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:68",{"_index":2239,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:78",{"_index":2238,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:85",{"_index":2240,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/components/timer/timer.component.ts:93",{"_index":2241,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/features/tracker/effects/history.effects.t",{"_index":1305,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:15",{"_index":1306,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:19",{"_index":1314,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:29",{"_index":1326,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:36",{"_index":1322,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:46",{"_index":1340,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:56",{"_index":1346,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/history.effects.ts:66",{"_index":1334,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.t",{"_index":1672,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.ts:14",{"_index":1673,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/platforms.effects.ts:18",{"_index":1678,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.t",{"_index":2265,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:15",{"_index":2266,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:19",{"_index":2285,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:33",{"_index":2270,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/effects/timer.effects.ts:38",{"_index":2278,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["src/app/features/tracker/reducers/display.reducer.t",{"_index":2120,"title":{},"body":{"interfaces/State-18.html":{},"miscellaneous/functions.html":{}}}],["src/app/features/tracker/reducers/root.reducer.t",{"_index":2126,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["src/app/features/tracker/services/history.service.t",{"_index":1115,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:19",{"_index":1440,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:24",{"_index":1443,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:29",{"_index":1446,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:35",{"_index":1441,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:40",{"_index":1448,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:46",{"_index":1449,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:52",{"_index":1447,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:58",{"_index":1444,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:70",{"_index":1445,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/history.service.ts:74",{"_index":1442,"title":{},"body":{"injectables/HistoryService.html":{}}}],["src/app/features/tracker/services/platforms.service.t",{"_index":1160,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/platforms.service.ts:10",{"_index":1680,"title":{},"body":{"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/platforms.service.ts:15",{"_index":1681,"title":{},"body":{"injectables/PlatformsService.html":{}}}],["src/app/features/tracker/services/timer.service.t",{"_index":1209,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:12",{"_index":2288,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:17",{"_index":2295,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:25",{"_index":2292,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:29",{"_index":2293,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:33",{"_index":2294,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:37",{"_index":2291,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:45",{"_index":2290,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/services/timer.service.ts:52",{"_index":2289,"title":{},"body":{"injectables/TimerService.html":{}}}],["src/app/features/tracker/tracker.component.t",{"_index":2296,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:24",{"_index":2309,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:25",{"_index":2307,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:26",{"_index":2305,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:27",{"_index":2304,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:29",{"_index":2306,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:30",{"_index":2308,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:32",{"_index":2301,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.component.ts:37",{"_index":2303,"title":{},"body":{"components/TrackerComponent.html":{}}}],["src/app/features/tracker/tracker.module.t",{"_index":2330,"title":{},"body":{"modules/TrackerModule.html":{}}}],["src/app/models/route.models.t",{"_index":1875,"title":{},"body":{"interfaces/RouteEntry.html":{}}}],["src/app/reducers/clear.meta.reducer.t",{"_index":2488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/reducers/error.reducer.t",{"_index":2055,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["src/app/reducers/root.reducer.t",{"_index":904,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["src/app/reducers/root.reducer.ts:37",{"_index":907,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/shared/actions/history.actions.t",{"_index":5,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/history.actions.ts:11",{"_index":18,"title":{},"body":{"classes/AddNewHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:12",{"_index":23,"title":{},"body":{"classes/AddNewHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:17",{"_index":1511,"title":{},"body":{"classes/LoadHistoryItems.html":{}}}],["src/app/shared/actions/history.actions.ts:18",{"_index":1512,"title":{},"body":{"classes/LoadHistoryItems.html":{}}}],["src/app/shared/actions/history.actions.ts:23",{"_index":1513,"title":{},"body":{"classes/LoadHistoryItemsSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:24",{"_index":1514,"title":{},"body":{"classes/LoadHistoryItemsSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:29",{"_index":1858,"title":{},"body":{"classes/RemoveHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:30",{"_index":1859,"title":{},"body":{"classes/RemoveHistoryItem.html":{}}}],["src/app/shared/actions/history.actions.ts:35",{"_index":1860,"title":{},"body":{"classes/RemoveHistoryItemSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:36",{"_index":1861,"title":{},"body":{"classes/RemoveHistoryItemSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:41",{"_index":2352,"title":{},"body":{"classes/UpdateGame.html":{}}}],["src/app/shared/actions/history.actions.ts:42",{"_index":2353,"title":{},"body":{"classes/UpdateGame.html":{}}}],["src/app/shared/actions/history.actions.ts:47",{"_index":2354,"title":{},"body":{"classes/UpdateGameSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:48",{"_index":2355,"title":{},"body":{"classes/UpdateGameSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:53",{"_index":2356,"title":{},"body":{"classes/UpdatePlatform.html":{}}}],["src/app/shared/actions/history.actions.ts:54",{"_index":2357,"title":{},"body":{"classes/UpdatePlatform.html":{}}}],["src/app/shared/actions/history.actions.ts:59",{"_index":2358,"title":{},"body":{"classes/UpdatePlatformSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:60",{"_index":2359,"title":{},"body":{"classes/UpdatePlatformSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:65",{"_index":2348,"title":{},"body":{"classes/UpdateElapsedTime.html":{}}}],["src/app/shared/actions/history.actions.ts:66",{"_index":2349,"title":{},"body":{"classes/UpdateElapsedTime.html":{}}}],["src/app/shared/actions/history.actions.ts:71",{"_index":2350,"title":{},"body":{"classes/UpdateElapsedTimeSucceeded.html":{}}}],["src/app/shared/actions/history.actions.ts:72",{"_index":2351,"title":{},"body":{"classes/UpdateElapsedTimeSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.t",{"_index":1532,"title":{},"body":{"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/platforms.actions.ts:11",{"_index":1538,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.ts:12",{"_index":1539,"title":{},"body":{"classes/LoadOptionsSucceeded.html":{}}}],["src/app/shared/actions/platforms.actions.ts:5",{"_index":1533,"title":{},"body":{"classes/LoadOptions.html":{}}}],["src/app/shared/actions/progress.actions.t",{"_index":98,"title":{},"body":{"classes/AddNewProgressItem.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/progress.actions.ts:10",{"_index":101,"title":{},"body":{"classes/AddNewProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:15",{"_index":1554,"title":{},"body":{"classes/LoadProgressItems.html":{}}}],["src/app/shared/actions/progress.actions.ts:16",{"_index":1555,"title":{},"body":{"classes/LoadProgressItems.html":{}}}],["src/app/shared/actions/progress.actions.ts:21",{"_index":1556,"title":{},"body":{"classes/LoadProgressItemsSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:22",{"_index":1557,"title":{},"body":{"classes/LoadProgressItemsSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:27",{"_index":1862,"title":{},"body":{"classes/RemoveProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:28",{"_index":1863,"title":{},"body":{"classes/RemoveProgressItem.html":{}}}],["src/app/shared/actions/progress.actions.ts:33",{"_index":1864,"title":{},"body":{"classes/RemoveProgressItemSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:34",{"_index":1865,"title":{},"body":{"classes/RemoveProgressItemSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:39",{"_index":1591,"title":{},"body":{"classes/MarkComplete.html":{}}}],["src/app/shared/actions/progress.actions.ts:40",{"_index":1592,"title":{},"body":{"classes/MarkComplete.html":{}}}],["src/app/shared/actions/progress.actions.ts:45",{"_index":1612,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:46",{"_index":1613,"title":{},"body":{"classes/MarkCompleteSucceeded.html":{}}}],["src/app/shared/actions/progress.actions.ts:9",{"_index":100,"title":{},"body":{"classes/AddNewProgressItem.html":{}}}],["src/app/shared/actions/timer.actions.t",{"_index":739,"title":{},"body":{"classes/CancelTimer.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/actions/timer.actions.ts:15",{"_index":1901,"title":{},"body":{"classes/SetGame.html":{}}}],["src/app/shared/actions/timer.actions.ts:16",{"_index":1902,"title":{},"body":{"classes/SetGame.html":{}}}],["src/app/shared/actions/timer.actions.ts:21",{"_index":1917,"title":{},"body":{"classes/SetPlatform.html":{}}}],["src/app/shared/actions/timer.actions.ts:22",{"_index":1918,"title":{},"body":{"classes/SetPlatform.html":{}}}],["src/app/shared/actions/timer.actions.ts:27",{"_index":1929,"title":{},"body":{"classes/SetStartTime.html":{}}}],["src/app/shared/actions/timer.actions.ts:28",{"_index":1930,"title":{},"body":{"classes/SetStartTime.html":{}}}],["src/app/shared/actions/timer.actions.ts:33",{"_index":1885,"title":{},"body":{"classes/SaveTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:34",{"_index":1886,"title":{},"body":{"classes/SaveTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:39",{"_index":1887,"title":{},"body":{"classes/SaveTimerInfoSucceeded.html":{}}}],["src/app/shared/actions/timer.actions.ts:40",{"_index":1888,"title":{},"body":{"classes/SaveTimerInfoSucceeded.html":{}}}],["src/app/shared/actions/timer.actions.ts:45",{"_index":740,"title":{},"body":{"classes/CancelTimer.html":{}}}],["src/app/shared/actions/timer.actions.ts:51",{"_index":1558,"title":{},"body":{"classes/LoadTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:52",{"_index":1559,"title":{},"body":{"classes/LoadTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:57",{"_index":1935,"title":{},"body":{"classes/SetTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:58",{"_index":1936,"title":{},"body":{"classes/SetTimerInfo.html":{}}}],["src/app/shared/actions/timer.actions.ts:9",{"_index":1874,"title":{},"body":{"classes/ResetTimer.html":{}}}],["src/app/shared/components/spinner/spinner.component.t",{"_index":2049,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:12",{"_index":2054,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:8",{"_index":2053,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/models/history.models.t",{"_index":1432,"title":{},"body":{"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/models/progress.models.t",{"_index":768,"title":{},"body":{"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressItem.html":{}}}],["src/app/shared/models/shared.models.t",{"_index":1026,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["src/app/shared/models/shared.models.ts:5",{"_index":1028,"title":{},"body":{"interfaces/Dictionary.html":{}}}],["src/app/shared/models/timer.models.t",{"_index":328,"title":{},"body":{"interfaces/AddTimerInfo.html":{},"interfaces/TimerInfo.html":{}}}],["src/app/shared/pipes/elaps",{"_index":1060,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["src/app/shared/pipes/pluralize.pipe.t",{"_index":1714,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["src/app/shared/pipes/pluralize.pipe.ts:5",{"_index":1719,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["src/app/shared/pipes/time.pipe.t",{"_index":2216,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/shared/pipes/time.pipe.ts:8",{"_index":2218,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/shared/reducers/history.reducer.t",{"_index":1348,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/State-2.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/platforms.reducer.t",{"_index":2142,"title":{},"body":{"interfaces/State-3.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/progress.reducer.t",{"_index":1823,"title":{},"body":{"interfaces/ProgressEntity.html":{},"interfaces/State-4.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/reducers/root.reducer.t",{"_index":1957,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["src/app/shared/reducers/timer.reducer.t",{"_index":2147,"title":{},"body":{"interfaces/State-6.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/services/elaps",{"_index":1071,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["src/app/shared/shared.module.t",{"_index":1950,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/utils/history.utils.t",{"_index":2632,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/index.t",{"_index":1094,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["ssnjrthegr8",{"_index":2518,"title":{},"body":{"index.html":{}}}],["start",{"_index":220,"title":{"index.html":{},"license.html":{}},"body":{"components/AddPlayingComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"classes/LoadTimerInfo.html":{},"components/PlayingItemComponent.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["startday",{"_index":2062,"title":{},"body":{"interfaces/State-10.html":{}}}],["startentrydata",{"_index":765,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/PlayingDisplayData.html":{}}}],["startentryid",{"_index":122,"title":{},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"interfaces/State-4.html":{}}}],["startlastmonth",{"_index":2093,"title":{},"body":{"interfaces/State-10.html":{}}}],["startlastweek",{"_index":2080,"title":{},"body":{"interfaces/State-10.html":{}}}],["startmonth",{"_index":2084,"title":{},"body":{"interfaces/State-10.html":{}}}],["startofmonth",{"_index":2065,"title":{},"body":{"interfaces/State-10.html":{}}}],["startofmonth(endlastmonth",{"_index":2094,"title":{},"body":{"interfaces/State-10.html":{}}}],["startofmonth(now",{"_index":2085,"title":{},"body":{"interfaces/State-10.html":{}}}],["startofweek",{"_index":2066,"title":{},"body":{"interfaces/State-10.html":{}}}],["startofweek(endlastweek",{"_index":2081,"title":{},"body":{"interfaces/State-10.html":{}}}],["startofweek(now",{"_index":2071,"title":{},"body":{"interfaces/State-10.html":{}}}],["startthismonth",{"_index":2090,"title":{},"body":{"interfaces/State-10.html":{}}}],["startthisweek",{"_index":2077,"title":{},"body":{"interfaces/State-10.html":{}}}],["starttim",{"_index":124,"title":{},"body":{"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryCollection.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/ProgressItem.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"interfaces/State-12.html":{},"interfaces/State-2.html":{},"interfaces/State-6.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["starttimeel",{"_index":179,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["starttimeel.valu",{"_index":2260,"title":{},"body":{"components/TimerComponent.html":{}}}],["starttimeinm",{"_index":1067,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["startweek",{"_index":2070,"title":{},"body":{"interfaces/State-10.html":{}}}],["state",{"_index":194,"title":{"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/AuthState.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"interfaces/MarkCompleteEntity.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressEntity.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/SharedState.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["state.addplay",{"_index":891,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["state.daterang",{"_index":1017,"title":{},"body":{"interfaces/DashboardState.html":{},"interfaces/State-11.html":{}}}],["state.display",{"_index":2136,"title":{},"body":{"interfaces/State-19.html":{},"interfaces/TrackerState.html":{}}}],["state.entriestoshow",{"_index":2123,"title":{},"body":{"interfaces/State-18.html":{}}}],["state.histori",{"_index":1984,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.info",{"_index":1785,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/State-17.html":{}}}],["state.markcomplet",{"_index":893,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["state.platform",{"_index":1986,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.progress",{"_index":1988,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.statu",{"_index":683,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["state.tab",{"_index":895,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["state.tim",{"_index":1990,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["state.url",{"_index":584,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.us",{"_index":681,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["statekey",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["statu",{"_index":664,"title":{},"body":{"interfaces/AuthState.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-7.html":{}}}],["status.attemptinglogin",{"_index":689,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["status.reduc",{"_index":672,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["status.validationmessag",{"_index":691,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["statusact",{"_index":2192,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setattemptinglogin(fals",{"_index":2176,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setattemptinglogin(tru",{"_index":2185,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setvalidationmessag",{"_index":2190,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statusactions.setvalidationmessage(validationmessag",{"_index":2177,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["statuseffect",{"_index":604,"title":{"injectables/StatusEffects.html":{}},"body":{"modules/AuthModule.html":{},"injectables/StatusEffects.html":{}}}],["stop",{"_index":2245,"title":{},"body":{"components/TimerComponent.html":{}}}],["stoptim",{"_index":2226,"title":{},"body":{"components/TimerComponent.html":{}}}],["storagebucket",{"_index":1107,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{}}}],["store",{"_index":156,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"injectables/ElapsedTimeService.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["storedevtoolsmodul",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instru",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodul",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{}}}],["storemodule.forfeature('auth",{"_index":612,"title":{},"body":{"modules/AuthModule.html":{}}}],["storemodule.forfeature('complet",{"_index":872,"title":{},"body":{"modules/CompletionModule.html":{}}}],["storemodule.forfeature('dashboard",{"_index":1004,"title":{},"body":{"modules/DashboardModule.html":{}}}],["storemodule.forfeature('profil",{"_index":1769,"title":{},"body":{"modules/ProfileModule.html":{}}}],["storemodule.forfeature('shar",{"_index":1956,"title":{},"body":{"modules/SharedModule.html":{}}}],["storemodule.forfeature('track",{"_index":2346,"title":{},"body":{"modules/TrackerModule.html":{}}}],["storemodule.forroot(reduc",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodul",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":44,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AuthFormComponent.html":{},"injectables/AuthService.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"interfaces/Dictionary.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsService.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressCollection.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-16.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"pipes/TimePipe.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{}}}],["styleurl",{"_index":140,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["subday",{"_index":2067,"title":{},"body":{"interfaces/State-10.html":{}}}],["subdays(startthismonth",{"_index":2092,"title":{},"body":{"interfaces/State-10.html":{}}}],["subdays(startthisweek",{"_index":2079,"title":{},"body":{"interfaces/State-10.html":{}}}],["subject",{"_index":2554,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":2549,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":2560,"title":{},"body":{"license.html":{}}}],["succeed",{"_index":46,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"classes/CancelTimer.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetTimerInfo.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["support",{"_index":2583,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":188,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"interfaces/RouteEntry.html":{},"components/TimerComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["swimlane/ngx",{"_index":995,"title":{},"body":{"modules/DashboardModule.html":{},"modules/LibraryModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1269,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/HistoryEntity.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State.html":{},"interfaces/State-10.html":{},"interfaces/State-12.html":{},"interfaces/State-13.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-18.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-6.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{}}}],["switchmap",{"_index":323,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(act",{"_index":1309,"title":{},"body":{"injectables/HistoryEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap(addplay",{"_index":306,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["switchmap(addtimerinfo",{"_index":2281,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["switchmap(userid",{"_index":2274,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["t",{"_index":1027,"title":{},"body":{"interfaces/Dictionary.html":{},"interfaces/IHasId.html":{},"interfaces/NgSelectValue.html":{}}}],["tab",{"_index":874,"title":{},"body":{"interfaces/CompletionState.html":{},"classes/SetVisibleTab.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"components/TabsComponent.html":{}}}],["tab.reduc",{"_index":883,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["tab.tab",{"_index":903,"title":{},"body":{"interfaces/CompletionState.html":{},"interfaces/State-14.html":{}}}],["tabs'},{'nam",{"_index":283,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tabs.component.html",{"_index":2197,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs.component.scss",{"_index":2196,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabscompon",{"_index":282,"title":{"components/TabsComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"modules/CompletionModule.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["tabtyp",{"_index":812,"title":{},"body":{"components/CompletionComponent.html":{},"classes/SetVisibleTab.html":{},"interfaces/State-15.html":{},"components/TabsComponent.html":{},"miscellaneous/typealiases.html":{}}}],["taglin",{"_index":1454,"title":{},"body":{"components/HomeComponent.html":{}}}],["take",{"_index":577,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":586,"title":{},"body":{"guards/AuthGuard.html":{}}}],["takefrom",{"_index":2311,"title":{},"body":{"components/TrackerComponent.html":{}}}],["takefrom(historygroup",{"_index":2319,"title":{},"body":{"components/TrackerComponent.html":{}}}],["technolog",{"_index":2494,"title":{},"body":{"index.html":{}}}],["templat",{"_index":127,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["templateurl",{"_index":142,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["test",{"_index":2509,"title":{},"body":{"index.html":{}}}],["test:mocha",{"_index":2513,"title":{},"body":{"index.html":{}}}],["test:nyan",{"_index":2516,"title":{},"body":{"index.html":{}}}],["this.act",{"_index":300,"title":{},"body":{"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"injectables/PlatformsEffects.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"injectables/StatusEffects.html":{},"injectables/TimerEffects.html":{},"injectables/UserEffects.html":{}}}],["this.addplayinginfo",{"_index":826,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.addplayinginfo$.pipe(map(info",{"_index":828,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.afauth.auth.signinwithpopup(provid",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authst",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs.collection('histori",{"_index":1126,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.afs.collection('platform",{"_index":1164,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.afs.collection('profil",{"_index":1179,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.afs.collection('progress",{"_index":1193,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.afs.collection('tim",{"_index":1213,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.authform",{"_index":555,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.valid",{"_index":562,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.value.email",{"_index":564,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authform.value.password",{"_index":565,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.authservice.getauthst",{"_index":2380,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.resetpassword(action.email",{"_index":2400,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithemail(action.email",{"_index":2371,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithfacebook",{"_index":2376,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithgoogl",{"_index":2389,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signinwithtwitt",{"_index":2409,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signout",{"_index":2394,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.authservice.signupwithemail(action.email",{"_index":2405,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.bargraphbaseconfig",{"_index":948,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.builder.group",{"_index":556,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.completeddisplaydata",{"_index":845,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.addplayinginfo",{"_index":827,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.markcompleteent",{"_index":842,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.completionstore.select(completionselectors.visibletab",{"_index":848,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.currenttim",{"_index":1083,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["this.dashboardstore.select(dashboardselectors.datelist",{"_index":970,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.dashboardstore.select(dashboardselectors.rangetyp",{"_index":989,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.daterangetyp",{"_index":988,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.displaydata.item.id",{"_index":785,"title":{},"body":{"components/CompletedItemComponent.html":{},"components/PlayingItemComponent.html":{}}}],["this.displaydata.markcomplete.endtim",{"_index":1705,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.displaydata.markcomplete.showextra",{"_index":1699,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.displaydata.startentrydata",{"_index":1704,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["this.editnam",{"_index":1741,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.elapsedtim",{"_index":2315,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.elapsedtimeservice.getelapsedtime('00:00:00",{"_index":2316,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.elapsedtimeservice.getelapsedtime('track",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["this.emailauth.emit",{"_index":563,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.emitfinishedit",{"_index":1058,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["this.facebookauth.emit(nul",{"_index":567,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.finishedit.emit(nul",{"_index":1054,"title":{},"body":{"components/EditDisplayNameComponent.html":{}}}],["this.gam",{"_index":205,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletionComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["this.getauthenticatedaction(authdata",{"_index":2384,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.getcurrenttim",{"_index":1087,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["this.gethistoryentity(histori",{"_index":1132,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getnewhistoryitem(info",{"_index":1135,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getnewprogressitem(addplay",{"_index":1199,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getus",{"_index":2437,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getuseritemcollection(addplaying.userid).doc(newitem.id).set(newitem",{"_index":1200,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(info.userid).doc(newitem.id).set(newitem",{"_index":1136,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.getuseritemcollection(userid).doc(itemid).delet",{"_index":1139,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(userid).doc(itemid).upd",{"_index":1142,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.getuseritemcollection(userid).valuechanges().pipe(first",{"_index":1129,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.googleauth.emit(nul",{"_index":566,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.graphconfig",{"_index":943,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.hidenavcont",{"_index":1665,"title":{},"body":{"components/NavComponent.html":{}}}],["this.historycollect",{"_index":1125,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.historycollection.doc(userid).collection('item",{"_index":1152,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["this.historygroup",{"_index":821,"title":{},"body":{"components/CompletionComponent.html":{},"components/TrackerComponent.html":{}}}],["this.historygroupings$.pipe(map(group",{"_index":823,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.historyservice.deletehistoryitem(action.userid",{"_index":1317,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.gethistorylist(action.userid",{"_index":1310,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.savetimerinfo(addtimerinfo",{"_index":2282,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["this.historyservice.updateelapsedtime(action.userid",{"_index":1329,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.updategame(action.userid",{"_index":1337,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.historyservice.updateplatform(action.userid",{"_index":1343,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["this.info",{"_index":215,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/TimerComponent.html":{}}}],["this.info.gam",{"_index":2251,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.info.platform",{"_index":2252,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.info.starttim",{"_index":2253,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.item.gam",{"_index":1413,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["this.item.id",{"_index":1409,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["this.item.platform",{"_index":1414,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["this.libraryentri",{"_index":1491,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.loggingin",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.messag",{"_index":1239,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.numentriestoshow",{"_index":1496,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.passwordform",{"_index":1235,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.passwordform.valid",{"_index":1236,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.passwordform.value.email",{"_index":1237,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.platformscollect",{"_index":1163,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.platformscollection.valuechanges().pipe(first",{"_index":1167,"title":{},"body":{"interfaces/FirestorePlatformsItem.html":{},"injectables/PlatformsService.html":{}}}],["this.platformsopt",{"_index":2324,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.platformsservice.getplatformsopt",{"_index":1675,"title":{},"body":{"injectables/PlatformsEffects.html":{}}}],["this.playingdisplaydata",{"_index":843,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.potentiald",{"_index":834,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.potentialplatform",{"_index":830,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.profilecollect",{"_index":1178,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profilecollection.doc(userid).set",{"_index":1185,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profilecollection.doc(userid).valuechanges().pipe(first",{"_index":1182,"title":{},"body":{"interfaces/FirestoreProfileItem.html":{},"injectables/ProfileService.html":{}}}],["this.profileservice.getprofile(action.userid",{"_index":1749,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["this.profileservice.setdisplayname(action.userid",{"_index":1755,"title":{},"body":{"injectables/ProfileEffects.html":{}}}],["this.profilestore.select(profilecomponentselectors.info",{"_index":2438,"title":{},"body":{"injectables/UserService.html":{}}}],["this.progresscollect",{"_index":1192,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.progresscollection.doc(userid).collection('item",{"_index":1207,"title":{},"body":{"interfaces/FirestoreProgressItem.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressService.html":{}}}],["this.progressservice.getprogresslist(action.userid",{"_index":1792,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.markcompleted(action.userid",{"_index":1803,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.remove(action.userid",{"_index":1810,"title":{},"body":{"injectables/ProgressEffects.html":{}}}],["this.progressservice.saveaddplaying(addplay",{"_index":307,"title":{},"body":{"injectables/AddPlayingEffects.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":2382,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate(['/login",{"_index":581,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['login",{"_index":2395,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.navigate([returnurl",{"_index":2383,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.router.url",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setnumentriestoshow",{"_index":1493,"title":{},"body":{"components/LibraryComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbyd",{"_index":972,"title":{},"body":{"components/DashboardComponent.html":{},"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbygam",{"_index":822,"title":{},"body":{"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/LibraryComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historygroupingsbyplatform",{"_index":974,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.sharedstore.select(sharedselectors.historytrackedgam",{"_index":2323,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.platformsopt",{"_index":2325,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.progresscomplet",{"_index":840,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.sharedstore.select(sharedselectors.progressplay",{"_index":838,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this.sharedstore.select(sharedselectors.timerinfo",{"_index":1086,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"components/TrackerComponent.html":{}}}],["this.sharedstore.select(sharedselectors.userdataload",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showloadmorebutton",{"_index":2320,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.store.dispatch(new",{"_index":206,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent-1.html":{},"components/HistoryEntryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/UserService.html":{}}}],["this.store.select(authcomponentselectors.isuserloggedin",{"_index":579,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.store.select(authcomponentselectors.loggingin",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.store.select(authcomponentselectors.us",{"_index":2436,"title":{},"body":{"injectables/UserService.html":{}}}],["this.store.select(authcomponentselectors.validationmessag",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.timercollect",{"_index":1212,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timercollection.doc(userid).set",{"_index":1215,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timercollection.doc(userid).valuechanges().pipe(first",{"_index":1222,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["this.timerinfo",{"_index":2313,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.timerinfo$.pipe(map(info",{"_index":2314,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.timerservice.getnowtim",{"_index":1415,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["this.timerservice.gettimerinfo(userid",{"_index":2275,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["this.timerservice.resettimer(this.userid",{"_index":2255,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setgame(this.userid",{"_index":2257,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setplatform(this.userid",{"_index":2259,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.setstarttime(this.userid",{"_index":2262,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.timerservice.settimer(this.userid",{"_index":1417,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{}}}],["this.timevsdategraphdata",{"_index":976,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsdategraphdata$.pipe(map(x",{"_index":983,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsgamegraphdata",{"_index":980,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.timevsplatformgraphdata",{"_index":978,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.titleservice.settitle(titl",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["this.totaltim",{"_index":982,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.trackedgam",{"_index":2322,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.trackernavcapt",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["this.trackerstore.select(trackerselectors.entriestoshow",{"_index":2317,"title":{},"body":{"components/TrackerComponent.html":{}}}],["this.twitterauth.emit(nul",{"_index":568,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["this.userdataload",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userid",{"_index":203,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["this.userinfo",{"_index":1663,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userinfo.email",{"_index":1740,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.getuser().subscribe(us",{"_index":202,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"components/TimerComponent.html":{}}}],["this.userservice.getuserinfo().subscribe(userinfo",{"_index":1662,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userservice.logout",{"_index":1664,"title":{},"body":{"components/NavComponent.html":{}}}],["this.visibletab",{"_index":847,"title":{},"body":{"components/CompletionComponent.html":{}}}],["this_month",{"_index":1276,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{},"miscellaneous/typealiases.html":{}}}],["this_week",{"_index":1261,"title":{},"body":{"components/HeaderComponent-1.html":{},"interfaces/State-10.html":{},"miscellaneous/typealiases.html":{}}}],["time",{"_index":68,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"index.html":{}}}],["time.pip",{"_index":1953,"title":{},"body":{"modules/SharedModule.html":{}}}],["time.pipe.t",{"_index":1061,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["time.pipe.ts:8",{"_index":1066,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["time.servic",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{}}}],["time.service.t",{"_index":1072,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:17",{"_index":1076,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:20",{"_index":1077,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["time.service.ts:27",{"_index":1079,"title":{},"body":{"injectables/ElapsedTimeService.html":{}}}],["timedategraphcompon",{"_index":284,"title":{"components/TimeDateGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timegamegraphcompon",{"_index":286,"title":{"components/TimeGameGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timeinsecond",{"_index":2219,"title":{},"body":{"pipes/TimePipe.html":{}}}],["timepip",{"_index":870,"title":{"pipes/TimePipe.html":{}},"body":{"modules/CompletionModule.html":{},"modules/SharedModule.html":{},"pipes/TimePipe.html":{},"overview.html":{}}}],["timeplatformgraphcompon",{"_index":287,"title":{"components/TimePlatformGraphComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"overview.html":{}}}],["timeplay",{"_index":766,"title":{},"body":{"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"interfaces/MarkCompletePayload.html":{},"interfaces/PlayingDisplayData.html":{},"interfaces/ProgressItem.html":{}}}],["timer",{"_index":743,"title":{},"body":{"classes/CancelTimer.html":{},"interfaces/FirestoreTimerItem.html":{},"classes/LoadTimerInfo.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{}}}],["timer'},{'nam",{"_index":289,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["timer.component.html",{"_index":2223,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":2222,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.reduc",{"_index":1969,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["timeract",{"_index":498,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"injectables/TimerEffects.html":{}}}],["timeractions.loadtimerinfo",{"_index":2272,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.loadtimerinfo(action.user.uid",{"_index":488,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["timeractions.resettim",{"_index":2269,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.savetimerinfo",{"_index":2280,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.savetimerinfosucceed",{"_index":1324,"title":{},"body":{"injectables/HistoryEffects.html":{}}}],["timeractions.savetimerinfosucceeded(item",{"_index":2283,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.settimerinfo(data",{"_index":2276,"title":{},"body":{"injectables/TimerEffects.html":{}}}],["timeractions.settimerinfo(timerinfo",{"_index":1416,"title":{},"body":{"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{}}}],["timercollect",{"_index":1211,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timercompon",{"_index":288,"title":{"components/TimerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["timerdoc",{"_index":1221,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timerdoc.pipe(map(tim",{"_index":1223,"title":{},"body":{"interfaces/FirestoreTimerItem.html":{},"injectables/TimerService.html":{}}}],["timereffect",{"_index":2264,"title":{"injectables/TimerEffects.html":{}},"body":{"injectables/TimerEffects.html":{},"modules/TrackerModule.html":{}}}],["timerinfo",{"_index":329,"title":{"interfaces/TimerInfo.html":{}},"body":{"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/FirestoreTimerItem.html":{},"components/HistoryEntryComponent.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{}}}],["timerservic",{"_index":1210,"title":{"injectables/TimerService.html":{}},"body":{"interfaces/FirestoreTimerItem.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"injectables/TimerService.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["timevsdategraphdata",{"_index":936,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timevsgamegraphdata",{"_index":937,"title":{},"body":{"components/DashboardComponent.html":{}}}],["timevsplatformgraphdata",{"_index":938,"title":{},"body":{"components/DashboardComponent.html":{}}}],["titl",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["titleservic",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["togglenav",{"_index":1623,"title":{},"body":{"components/NavComponent.html":{}}}],["toggleshowextra",{"_index":1683,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["tooltip",{"_index":1245,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip'},{'nam",{"_index":253,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tooltip.compon",{"_index":999,"title":{},"body":{"modules/DashboardModule.html":{}}}],["tooltip.component.html",{"_index":1247,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.scss",{"_index":1246,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.t",{"_index":1244,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.ts:13",{"_index":1248,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip.component.ts:16",{"_index":1249,"title":{},"body":{"components/GraphTooltipComponent.html":{}}}],["tooltip/graph",{"_index":998,"title":{},"body":{"modules/DashboardModule.html":{},"components/GraphTooltipComponent.html":{}}}],["tort",{"_index":2579,"title":{},"body":{"license.html":{}}}],["total",{"_index":949,"title":{},"body":{"components/DashboardComponent.html":{}}}],["totaltim",{"_index":939,"title":{},"body":{"components/DashboardComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/LibraryEntry.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{}}}],["track",{"_index":1303,"title":{},"body":{"components/HistoryComponent.html":{},"components/HomeComponent.html":{},"components/NavComponent.html":{}}}],["trackedgam",{"_index":1294,"title":{},"body":{"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["tracker",{"_index":258,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State-19.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"index.html":{}}}],["tracker.compon",{"_index":2342,"title":{},"body":{"modules/TrackerModule.html":{}}}],["tracker.component.html",{"_index":2298,"title":{},"body":{"components/TrackerComponent.html":{}}}],["tracker.component.scss",{"_index":2297,"title":{},"body":{"components/TrackerComponent.html":{}}}],["trackercapt",{"_index":1624,"title":{},"body":{"components/NavComponent.html":{}}}],["trackercompon",{"_index":290,"title":{"components/TrackerComponent.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["trackermodul",{"_index":392,"title":{"modules/TrackerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrackerModule.html":{},"modules.html":{},"overview.html":{}}}],["trackernavcapt",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["trackerrout",{"_index":1621,"title":{},"body":{"components/NavComponent.html":{}}}],["trackerroute.capt",{"_index":1667,"title":{},"body":{"components/NavComponent.html":{}}}],["trackerselector",{"_index":2140,"title":{},"body":{"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["trackerst",{"_index":2127,"title":{"interfaces/TrackerState.html":{}},"body":{"interfaces/State-19.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{}}}],["trackerstor",{"_index":2302,"title":{},"body":{"components/TrackerComponent.html":{}}}],["trackingcategori",{"_index":517,"title":{},"body":{"components/AuthFormComponent.html":{},"components/NavComponent.html":{},"interfaces/RouteEntry.html":{}}}],["trackmyplaytim",{"_index":2491,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1063,"title":{},"body":{"pipes/ElapsedTimePipe.html":{},"pipes/PluralizePipe.html":{},"pipes/TimePipe.html":{}}}],["transform(starttimeinm",{"_index":1064,"title":{},"body":{"pipes/ElapsedTimePipe.html":{}}}],["transform(timeinsecond",{"_index":2217,"title":{},"body":{"pipes/TimePipe.html":{}}}],["transform(valu",{"_index":1716,"title":{},"body":{"pipes/PluralizePipe.html":{}}}],["travisci",{"_index":2500,"title":{},"body":{"index.html":{}}}],["tree",{"_index":129,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["true",{"_index":585,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreTimerItem.html":{},"interfaces/HistoryEntity.html":{},"components/NavComponent.html":{},"injectables/ProfileService.html":{},"interfaces/ProgressEntity.html":{},"interfaces/State-2.html":{},"interfaces/State-4.html":{},"injectables/TimerService.html":{}}}],["twitter",{"_index":548,"title":{},"body":{"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"miscellaneous/typealiases.html":{}}}],["twitter_login",{"_index":705,"title":{},"body":{"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{}}}],["twitterauth",{"_index":522,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["twitterlogin",{"_index":628,"title":{"classes/TwitterLogin.html":{}},"body":{"injectables/AuthService.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"classes/TwitterLogin.html":{},"injectables/UserEffects.html":{},"miscellaneous/typealiases.html":{}}}],["twittersignup",{"_index":1846,"title":{},"body":{"components/RegisterComponent.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"interfaces/CompletedDisplayData.html":{},"interfaces/CompletedItem.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DashboardComponent.html":{},"interfaces/DashboardState.html":{},"components/EditDisplayNameComponent.html":{},"pipes/ElapsedTimePipe.html":{},"injectables/ElapsedTimeService.html":{},"interfaces/EmailAuthEvent.html":{},"classes/EmailLogin.html":{},"interfaces/Environment.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/FirestorePlatformsItem.html":{},"interfaces/FirestoreProfileItem.html":{},"interfaces/FirestoreProgressItem.html":{},"interfaces/FirestoreTimerItem.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent-1.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"interfaces/HistoryEntity.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"components/HomeComponent.html":{},"interfaces/IHasId.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"interfaces/LibraryEntry.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"interfaces/MarkCompleteEntity.html":{},"interfaces/MarkCompleteItem.html":{},"interfaces/MarkCompletePayload.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"interfaces/NgSelectValue.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"injectables/PlatformsService.html":{},"interfaces/PlayingDisplayData.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileState.html":{},"interfaces/ProgressCollection.html":{},"injectables/ProgressEffects.html":{},"interfaces/ProgressEntity.html":{},"interfaces/ProgressItem.html":{},"injectables/ProgressService.html":{},"components/RegisterComponent.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"interfaces/RouteEntry.html":{},"interfaces/RouterStateUrl.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"interfaces/SharedState.html":{},"classes/SignUp.html":{},"interfaces/State.html":{},"interfaces/State-1.html":{},"interfaces/State-10.html":{},"interfaces/State-11.html":{},"interfaces/State-12.html":{},"interfaces/State-14.html":{},"interfaces/State-15.html":{},"interfaces/State-16.html":{},"interfaces/State-17.html":{},"interfaces/State-18.html":{},"interfaces/State-19.html":{},"interfaces/State-2.html":{},"interfaces/State-3.html":{},"interfaces/State-4.html":{},"interfaces/State-5.html":{},"interfaces/State-6.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"interfaces/State-9.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"pipes/TimePipe.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"interfaces/TrackerState.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":2590,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["uid",{"_index":2165,"title":{},"body":{"interfaces/State-9.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{}}}],["undefin",{"_index":727,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{},"miscellaneous/functions.html":{}}}],["updat",{"_index":55,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_elapsed_tim",{"_index":66,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_elapsed_time_succeed",{"_index":70,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_gam",{"_index":54,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_game_succeed",{"_index":59,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_platform",{"_index":61,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["update_platform_succeed",{"_index":64,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["updatedaterang",{"_index":1259,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["updatedaterange(daterangeel",{"_index":1264,"title":{},"body":{"components/HeaderComponent-1.html":{}}}],["updateelapsedtim",{"_index":69,"title":{"classes/UpdateElapsedTime.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updateelapsedtime(elapsedtimeel",{"_index":1396,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["updateelapsedtime(userid",{"_index":1145,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updateelapsedtimesucceed",{"_index":71,"title":{"classes/UpdateElapsedTimeSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updategam",{"_index":57,"title":{"classes/UpdateGame.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updategame(userid",{"_index":1141,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updategamesucceed",{"_index":60,"title":{"classes/UpdateGameSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemgamepayload",{"_index":30,"title":{"interfaces/UpdateHistoryItemGamePayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemplatformpayload",{"_index":31,"title":{"interfaces/UpdateHistoryItemPlatformPayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatehistoryitemtimespayload",{"_index":32,"title":{"interfaces/UpdateHistoryItemTimesPayload.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"components/HistoryEntryComponent.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updatepayload",{"_index":1354,"title":{},"body":{"interfaces/HistoryEntity.html":{},"interfaces/HistoryGrouping.html":{},"interfaces/HistoryListItem.html":{},"interfaces/State-2.html":{},"interfaces/UpdateHistoryItemGamePayload.html":{},"interfaces/UpdateHistoryItemPlatformPayload.html":{},"interfaces/UpdateHistoryItemTimesPayload.html":{},"miscellaneous/typealiases.html":{}}}],["updateplatform",{"_index":63,"title":{"classes/UpdatePlatform.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["updateplatform(platformel",{"_index":1400,"title":{},"body":{"components/HistoryEntryComponent.html":{}}}],["updateplatform(userid",{"_index":1144,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["updateplatformsucceed",{"_index":65,"title":{"classes/UpdatePlatformSucceeded.html":{}},"body":{"classes/AddNewHistoryItem.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":924,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/State-1.html":{}}}],["us",{"_index":2545,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":665,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"classes/Authenticated.html":{},"classes/EmailLogin.html":{},"classes/FacebookLogin.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"classes/Logout.html":{},"classes/NotAuthenticated.html":{},"classes/ResetPassword.html":{},"classes/SignUp.html":{},"interfaces/State-7.html":{},"classes/TwitterLogin.html":{},"interfaces/User.html":{},"injectables/UserEffects.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["user.reduc",{"_index":674,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/State-7.html":{}}}],["user.uid",{"_index":204,"title":{},"body":{"components/AddPlayingComponent.html":{},"interfaces/AuthState.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/PlayingItemComponent.html":{},"interfaces/State-7.html":{},"components/TimerComponent.html":{}}}],["useract",{"_index":500,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useractions.authent",{"_index":484,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/UserEffects.html":{}}}],["useractions.authenticated(us",{"_index":2420,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.emaillogin",{"_index":2370,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.emaillogin(event.email",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{}}}],["useractions.facebook_login",{"_index":2182,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.facebooklogin",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.getus",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.google_login",{"_index":2181,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.googlelogin",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["useractions.logout",{"_index":2393,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["useractions.not_authent",{"_index":2187,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.notauthent",{"_index":2385,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.resetpassword",{"_index":2399,"title":{},"body":{"injectables/UserEffects.html":{}}}],["useractions.resetpassword(email",{"_index":1238,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["useractions.resetpassword(this.userinfo.email",{"_index":1739,"title":{},"body":{"components/ProfileComponent.html":{}}}],["useractions.signup",{"_index":2180,"title":{},"body":{"injectables/StatusEffects.html":{},"injectables/UserEffects.html":{}}}],["useractions.signup(event.email",{"_index":1855,"title":{},"body":{"components/RegisterComponent.html":{}}}],["useractions.twitter_login",{"_index":2183,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["useractions.twitterlogin",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserEffects.html":{}}}],["userdataload",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["usereffect",{"_index":606,"title":{"injectables/UserEffects.html":{}},"body":{"modules/AuthModule.html":{},"injectables/UserEffects.html":{}}}],["userid",{"_index":43,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewProgressItem.html":{},"interfaces/AddPlaying.html":{},"components/AddPlayingComponent.html":{},"interfaces/AddPlayingInfo.html":{},"interfaces/AddTimerInfo.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"injectables/HistoryService.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/PlayingItemComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProgressService.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/ResetTimer.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetGame.html":{},"classes/SetPlatform.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetStartTime.html":{},"classes/SetTimerInfo.html":{},"components/TimerComponent.html":{},"interfaces/TimerInfo.html":{},"injectables/TimerService.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{}}}],["userinfo",{"_index":1622,"title":{"interfaces/UserInfo.html":{}},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"interfaces/UserInfo.html":{},"injectables/UserService.html":{}}}],["userinfo.displaynam",{"_index":1669,"title":{},"body":{"components/NavComponent.html":{},"components/ProfileComponent.html":{}}}],["userinfo.email",{"_index":1742,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userservic",{"_index":157,"title":{"injectables/UserService.html":{}},"body":{"components/AddPlayingComponent.html":{},"components/CompletedItemComponent.html":{},"modules/CompletionModule.html":{},"components/EditDisplayNameComponent.html":{},"components/HistoryEntryComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{},"modules/TrackerModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["util",{"_index":1490,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/add",{"_index":198,"title":{},"body":{"components/AddPlayingComponent.html":{}}}],["utils/colorscheme.util",{"_index":964,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils/date.util",{"_index":1082,"title":{},"body":{"injectables/ElapsedTimeService.html":{},"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/display",{"_index":819,"title":{},"body":{"components/CompletionComponent.html":{}}}],["utils/display.util",{"_index":2312,"title":{},"body":{"components/TrackerComponent.html":{}}}],["utils/graph",{"_index":968,"title":{},"body":{"components/DashboardComponent.html":{}}}],["utils/histori",{"_index":1972,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/history.util",{"_index":1975,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["utils/librari",{"_index":1487,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/playing.util",{"_index":1697,"title":{},"body":{"components/PlayingItemComponent.html":{}}}],["utils/res",{"_index":1489,"title":{},"body":{"components/LibraryComponent.html":{}}}],["utils/validation.util",{"_index":2194,"title":{},"body":{"injectables/StatusEffects.html":{}}}],["uuid",{"_index":1097,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/FirebaseConfig.html":{},"dependencies.html":{}}}],["valid",{"_index":551,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{}}}],["validationmessag",{"_index":693,"title":{},"body":{"interfaces/AuthState.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetValidationMessage.html":{},"interfaces/State-7.html":{},"interfaces/State-8.html":{},"injectables/StatusEffects.html":{}}}],["validators.email",{"_index":559,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["validators.minlength(6",{"_index":561,"title":{},"body":{"components/AuthFormComponent.html":{}}}],["validators.requir",{"_index":558,"title":{},"body":{"components/AuthFormComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["valu",{"_index":25,"title":{},"body":{"classes/AddNewHistoryItem.html":{},"classes/AddNewItem.html":{},"classes/AddNewProgressItem.html":{},"components/AddPlayingComponent.html":{},"injectables/AddPlayingEffects.html":{},"injectables/AuthEffects.html":{},"components/AuthFormComponent.html":{},"classes/Authenticated.html":{},"interfaces/BarGraphConfig.html":{},"classes/CancelTimer.html":{},"components/CompletedItemComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"classes/EmailLogin.html":{},"classes/Error.html":{},"classes/FacebookLogin.html":{},"components/ForgotPasswordComponent.html":{},"classes/GetUser.html":{},"classes/GoogleLogin.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"injectables/HistoryEffects.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"classes/IncrementDaysToShow.html":{},"components/LibraryComponent.html":{},"classes/LoadHistoryItems.html":{},"classes/LoadHistoryItemsSucceeded.html":{},"classes/LoadItems.html":{},"components/LoadMoreComponent.html":{},"classes/LoadOptions.html":{},"classes/LoadOptionsSucceeded.html":{},"classes/LoadProfile.html":{},"classes/LoadProfileSucceeded.html":{},"classes/LoadProgressItems.html":{},"classes/LoadProgressItemsSucceeded.html":{},"classes/LoadTimerInfo.html":{},"components/LockedHistoryEntryComponent.html":{},"classes/Logout.html":{},"classes/MarkComplete.html":{},"classes/MarkCompleteSucceeded.html":{},"components/NavComponent.html":{},"classes/NotAuthenticated.html":{},"interfaces/PieChartConfig.html":{},"injectables/PlatformsEffects.html":{},"components/PlayingItemComponent.html":{},"pipes/PluralizePipe.html":{},"components/ProfileComponent.html":{},"injectables/ProfileEffects.html":{},"injectables/ProgressEffects.html":{},"classes/Remove.html":{},"classes/RemoveHistoryItem.html":{},"classes/RemoveHistoryItemSucceeded.html":{},"classes/RemoveProgressItem.html":{},"classes/RemoveProgressItemSucceeded.html":{},"classes/Reset.html":{},"classes/ResetPassword.html":{},"classes/ResetTimer.html":{},"classes/Save.html":{},"classes/SaveSucceeded.html":{},"classes/SaveTimerInfo.html":{},"classes/SaveTimerInfoSucceeded.html":{},"classes/SetAttemptingLogin.html":{},"classes/SetEndTime.html":{},"classes/SetGame.html":{},"classes/SetGame-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetPlatform.html":{},"classes/SetPlatform-1.html":{},"classes/SetProfileDisplayName.html":{},"classes/SetProfileDisplayNameSucceeded.html":{},"classes/SetShowExtra.html":{},"classes/SetStartTime.html":{},"classes/SetStartTime-1.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{},"classes/SetTimerInfo.html":{},"classes/SetValidationMessage.html":{},"classes/SetVisibleTab.html":{},"classes/SignUp.html":{},"injectables/StatusEffects.html":{},"components/TabsComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerEffects.html":{},"classes/TwitterLogin.html":{},"classes/UpdateElapsedTime.html":{},"classes/UpdateElapsedTimeSucceeded.html":{},"classes/UpdateGame.html":{},"classes/UpdateGameSucceeded.html":{},"classes/UpdatePlatform.html":{},"classes/UpdatePlatformSucceeded.html":{},"injectables/UserEffects.html":{}}}],["var",{"_index":227,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"components/TrackerComponent.html":{}}}],["via",{"_index":2496,"title":{},"body":{"index.html":{}}}],["video",{"_index":2493,"title":{},"body":{"index.html":{}}}],["view",{"_index":726,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["visibl",{"_index":1946,"title":{},"body":{"classes/SetVisibleTab.html":{}}}],["visibletab",{"_index":797,"title":{},"body":{"components/CompletionComponent.html":{},"interfaces/CompletionState.html":{},"interfaces/State-14.html":{},"components/TabsComponent.html":{}}}],["vivid",{"_index":2615,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["void",{"_index":169,"title":{},"body":{"components/AddPlayingComponent.html":{},"components/AppComponent.html":{},"components/AuthFormComponent.html":{},"components/CompletedItemComponent.html":{},"components/CompletionComponent.html":{},"components/DashboardComponent.html":{},"components/EditDisplayNameComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GraphTooltipComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderComponent-1.html":{},"components/HeaderComponent-2.html":{},"components/HistoryComponent.html":{},"components/HistoryEntryComponent.html":{},"components/HomeComponent.html":{},"components/LibraryComponent.html":{},"components/LoadMoreComponent.html":{},"components/LockedHistoryEntryComponent.html":{},"components/LoginComponent.html":{},"components/NavComponent.html":{},"components/PlayingItemComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SpinnerComponent.html":{},"components/TabsComponent.html":{},"components/TimeDateGraphComponent.html":{},"components/TimeGameGraphComponent.html":{},"components/TimePlatformGraphComponent.html":{},"components/TimerComponent.html":{},"injectables/TimerService.html":{},"components/TrackerComponent.html":{},"injectables/UserService.html":{}}}],["warranti",{"_index":2562,"title":{},"body":{"license.html":{}}}],["way",{"_index":2515,"title":{},"body":{"index.html":{}}}],["web",{"_index":1150,"title":{},"body":{"interfaces/FirestoreHistoryItem.html":{},"interfaces/HistoryCollection.html":{},"injectables/HistoryService.html":{}}}],["week",{"_index":1280,"title":{},"body":{"components/HeaderComponent-1.html":{},"classes/SetLastMonth.html":{},"classes/SetLastWeek.html":{},"classes/SetThisMonth.html":{},"classes/SetThisWeek.html":{}}}],["whether",{"_index":2577,"title":{},"body":{"license.html":{}}}],["window:res",{"_index":1479,"title":{},"body":{"components/LibraryComponent.html":{}}}],["without",{"_index":2540,"title":{},"body":{"license.html":{}}}],["x",{"_index":733,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["x.endentryid",{"_index":2010,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["x.reduce((a",{"_index":984,"title":{},"body":{"components/DashboardComponent.html":{}}}],["x.startentryid",{"_index":2008,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/State-5.html":{}}}],["xaxislabel",{"_index":722,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["yaxislabel",{"_index":723,"title":{},"body":{"interfaces/BarGraphConfig.html":{},"components/DashboardComponent.html":{},"interfaces/GraphConfig.html":{},"interfaces/GraphDataItem.html":{},"interfaces/PieChartConfig.html":{}}}],["zone.j",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompletionModule.html":{},"modules/DashboardModule.html":{},"modules/HomeModule.html":{},"modules/LibraryModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TrackerModule.html":{},"overview.html":{}}}],["zrimsek",{"_index":2527,"title":{},"body":{"license.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddNewHistoryItem.html":{"url":"classes/AddNewHistoryItem.html","title":"class - AddNewHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: HistoryEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    HistoryEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     HistoryEntity\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_HISTORY_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewItem.html":{"url":"classes/AddNewItem.html","title":"class - AddNewItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewProgressItem.html":{"url":"classes/AddNewProgressItem.html","title":"class - AddNewProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: ProgressEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    ProgressEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     ProgressEntity\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ADD_NEW_PROGRESS_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddPlaying.html":{"url":"interfaces/AddPlaying.html","title":"interface - AddPlaying","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddPlaying\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/add-playing.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        startEntryId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddPlayingInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddPlaying {\n  userId: string;\n  startEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddPlayingComponent.html":{"url":"components/AddPlayingComponent.html","title":"component - AddPlayingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddPlayingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/add-playing/add-playing.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-add-playing\n            \n\n            \n                styleUrls\n                add-playing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-playing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetInfo\n                            \n                            \n                                savePlaying\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dates\n                            \n                            \n                                game\n                            \n                            \n                                gameGroupings\n                            \n                            \n                                games\n                            \n                            \n                                info\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dates\n                    \n                    \n                            \n                            Type :    number[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gameGroupings\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        games\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        info\n                    \n                    \n                            \n                            Type :    AddPlayingInfo\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platforms\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            savePlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nsavePlaying()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(startTimeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    add: faPlusSquare\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/add-playing/add-playing.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as appActions from '../../../../actions/app.actions';\nimport * as actions from '../../actions/add-playing.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../../../shared/models';\nimport { AddPlaying, AddPlayingInfo } from '../../models';\n\nimport { findMatchingHistoryEntry } from '../../utils/add-playing.utils';\n\n@Component({\n  selector: 'app-completion-add-playing',\n  templateUrl: './add-playing.component.html',\n  styleUrls: ['./add-playing.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddPlayingComponent implements OnInit {\n\n  @Input() gameGroupings: HistoryGrouping[] = [];\n  @Input() games: string[];\n  @Input() game: string | null = null;\n  @Input() info: AddPlayingInfo;\n  @Input() platforms: string[] = [];\n  @Input() dates: number[] = [];\n  userId = '';\n  icons = {\n    add: faPlusSquare\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  setGame() {\n    if (this.game) {\n      const game = this.game;\n      this.store.dispatch(new actions.SetGame(game));\n    }\n  }\n\n  setPlatform(platformEl: HTMLSelectElement) {\n    const platform = platformEl.value;\n    this.store.dispatch(new actions.SetPlatform(platform));\n  }\n\n  setStartTime(startTimeEl: HTMLSelectElement) {\n    const startTime = Number.parseInt(startTimeEl.value);\n    this.store.dispatch(new actions.SetStartTime(startTime));\n  }\n\n  resetInfo() {\n    this.store.dispatch(new actions.Reset());\n  }\n\n  savePlaying() {\n    const historyItem = findMatchingHistoryEntry(this.gameGroupings, this.info);\n    if (historyItem) {\n      const addPlaying: AddPlaying = {\n        userId: this.userId,\n        startEntryId: historyItem.id\n      };\n      this.store.dispatch(new actions.Save(addPlaying));\n    } else {\n      this.store.dispatch(new appActions.Error(actions.SAVE, 'No matching history item found.'));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    \n      Start Time\n      {{ option | date:'M/d/y hh:mm a' }}\n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}                  Start Time      {{ option | date:\\'M/d/y hh:mm a\\' }}                        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddPlayingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddPlayingEffects.html":{"url":"injectables/AddPlayingEffects.html","title":"injectable - AddPlayingEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AddPlayingEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/effects/add-playing.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                save$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, progressService: ProgressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/effects/add-playing.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                    ProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        save$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(addPlayingActions.SAVE)\n      .pipe(\n        map(action => action as addPlayingActions.Save),\n        map(action => action.addPlaying),\n        switchMap(addPlaying => this.progressService.saveAddPlaying(addPlaying)\n          .pipe(\n            mergeMap(newItem => [\n              new addPlayingActions.SaveSucceeded(newItem),\n              new addPlayingActions.Reset()\n            ]),\n            catchError(err => of(new appActions.Error(addPlayingActions.SAVE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/add-playing.effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProgressService } from '../services/progress.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as addPlayingActions from '../actions/add-playing.actions';\n\n@Injectable()\nexport class AddPlayingEffects {\n\n  constructor(private actions$: Actions, private progressService: ProgressService) { }\n\n  @Effect() save$ =\n    this.actions$\n      .ofType(addPlayingActions.SAVE)\n      .pipe(\n        map(action => action as addPlayingActions.Save),\n        map(action => action.addPlaying),\n        switchMap(addPlaying => this.progressService.saveAddPlaying(addPlaying)\n          .pipe(\n            mergeMap(newItem => [\n              new addPlayingActions.SaveSucceeded(newItem),\n              new addPlayingActions.Reset()\n            ]),\n            catchError(err => of(new appActions.Error(addPlayingActions.SAVE, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddPlayingInfo.html":{"url":"interfaces/AddPlayingInfo.html","title":"interface - AddPlayingInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddPlayingInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/add-playing.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddPlayingInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddPlaying {\n  userId: string;\n  startEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddTimerInfo.html":{"url":"interfaces/AddTimerInfo.html","title":"interface - AddTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/timer.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimerInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddTimerInfo {\n  userId: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                trackerNavCaption$\n                            \n                            \n                                userDataLoaded$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                shouldShowHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, router: Router, titleService: Title, elapsedTimeService: ElapsedTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedTimeService\n                                                  \n                                                        \n                                                                    ElapsedTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldShowHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshouldShowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackerNavCaption$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackerNavCaption$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDataLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userDataLoaded$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport { insertAnalyticsElements } from 'insert-analytics-elements/googleTagManager';\nimport { Observable } from 'rxjs';\n\nimport { ElapsedTimeService } from './shared/services/elapsed-time.service';\n\nimport sharedSelectors, { State as SharedState } from './shared/reducers/root.reducer';\n\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  userDataLoaded$: Observable;\n  trackerNavCaption$: Observable;\n  constructor(private sharedStore: Store,\n    private router: Router,\n    private titleService: Title,\n    private elapsedTimeService: ElapsedTimeService) { }\n\n  ngOnInit() {\n    insertAnalyticsElements(environment.googleTagManager);\n    this.userDataLoaded$ = this.sharedStore.select(sharedSelectors.userDataLoaded);\n    this.elapsedTimeService.getElapsedTime('Track My Playtime').subscribe(title => this.titleService.setTitle(title));\n    this.trackerNavCaption$ = this.elapsedTimeService.getElapsedTime('Tracker');\n  }\n\n  shouldShowHeader(): boolean {\n    const currentRoute = this.router.url;\n    return currentRoute.indexOf('/app') === -1;\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n\n    \n      \n        \n      \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompletionModule\n\nCompletionModule\n\nAppModule -->\n\nCompletionModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTrackerModule\n\nTrackerModule\n\nAppModule -->\n\nTrackerModule->AppModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nAppModule -->\n\nElapsedTimeService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                NavComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ElapsedTimeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    !environment\n                            \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    AuthModule\n                            \n                            \n                                    CompletionModule\n                            \n                            \n                                    DashboardModule\n                            \n                            \n                                    HomeModule\n                            \n                            \n                                    LibraryModule\n                            \n                            \n                                    ProfileModule\n                            \n                            \n                                    SharedModule\n                            \n                            \n                                    TrackerModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RouterStateSerializer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { MetaReducer, StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleTagManager } from 'angulartics2/gtm';\nimport { AdsenseModule } from 'ng2-adsense';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthModule } from './features/auth/auth.module';\nimport { CompletionModule } from './features/completion/completion.module';\nimport { DashboardModule } from './features/dashboard/dashboard.module';\nimport { HomeModule } from './features/home/home.module';\nimport { LibraryModule } from './features/library/library.module';\nimport { ProfileModule } from './features/profile/profile.module';\nimport { TrackerModule } from './features/tracker/tracker.module';\nimport { SharedModule } from './shared/shared.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NavComponent } from './components/nav/nav.component';\n\nimport { ElapsedTimeService } from './shared/services/elapsed-time.service';\n\nimport { AuthGuard } from './features/auth/guards/auth.guard';\n\nimport { clearState } from './reducers/clear.meta.reducer';\nimport { CustomRouterStateSerializer, reducers } from './reducers/root.reducer';\n\nimport { environment } from '../environments/environment';\n\nconst metaReducers: MetaReducer[] = [clearState];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    AppRoutingModule,\n    AuthModule,\n    SharedModule,\n    Angulartics2Module.forRoot([Angulartics2GoogleTagManager]),\n    AngularFireModule.initializeApp(environment.firebase),\n    AdsenseModule.forRoot({\n      adClient: environment.adsense.client,\n      adSlot: environment.adsense.navAdSlot\n    }),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot({\n      stateKey: 'router'\n    }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([]),\n    HomeModule,\n    TrackerModule,\n    DashboardModule,\n    LibraryModule,\n    CompletionModule,\n    ProfileModule\n  ],\n  providers: [\n    { provide: RouterStateSerializer, useClass: CustomRouterStateSerializer },\n    AuthGuard,\n    ElapsedTimeService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './features/auth/components/login/login.component';\nimport { RegisterComponent } from './features/auth/components/register/register.component';\nimport { CompletionComponent } from './features/completion/completion.component';\nimport { DashboardComponent } from './features/dashboard/dashboard.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { LibraryComponent } from './features/library/library.component';\nimport { ProfileComponent } from './features/profile/profile.component';\nimport { TrackerComponent } from './features/tracker/tracker.component';\n\nimport { AuthGuard } from './features/auth/guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'app',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'tracker',\n        component: TrackerComponent\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent\n      },\n      {\n        path: 'library',\n        component: LibraryComponent\n      },\n      {\n        path: 'completion',\n        component: CompletionComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: '**',\n        redirectTo: '/app/tracker',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/auth.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticated$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/auth.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticated$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authenticated$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.AUTHENTICATED)\n      .pipe(\n        map(action => action as userActions.Authenticated),\n        mergeMap(action => [\n          new platformsActions.LoadOptions(),\n          new historyActions.LoadHistoryItems(action.user.uid),\n          new timerActions.LoadTimerInfo(action.user.uid),\n          new progressActions.LoadProgressItems(action.user.uid),\n          new profileActions.LoadProfile(action.user.uid)\n        ])\n      )\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/auth.effects.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport * as historyActions from '../../../shared/actions/history.actions';\nimport * as platformsActions from '../../../shared/actions/platforms.actions';\nimport * as progressActions from '../../../shared/actions/progress.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\nimport * as userActions from '../../auth/actions/user.actions';\nimport * as profileActions from '../../profile/actions/profile.actions';\n\n@Injectable()\nexport class AuthEffects {\n\n  constructor(private actions$: Actions) { }\n\n  @Effect() authenticated$ =\n    this.actions$\n      .ofType(userActions.AUTHENTICATED)\n      .pipe(\n        map(action => action as userActions.Authenticated),\n        mergeMap(action => [\n          new platformsActions.LoadOptions(),\n          new historyActions.LoadHistoryItems(action.user.uid),\n          new timerActions.LoadTimerInfo(action.user.uid),\n          new progressActions.LoadProgressItems(action.user.uid),\n          new profileActions.LoadProfile(action.user.uid)\n        ])\n      );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthFormComponent.html":{"url":"components/AuthFormComponent.html","title":"component - AuthFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/auth-form/auth-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-auth-form\n            \n\n            \n                styleUrls\n                auth-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authForm\n                            \n                            \n                                icons\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitEmailAuth\n                            \n                            \n                                emitFacebookAuth\n                            \n                            \n                                emitGoogleAuth\n                            \n                            \n                                emitTwitterAuth\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn\n                            \n                            \n                                message\n                            \n                            \n                                trackingCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailAuth\n                            \n                            \n                                facebookAuth\n                            \n                            \n                                googleAuth\n                            \n                            \n                                twitterAuth\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loggingIn\n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackingCategory\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emailAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        facebookAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        googleAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        twitterAuth\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitEmailAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitEmailAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitFacebookAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitFacebookAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitGoogleAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitGoogleAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitTwitterAuth\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitTwitterAuth()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    google: faGoogle,\n    facebook: faFacebook,\n    twitter: faTwitter\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/auth-form/auth-form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { faFacebook, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-auth-form',\n  templateUrl: './auth-form.component.html',\n  styleUrls: ['./auth-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthFormComponent implements OnInit {\n\n  @Input() message = '';\n  @Input() loggingIn = false;\n  @Input() trackingCategory: string;\n  @Output() emailAuth: EventEmitter = new EventEmitter();\n  @Output() googleAuth: EventEmitter = new EventEmitter();\n  @Output() facebookAuth: EventEmitter = new EventEmitter();\n  @Output() twitterAuth: EventEmitter = new EventEmitter();\n  authForm: FormGroup;\n  icons = {\n    google: faGoogle,\n    facebook: faFacebook,\n    twitter: faTwitter\n  };\n  constructor(private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.authForm = this.builder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]]\n    });\n  }\n\n  emitEmailAuth() {\n    if (this.authForm.valid) {\n      this.emailAuth.emit({\n        email: this.authForm.value.email,\n        password: this.authForm.value.password\n      });\n    }\n  }\n\n  emitGoogleAuth() {\n    this.googleAuth.emit(null);\n  }\n\n  emitFacebookAuth() {\n    this.facebookAuth.emit(null);\n  }\n\n  emitTwitterAuth() {\n    this.twitterAuth.emit(null);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ trackingCategory }}\n  \n\n  \n    \n      \n      \n      {{ trackingCategory }}\n      {{ message }}\n    \n\n    \n\n    \n      \n        \n        {{ trackingCategory }} with Google\n      \n\n      \n        \n        {{ trackingCategory }} with Facebook\n      \n\n      \n        \n        {{ trackingCategory }} with Twitter\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ trackingCategory }}                          {{ trackingCategory }}      {{ message }}                                  {{ trackingCategory }} with Google                            {{ trackingCategory }} with Facebook                            {{ trackingCategory }} with Twitter            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/guards/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/guards/auth.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport authComponentSelectors, { State } from '../reducers/root.reducer';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router) { }\n\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    return this.store.select(authComponentSelectors.isUserLoggedIn)\n      .pipe(\n        map(authed => {\n          if (!authed) {\n            this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n            return false;\n          }\n          return true;\n        }),\n        take(1));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthFormComponent\n                            \n                            \n                                ForgotPasswordComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                RegisterComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { AuthFormComponent } from './components/auth-form/auth-form.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nimport { AuthEffects } from './effects/auth.effects';\nimport { StatusEffects } from './effects/status.effects';\nimport { UserEffects } from './effects/user.effects';\n\nimport { AuthService } from './services/auth.service';\n\nimport { reducers } from './reducers/root.reducer';\n\nimport { FormsModule, ReactiveFormsModule } from '../../../../node_modules/@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthRoutingModule,\n    StoreModule.forFeature('auth', reducers),\n    EffectsModule.forFeature([\n      UserEffects,\n      AuthEffects,\n      StatusEffects\n    ])\n  ],\n  declarations: [\n    LoginComponent,\n    RegisterComponent,\n    AuthFormComponent,\n    ForgotPasswordComponent\n  ],\n  providers: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\n\nconst routes: Routes = [{\n  path: 'forgotPassword',\n  component: ForgotPasswordComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                facebookLogin\n                            \n                            \n                                getAuthState\n                            \n                            \n                                    Private\n                                googleLogin\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signInWithEmail\n                            \n                            \n                                signInWithFacebook\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                signInWithTwitter\n                            \n                            \n                                signOut\n                            \n                            \n                                signUpWithEmail\n                            \n                            \n                                    Private\n                                twitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        facebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthState\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAuthState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        googleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithEmail(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithFacebook\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithFacebook()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithGoogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithGoogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signInWithTwitter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignInWithTwitter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUpWithEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignUpWithEmail(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            twitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        twitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/auth.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { from, Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) { }\n\n  getAuthState(): Observable {\n    return this.afAuth.authState;\n  }\n\n  signInWithGoogle(): Observable {\n    return from(this.googleLogin());\n  }\n\n  signInWithFacebook(): Observable {\n    return from(this.facebookLogin());\n  }\n\n  signInWithTwitter(): Observable {\n    return from(this.twitterLogin());\n  }\n\n  signOut(): Observable {\n    return from(this.afAuth.auth.signOut());\n  }\n\n  signUpWithEmail(email: string, password: string): Observable {\n    return from(this.afAuth.auth.createUserWithEmailAndPassword(email, password));\n  }\n\n  signInWithEmail(email: string, password: string): Observable {\n    return from(this.afAuth.auth.signInWithEmailAndPassword(email, password));\n  }\n\n  resetPassword(email: string): Observable {\n    return from(this.afAuth.auth.sendPasswordResetEmail(email));\n  }\n\n  private googleLogin(): Promise {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n  private facebookLogin(): Promise {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n  private twitterLogin(): Promise {\n    const provider = new firebase.auth.TwitterAuthProvider();\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        status\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     fromStatus.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromStatus.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     fromUser.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromUser.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromStatus from './status.reducer';\nimport * as fromUser from './user.reducer';\n\nimport { User } from '../models';\n\nexport interface AuthState {\n  user: fromUser.State;\n  status: fromStatus.State;\n}\n\nexport interface State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: fromUser.reducer,\n  status: fromStatus.reducer\n};\n\nexport const _selectAuthState = createFeatureSelector('auth');\nexport const _selectUser = createSelector(_selectAuthState, state => state.user);\nexport const _selectStatus = createSelector(_selectAuthState, state => state.status);\n\nexport const _selectUserLoggedIn = createSelector(_selectUser, user => user.uid !== '');\nexport const _selectUserData = createSelector(_selectUser, user => user as User);\n\nexport const _selectStatusLoggingIn = createSelector(_selectStatus, status => status.attemptingLogin);\nexport const _selectStatusValidationMessage = createSelector(_selectStatus, status => status.validationMessage);\n\nconst authComponentSelectors = {\n  isUserLoggedIn: _selectUserLoggedIn,\n  user: _selectUserData,\n  loggingIn: _selectStatusLoggingIn,\n  validationMessage: _selectStatusValidationMessage\n};\n\nexport default authComponentSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Authenticated.html":{"url":"classes/Authenticated.html","title":"class - Authenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Authenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : AUTHENTICATED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BarGraphConfig.html":{"url":"interfaces/BarGraphConfig.html","title":"interface - BarGraphConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BarGraphConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GraphConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        axisTickFormatting\n                                \n                                \n                                        scaleMax\n                                \n                                \n                                        showGridLines\n                                \n                                \n                                        showXAxis\n                                \n                                \n                                        showXAxisLabel\n                                \n                                \n                                        showYAxis\n                                \n                                \n                                        showYAxisLabel\n                                \n                                \n                                        xAxisLabel\n                                \n                                \n                                        yAxisLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        axisTickFormatting\n                                    \n                                \n                                \n                                    \n                                        axisTickFormatting:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scaleMax\n                                    \n                                \n                                \n                                    \n                                        scaleMax:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showGridLines\n                                    \n                                \n                                \n                                    \n                                        showGridLines:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showXAxis\n                                    \n                                \n                                \n                                    \n                                        showXAxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showXAxisLabel\n                                    \n                                \n                                \n                                    \n                                        showXAxisLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showYAxis\n                                    \n                                \n                                \n                                    \n                                        showYAxis:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showYAxisLabel\n                                    \n                                \n                                \n                                    \n                                        showYAxisLabel:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yAxisLabel\n                                    \n                                \n                                \n                                    \n                                        yAxisLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelTimer.html":{"url":"classes/CancelTimer.html","title":"class - CancelTimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelTimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : CANCEL_TIMER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletedDisplayData.html":{"url":"interfaces/CompletedDisplayData.html","title":"interface - CompletedDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletedDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/display-data.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        completedItem\n                                \n                                \n                                        item\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completedItem\n                                    \n                                \n                                \n                                    \n                                        completedItem:     CompletedItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompletedItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     ProgressItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProgressItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompletedItem, HistoryListItem, ProgressItem } from '../../../shared/models';\n\nimport { MarkCompleteItem } from './';\n\nexport interface PlayingDisplayData {\n  item: ProgressItem;\n  startEntryData: HistoryListItem;\n  timePlayed: number;\n  endDates: number[];\n  markComplete: MarkCompleteItem;\n}\n\nexport interface CompletedDisplayData {\n  item: ProgressItem;\n  completedItem: CompletedItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletedItem.html":{"url":"interfaces/CompletedItem.html","title":"interface - CompletedItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletedItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                                \n                                        timePlayed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timePlayed\n                                    \n                                \n                                \n                                    \n                                        timePlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompletedItemComponent.html":{"url":"components/CompletedItemComponent.html","title":"component - CompletedItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompletedItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/completed-item/completed-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-completed-item\n            \n\n            \n                styleUrls\n                completed-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./completed-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayData\n                    \n                    \n                            \n                            Type :    CompletedDisplayData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: faTrash\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/completed-item/completed-item.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as progressActions from '../../../../shared/actions/progress.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { CompletedDisplayData } from '../../models';\n\n@Component({\n  selector: 'app-completion-completed-item',\n  templateUrl: './completed-item.component.html',\n  styleUrls: ['./completed-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CompletedItemComponent implements OnInit {\n\n  @Input() displayData: CompletedDisplayData;\n  userId = '';\n  icons = {\n    remove: faTrash\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  remove() {\n    this.store.dispatch(new progressActions.RemoveProgressItem(this.userId, this.displayData.item.id));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ displayData.completedItem.game }}\n      ({{ displayData.completedItem.platform }})\n    \n    \n      Playtime: {{ displayData.completedItem.timePlayed | time }}\n      Start: {{ displayData.completedItem.startTime | date:'M/d/y - hh:mm a' }}\n      End: {{ displayData.completedItem.endTime | date:'M/d/y - hh:mm a' }}\n    \n  \n\n  \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ displayData.completedItem.game }}      ({{ displayData.completedItem.platform }})              Playtime: {{ displayData.completedItem.timePlayed | time }}      Start: {{ displayData.completedItem.startTime | date:\\'M/d/y - hh:mm a\\' }}      End: {{ displayData.completedItem.endTime | date:\\'M/d/y - hh:mm a\\' }}                        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompletedItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompletionComponent.html":{"url":"components/CompletionComponent.html","title":"component - CompletionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompletionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/completion.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion\n            \n\n            \n                styleUrls\n                completion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./completion.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayingInfo$\n                            \n                            \n                                completedDisplayData$\n                            \n                            \n                                game$\n                            \n                            \n                                games$\n                            \n                            \n                                historyGroupings$\n                            \n                            \n                                playingDisplayData$\n                            \n                            \n                                potentialDates$\n                            \n                            \n                                potentialPlatforms$\n                            \n                            \n                                visibleTab$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, completionStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/completion.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        completionStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addPlayingInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addPlayingInfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completedDisplayData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completedDisplayData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            games$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        games$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            historyGroupings$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyGroupings$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playingDisplayData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        playingDisplayData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            potentialDates$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        potentialDates$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            potentialPlatforms$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        potentialPlatforms$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibleTab$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visibleTab$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/completion.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport completionSelectors, { State as CompletionState } from './reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../shared/models';\nimport { AddPlayingInfo, CompletedDisplayData, PlayingDisplayData, TabType } from './models';\n\nimport { filterPlatforms, filterStartTimes } from '../../shared/utils/history-filter.utils';\nimport {\n    getCompletedDisplayDataItems, getPlayingDisplayDataItems\n} from './utils/display-data.utils';\n\n@Component({\n  selector: 'app-completion',\n  templateUrl: './completion.component.html',\n  styleUrls: ['./completion.component.scss']\n})\nexport class CompletionComponent implements OnInit {\n\n  historyGroupings$: Observable;\n  games$: Observable;\n  addPlayingInfo$: Observable;\n  game$: Observable;\n  potentialPlatforms$: Observable;\n  potentialDates$: Observable;\n\n  playingDisplayData$: Observable;\n  completedDisplayData$: Observable;\n\n  visibleTab$: Observable;\n  constructor(private sharedStore: Store, private completionStore: Store) { }\n\n  ngOnInit() {\n    this.historyGroupings$ = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n    this.games$ = this.historyGroupings$.pipe(map(groupings => groupings.map(item => item.key)));\n    this.addPlayingInfo$ = this.completionStore.select(completionSelectors.addPlayingInfo);\n    this.game$ = this.addPlayingInfo$.pipe(map(info => info.game ? info.game : null));\n    this.potentialPlatforms$ = combineLatest(this.historyGroupings$, this.addPlayingInfo$, (groupings, info) => {\n      return filterPlatforms(groupings, info.game);\n    });\n    this.potentialDates$ = combineLatest(this.historyGroupings$, this.addPlayingInfo$, (groupings, info) => {\n      return filterStartTimes(groupings, info.game, info.platform);\n    });\n\n    const playingProgressItems = this.sharedStore.select(sharedSelectors.progressPlaying);\n    const completedProgerssItems = this.sharedStore.select(sharedSelectors.progressCompleted);\n    const markCompleteEntities = this.completionStore.select(completionSelectors.markCompleteEntities);\n    this.playingDisplayData$ = getPlayingDisplayDataItems(playingProgressItems, this.historyGroupings$, markCompleteEntities);\n    this.completedDisplayData$ = getCompletedDisplayDataItems(completedProgerssItems, this.historyGroupings$);\n\n    this.visibleTab$ = this.completionStore.select(completionSelectors.visibleTab);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n\n      \n        \n          \n        \n        No games in progress!\n      \n\n      \n        \n          \n        \n        No games completed!\n      \n\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        No games in progress!                                              No games completed!            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompletionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompletionModule.html":{"url":"modules/CompletionModule.html","title":"module - CompletionModule","body":"\n                   \n\n\n\n\n  Modules\n  CompletionModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompletionModule\n\n\n\ncluster_CompletionModule_declarations\n\n\n\ncluster_CompletionModule_imports\n\n\n\ncluster_CompletionModule_providers\n\n\n\n\nAddPlayingComponent\n\nAddPlayingComponent\n\n\n\nCompletionModule\n\nCompletionModule\n\nCompletionModule -->\n\nAddPlayingComponent->CompletionModule\n\n\n\n\n\nCompletedItemComponent\n\nCompletedItemComponent\n\nCompletionModule -->\n\nCompletedItemComponent->CompletionModule\n\n\n\n\n\nCompletionComponent\n\nCompletionComponent\n\nCompletionModule -->\n\nCompletionComponent->CompletionModule\n\n\n\n\n\nPlayingItemComponent\n\nPlayingItemComponent\n\nCompletionModule -->\n\nPlayingItemComponent->CompletionModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nCompletionModule -->\n\nTabsComponent->CompletionModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCompletionModule -->\n\nSharedModule->CompletionModule\n\n\n\n\n\nProgressService\n\nProgressService\n\nCompletionModule -->\n\nProgressService->CompletionModule\n\n\n\n\n\nUserService\n\nUserService\n\nCompletionModule -->\n\nUserService->CompletionModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/completion/completion.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AddPlayingComponent\n                            \n                            \n                                CompletedItemComponent\n                            \n                            \n                                CompletionComponent\n                            \n                            \n                                PlayingItemComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProgressService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CompletionComponent } from './completion.component';\nimport { AddPlayingComponent } from './components/add-playing/add-playing.component';\nimport { CompletedItemComponent } from './components/completed-item/completed-item.component';\nimport { PlayingItemComponent } from './components/playing-item/playing-item.component';\nimport { TabsComponent } from './components/tabs/tabs.component';\n\nimport { AddPlayingEffects } from './effects/add-playing.effects';\nimport { ProgressEffects } from './effects/progress.effects';\n\nimport { UserService } from '../auth/services/user.service';\nimport { ProgressService } from './services/progress.service';\n\nimport { TimePipe } from '../../shared/pipes/time.pipe';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    NgSelectModule,\n    FormsModule,\n    SharedModule,\n    StoreModule.forFeature('completion', reducers),\n    EffectsModule.forFeature([\n      AddPlayingEffects,\n      ProgressEffects\n    ])\n  ],\n  declarations: [\n    CompletionComponent,\n    AddPlayingComponent,\n    PlayingItemComponent,\n    CompletedItemComponent,\n    TabsComponent],\n  providers: [\n    UserService,\n    ProgressService,\n    TimePipe\n  ]\n})\nexport class CompletionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompletionState.html":{"url":"interfaces/CompletionState.html","title":"interface - CompletionState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompletionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        addPlaying\n                                \n                                \n                                        markComplete\n                                \n                                \n                                        tab\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addPlaying\n                                    \n                                \n                                \n                                    \n                                        addPlaying:     fromPlaying.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPlaying.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markComplete\n                                    \n                                \n                                \n                                    \n                                        markComplete:     fromMarkComplete.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMarkComplete.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                    \n                                \n                                \n                                    \n                                        tab:     fromTab.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTab.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromPlaying from './add-playing.reducer';\nimport * as fromMarkComplete from './mark-complete.reducer';\nimport * as fromTab from './tab.reducer';\n\nimport { AddPlayingInfo } from '../models';\n\nexport interface CompletionState {\n  addPlaying: fromPlaying.State;\n  markComplete: fromMarkComplete.State;\n  tab: fromTab.State;\n}\n\nexport interface State {\n  completion: CompletionState;\n}\n\nexport const reducers: ActionReducerMap = {\n  addPlaying: fromPlaying.reducer,\n  markComplete: fromMarkComplete.reducer,\n  tab: fromTab.reducer\n};\n\nexport const _selectCompletionState = createFeatureSelector('completion');\nexport const _selectPlaying = createSelector(_selectCompletionState, state => state.addPlaying);\nexport const _selectMarkComplete = createSelector(_selectCompletionState, state => state.markComplete);\nexport const _selectTab = createSelector(_selectCompletionState, state => state.tab);\n\nexport const _selectAddPlayingInfo = createSelector(_selectPlaying, playing => playing as AddPlayingInfo);\n\nexport const { selectEntities: _selectMarkCompleteEntities } = fromMarkComplete.adapter.getSelectors(_selectMarkComplete);\n\nexport const _selectVisibleTab = createSelector(_selectTab, tab => tab.tab);\n\nconst completionSelectors = {\n  addPlayingInfo: _selectAddPlayingInfo,\n  markCompleteEntities: _selectMarkCompleteEntities,\n  visibleTab: _selectVisibleTab\n};\n\nexport default completionSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize(routerState: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/reducers/root.reducer.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerState\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RouterStateUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                barGraphBaseConfig\n                            \n                            \n                                dateGraphConfig\n                            \n                            \n                                dateRangeType$\n                            \n                            \n                                gameGraphConfig\n                            \n                            \n                                    Private\n                                graphConfig\n                            \n                            \n                                platformGraphConfig\n                            \n                            \n                                timeVsDateGraphData$\n                            \n                            \n                                timeVsGameGraphData$\n                            \n                            \n                                timeVsPlatformGraphData$\n                            \n                            \n                                totalTime$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store, dashboardStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/dashboard.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dashboardStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            barGraphBaseConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        barGraphBaseConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.graphConfig,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: false,\n    showYAxisLabel: false,\n    showGridLines: true,\n    xAxisLabel: '',\n    yAxisLabel: '',\n    axisTickFormatting: formatTime,\n    scaleMax: 3600 * 10\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateGraphConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Date',\n    yAxisLabel: 'Total Time Played'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateRangeType$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateRangeType$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gameGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gameGraphConfig:     BarGraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     BarGraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Total Time Played',\n    yAxisLabel: 'Game'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            graphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        graphConfig:     GraphConfig\n\n                    \n                \n                    \n                        \n                            Type :     GraphConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    view: undefined,\n    colorScheme: {\n      domain: selectColorScheme('cool')\n    },\n    showLegend: false,\n    gradient: false,\n    animations: true,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformGraphConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformGraphConfig:     PieChartConfig\n\n                    \n                \n                    \n                        \n                            Type :     PieChartConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...this.graphConfig,\n    showLabels: true,\n    explodeSlices: false,\n    doughnut: true\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsDateGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsDateGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsGameGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsGameGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeVsPlatformGraphData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeVsPlatformGraphData$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/dashboard.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport dashboardSelectors, { State as DashboardState } from './reducers/root.reducer';\n\nimport {\n    BarGraphConfig, DateRangeType, GraphConfig, GraphDataItem, PieChartConfig\n} from './models';\n\nimport { formatTime } from '../../shared/utils/date.utils';\nimport { selectColorScheme } from './utils/colorScheme.utils';\nimport { getGraphData, getPaddedGraphData, getSortedGraphData } from './utils/graph-data.utils';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  timeVsDateGraphData$: Observable;\n  timeVsPlatformGraphData$: Observable;\n  timeVsGameGraphData$: Observable;\n\n  totalTime$: Observable;\n\n  dateRangeType$: Observable;\n\n  private graphConfig: GraphConfig = {\n    view: undefined,\n    colorScheme: {\n      domain: selectColorScheme('cool')\n    },\n    showLegend: false,\n    gradient: false,\n    animations: true,\n  };\n  private barGraphBaseConfig: BarGraphConfig = {\n    ...this.graphConfig,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: false,\n    showYAxisLabel: false,\n    showGridLines: true,\n    xAxisLabel: '',\n    yAxisLabel: '',\n    axisTickFormatting: formatTime,\n    scaleMax: 3600 * 10\n  };\n  dateGraphConfig: BarGraphConfig = {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Date',\n    yAxisLabel: 'Total Time Played'\n  };\n  gameGraphConfig: BarGraphConfig = {\n    ...this.barGraphBaseConfig,\n    xAxisLabel: 'Total Time Played',\n    yAxisLabel: 'Game'\n  };\n  platformGraphConfig: PieChartConfig = {\n    ...this.graphConfig,\n    showLabels: true,\n    explodeSlices: false,\n    doughnut: true\n  };\n  constructor(private sharedStore: Store, private dashboardStore: Store) { }\n\n  ngOnInit() {\n    const dateList = this.dashboardStore.select(dashboardSelectors.dateList);\n    const groupingsByDate = this.sharedStore.select(sharedSelectors.historyGroupingsByDate);\n    const groupingsByPlatform = this.sharedStore.select(sharedSelectors.historyGroupingsByPlatform);\n    const groupingsByGame = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n\n    this.timeVsDateGraphData$ = getPaddedGraphData(groupingsByDate, dateList);\n    this.timeVsPlatformGraphData$ = getGraphData(groupingsByPlatform, dateList);\n    this.timeVsGameGraphData$ = getSortedGraphData(groupingsByGame, dateList);\n\n    this.totalTime$ = this.timeVsDateGraphData$.pipe(map(x => x.reduce((a, b) => a + b.value, 0)));\n    this.dateRangeType$ = this.dashboardStore.select(dashboardSelectors.rangeType);\n  }\n}\n\n    \n\n    \n        \n  \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nGraphTooltipComponent\n\nGraphTooltipComponent\n\nDashboardModule -->\n\nGraphTooltipComponent->DashboardModule\n\n\n\n\n\nTimeDateGraphComponent\n\nTimeDateGraphComponent\n\nDashboardModule -->\n\nTimeDateGraphComponent->DashboardModule\n\n\n\n\n\nTimeGameGraphComponent\n\nTimeGameGraphComponent\n\nDashboardModule -->\n\nTimeGameGraphComponent->DashboardModule\n\n\n\n\n\nTimePlatformGraphComponent\n\nTimePlatformGraphComponent\n\nDashboardModule -->\n\nTimePlatformGraphComponent->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/dashboard/dashboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                GraphTooltipComponent\n                            \n                            \n                                TimeDateGraphComponent\n                            \n                            \n                                TimeGameGraphComponent\n                            \n                            \n                                TimePlatformGraphComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { GraphTooltipComponent } from './components/graph-tooltip/graph-tooltip.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { TimeDateGraphComponent } from './components/time-date-graph/time-date-graph.component';\nimport { TimeGameGraphComponent } from './components/time-game-graph/time-game-graph.component';\nimport {\n    TimePlatformGraphComponent\n} from './components/time-platform-graph/time-platform-graph.component';\nimport { DashboardComponent } from './dashboard.component';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxChartsModule,\n    SharedModule,\n    StoreModule.forFeature('dashboard', reducers),\n  ],\n  declarations: [\n    DashboardComponent,\n    TimeDateGraphComponent,\n    TimeGameGraphComponent,\n    TimePlatformGraphComponent,\n    GraphTooltipComponent,\n    HeaderComponent\n  ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardState.html":{"url":"interfaces/DashboardState.html","title":"interface - DashboardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DashboardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateRange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateRange\n                                    \n                                \n                                \n                                    \n                                        dateRange:     fromDateRange.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDateRange.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { eachDay } from 'date-fns';\n\nimport * as fromDateRange from './date-range.reducer';\n\nexport interface DashboardState {\n  dateRange: fromDateRange.State;\n}\n\nexport interface State {\n  dashboard: DashboardState;\n}\n\nexport const reducers: ActionReducerMap = {\n  dateRange: fromDateRange.reducer\n};\n\nexport const _selectDashboardFeature = createFeatureSelector('dashboard');\nexport const _selectDateRange = createSelector(_selectDashboardFeature, state => state.dateRange);\n\nexport const _selectDateList = createSelector(_selectDateRange, dateRange => {\n  return eachDay(dateRange.startDay, dateRange.endDay);\n});\nexport const _selectRangeType = createSelector(_selectDateRange, dateRange => dateRange.type);\n\nconst dashboardSelectors = {\n  dateList: _selectDateList,\n  rangeType: _selectRangeType\n};\n\nexport default dashboardSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Dictionary.html":{"url":"interfaces/Dictionary.html","title":"interface - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Dictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [id: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/shared.models.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditDisplayNameComponent.html":{"url":"components/EditDisplayNameComponent.html","title":"component - EditDisplayNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditDisplayNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/edit-display-name/edit-display-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-edit-display-name\n            \n\n            \n                styleUrls\n                edit-display-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-display-name.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitFinishEdit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDisplayName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                finishEdit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        finishEdit\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitFinishEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitFinishEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisplayName(displayNameEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayNameEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    confirm: faCheck,\n    cancel: faTimes\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/components/edit-display-name/edit-display-name.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as profileActions from '../../actions/profile.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-profile-edit-display-name',\n  templateUrl: './edit-display-name.component.html',\n  styleUrls: ['./edit-display-name.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditDisplayNameComponent implements OnInit {\n\n  @Output() finishEdit: EventEmitter = new EventEmitter();\n  userId: string;\n  icons = {\n    confirm: faCheck,\n    cancel: faTimes\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  emitFinishEdit() {\n    this.finishEdit.emit(null);\n  }\n\n  setDisplayName(displayNameEl: HTMLInputElement) {\n    const displayName = displayNameEl.value;\n    displayNameEl.value = '';\n\n    this.store.dispatch(new profileActions.SetProfileDisplayName(this.userId, displayName));\n    this.emitFinishEdit();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditDisplayNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ElapsedTimePipe.html":{"url":"pipes/ElapsedTimePipe.html","title":"pipe - ElapsedTimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ElapsedTimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/elapsed-time.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        elapsedTime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(startTimeInMS: number, endTimeInMS: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/elapsed-time.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeInMS\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        endTimeInMS\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatElapsedTime } from '../../shared/utils/date.utils';\n\n@Pipe({ name: 'elapsedTime' })\nexport class ElapsedTimePipe implements PipeTransform {\n\n  transform(startTimeInMS: number, endTimeInMS: number): string {\n    return formatElapsedTime(startTimeInMS, endTimeInMS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ElapsedTimeService.html":{"url":"injectables/ElapsedTimeService.html","title":"injectable - ElapsedTimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ElapsedTimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/elapsed-time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTime$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTime\n                            \n                            \n                                getElapsedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/elapsed-time.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetElapsedTime(inactiveValue: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inactiveValue\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/elapsed-time.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, interval, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport sharedSelectors, { SharedState } from '../reducers/root.reducer';\n\nimport { TimerInfo } from '../models';\n\nimport { formatElapsedTime } from '../utils/date.utils';\n\n@Injectable()\nexport class ElapsedTimeService {\n\n  currentTime$: Observable;\n  constructor(private sharedStore: Store) { }\n\n  getCurrentTime(): Observable {\n    if (!this.currentTime$) {\n      this.currentTime$ = interval(1000).pipe(map(() => new Date().getTime()));\n    }\n    return this.currentTime$;\n  }\n\n  getElapsedTime(inactiveValue: string): Observable {\n    const timerInfo$ = this.sharedStore.select(sharedSelectors.timerInfo);\n    const currentTime$ = this.getCurrentTime();\n\n    return combineLatest(currentTime$, timerInfo$, (currentTime: number, timerInfo: TimerInfo) => {\n      return formatElapsedTime(timerInfo.startTime, currentTime, inactiveValue);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailAuthEvent.html":{"url":"interfaces/EmailAuthEvent.html","title":"interface - EmailAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmailAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/events.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EmailAuthEvent {\n  email: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailLogin.html":{"url":"classes/EmailLogin.html","title":"class - EmailLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : EMAIL_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Environment.html":{"url":"interfaces/Environment.html","title":"interface - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        adsense\n                                \n                                \n                                        firebase\n                                \n                                \n                                        googleTagManager\n                                \n                                \n                                        production\n                                \n                                \n                                        urls\n                                \n                                \n                                        uuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adsense\n                                    \n                                \n                                \n                                    \n                                        adsense:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firebase\n                                    \n                                \n                                \n                                    \n                                        firebase:     FirebaseConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirebaseConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        googleTagManager\n                                    \n                                \n                                \n                                    \n                                        googleTagManager:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                    \n                                \n                                \n                                    \n                                        urls:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                    \n                                \n                                \n                                    \n                                        uuid:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  urls: {};\n  firebase: FirebaseConfig;\n  uuid: {\n    domain: string;\n    namespace: string;\n  };\n  googleTagManager: string;\n  adsense: {\n    client: string;\n    navAdSlot: string;\n  };\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Error.html":{"url":"classes/Error.html","title":"class - Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/actions/app.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/actions/app.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        action:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : APP_ERROR\n                        \n                    \n                        \n                            \n                                    Defined in src/app/actions/app.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const APP_ERROR = '[App] Error';\nexport class Error implements Action {\n  readonly type = APP_ERROR;\n  constructor(public action: string, public message: string) { }\n}\n\nexport type All = Error;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookLogin.html":{"url":"classes/FacebookLogin.html","title":"class - FacebookLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : FACEBOOK_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseConfig.html":{"url":"interfaces/FirebaseConfig.html","title":"interface - FirebaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirebaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/environments/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apiKey\n                                \n                                \n                                        authDomain\n                                \n                                \n                                        databaseURL\n                                \n                                \n                                        messagingSenderId\n                                \n                                \n                                        projectId\n                                \n                                \n                                        storageBucket\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                    \n                                \n                                \n                                    \n                                        apiKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authDomain\n                                    \n                                \n                                \n                                    \n                                        authDomain:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        databaseURL\n                                    \n                                \n                                \n                                    \n                                        databaseURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        messagingSenderId\n                                    \n                                \n                                \n                                    \n                                        messagingSenderId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                    \n                                \n                                \n                                    \n                                        projectId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageBucket\n                                    \n                                \n                                \n                                    \n                                        storageBucket:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  production: boolean;\n  urls: {};\n  firebase: FirebaseConfig;\n  uuid: {\n    domain: string;\n    namespace: string;\n  };\n  googleTagManager: string;\n  adsense: {\n    client: string;\n    navAdSlot: string;\n  };\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreHistoryItem.html":{"url":"interfaces/FirestoreHistoryItem.html","title":"interface - FirestoreHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        platform\n                                \n                                \n                                        source\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestorePlatformsItem.html":{"url":"interfaces/FirestorePlatformsItem.html","title":"interface - FirestorePlatformsItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestorePlatformsItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/platforms.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        option\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        option\n                                    \n                                \n                                \n                                    \n                                        option:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PlatformsService {\n\n  private platformsCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.platformsCollection = this.afs.collection('platforms');\n  }\n\n  getPlatformsOptions(): Observable {\n    const platformsItems = this.platformsCollection.valueChanges().pipe(first());\n    return platformsItems.pipe(map(items =>\n      items.sort((a, b) => a.index - b.index)\n        .map(item => item.option)));\n  }\n}\n\nexport interface FirestorePlatformsItem {\n  index: number;\n  option: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreProfileItem.html":{"url":"interfaces/FirestoreProfileItem.html","title":"interface - FirestoreProfileItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreProfileItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Profile } from '../models';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.profileCollection = this.afs.collection('profile');\n  }\n\n  getProfile(userId: string): Observable {\n    const profileDoc = this.profileCollection.doc(userId).valueChanges().pipe(first());\n    return profileDoc.pipe(map(profile => {\n      ...profile\n    }));\n  }\n\n  setDisplayName(userId: string, displayName: string): Observable {\n    this.profileCollection.doc(userId).set({ displayName }, { merge: true });\n    return of(displayName);\n  }\n}\n\nexport interface FirestoreProfileItem {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreProgressItem.html":{"url":"interfaces/FirestoreProgressItem.html","title":"interface - FirestoreProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirestoreTimerItem.html":{"url":"interfaces/FirestoreTimerItem.html","title":"interface - FirestoreTimerItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FirestoreTimerItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/timer.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { TimerInfo } from '../../../shared/models';\n\n@Injectable()\nexport class TimerService {\n\n  private timerCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.timerCollection = this.afs.collection('timer');\n  }\n\n  setTimer(userId: string, info: TimerInfo) {\n    this.timerCollection.doc(userId).set({\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime\n    });\n  }\n\n  setGame(userId: string, game: string) {\n    this.timerCollection.doc(userId).set({ game }, { merge: true });\n  }\n\n  setPlatform(userId: string, platform: string) {\n    this.timerCollection.doc(userId).set({ platform }, { merge: true });\n  }\n\n  setStartTime(userId: string, startTime: number) {\n    this.timerCollection.doc(userId).set({ startTime }, { merge: true });\n  }\n\n  resetTimer(userId: string) {\n    this.timerCollection.doc(userId).set({\n      game: '',\n      platform: '',\n      startTime: 0\n    });\n  }\n\n  getTimerInfo(userId: string): Observable {\n    const timerDoc = this.timerCollection.doc(userId).valueChanges().pipe(first());\n    return timerDoc.pipe(map(timer => {\n      ...timer\n    }));\n  }\n\n  getNowTime(): number {\n    return new Date().getTime();\n  }\n}\n\nexport interface FirestoreTimerItem {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-forgot-password\n            \n\n            \n                styleUrls\n                forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                passwordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, builder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        builder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passwordForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Store } from '@ngrx/store';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-auth-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  message = '';\n  passwordForm: FormGroup;\n  constructor(private store: Store, private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.passwordForm = this.builder.group({\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]]\n    });\n  }\n\n  resetPassword() {\n    if (this.passwordForm.valid) {\n      const email = this.passwordForm.value.email;\n      this.store.dispatch(new userActions.ResetPassword(email));\n      this.message = `A password reset email has been sent to ${email}`;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot Password\n  \n\n  \n    \n      \n      Reset Password\n      {{ message }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot Password                    Reset Password      {{ message }}      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUser.html":{"url":"classes/GetUser.html","title":"class - GetUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : GET_USER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLogin.html":{"url":"classes/GoogleLogin.html","title":"class - GoogleLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : GOOGLE_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphConfig.html":{"url":"interfaces/GraphConfig.html","title":"interface - GraphConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        animations\n                                \n                                \n                                        colorScheme\n                                \n                                \n                                        gradient\n                                \n                                \n                                        showLegend\n                                \n                                \n                                        view\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animations\n                                    \n                                \n                                \n                                    \n                                        animations:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                    \n                                \n                                \n                                    \n                                        colorScheme:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradient\n                                    \n                                \n                                \n                                    \n                                        gradient:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLegend\n                                    \n                                \n                                \n                                    \n                                        showLegend:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        view\n                                    \n                                \n                                \n                                    \n                                        view:      | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :      | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphDataItem.html":{"url":"interfaces/GraphDataItem.html","title":"interface - GraphDataItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphDataItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphTooltipComponent.html":{"url":"components/GraphTooltipComponent.html","title":"component - GraphTooltipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GraphTooltipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-graph-tooltip\n            \n\n            \n                styleUrls\n                graph-tooltip.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./graph-tooltip.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                            \n                            Type :    GraphDataItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/graph-tooltip/graph-tooltip.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-graph-tooltip',\n  templateUrl: './graph-tooltip.component.html',\n  styleUrls: ['./graph-tooltip.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GraphTooltipComponent implements OnInit {\n\n  @Input() model: GraphDataItem;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    {{ model.name }}\n  \n  \n    {{ model.value | time }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ model.name }}        {{ model.value | time }}  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphTooltipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/header/header.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n  \n    \n      Register\n    \n\n    \n      Login\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Register              Login      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-1.html":{"url":"components/HeaderComponent-1.html","title":"component - HeaderComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateDateRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rangeType\n                            \n                            \n                                totalTime\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/header/header.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rangeType\n                    \n                    \n                            \n                            Type :    DateRangeType\n\n                            \n                        \n                            Default value : 'THIS_WEEK'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTime\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateDateRange\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateDateRange(dateRangeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/header/header.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dateRangeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/date-range.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { DateRangeType } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() rangeType: DateRangeType = 'THIS_WEEK';\n  @Input() totalTime = 0;\n  constructor(private store: Store) { }\n\n  ngOnInit() { }\n\n  updateDateRange(dateRangeEl: HTMLSelectElement) {\n    switch (dateRangeEl.value) {\n      case 'THIS_WEEK': {\n        this.store.dispatch(new actions.SetThisWeek());\n        break;\n      }\n      case 'LAST_WEEK': {\n        this.store.dispatch(new actions.SetLastWeek());\n        break;\n      }\n      case 'THIS_MONTH': {\n        this.store.dispatch(new actions.SetThisMonth());\n        break;\n      }\n      case 'LAST_MONTH': {\n        this.store.dispatch(new actions.SetLastMonth());\n        break;\n      }\n      default: {\n        this.store.dispatch(new actions.SetThisWeek());\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  Dashboard - \n  {{ totalTime | time }}\n  \n    \n      This Week\n      Last Week\n      This Month\n      Last Month\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard -   {{ totalTime | time }}            This Week      Last Week      This Month      Last Month      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent-2.html":{"url":"components/HeaderComponent-2.html","title":"component - HeaderComponent-2","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/library/components/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-library-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                gameCount\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/library/components/header/header.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        gameCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/library/components/header/header.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/components/header/header.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-library-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() gameCount = 0;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Library - \n  {{ gameCount }} {{ gameCount | pluralize:'Game':'Games' }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Library -   {{ gameCount }} {{ gameCount | pluralize:\\'Game\\':\\'Games\\' }}'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent-2'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryCollection.html":{"url":"interfaces/HistoryCollection.html","title":"interface - HistoryCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     FirestoreHistoryItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirestoreHistoryItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryComponent.html":{"url":"components/HistoryComponent.html","title":"component - HistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/history/history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-history\n            \n\n            \n                styleUrls\n                history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/history/history.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groups\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history/history.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { HistoryGrouping } from '../../../../shared/models';\n\n@Component({\n  selector: 'app-tracker-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HistoryComponent implements OnInit {\n\n  @Input() groups: HistoryGrouping[] = [];\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n\n    \n\n      \n        {{ group.key }}\n        {{ group.totalTime | time }}\n      \n\n      \n        \n          \n\n          \n        \n      \n    \n  \n\n  \n    Nothing to show...get tracking!\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ group.key }}        {{ group.totalTime | time }}                                                                  Nothing to show...get tracking!  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryEffects.html":{"url":"injectables/HistoryEffects.html","title":"injectable - HistoryEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/history.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadHistoryItems$\n                            \n                            \n                                removeHistoryItem$\n                            \n                            \n                                saveTimerInfoSucceeded$\n                            \n                            \n                                updateElapsedTime$\n                            \n                            \n                                updateGame$\n                            \n                            \n                                updatePlatform$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, historyService: HistoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/history.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                    HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadHistoryItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadHistoryItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.LOAD_HISTORY_ITEMS)\n      .pipe(\n        map(action => action as historyActions.LoadHistoryItems),\n        switchMap(action => this.historyService.getHistoryList(action.userId)\n          .pipe(\n            map(data => new historyActions.LoadHistoryItemsSucceeded(data)),\n            catchError(err => of(new appActions.Error(historyActions.LOAD_HISTORY_ITEMS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeHistoryItem$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeHistoryItem$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.REMOVE_HISTORY_ITEM)\n      .pipe(\n        map(action => action as historyActions.RemoveHistoryItem),\n        switchMap(action => this.historyService.deleteHistoryItem(action.userId, action.itemId)\n          .pipe(\n            map(itemId => new historyActions.RemoveHistoryItemSucceeded(itemId)),\n            catchError(err => of(new appActions.Error(historyActions.REMOVE_HISTORY_ITEM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfoSucceeded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveTimerInfoSucceeded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO_SUCCEEDED)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfoSucceeded),\n        map(action => new historyActions.AddNewHistoryItem(action.item)))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateElapsedTime$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_ELAPSED_TIME)\n      .pipe(\n        map(action => action as historyActions.UpdateElapsedTime),\n        switchMap(action => this.historyService.updateElapsedTime(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateElapsedTimeSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_ELAPSED_TIME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateGame$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_GAME)\n      .pipe(\n        map(action => action as historyActions.UpdateGame),\n        switchMap(action => this.historyService.updateGame(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateGameSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_GAME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatePlatform$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(historyActions.UPDATE_PLATFORM)\n      .pipe(\n        map(action => action as historyActions.UpdatePlatform),\n        switchMap(action => this.historyService.updatePlatform(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdatePlatformSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_PLATFORM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/history.effects.ts:56\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { HistoryService } from '../services/history.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as historyActions from '../../../shared/actions/history.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\n\n@Injectable()\nexport class HistoryEffects {\n\n  constructor(private actions$: Actions, private historyService: HistoryService) { }\n\n  @Effect() loadHistoryItems$ =\n    this.actions$\n      .ofType(historyActions.LOAD_HISTORY_ITEMS)\n      .pipe(\n        map(action => action as historyActions.LoadHistoryItems),\n        switchMap(action => this.historyService.getHistoryList(action.userId)\n          .pipe(\n            map(data => new historyActions.LoadHistoryItemsSucceeded(data)),\n            catchError(err => of(new appActions.Error(historyActions.LOAD_HISTORY_ITEMS, err.message))))));\n\n  @Effect() saveTimerInfoSucceeded$ =\n    this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO_SUCCEEDED)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfoSucceeded),\n        map(action => new historyActions.AddNewHistoryItem(action.item)));\n\n  @Effect() removeHistoryItem$ =\n    this.actions$\n      .ofType(historyActions.REMOVE_HISTORY_ITEM)\n      .pipe(\n        map(action => action as historyActions.RemoveHistoryItem),\n        switchMap(action => this.historyService.deleteHistoryItem(action.userId, action.itemId)\n          .pipe(\n            map(itemId => new historyActions.RemoveHistoryItemSucceeded(itemId)),\n            catchError(err => of(new appActions.Error(historyActions.REMOVE_HISTORY_ITEM, err.message))))));\n\n  @Effect() updateGame$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_GAME)\n      .pipe(\n        map(action => action as historyActions.UpdateGame),\n        switchMap(action => this.historyService.updateGame(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateGameSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_GAME, err.message))))));\n\n  @Effect() updatePlatform$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_PLATFORM)\n      .pipe(\n        map(action => action as historyActions.UpdatePlatform),\n        switchMap(action => this.historyService.updatePlatform(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdatePlatformSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_PLATFORM, err.message))))));\n\n  @Effect() updateElapsedTime$ =\n    this.actions$\n      .ofType(historyActions.UPDATE_ELAPSED_TIME)\n      .pipe(\n        map(action => action as historyActions.UpdateElapsedTime),\n        switchMap(action => this.historyService.updateElapsedTime(action.userId, action.payload)\n          .pipe(\n            map(payload => new historyActions.UpdateElapsedTimeSucceeded(payload)),\n            catchError(err => of(new appActions.Error(historyActions.UPDATE_ELAPSED_TIME, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryEntity.html":{"url":"interfaces/HistoryEntity.html","title":"interface - HistoryEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/history.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/history.actions';\n\nimport { UpdatePayload } from '../models';\n\nexport interface HistoryEntity {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_HISTORY_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_HISTORY_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_HISTORY_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_HISTORY_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.UPDATE_GAME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_PLATFORM_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_ELAPSED_TIME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getUpdatedState = (payload: UpdatePayload, currentState: State): State => {\n  const { itemId: id, ...changes } = payload;\n  return adapter.updateOne({\n    id,\n    changes\n  }, currentState);\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryEntryComponent.html":{"url":"components/HistoryEntryComponent.html","title":"component - HistoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/history-entry/history-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-history-entry\n            \n\n            \n                styleUrls\n                history-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDateTimePicker\n                            \n                            \n                                quickStart\n                            \n                            \n                                remove\n                            \n                            \n                                updateElapsedTime\n                            \n                            \n                                updateGame\n                            \n                            \n                                updatePlatform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                game\n                            \n                            \n                                item\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | NgSelectValue | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    HistoryListItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDateTimePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDateTimePicker(el: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nquickStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateElapsedTime(elapsedTimeEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elapsedTimeEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    remove: faTrash,\n    quickStart: faPlay\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/history-entry/history-entry.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faPlay, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as historyActions from '../../../../shared/actions/history.actions';\nimport * as timerActions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport {\n    HistoryListItem, NgSelectValue, TimerInfo, UpdateHistoryItemGamePayload,\n    UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../../../../shared/models';\n\nimport { getValueFromNgSelect } from '../../../../shared/utils/ng-select.utils';\n\n@Component({\n  selector: 'app-tracker-history-entry',\n  templateUrl: './history-entry.component.html',\n  styleUrls: ['./history-entry.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HistoryEntryComponent implements OnInit {\n\n  @Input() item: HistoryListItem;\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  @Input() game: string | NgSelectValue | null = null;\n  userId = '';\n  icons = {\n    remove: faTrash,\n    quickStart: faPlay\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  updateGame() {\n    if (this.game) {\n      const payload = {\n        itemId: this.item.id,\n        game: getValueFromNgSelect(this.game)\n      };\n      this.store.dispatch(new historyActions.UpdateGame(this.userId, payload));\n    }\n  }\n\n  updatePlatform(platformEl: HTMLSelectElement) {\n    const payload = {\n      itemId: this.item.id,\n      platform: platformEl.value\n    };\n    this.store.dispatch(new historyActions.UpdatePlatform(this.userId, payload));\n  }\n\n  quickStart() {\n    const timerInfo: TimerInfo = {\n      game: this.item.game,\n      platform: this.item.platform,\n      startTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new timerActions.SetTimerInfo(timerInfo));\n    this.timerService.setTimer(this.userId, timerInfo);\n  }\n\n  remove() {\n    this.store.dispatch(new historyActions.RemoveHistoryItem(this.userId, this.item.id));\n  }\n\n  updateElapsedTime(elapsedTimeEl: HTMLInputElement) {\n    if (elapsedTimeEl.value) {\n      const dateStrings = elapsedTimeEl.value.split('~').map(dateString => dateString.trim());\n      const startTime = new Date(dateStrings[0]).getTime();\n      const endTime = new Date(dateStrings[1]).getTime();\n\n      const payload = {\n        itemId: this.item.id,\n        startTime,\n        endTime\n      };\n      this.store.dispatch(new historyActions.UpdateElapsedTime(this.userId, payload));\n    }\n  }\n\n  openDateTimePicker(el: HTMLInputElement) {\n    el.click();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    \n      {{ item.startTime | date:'shortTime' }} - {{ item.endTime | date:'shortTime' }}\n    \n\n    \n      \n      \n    \n\n    \n      {{ item.startTime | elapsedTime:item.endTime }}\n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}                  {{ item.startTime | date:\\'shortTime\\' }} - {{ item.endTime | date:\\'shortTime\\' }}                                  {{ item.startTime | elapsedTime:item.endTime }}                                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryGrouping.html":{"url":"interfaces/HistoryGrouping.html","title":"interface - HistoryGrouping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryGrouping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        historyItems\n                                \n                                \n                                        key\n                                \n                                \n                                        totalTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        historyItems\n                                    \n                                \n                                \n                                    \n                                        historyItems:     HistoryListItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HistoryListItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTime\n                                    \n                                \n                                \n                                    \n                                        totalTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HistoryListItem.html":{"url":"interfaces/HistoryListItem.html","title":"interface - HistoryListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HistoryListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dateRange\n                                \n                                \n                                        endTime\n                                \n                                \n                                        game\n                                \n                                \n                                        id\n                                \n                                \n                                        locked\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateRange\n                                    \n                                \n                                \n                                    \n                                        dateRange:     [Date, Date]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [Date, Date]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        locked\n                                    \n                                \n                                \n                                    \n                                        locked:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/history.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                historyCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteHistoryItem\n                            \n                            \n                                    Private\n                                getHistoryEntity\n                            \n                            \n                                getHistoryList\n                            \n                            \n                                getNewHistoryItem\n                            \n                            \n                                    Private\n                                getUserItemCollection\n                            \n                            \n                                saveTimerInfo\n                            \n                            \n                                updateElapsedTime\n                            \n                            \n                                updateGame\n                            \n                            \n                                updatePlatform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/history.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteHistoryItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeleteHistoryItem(userId: string, itemId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getHistoryEntity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHistoryEntity(history: FirestoreHistoryItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        history\n                                                        \n                                                                    FirestoreHistoryItem\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HistoryEntity\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHistoryList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHistoryList(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNewHistoryItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNewHistoryItem(info: AddTimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FirestoreHistoryItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserItemCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserItemCollection(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveTimerInfo(info: AddTimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateElapsedTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGame(userId: string, payload: UpdateHistoryItemGamePayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            historyCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/history.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { HistoryEntity } from '../../../shared/reducers/history.reducer';\n\nimport {\n    AddTimerInfo, UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload,\n    UpdateHistoryItemTimesPayload\n} from '../../../shared/models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class HistoryService {\n\n  private historyCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.historyCollection = this.afs.collection('history');\n  }\n\n  getHistoryList(userId: string): Observable {\n    const historyList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return historyList.pipe(map(histories => histories.map(history => this.getHistoryEntity(history))));\n  }\n\n  saveTimerInfo(info: AddTimerInfo): Observable {\n    const newItem = this.getNewHistoryItem(info);\n    this.getUserItemCollection(info.userId).doc(newItem.id).set(newItem);\n    return of(this.getHistoryEntity(newItem));\n  }\n\n  deleteHistoryItem(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  updateGame(userId: string, payload: UpdateHistoryItemGamePayload): Observable {\n    const { itemId, game } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ game });\n    return of(payload);\n  }\n\n  updatePlatform(userId: string, payload: UpdateHistoryItemPlatformPayload): Observable {\n    const { itemId, platform } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ platform });\n    return of(payload);\n  }\n\n  updateElapsedTime(userId: string, payload: UpdateHistoryItemTimesPayload): Observable {\n    const { itemId, startTime, endTime } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ startTime, endTime });\n    return of(payload);\n  }\n\n  getNewHistoryItem(info: AddTimerInfo): FirestoreHistoryItem {\n    const id = getUUID(info.userId);\n    return {\n      id,\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime,\n      endTime: info.endTime,\n      source: 'web'\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.historyCollection.doc(userId).collection('items');\n  }\n\n  private getHistoryEntity(history: FirestoreHistoryItem): HistoryEntity {\n    return {\n      id: history.id,\n      game: history.game,\n      platform: history.platform,\n      startTime: history.startTime,\n      endTime: history.endTime\n    };\n  }\n}\n\nexport interface FirestoreHistoryItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  source: string;\n}\n\ninterface HistoryCollection {\n  items: FirestoreHistoryItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tagline\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/home/home.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tagline:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Game Time Tracking Made Simple'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  tagline = 'Game Time Tracking Made Simple';\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  {{ tagline }}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ tagline }}'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n  Modules\n  HomeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/home/home.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHasId.html":{"url":"interfaces/IHasId.html","title":"interface - IHasId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHasId\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IncrementDaysToShow.html":{"url":"classes/IncrementDaysToShow.html","title":"class - IncrementDaysToShow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IncrementDaysToShow\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/actions/display.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/actions/display.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amount\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            amount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        amount:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/actions/display.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : INCREMENT_DAYS_TO_SHOW\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/actions/display.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const INCREMENT_DAYS_TO_SHOW = '[Display] Increment Days to Show';\nexport class IncrementDaysToShow implements Action {\n  readonly type = INCREMENT_DAYS_TO_SHOW;\n  constructor(public amount: number) { }\n}\n\nexport type All = IncrementDaysToShow;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LibraryComponent.html":{"url":"components/LibraryComponent.html","title":"component - LibraryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LibraryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/library/library.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-library\n            \n\n            \n                styleUrls\n                library.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./library.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                libraryEntries$\n                            \n                            \n                                numEntriesToShow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setNumEntriesToShow\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sharedStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/library/library.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            window:resize\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nwindow:resize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setNumEntriesToShow\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetNumEntriesToShow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            libraryEntries$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        libraryEntries$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numEntriesToShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        numEntriesToShow:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/library/library.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\n\nimport { LibraryEntry } from './models';\n\nimport { mapGroupings } from './utils/library-data.utils';\n\nimport { getNumEntriesToShow } from './utils/resize-utils';\n\n@Component({\n  selector: 'app-library',\n  templateUrl: './library.component.html',\n  styleUrls: ['./library.component.scss']\n})\nexport class LibraryComponent implements OnInit {\n\n  libraryEntries$: Observable;\n  numEntriesToShow = 10;\n  constructor(private sharedStore: Store) { }\n\n  ngOnInit() {\n    const gameGroupings = this.sharedStore.select(sharedSelectors.historyGroupingsByGame);\n    this.libraryEntries$ = mapGroupings(gameGroupings);\n    this.setNumEntriesToShow();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.setNumEntriesToShow();\n  }\n\n  setNumEntriesToShow() {\n    this.numEntriesToShow = getNumEntriesToShow(window.innerHeight);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n        \n        \n          {{ value | date:'MM/d/yyyy' }}\n        \n        \n          {{ value | date:'MM/d/yyyy' }}\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  {{ value | date:\\'MM/d/yyyy\\' }}                          {{ value | date:\\'MM/d/yyyy\\' }}                    '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LibraryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LibraryEntry.html":{"url":"interfaces/LibraryEntry.html","title":"interface - LibraryEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LibraryEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/library/models/library.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstPlayed\n                                \n                                \n                                        game\n                                \n                                \n                                        lastPlayed\n                                \n                                \n                                        totalTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstPlayed\n                                    \n                                \n                                \n                                    \n                                        firstPlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastPlayed\n                                    \n                                \n                                \n                                    \n                                        lastPlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTime\n                                    \n                                \n                                \n                                    \n                                        totalTime:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LibraryEntry {\n  game: string;\n  totalTime: string;\n  firstPlayed: number;\n  lastPlayed: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LibraryModule.html":{"url":"modules/LibraryModule.html","title":"module - LibraryModule","body":"\n                   \n\n\n\n\n  Modules\n  LibraryModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_declarations\n\n\n\ncluster_LibraryModule_imports\n\n\n\n\nLibraryComponent\n\nLibraryComponent\n\n\n\nLibraryModule\n\nLibraryModule\n\nLibraryModule -->\n\nLibraryComponent->LibraryModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLibraryModule -->\n\nSharedModule->LibraryModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/library/library.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LibraryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { HeaderComponent } from './components/header/header.component';\nimport { LibraryComponent } from './library.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxDatatableModule,\n    SharedModule\n  ],\n  declarations: [\n    LibraryComponent,\n    HeaderComponent\n  ]\n})\nexport class LibraryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryItems.html":{"url":"classes/LoadHistoryItems.html","title":"class - LoadHistoryItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_HISTORY_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryItemsSucceeded.html":{"url":"classes/LoadHistoryItemsSucceeded.html","title":"class - LoadHistoryItemsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryItemsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: HistoryEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    HistoryEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     HistoryEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_HISTORY_ITEMS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadItems.html":{"url":"classes/LoadItems.html","title":"class - LoadItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemIds\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemIds: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemIds:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadMoreComponent.html":{"url":"components/LoadMoreComponent.html","title":"component - LoadMoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadMoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/load-more/load-more.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-load-more\n            \n\n            \n                styleUrls\n                load-more.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./load-more.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AMOUNT_TO_LOAD\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadMoreEntries\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/load-more/load-more.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadMoreEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadMoreEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AMOUNT_TO_LOAD\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        AMOUNT_TO_LOAD:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/load-more/load-more.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/display.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\n@Component({\n  selector: 'app-tracker-load-more',\n  templateUrl: './load-more.component.html',\n  styleUrls: ['./load-more.component.scss']\n})\nexport class LoadMoreComponent implements OnInit {\n\n  AMOUNT_TO_LOAD = 4;\n  constructor(private store: Store) { }\n\n  loadMoreEntries() {\n    this.store.dispatch(new actions.IncrementDaysToShow(this.AMOUNT_TO_LOAD));\n  }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Load More\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Load More'\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadMoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadOptions.html":{"url":"classes/LoadOptions.html","title":"class - LoadOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/platforms.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/platforms.actions.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_OPTIONS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOAD_OPTIONS = '[Platforms] Load Options';\nexport class LoadOptions implements Action {\n  readonly type = LOAD_OPTIONS;\n  constructor() { }\n}\n\nexport const LOAD_OPTIONS_SUCCEEDED = '[Platforms] Load Options Succeeded';\nexport class LoadOptionsSucceeded implements Action {\n  readonly type = LOAD_OPTIONS_SUCCEEDED;\n  constructor(public platforms: string[]) { }\n}\n\nexport type All = LoadOptions |\n  LoadOptionsSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadOptionsSucceeded.html":{"url":"classes/LoadOptionsSucceeded.html","title":"class - LoadOptionsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadOptionsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/platforms.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platforms\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platforms: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/platforms.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platforms\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platforms\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platforms:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_OPTIONS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/platforms.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const LOAD_OPTIONS = '[Platforms] Load Options';\nexport class LoadOptions implements Action {\n  readonly type = LOAD_OPTIONS;\n  constructor() { }\n}\n\nexport const LOAD_OPTIONS_SUCCEEDED = '[Platforms] Load Options Succeeded';\nexport class LoadOptionsSucceeded implements Action {\n  readonly type = LOAD_OPTIONS_SUCCEEDED;\n  constructor(public platforms: string[]) { }\n}\n\nexport type All = LoadOptions |\n  LoadOptionsSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfile.html":{"url":"classes/LoadProfile.html","title":"class - LoadProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROFILE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProfileSucceeded.html":{"url":"classes/LoadProfileSucceeded.html","title":"class - LoadProfileSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProfileSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                profile\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profile: Profile)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profile\n                                                  \n                                                        \n                                                                    Profile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profile:     Profile\n\n                    \n                \n                    \n                        \n                            Type :     Profile\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROFILE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProgressItems.html":{"url":"classes/LoadProgressItems.html","title":"class - LoadProgressItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProgressItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROGRESS_ITEMS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadProgressItemsSucceeded.html":{"url":"classes/LoadProgressItemsSucceeded.html","title":"class - LoadProgressItemsSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadProgressItemsSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: ProgressEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    ProgressEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     ProgressEntity[]\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_PROGRESS_ITEMS_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadTimerInfo.html":{"url":"classes/LoadTimerInfo.html","title":"class - LoadTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOAD_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LockedHistoryEntryComponent.html":{"url":"components/LockedHistoryEntryComponent.html","title":"component - LockedHistoryEntryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LockedHistoryEntryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-locked-history-entry\n            \n\n            \n                styleUrls\n                locked-history-entry.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./locked-history-entry.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                quickStart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type :    HistoryListItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quickStart\n                            \n                            \n                        \n                    \n                \n                \n                    \nquickStart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    lock: faLock,\n    quickStart: faPlay\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/locked-history-entry/locked-history-entry.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faLock, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as timerActions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryListItem, TimerInfo } from '../../../../shared/models';\n\n@Component({\n  selector: 'app-tracker-locked-history-entry',\n  templateUrl: './locked-history-entry.component.html',\n  styleUrls: ['./locked-history-entry.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LockedHistoryEntryComponent implements OnInit {\n\n  @Input() item: HistoryListItem;\n  userId = '';\n  icons = {\n    lock: faLock,\n    quickStart: faPlay\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  quickStart() {\n    const timerInfo: TimerInfo = {\n      game: this.item.game,\n      platform: this.item.platform,\n      startTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new timerActions.SetTimerInfo(timerInfo));\n    this.timerService.setTimer(this.userId, timerInfo);\n  }\n}\n\n    \n\n    \n        \n  {{ item.game }}\n  {{ item.platform }}\n  \n    {{ item.startTime | date:'shortTime' }} - {{ item.endTime | date:'shortTime' }}\n    {{ item.startTime | elapsedTime:item.endTime }}\n  \n  \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ item.game }}  {{ item.platform }}      {{ item.startTime | date:\\'shortTime\\' }} - {{ item.endTime | date:\\'shortTime\\' }}    {{ item.startTime | elapsedTime:item.endTime }}                            '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LockedHistoryEntryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn$\n                            \n                            \n                                message$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin\n                            \n                            \n                                facebookLogin\n                            \n                            \n                                googleLogin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                twitterLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailLogin(event: EmailAuthEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    EmailAuthEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ntwitterLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingIn$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingIn$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport authComponentSelectors, { State } from '../../reducers/root.reducer';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loggingIn$: Observable;\n  message$: Observable;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.store.dispatch(new userActions.GetUser());\n    this.loggingIn$ = this.store.select(authComponentSelectors.loggingIn);\n    this.message$ = this.store.select(authComponentSelectors.validationMessage);\n  }\n\n  googleLogin() {\n    this.store.dispatch(new userActions.GoogleLogin());\n  }\n\n  facebookLogin() {\n    this.store.dispatch(new userActions.FacebookLogin());\n  }\n\n  twitterLogin() {\n    this.store.dispatch(new userActions.TwitterLogin());\n  }\n\n  emailLogin(event: EmailAuthEvent) {\n    this.store.dispatch(new userActions.EmailLogin(event.email, event.password));\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot your password?\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot your password?  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : LOGOUT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkComplete.html":{"url":"classes/MarkComplete.html","title":"class - MarkComplete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkComplete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: MarkCompletePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MarkCompletePayload\n\n                    \n                \n                    \n                        \n                            Type :     MarkCompletePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : MARK_COMPLETE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompleteEntity.html":{"url":"interfaces/MarkCompleteEntity.html","title":"interface - MarkCompleteEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompleteEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/mark-complete.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        showExtra\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExtra\n                                    \n                                \n                                \n                                    \n                                        showExtra:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/mark-complete.actions';\n\nexport interface MarkCompleteEntity {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\nexport interface State extends EntityState { }\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState();\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_SHOW_EXTRA: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          showExtra: action.showExtra\n        }\n      }, state);\n    }\n    case actions.SET_ENDTIME: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          endTime: action.endTime\n        }\n      }, state);\n    }\n    case actions.REMOVE: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.ADD_NEW_ITEM: {\n      return adapter.addOne(getMarkCompleteEntity(action.itemId), state);\n    }\n    case actions.LOAD_ITEMS: {\n      const items = action.itemIds.map(itemId => getMarkCompleteEntity(itemId));\n      return adapter.addAll(items, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getMarkCompleteEntity = (itemId: string): MarkCompleteEntity => {\n  return {\n    id: itemId,\n    showExtra: false,\n    endTime: 0\n  };\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompleteItem.html":{"url":"interfaces/MarkCompleteItem.html","title":"interface - MarkCompleteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompleteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/mark-complete.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        id\n                                \n                                \n                                        showExtra\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExtra\n                                    \n                                \n                                \n                                    \n                                        showExtra:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MarkCompleteItem {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MarkCompletePayload.html":{"url":"interfaces/MarkCompletePayload.html","title":"interface - MarkCompletePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MarkCompletePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MarkCompleteSucceeded.html":{"url":"classes/MarkCompleteSucceeded.html","title":"class - MarkCompleteSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MarkCompleteSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: MarkCompletePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     MarkCompletePayload\n\n                    \n                \n                    \n                        \n                            Type :     MarkCompletePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : MARK_COMPLETE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavComponent.html":{"url":"components/NavComponent.html","title":"component - NavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/nav/nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav\n            \n\n            \n                styleUrls\n                nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bannerRoute\n                            \n                            \n                                hideNavContents\n                            \n                            \n                                icons\n                            \n                            \n                                profileRoute\n                            \n                            \n                                routes\n                            \n                            \n                                trackerRoute\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                trackerCaption\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/nav/nav.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        trackerCaption\n                    \n                    \n                        \n                            Default value : 'Tracker'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNav()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bannerRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bannerRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: 'Track My Playtime',\n    router: ['app'],\n    trackingCategory: 'navBanner'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideNavContents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideNavContents:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    logout: faSignOutAlt,\n    menu: faBars,\n    close: faTimes\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: '',\n    router: ['app/profile'],\n    trackingCategory: 'navProfile'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routes:     RouteEntry[]\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    caption: 'Dashboard',\n    router: ['app/dashboard'],\n    exact: true,\n    icon: faChartBar,\n    trackingCategory: 'navDashboard'\n  },\n  {\n    caption: 'Library',\n    router: ['app/library'],\n    exact: true,\n    icon: faList,\n    trackingCategory: 'navLibrary'\n  },\n  {\n    caption: 'Completion',\n    router: ['app/completion'],\n    exact: true,\n    icon: faClipboardList,\n    trackingCategory: 'navCompletion'\n  }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackerRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackerRoute:     RouteEntry\n\n                    \n                \n                    \n                        \n                            Type :     RouteEntry\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    caption: 'Tracker',\n    router: ['app/tracker'],\n    exact: true,\n    icon: faClock,\n    trackingCategory: 'navTracker'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     UserInfo\n\n                    \n                \n                    \n                        \n                            Type :     UserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/nav/nav.component.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\nimport {\n    faBars, faChartBar, faClipboardList, faList, faSignOutAlt, faTimes\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { UserService } from '../../features/auth/services/user.service';\n\nimport { UserInfo } from '../../features/auth/models';\nimport { RouteEntry } from '../../models';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NavComponent implements OnInit {\n\n  @Input() trackerCaption = 'Tracker';\n  trackerRoute: RouteEntry = {\n    caption: 'Tracker',\n    router: ['app/tracker'],\n    exact: true,\n    icon: faClock,\n    trackingCategory: 'navTracker'\n  };\n  bannerRoute: RouteEntry = {\n    caption: 'Track My Playtime',\n    router: ['app'],\n    trackingCategory: 'navBanner'\n  };\n  profileRoute: RouteEntry = {\n    caption: '',\n    router: ['app/profile'],\n    trackingCategory: 'navProfile'\n  };\n  routes: RouteEntry[] = [{\n    caption: 'Dashboard',\n    router: ['app/dashboard'],\n    exact: true,\n    icon: faChartBar,\n    trackingCategory: 'navDashboard'\n  },\n  {\n    caption: 'Library',\n    router: ['app/library'],\n    exact: true,\n    icon: faList,\n    trackingCategory: 'navLibrary'\n  },\n  {\n    caption: 'Completion',\n    router: ['app/completion'],\n    exact: true,\n    icon: faClipboardList,\n    trackingCategory: 'navCompletion'\n  }\n  ];\n  hideNavContents = true;\n  userInfo: UserInfo;\n  icons = {\n    logout: faSignOutAlt,\n    menu: faBars,\n    close: faTimes\n  };\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n\n  toggleNav() {\n    this.hideNavContents = !this.hideNavContents;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      \n        {{ bannerRoute.caption }}\n        \n        \n      \n    \n\n    \n      \n        \n\n          \n            \n              \n            \n            {{ trackerRoute.caption }}\n            {{ trackerCaption }}\n          \n\n        \n        \n\n          \n            \n              \n            \n            {{ route.caption }}\n          \n\n        \n      \n\n      \n    \n  \n\n  \n    \n      \n        \n        {{ userInfo.displayName }}\n      \n    \n\n    \n      Logout\n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ bannerRoute.caption }}                                                                                                        {{ trackerRoute.caption }}            {{ trackerCaption }}                                                                                      {{ route.caption }}                                                                {{ userInfo.displayName }}                    Logout                          '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgSelectValue.html":{"url":"interfaces/NgSelectValue.html","title":"interface - NgSelectValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgSelectValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        label\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IHasId {\n  id: string;\n}\n\nexport interface Dictionary {\n  [id: string]: T;\n}\n\nexport interface NgSelectValue {\n  label?: string | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotAuthenticated.html":{"url":"classes/NotAuthenticated.html","title":"class - NotAuthenticated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotAuthenticated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : NOT_AUTHENTICATED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PieChartConfig.html":{"url":"interfaces/PieChartConfig.html","title":"interface - PieChartConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PieChartConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/models/graph.models.ts\n        \n\n\n            \n                Extends\n            \n            \n                    GraphConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doughnut\n                                \n                                \n                                        explodeSlices\n                                \n                                \n                                        showLabels\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doughnut\n                                    \n                                \n                                \n                                    \n                                        doughnut:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        explodeSlices\n                                    \n                                \n                                \n                                    \n                                        explodeSlices:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showLabels\n                                    \n                                \n                                \n                                    \n                                        showLabels:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GraphDataItem {\n  name: string;\n  value: number;\n}\n\nexport interface GraphConfig {\n  view: [number, number] | undefined;\n  colorScheme: {\n    domain: string[]\n  };\n  showLegend: boolean;\n  gradient: boolean;\n  animations: boolean;\n}\n\nexport interface BarGraphConfig extends GraphConfig {\n  showXAxis: boolean;\n  showYAxis: boolean;\n  showXAxisLabel: boolean;\n  showYAxisLabel: boolean;\n  showGridLines: boolean;\n  xAxisLabel: string;\n  yAxisLabel: string;\n  axisTickFormatting: (x: any) => any;\n  scaleMax: number;\n}\n\nexport interface PieChartConfig extends GraphConfig {\n  showLabels: boolean;\n  explodeSlices: boolean;\n  doughnut: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformsEffects.html":{"url":"injectables/PlatformsEffects.html","title":"injectable - PlatformsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/platforms.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadOptions$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, platformsService: PlatformsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/platforms.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformsService\n                                                  \n                                                        \n                                                                    PlatformsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadOptions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadOptions$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(platformsActions.LOAD_OPTIONS)\n      .pipe(\n        switchMap(() => this.platformsService.getPlatformsOptions()\n          .pipe(\n            map(data => new platformsActions.LoadOptionsSucceeded(data)),\n            catchError(err => of(new appActions.Error(platformsActions.LOAD_OPTIONS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/platforms.effects.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { PlatformsService } from '../services/platforms.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as platformsActions from '../../../shared/actions/platforms.actions';\n\n@Injectable()\nexport class PlatformsEffects {\n\n  constructor(private actions$: Actions, private platformsService: PlatformsService) { }\n\n  @Effect() loadOptions$ =\n    this.actions$\n      .ofType(platformsActions.LOAD_OPTIONS)\n      .pipe(\n        switchMap(() => this.platformsService.getPlatformsOptions()\n          .pipe(\n            map(data => new platformsActions.LoadOptionsSucceeded(data)),\n            catchError(err => of(new appActions.Error(platformsActions.LOAD_OPTIONS, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformsService.html":{"url":"injectables/PlatformsService.html","title":"injectable - PlatformsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlatformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/platforms.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                platformsCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatformsOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/platforms.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlatformsOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlatformsOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/platforms.service.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            platformsCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformsCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/platforms.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Injectable()\nexport class PlatformsService {\n\n  private platformsCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.platformsCollection = this.afs.collection('platforms');\n  }\n\n  getPlatformsOptions(): Observable {\n    const platformsItems = this.platformsCollection.valueChanges().pipe(first());\n    return platformsItems.pipe(map(items =>\n      items.sort((a, b) => a.index - b.index)\n        .map(item => item.option)));\n  }\n}\n\nexport interface FirestorePlatformsItem {\n  index: number;\n  option: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayingDisplayData.html":{"url":"interfaces/PlayingDisplayData.html","title":"interface - PlayingDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlayingDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/models/display-data.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endDates\n                                \n                                \n                                        item\n                                \n                                \n                                        markComplete\n                                \n                                \n                                        startEntryData\n                                \n                                \n                                        timePlayed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endDates\n                                    \n                                \n                                \n                                    \n                                        endDates:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     ProgressItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProgressItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markComplete\n                                    \n                                \n                                \n                                    \n                                        markComplete:     MarkCompleteItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MarkCompleteItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryData\n                                    \n                                \n                                \n                                    \n                                        startEntryData:     HistoryListItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HistoryListItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timePlayed\n                                    \n                                \n                                \n                                    \n                                        timePlayed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CompletedItem, HistoryListItem, ProgressItem } from '../../../shared/models';\n\nimport { MarkCompleteItem } from './';\n\nexport interface PlayingDisplayData {\n  item: ProgressItem;\n  startEntryData: HistoryListItem;\n  timePlayed: number;\n  endDates: number[];\n  markComplete: MarkCompleteItem;\n}\n\nexport interface CompletedDisplayData {\n  item: ProgressItem;\n  completedItem: CompletedItem;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayingItemComponent.html":{"url":"components/PlayingItemComponent.html","title":"component - PlayingItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlayingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/playing-item/playing-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-playing-item\n            \n\n            \n                styleUrls\n                playing-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playing-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markComplete\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                remove\n                            \n                            \n                                setEndTime\n                            \n                            \n                                toggleShowExtra\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayData\n                            \n                            \n                                gameGroupings\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayData\n                    \n                    \n                            \n                            Type :    PlayingDisplayData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gameGroupings\n                    \n                    \n                            \n                            Type :    HistoryGrouping[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markComplete\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkComplete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEndTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEndTime(endTimeEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endTimeEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleShowExtra\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleShowExtra()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    complete: faCheck,\n    close: faTimes,\n    remove: faTrash\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/components/playing-item/playing-item.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faCheck, faTimes, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\n\nimport * as appActions from '../../../../actions/app.actions';\nimport * as progressActions from '../../../../shared/actions/progress.actions';\nimport * as markCompleteActions from '../../actions/mark-complete.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { HistoryGrouping } from '../../../../shared/models';\nimport { PlayingDisplayData } from '../../models';\n\nimport { getEndItem } from '../../utils/playing.utils';\n\n@Component({\n  selector: 'app-completion-playing-item',\n  templateUrl: './playing-item.component.html',\n  styleUrls: ['./playing-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PlayingItemComponent implements OnInit {\n\n  @Input() displayData: PlayingDisplayData;\n  @Input() gameGroupings: HistoryGrouping[] = [];\n  userId = '';\n  icons = {\n    complete: faCheck,\n    close: faTimes,\n    remove: faTrash\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  toggleShowExtra() {\n    this.store.dispatch(new markCompleteActions.SetShowExtra(this.displayData.item.id, !this.displayData.markComplete.showExtra));\n  }\n\n  remove() {\n    this.store.dispatch(new progressActions.RemoveProgressItem(this.userId, this.displayData.item.id));\n  }\n\n  setEndTime(endTimeEl: HTMLSelectElement) {\n    const endTime = Number.parseInt(endTimeEl.value);\n    this.store.dispatch(new markCompleteActions.SetEndTime(this.displayData.item.id, endTime));\n  }\n\n  markComplete() {\n    const endItem = getEndItem(this.gameGroupings, this.displayData.startEntryData, this.displayData.markComplete.endTime);\n    if (endItem) {\n      this.store.dispatch(new progressActions.MarkComplete(this.userId, {\n        itemId: this.displayData.item.id,\n        endEntryId: endItem.id\n      }));\n    } else {\n      this.store.dispatch(new appActions.Error(progressActions.MARK_COMPLETE, 'No matching history item found.'));\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ displayData.startEntryData.game }}\n        ({{ displayData.startEntryData.platform }})\n      \n      \n        Playtime: {{ displayData.timePlayed | time }}\n        Start: {{ displayData.startEntryData.startTime | date:'M/d/y - hh:mm a' }}\n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n\n  \n    \n      \n        End Time\n        {{ option | date:'M/d/y hh:mm a' }}\n      \n    \n    \n      Mark Completed\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ displayData.startEntryData.game }}        ({{ displayData.startEntryData.platform }})                    Playtime: {{ displayData.timePlayed | time }}        Start: {{ displayData.startEntryData.startTime | date:\\'M/d/y - hh:mm a\\' }}                                                                                                    End Time        {{ option | date:\\'M/d/y hh:mm a\\' }}                    Mark Completed      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PluralizePipe.html":{"url":"pipes/PluralizePipe.html","title":"pipe - PluralizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PluralizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/pluralize.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pluralize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: number, singlularWord: string, pluralWord: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/pluralize.pipe.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        singlularWord\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pluralWord\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'pluralize' })\nexport class PluralizePipe implements PipeTransform {\n  transform(value: number, singlularWord: string, pluralWord: string): string {\n    if (value === 1) {\n      return singlularWord;\n    }\n    return pluralWord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/models/profile.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editName\n                            \n                            \n                                icons\n                            \n                            \n                                message\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendResetPasswordLink\n                            \n                            \n                                setEditName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/profile.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendResetPasswordLink\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendResetPasswordLink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setEditName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetEditName(editName: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editName\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editName:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    edit: faEdit\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userInfo:     UserInfo\n\n                    \n                \n                    \n                        \n                            Type :     UserInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../auth/services/user.service';\n\nimport * as userActions from '../auth/actions/user.actions';\n\nimport { State as AuthState } from '../auth/reducers/root.reducer';\n\nimport { UserInfo } from '../auth/models';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  userInfo: UserInfo;\n  message = '';\n  editName = false;\n  icons = {\n    edit: faEdit\n  };\n  constructor(private store: Store, private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUserInfo().subscribe(userInfo => this.userInfo = userInfo);\n  }\n\n  sendResetPasswordLink() {\n    this.store.dispatch(new userActions.ResetPassword(this.userInfo.email));\n    this.message = `A password reset email has been sent to ${this.userInfo.email}`;\n  }\n\n  setEditName(editName: boolean) {\n    this.editName = editName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        About\n\n        \n          \n            Display Name: {{ userInfo.displayName }}\n            \n              \n            \n          \n\n          \n        \n\n        Email: {{ userInfo.email }}\n      \n    \n\n    \n      Account\n\n      Reset Password\n      {{ message }}\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          About                              Display Name: {{ userInfo.displayName }}                                                                          Email: {{ userInfo.email }}                    Account      Reset Password      {{ message }}      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileEffects.html":{"url":"injectables/ProfileEffects.html","title":"injectable - ProfileEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/effects/profile.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadProfile$\n                            \n                            \n                                setDisplayName$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/effects/profile.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                    ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProfile$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadProfile$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(profileActions.LOAD_PROFILE)\n      .pipe(\n        map(action => action as profileActions.LoadProfile),\n        switchMap(action => this.profileService.getProfile(action.userId)\n          .pipe(\n            map(data => new profileActions.LoadProfileSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.LOAD_PROFILE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/effects/profile.effects.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setDisplayName$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(profileActions.SET_PROFILE_DISPLAYNAME)\n      .pipe(\n        map(action => action as profileActions.SetProfileDisplayName),\n        switchMap(action => this.profileService.setDisplayName(action.userId, action.displayName)\n          .pipe(\n            map(data => new profileActions.SetProfileDisplayNameSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.SET_PROFILE_DISPLAYNAME, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/effects/profile.effects.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { ProfileService } from '../services/profile.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as profileActions from '../actions/profile.actions';\n\n@Injectable()\nexport class ProfileEffects {\n\n  constructor(private actions$: Actions, private profileService: ProfileService) { }\n\n  @Effect() loadProfile$ =\n    this.actions$\n      .ofType(profileActions.LOAD_PROFILE)\n      .pipe(\n        map(action => action as profileActions.LoadProfile),\n        switchMap(action => this.profileService.getProfile(action.userId)\n          .pipe(\n            map(data => new profileActions.LoadProfileSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.LOAD_PROFILE, err.message))))));\n\n  @Effect() setDisplayName$ =\n    this.actions$\n      .ofType(profileActions.SET_PROFILE_DISPLAYNAME)\n      .pipe(\n        map(action => action as profileActions.SetProfileDisplayName),\n        switchMap(action => this.profileService.setDisplayName(action.userId, action.displayName)\n          .pipe(\n            map(data => new profileActions.SetProfileDisplayNameSucceeded(data)),\n            catchError(err => of(new appActions.Error(profileActions.SET_PROFILE_DISPLAYNAME, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  ProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nEditDisplayNameComponent\n\nEditDisplayNameComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nEditDisplayNameComponent->ProfileModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                EditDisplayNameComponent\n                            \n                            \n                                ProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ProfileService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport {\n    EditDisplayNameComponent\n} from './components/edit-display-name/edit-display-name.component';\nimport { ProfileComponent } from './profile.component';\n\nimport { ProfileEffects } from './effects/profile.effects';\n\nimport { ProfileService } from './services/profile.service';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    StoreModule.forFeature('profile', reducers),\n    EffectsModule.forFeature([ProfileEffects]),\n  ],\n  declarations: [\n    ProfileComponent,\n    EditDisplayNameComponent\n  ],\n  providers: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/services/profile.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                profileCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                setDisplayName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/services/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetProfile(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setDisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetDisplayName(userId: string, displayName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        displayName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            profileCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        profileCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/services/profile.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { Profile } from '../models';\n\n@Injectable()\nexport class ProfileService {\n\n  private profileCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.profileCollection = this.afs.collection('profile');\n  }\n\n  getProfile(userId: string): Observable {\n    const profileDoc = this.profileCollection.doc(userId).valueChanges().pipe(first());\n    return profileDoc.pipe(map(profile => {\n      ...profile\n    }));\n  }\n\n  setDisplayName(userId: string, displayName: string): Observable {\n    this.profileCollection.doc(userId).set({ displayName }, { merge: true });\n    return of(displayName);\n  }\n}\n\nexport interface FirestoreProfileItem {\n  displayName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        info\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     fromProfile.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromProfile.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromProfile from './profile.reducer';\n\nimport { Profile } from '../models';\n\nexport interface ProfileState {\n  info: fromProfile.State;\n}\n\nexport interface State {\n  profile: ProfileState;\n}\n\nexport const reducers: ActionReducerMap = {\n  info: fromProfile.reducer\n};\n\nexport const _selectProfileState = createFeatureSelector('profile');\nexport const _selectInfo = createSelector(_selectProfileState, state => state.info as Profile);\n\nconst profileSelectors = {\n  info: _selectInfo\n};\n\nexport default profileSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressCollection.html":{"url":"interfaces/ProgressCollection.html","title":"interface - ProgressCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     FirestoreProgressItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FirestoreProgressItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressEffects.html":{"url":"injectables/ProgressEffects.html","title":"injectable - ProgressEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProgressEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/effects/progress.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadProgressItems$\n                            \n                            \n                                markCompleted$\n                            \n                            \n                                removeProgressItem$\n                            \n                            \n                                saveAddPlayingSucceeded$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, progressService: ProgressService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/effects/progress.effects.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        progressService\n                                                  \n                                                        \n                                                                    ProgressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadProgressItems$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadProgressItems$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.LOAD_PROGRESS_ITEMS)\n      .pipe(\n        map(action => action as progressActions.LoadProgressItems),\n        switchMap(action => this.progressService.getProgressList(action.userId)\n          .pipe(\n            mergeMap(entities => [\n              new progressActions.LoadProgressItemsSucceeded(entities),\n              new markCompleteActions.LoadItems(entities.filter(entity => entity.endEntryId === '').map(entity => entity.id))\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.LOAD_PROGRESS_ITEMS, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markCompleted$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        markCompleted$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.MARK_COMPLETE)\n      .pipe(\n        map(action => action as progressActions.MarkComplete),\n        switchMap(action => this.progressService.markCompleted(action.userId, action.payload)\n          .pipe(\n            mergeMap(data => [\n              new progressActions.MarkCompleteSucceeded(data),\n              new markCompleteActions.Remove(data.itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.MARK_COMPLETE, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeProgressItem$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeProgressItem$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(progressActions.REMOVE_PROGRESS_ITEM)\n      .pipe(\n        map(action => action as progressActions.RemoveProgressItem),\n        switchMap(action => this.progressService.remove(action.userId, action.itemId)\n          .pipe(\n            mergeMap(itemId => [\n              new progressActions.RemoveProgressItemSucceeded(itemId),\n              new markCompleteActions.Remove(itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.REMOVE_PROGRESS_ITEM, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAddPlayingSucceeded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveAddPlayingSucceeded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(addPlayingActions.SAVE_SUCCEEDED)\n      .pipe(\n        map(action => action as addPlayingActions.SaveSucceeded),\n        map(action => action.item),\n        mergeMap(item => [\n          new progressActions.AddNewProgressItem(item),\n          new markCompleteActions.AddNewItem(item.id)\n        ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/effects/progress.effects.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProgressService } from '../services/progress.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as progressActions from '../../../shared/actions/progress.actions';\nimport * as addPlayingActions from '../actions/add-playing.actions';\nimport * as markCompleteActions from '../actions/mark-complete.actions';\n\n@Injectable()\nexport class ProgressEffects {\n\n  constructor(private actions$: Actions, private progressService: ProgressService) { }\n\n  @Effect() loadProgressItems$ =\n    this.actions$\n      .ofType(progressActions.LOAD_PROGRESS_ITEMS)\n      .pipe(\n        map(action => action as progressActions.LoadProgressItems),\n        switchMap(action => this.progressService.getProgressList(action.userId)\n          .pipe(\n            mergeMap(entities => [\n              new progressActions.LoadProgressItemsSucceeded(entities),\n              new markCompleteActions.LoadItems(entities.filter(entity => entity.endEntryId === '').map(entity => entity.id))\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.LOAD_PROGRESS_ITEMS, err.message))))));\n\n  @Effect() saveAddPlayingSucceeded$ =\n    this.actions$\n      .ofType(addPlayingActions.SAVE_SUCCEEDED)\n      .pipe(\n        map(action => action as addPlayingActions.SaveSucceeded),\n        map(action => action.item),\n        mergeMap(item => [\n          new progressActions.AddNewProgressItem(item),\n          new markCompleteActions.AddNewItem(item.id)\n        ]));\n\n  @Effect() markCompleted$ =\n    this.actions$\n      .ofType(progressActions.MARK_COMPLETE)\n      .pipe(\n        map(action => action as progressActions.MarkComplete),\n        switchMap(action => this.progressService.markCompleted(action.userId, action.payload)\n          .pipe(\n            mergeMap(data => [\n              new progressActions.MarkCompleteSucceeded(data),\n              new markCompleteActions.Remove(data.itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.MARK_COMPLETE, err.message))))));\n\n  @Effect() removeProgressItem$ =\n    this.actions$\n      .ofType(progressActions.REMOVE_PROGRESS_ITEM)\n      .pipe(\n        map(action => action as progressActions.RemoveProgressItem),\n        switchMap(action => this.progressService.remove(action.userId, action.itemId)\n          .pipe(\n            mergeMap(itemId => [\n              new progressActions.RemoveProgressItemSucceeded(itemId),\n              new markCompleteActions.Remove(itemId)\n            ]),\n            catchError(err => of(new appActions.Error(progressActions.REMOVE_PROGRESS_ITEM, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressEntity.html":{"url":"interfaces/ProgressEntity.html","title":"interface - ProgressEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/progress.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/progress.actions';\n\nexport interface ProgressEntity {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_PROGRESS_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_PROGRESS_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_PROGRESS_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_PROGRESS_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.MARK_COMPLETE_SUCCEEDED: {\n      const { itemId: id, ...changes } = action.payload;\n      return adapter.updateOne({\n        id,\n        changes\n      }, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressItem.html":{"url":"interfaces/ProgressItem.html","title":"interface - ProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/progress.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endEntryId\n                                \n                                \n                                        id\n                                \n                                \n                                        startEntryId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endEntryId\n                                    \n                                \n                                \n                                    \n                                        endEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startEntryId\n                                    \n                                \n                                \n                                    \n                                        startEntryId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface CompletedItem {\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  timePlayed: number;\n}\n\nexport interface MarkCompletePayload {\n  itemId: string;\n  endEntryId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressService.html":{"url":"injectables/ProgressService.html","title":"injectable - ProgressService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProgressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/services/progress.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                progressCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNewProgressItem\n                            \n                            \n                                getProgressList\n                            \n                            \n                                    Private\n                                getUserItemCollection\n                            \n                            \n                                markCompleted\n                            \n                            \n                                remove\n                            \n                            \n                                saveAddPlaying\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/services/progress.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNewProgressItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNewProgressItem(addPlaying: AddPlaying)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                        \n                                                                    AddPlaying\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FirestoreProgressItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getProgressList\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetProgressList(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getUserItemCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getUserItemCollection(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AngularFirestoreCollection\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markCompleted\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkCompleted(userId: string, payload: MarkCompletePayload)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        payload\n                                                        \n                                                                    MarkCompletePayload\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(userId: string, itemId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        itemId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAddPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveAddPlaying(addPlaying: AddPlaying)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                        \n                                                                    AddPlaying\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            progressCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/services/progress.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable, of } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../../../shared/models';\nimport { AddPlaying } from '../models';\n\nimport { getUUID } from '../../../shared/utils/uuid.utils';\n\n@Injectable()\nexport class ProgressService {\n\n  private progressCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.progressCollection = this.afs.collection('progress');\n  }\n\n  getProgressList(userId: string): Observable {\n    const progressList = this.getUserItemCollection(userId).valueChanges().pipe(first());\n    return progressList.pipe(map(progressListItems => progressListItems.map(progress => progress as ProgressEntity)));\n  }\n\n  saveAddPlaying(addPlaying: AddPlaying): Observable {\n    const newItem = this.getNewProgressItem(addPlaying);\n    this.getUserItemCollection(addPlaying.userId).doc(newItem.id).set(newItem);\n    return of(newItem as ProgressEntity);\n  }\n\n  markCompleted(userId: string, payload: MarkCompletePayload): Observable {\n    const { itemId, endEntryId } = payload;\n    this.getUserItemCollection(userId).doc(itemId).update({ endEntryId });\n    return of(payload);\n  }\n\n  remove(userId: string, itemId: string): Observable {\n    this.getUserItemCollection(userId).doc(itemId).delete();\n    return of(itemId);\n  }\n\n  getNewProgressItem(addPlaying: AddPlaying): FirestoreProgressItem {\n    const id = getUUID(addPlaying.userId);\n    return {\n      id,\n      startEntryId: addPlaying.startEntryId,\n      endEntryId: ''\n    };\n  }\n\n  private getUserItemCollection(userId: string): AngularFirestoreCollection {\n    return this.progressCollection.doc(userId).collection('items');\n  }\n}\n\nexport interface FirestoreProgressItem {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\ninterface ProgressCollection {\n  items: FirestoreProgressItem[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-register\n            \n\n            \n                styleUrls\n                register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggingIn$\n                            \n                            \n                                message$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailSignUp\n                            \n                            \n                                facebookSignUp\n                            \n                            \n                                googleSignUp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                twitterSignUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailSignUp(event: EmailAuthEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    EmailAuthEvent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nfacebookSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoogleSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterSignUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ntwitterSignUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingIn$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingIn$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/components/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\n\nimport * as userActions from '../../actions/user.actions';\n\nimport authComponentSelectors, { State } from '../../reducers/root.reducer';\n\nimport { EmailAuthEvent } from '../../models';\n\n@Component({\n  selector: 'app-auth-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  loggingIn$: Observable;\n  message$: Observable;\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.loggingIn$ = this.store.select(authComponentSelectors.loggingIn);\n    this.message$ = this.store.select(authComponentSelectors.validationMessage);\n  }\n\n  googleSignUp() {\n    this.store.dispatch(new userActions.GoogleLogin());\n  }\n\n  facebookSignUp() {\n    this.store.dispatch(new userActions.FacebookLogin());\n  }\n\n  twitterSignUp() {\n    this.store.dispatch(new userActions.TwitterLogin());\n  }\n\n  emailSignUp(event: EmailAuthEvent) {\n    this.store.dispatch(new userActions.SignUp(event.email, event.password));\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Remove.html":{"url":"classes/Remove.html","title":"class - Remove","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Remove\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveHistoryItem.html":{"url":"classes/RemoveHistoryItem.html","title":"class - RemoveHistoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveHistoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_HISTORY_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveHistoryItemSucceeded.html":{"url":"classes/RemoveHistoryItemSucceeded.html","title":"class - RemoveHistoryItemSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveHistoryItemSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_HISTORY_ITEM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProgressItem.html":{"url":"classes/RemoveProgressItem.html","title":"class - RemoveProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_PROGRESS_ITEM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProgressItemSucceeded.html":{"url":"classes/RemoveProgressItemSucceeded.html","title":"class - RemoveProgressItemSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProgressItemSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/progress.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/progress.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : REMOVE_PROGRESS_ITEM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/progress.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../reducers/progress.reducer';\n\nimport { MarkCompletePayload } from '../models';\n\nexport const ADD_NEW_PROGRESS_ITEM = '[Progress] Add New Progress Item';\nexport class AddNewProgressItem implements Action {\n  readonly type = ADD_NEW_PROGRESS_ITEM;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS = '[Progress] Load Progress Items';\nexport class LoadProgressItems implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROGRESS_ITEMS_SUCCEEDED = '[Progress] Load Progress Items Succeeded';\nexport class LoadProgressItemsSucceeded implements Action {\n  readonly type = LOAD_PROGRESS_ITEMS_SUCCEEDED;\n  constructor(public items: ProgressEntity[]) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM = '[Progress] Remove Progress Item';\nexport class RemoveProgressItem implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_PROGRESS_ITEM_SUCCEEDED = '[Progress] Remove Progress Item Succeeded';\nexport class RemoveProgressItemSucceeded implements Action {\n  readonly type = REMOVE_PROGRESS_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const MARK_COMPLETE = '[Progress] Mark Complete';\nexport class MarkComplete implements Action {\n  readonly type = MARK_COMPLETE;\n  constructor(public userId: string, public payload: MarkCompletePayload) { }\n}\n\nexport const MARK_COMPLETE_SUCCEEDED = '[Progress] Mark Complete Succeeded';\nexport class MarkCompleteSucceeded implements Action {\n  readonly type = MARK_COMPLETE_SUCCEEDED;\n  constructor(public payload: MarkCompletePayload) { }\n}\n\nexport type All = AddNewProgressItem |\n  LoadProgressItems |\n  LoadProgressItemsSucceeded |\n  RemoveProgressItem |\n  RemoveProgressItemSucceeded |\n  MarkComplete |\n  MarkCompleteSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reset.html":{"url":"classes/Reset.html","title":"class - Reset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:27\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassword.html":{"url":"classes/ResetPassword.html","title":"class - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_PASSWORD\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetTimer.html":{"url":"classes/ResetTimer.html","title":"class - ResetTimer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetTimer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : RESET_TIMER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteEntry.html":{"url":"interfaces/RouteEntry.html","title":"interface - RouteEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        caption\n                                \n                                \n                                            Optional\n                                        exact\n                                \n                                \n                                            Optional\n                                        icon\n                                \n                                \n                                        router\n                                \n                                \n                                        trackingCategory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                    \n                                \n                                \n                                    \n                                        caption:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exact\n                                    \n                                \n                                \n                                    \n                                        exact:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     IconDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IconDefinition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     any[] | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[] | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackingCategory\n                                    \n                                \n                                \n                                    \n                                        trackingCategory:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IconDefinition } from '@fortawesome/fontawesome-svg-core';\n\nexport interface RouteEntry {\n  caption: string;\n  router: any[] | string;\n  exact?: boolean;\n  icon?: IconDefinition;\n  trackingCategory: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateUrl.html":{"url":"interfaces/RouterStateUrl.html","title":"interface - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        params\n                                \n                                \n                                        queryParams\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:     Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Save.html":{"url":"classes/Save.html","title":"class - Save","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Save\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addPlaying\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addPlaying: AddPlaying)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addPlaying\n                                                  \n                                                        \n                                                                    AddPlaying\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addPlaying\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addPlaying:     AddPlaying\n\n                    \n                \n                    \n                        \n                            Type :     AddPlaying\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveSucceeded.html":{"url":"classes/SaveSucceeded.html","title":"class - SaveSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: ProgressEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    ProgressEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     ProgressEntity\n\n                    \n                \n                    \n                        \n                            Type :     ProgressEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveTimerInfo.html":{"url":"classes/SaveTimerInfo.html","title":"class - SaveTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info: AddTimerInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                    AddTimerInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     AddTimerInfo\n\n                    \n                \n                    \n                        \n                            Type :     AddTimerInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveTimerInfoSucceeded.html":{"url":"classes/SaveTimerInfoSucceeded.html","title":"class - SaveTimerInfoSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveTimerInfoSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                item\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(item: HistoryEntity)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                  \n                                                        \n                                                                    HistoryEntity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     HistoryEntity\n\n                    \n                \n                    \n                        \n                            Type :     HistoryEntity\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SAVE_TIMER_INFO_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAttemptingLogin.html":{"url":"classes/SetAttemptingLogin.html","title":"class - SetAttemptingLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAttemptingLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/status.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attemptingLogin\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attemptingLogin: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/status.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attemptingLogin\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            attemptingLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        attemptingLogin:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ATTEMPTING_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_ATTEMPTING_LOGIN = '[Status] Set Attempting Login';\nexport class SetAttemptingLogin implements Action {\n  readonly type = SET_ATTEMPTING_LOGIN;\n  constructor(public attemptingLogin: boolean) { }\n}\n\nexport const SET_VALIDATION_MESSAGE = '[Status] Set Validation Message';\nexport class SetValidationMessage implements Action {\n  readonly type = SET_VALIDATION_MESSAGE;\n  constructor(public validationMessage: string) { }\n}\n\nexport type All = SetAttemptingLogin | SetValidationMessage;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetEndTime.html":{"url":"classes/SetEndTime.html","title":"class - SetEndTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetEndTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                endTime\n                            \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string, endTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            endTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_ENDTIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGame.html":{"url":"classes/SetGame.html","title":"class - SetGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGame-1.html":{"url":"classes/SetGame-1.html","title":"class - SetGame-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                game\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            game\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLastMonth.html":{"url":"classes/SetLastMonth.html","title":"class - SetLastMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLastMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:23\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAST_MONTH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLastWeek.html":{"url":"classes/SetLastWeek.html","title":"class - SetLastWeek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLastWeek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_LAST_WEEK\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPlatform.html":{"url":"classes/SetPlatform.html","title":"class - SetPlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPlatform-1.html":{"url":"classes/SetPlatform-1.html","title":"class - SetPlatform-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platform\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platform:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileDisplayName.html":{"url":"classes/SetProfileDisplayName.html","title":"class - SetProfileDisplayName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileDisplayName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PROFILE_DISPLAYNAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileDisplayNameSucceeded.html":{"url":"classes/SetProfileDisplayNameSucceeded.html","title":"class - SetProfileDisplayNameSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileDisplayNameSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/actions/profile.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayName\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(displayName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/actions/profile.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        displayName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        displayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_PROFILE_DISPLAYNAME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/profile/actions/profile.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Profile } from '../models';\n\nexport const LOAD_PROFILE = '[Profile] Load Profile';\nexport class LoadProfile implements Action {\n  readonly type = LOAD_PROFILE;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_PROFILE_SUCCEEDED = '[Profile] Load Profile Succeeded';\nexport class LoadProfileSucceeded implements Action {\n  readonly type = LOAD_PROFILE_SUCCEEDED;\n  constructor(public profile: Profile) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME = '[Profile] Set DisplayName';\nexport class SetProfileDisplayName implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME;\n  constructor(public userId: string, public displayName: string) { }\n}\n\nexport const SET_PROFILE_DISPLAYNAME_SUCCEEDED = '[Profile] Set DisplayName Succeeded';\nexport class SetProfileDisplayNameSucceeded implements Action {\n  readonly type = SET_PROFILE_DISPLAYNAME_SUCCEEDED;\n  constructor(public displayName: string) { }\n}\n\nexport type All = LoadProfile |\n  LoadProfileSucceeded |\n  SetProfileDisplayName |\n  SetProfileDisplayNameSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetShowExtra.html":{"url":"classes/SetShowExtra.html","title":"class - SetShowExtra","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetShowExtra\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/mark-complete.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                itemId\n                            \n                            \n                                    Public\n                                showExtra\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(itemId: string, showExtra: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/mark-complete.actions.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        showExtra\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showExtra\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showExtra:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_SHOW_EXTRA\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/mark-complete.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_SHOW_EXTRA = '[Mark Complete] Set Show Extra';\nexport class SetShowExtra implements Action {\n  readonly type = SET_SHOW_EXTRA;\n  constructor(public itemId: string, public showExtra: boolean) { }\n}\n\nexport const SET_ENDTIME = '[Mark Complete] Set End Time';\nexport class SetEndTime implements Action {\n  readonly type = SET_ENDTIME;\n  constructor(public itemId: string, public endTime: number) { }\n}\n\nexport const REMOVE = '[Mark Complete] Remove';\nexport class Remove implements Action {\n  readonly type = REMOVE;\n  constructor(public itemId: string) { }\n}\n\nexport const LOAD_ITEMS = '[Mark Complete] Load Items';\nexport class LoadItems implements Action {\n  readonly type = LOAD_ITEMS;\n  constructor(public itemIds: string[]) { }\n}\n\nexport const ADD_NEW_ITEM = '[Mark Complete] Add New Item';\nexport class AddNewItem implements Action {\n  readonly type = ADD_NEW_ITEM;\n  constructor(public itemId: string) { }\n}\n\nexport type All = SetShowExtra |\n  SetEndTime |\n  Remove |\n  LoadItems |\n  AddNewItem;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStartTime.html":{"url":"classes/SetStartTime.html","title":"class - SetStartTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStartTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_START_TIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStartTime-1.html":{"url":"classes/SetStartTime-1.html","title":"class - SetStartTime-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStartTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/add-playing.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                startTime\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startTime: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/add-playing.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTime\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_STARTTIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/add-playing.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { ProgressEntity } from '../../../shared/reducers/progress.reducer';\n\nimport { AddPlaying } from '../models';\n\nexport const SET_GAME = '[Add Playing] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Add Playing] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_STARTTIME = '[Add Playing] Set StartTime';\nexport class SetStartTime implements Action {\n  readonly type = SET_STARTTIME;\n  constructor(public startTime: number) { }\n}\n\nexport const RESET = '[Add Playing] Reset';\nexport class Reset implements Action {\n  readonly type = RESET;\n  constructor() { }\n}\n\nexport const SAVE = '[Add Playing] Save';\nexport class Save implements Action {\n  readonly type = SAVE;\n  constructor(public addPlaying: AddPlaying) { }\n}\n\nexport const SAVE_SUCCEEDED = '[Add Playing] Save Succeeded';\nexport class SaveSucceeded implements Action {\n  readonly type = SAVE_SUCCEEDED;\n  constructor(public item: ProgressEntity) { }\n}\n\nexport type All = SetGame |\n  SetPlatform |\n  SetStartTime |\n  Reset |\n  Save |\n  SaveSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetThisMonth.html":{"url":"classes/SetThisMonth.html","title":"class - SetThisMonth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetThisMonth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_THIS_MONTH\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetThisWeek.html":{"url":"classes/SetThisWeek.html","title":"class - SetThisWeek","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetThisWeek\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/actions/date-range.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/actions/date-range.actions.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_THIS_WEEK\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/dashboard/actions/date-range.actions.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_THIS_WEEK = '[Dashboard] Set This Week';\nexport class SetThisWeek implements Action {\n  readonly type = SET_THIS_WEEK;\n  constructor() { }\n}\n\nexport const SET_LAST_WEEK = '[Dashboard] Set Last Week';\nexport class SetLastWeek implements Action {\n  readonly type = SET_LAST_WEEK;\n  constructor() { }\n}\n\nexport const SET_THIS_MONTH = '[Dashboard] Set This Month';\nexport class SetThisMonth implements Action {\n  readonly type = SET_THIS_MONTH;\n  constructor() { }\n}\n\nexport const SET_LAST_MONTH = '[Dashboard] Set Last Month';\nexport class SetLastMonth implements Action {\n  readonly type = SET_LAST_MONTH;\n  constructor() { }\n}\n\nexport type All = SetThisWeek |\n  SetLastWeek |\n  SetThisMonth |\n  SetLastMonth;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetTimerInfo.html":{"url":"classes/SetTimerInfo.html","title":"class - SetTimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetTimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/timer.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(info: TimerInfo)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/timer.actions.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                    TimerInfo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        info:     TimerInfo\n\n                    \n                \n                    \n                        \n                            Type :     TimerInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_TIMER_INFO\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/timer.actions.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport { AddTimerInfo, TimerInfo } from '../models';\n\nexport const RESET_TIMER = '[Timer] Reset Timer';\nexport class ResetTimer implements Action {\n  readonly type = RESET_TIMER;\n  constructor() { }\n}\n\nexport const SET_GAME = '[Timer] Set Game';\nexport class SetGame implements Action {\n  readonly type = SET_GAME;\n  constructor(public game: string) { }\n}\n\nexport const SET_PLATFORM = '[Timer] Set Platform';\nexport class SetPlatform implements Action {\n  readonly type = SET_PLATFORM;\n  constructor(public platform: string) { }\n}\n\nexport const SET_START_TIME = '[Timer] Set Start Time';\nexport class SetStartTime implements Action {\n  readonly type = SET_START_TIME;\n  constructor(public startTime: number) { }\n}\n\nexport const SAVE_TIMER_INFO = '[Timer] Save Timer Info';\nexport class SaveTimerInfo implements Action {\n  readonly type = SAVE_TIMER_INFO;\n  constructor(public info: AddTimerInfo) { }\n}\n\nexport const SAVE_TIMER_INFO_SUCCEEDED = '[Timer] Save Timer Info Succeeded';\nexport class SaveTimerInfoSucceeded implements Action {\n  readonly type = SAVE_TIMER_INFO_SUCCEEDED;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const CANCEL_TIMER = '[Timer] Cancel Timer';\nexport class CancelTimer implements Action {\n  readonly type = CANCEL_TIMER;\n  constructor() { }\n}\n\nexport const LOAD_TIMER_INFO = '[Timer] Load Info';\nexport class LoadTimerInfo implements Action {\n  readonly type = LOAD_TIMER_INFO;\n  constructor(public userId: string) { }\n}\n\nexport const SET_TIMER_INFO = '[Timer] Set Timer Info';\nexport class SetTimerInfo implements Action {\n  readonly type = SET_TIMER_INFO;\n  constructor(public info: TimerInfo) { }\n}\n\nexport type All = ResetTimer |\n  SetGame |\n  SetPlatform |\n  SetStartTime |\n  SaveTimerInfo |\n  SaveTimerInfoSucceeded |\n  CancelTimer |\n  LoadTimerInfo |\n  SetTimerInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetValidationMessage.html":{"url":"classes/SetValidationMessage.html","title":"class - SetValidationMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetValidationMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/status.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                validationMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationMessage: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/status.actions.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationMessage\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VALIDATION_MESSAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validationMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/status.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nexport const SET_ATTEMPTING_LOGIN = '[Status] Set Attempting Login';\nexport class SetAttemptingLogin implements Action {\n  readonly type = SET_ATTEMPTING_LOGIN;\n  constructor(public attemptingLogin: boolean) { }\n}\n\nexport const SET_VALIDATION_MESSAGE = '[Status] Set Validation Message';\nexport class SetValidationMessage implements Action {\n  readonly type = SET_VALIDATION_MESSAGE;\n  constructor(public validationMessage: string) { }\n}\n\nexport type All = SetAttemptingLogin | SetValidationMessage;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetVisibleTab.html":{"url":"classes/SetVisibleTab.html","title":"class - SetVisibleTab","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetVisibleTab\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/actions/tab.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tab\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tab: TabType)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/actions/tab.actions.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                  \n                                                        \n                                                                    TabType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tab\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tab:     TabType\n\n                    \n                \n                    \n                        \n                            Type :     TabType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/tab.actions.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SET_VISIBLE_TAB\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/completion/actions/tab.actions.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { TabType } from '../models';\n\nexport const SET_VISIBLE_TAB = '[Tab] Set Visible Tab';\nexport class SetVisibleTab implements Action {\n    readonly type = SET_VISIBLE_TAB;\n    constructor(public tab: TabType) { }\n}\n\nexport type All = SetVisibleTab;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nElapsedTimePipe\n\nElapsedTimePipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nElapsedTimePipe->SharedModule\n\n\n\n\n\nPluralizePipe\n\nPluralizePipe\n\nSharedModule -->\n\nPluralizePipe->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nTimePipe\n\nTimePipe\n\nSharedModule -->\n\nTimePipe->SharedModule\n\n\n\n\n\nElapsedTimePipe \n\nElapsedTimePipe \n\nElapsedTimePipe  -->\n\nSharedModule->ElapsedTimePipe \n\n\n\n\n\nPluralizePipe \n\nPluralizePipe \n\nPluralizePipe  -->\n\nSharedModule->PluralizePipe \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nTimePipe \n\nTimePipe \n\nTimePipe  -->\n\nSharedModule->TimePipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ElapsedTimePipe\n                            \n                            \n                                PluralizePipe\n                            \n                            \n                                SpinnerComponent\n                            \n                            \n                                TimePipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ElapsedTimePipe\n                            \n                            \n                                    PluralizePipe\n                            \n                            \n                                    SpinnerComponent\n                            \n                            \n                                    TimePipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { SpinnerComponent } from './components/spinner/spinner.component';\n\nimport { ElapsedTimePipe } from './pipes/elapsed-time.pipe';\nimport { PluralizePipe } from './pipes/pluralize.pipe';\nimport { TimePipe } from './pipes/time.pipe';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature('shared', reducers),\n  ],\n  declarations: [\n    ElapsedTimePipe,\n    TimePipe,\n    SpinnerComponent,\n    PluralizePipe\n  ],\n  exports: [\n    ElapsedTimePipe,\n    TimePipe,\n    SpinnerComponent,\n    PluralizePipe\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SharedState.html":{"url":"interfaces/SharedState.html","title":"interface - SharedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SharedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        history\n                                \n                                \n                                        platforms\n                                \n                                \n                                        progress\n                                \n                                \n                                        timer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:     fromHistory.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromHistory.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                    \n                                \n                                \n                                    \n                                        platforms:     fromPlatforms.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPlatforms.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:     fromProgress.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromProgress.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timer\n                                    \n                                \n                                \n                                    \n                                        timer:     fromTimer.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromTimer.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromHistory from './history.reducer';\nimport * as fromPlatforms from './platforms.reducer';\nimport * as fromProgress from './progress.reducer';\nimport * as fromTimer from './timer.reducer';\n\nimport { HistoryListItem, ProgressItem, TimerInfo } from '../models';\n\nimport { formatDate } from '../utils/date.utils';\nimport { getUniqueFrom } from '../utils/history-filter.utils';\nimport { getHistoryGroupingList, getHistoryListItemsMap } from '../utils/history.utils';\n\nexport interface SharedState {\n  history: fromHistory.State;\n  platforms: fromPlatforms.State;\n  progress: fromProgress.State;\n  timer: fromTimer.State;\n}\n\nexport interface State {\n  shared: SharedState;\n}\n\nexport const reducers: ActionReducerMap = {\n  history: fromHistory.reducer,\n  platforms: fromPlatforms.reducer,\n  progress: fromProgress.reducer,\n  timer: fromTimer.reducer\n};\n\nexport const _selectSharedState = createFeatureSelector('shared');\nexport const _selectHistory = createSelector(_selectSharedState, state => state.history);\nexport const _selectPlatforms = createSelector(_selectSharedState, state => state.platforms);\nexport const _selectProgress = createSelector(_selectSharedState, state => state.progress);\nexport const _selectTimer = createSelector(_selectSharedState, state => state.timer);\n\nexport const { selectAll: _selectAllProgress } = fromProgress.adapter.getSelectors(_selectProgress);\nexport const _selectPlayingProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId === '')\n    .map(entity => entity as ProgressItem));\nexport const _selectCompletedProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId !== '')\n    .map(entity => entity as ProgressItem));\n\nexport const { selectAll: _selectAllHistory } = fromHistory.adapter.getSelectors(_selectHistory);\nexport const _selectHistoryItems = createSelector(_selectAllHistory, _selectAllProgress,\n  (historyEntries, progress) => historyEntries.map(\n    historyEntry => {\n      ...historyEntry,\n      dateRange: [\n        new Date(historyEntry.startTime),\n        new Date(historyEntry.endTime),\n      ],\n      locked: progress.some(x => x.startEntryId === historyEntry.id || x.endEntryId === historyEntry.id)\n    }));\nexport const _selectSortedHistoryItems = createSelector(_selectHistoryItems, items => items.sort((a, b) => b.startTime - a.startTime));\nexport const _selectHistoryGroupingsByDate = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => formatDate(item.dateRange[0]));\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByPlatform = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.platform);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByGame = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.game);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryLoading = createSelector(_selectHistory, history => history.loading);\nexport const _selectTrackedGames = createSelector(_selectSortedHistoryItems, items => getUniqueFrom(items, item => item.game));\n\nexport const _selectPlatformsOptions = createSelector(_selectPlatforms, platforms => platforms.options);\nexport const _selectPlatformsLoaded = createSelector(_selectPlatformsOptions, platformOptions => platformOptions.length !== 0);\n\nexport const _selectTimerInfo = createSelector(_selectTimer, timer => timer as TimerInfo);\n\nexport const _selectUserDataLoaded = createSelector(_selectHistory, _selectProgress, _selectPlatformsLoaded,\n  (history, progress, platformsLoaded) => !history.loading && !progress.loading && platformsLoaded);\n\nconst sharedSelectors = {\n  historyGroupingsByDate: _selectHistoryGroupingsByDate,\n  historyGroupingsByPlatform: _selectHistoryGroupingsByPlatform,\n  historyGroupingsByGame: _selectHistoryGroupingsByGame,\n  historyLoading: _selectHistoryLoading,\n  historyTrackedGames: _selectTrackedGames,\n  platformsOptions: _selectPlatformsOptions,\n  progressPlaying: _selectPlayingProgress,\n  progressCompleted: _selectCompletedProgress,\n  timerInfo: _selectTimerInfo,\n  userDataLoaded: _selectUserDataLoaded\n};\n\nexport default sharedSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUp.html":{"url":"classes/SignUp.html","title":"class - SignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SIGNUP\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/spinner/spinner.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shared-spinner\n            \n\n            \n                styleUrls\n                spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/spinner/spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/spinner/spinner.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shared-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n  \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/error.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        action\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/app.actions';\n\nexport interface State {\n  action: string;\n  message: string;\n}\n\nconst initialState: State = {\n  action: '',\n  message: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.APP_ERROR: {\n      return {\n        ...state,\n        action: action.action,\n        message: action.message\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-1.html":{"url":"interfaces/State-1.html","title":"interface - State-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        router\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     fromError.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromError.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     fromRouter.RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromRouter.RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\n\nimport * as fromRouter from '@ngrx/router-store';\nimport { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromError from './error.reducer';\n\nimport { Error } from '../models';\n\nexport interface State {\n  router: fromRouter.RouterReducerState;\n  error: fromError.State;\n}\n\nexport const reducers: ActionReducerMap = {\n  router: fromRouter.routerReducer,\n  error: fromError.reducer\n};\n\nexport const _selectErrorState = createFeatureSelector('error');\nexport const _selectError = createSelector(_selectErrorState, state => state as Error);\n\nconst rootComponentSelectors = {\n  error: _selectError\n};\n\nexport default rootComponentSelectors;\n\ninterface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomRouterStateSerializer implements fromRouter.RouterStateSerializer {\n\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const { url, root: { queryParams } } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-10.html":{"url":"interfaces/State-10.html","title":"interface - State-10","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/date-range.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endDay\n                                \n                                \n                                        startDay\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endDay\n                                    \n                                \n                                \n                                    \n                                        endDay:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDay\n                                    \n                                \n                                \n                                    \n                                        startDay:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     DateRangeType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DateRangeType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { endOfMonth, endOfWeek, startOfMonth, startOfWeek, subDays } from 'date-fns';\n\nimport * as actions from '../actions/date-range.actions';\n\nimport { DateRangeType } from '../models';\n\nexport interface State {\n  startDay: Date;\n  endDay: Date;\n  type: DateRangeType;\n}\n\nconst getState = (startDay: Date, endDay: Date, type: DateRangeType): State => {\n  return {\n    startDay,\n    endDay,\n    type\n  };\n};\n\nconst now = new Date();\nconst startWeek = startOfWeek(now);\nconst endWeek = endOfWeek(now);\nconst initialState: State = getState(startWeek, endWeek, 'THIS_WEEK');\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_THIS_WEEK: {\n      return initialState;\n    }\n    case actions.SET_LAST_WEEK: {\n      const startThisWeek = startOfWeek(now);\n      const endLastWeek = subDays(startThisWeek, 1);\n      const startLastWeek = startOfWeek(endLastWeek);\n      return getState(startLastWeek, endLastWeek, 'LAST_WEEK');\n    }\n    case actions.SET_THIS_MONTH: {\n      const startMonth = startOfMonth(now);\n      const endMonth = endOfMonth(now);\n      return getState(startMonth, endMonth, 'THIS_MONTH');\n    }\n    case actions.SET_LAST_MONTH: {\n      const startThisMonth = startOfMonth(now);\n      const endLastMonth = subDays(startThisMonth, 1);\n      const startLastMonth = startOfMonth(endLastMonth);\n      return getState(startLastMonth, endLastMonth, 'LAST_MONTH');\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-11.html":{"url":"interfaces/State-11.html","title":"interface - State-11","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/dashboard/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     DashboardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DashboardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport { eachDay } from 'date-fns';\n\nimport * as fromDateRange from './date-range.reducer';\n\nexport interface DashboardState {\n  dateRange: fromDateRange.State;\n}\n\nexport interface State {\n  dashboard: DashboardState;\n}\n\nexport const reducers: ActionReducerMap = {\n  dateRange: fromDateRange.reducer\n};\n\nexport const _selectDashboardFeature = createFeatureSelector('dashboard');\nexport const _selectDateRange = createSelector(_selectDashboardFeature, state => state.dateRange);\n\nexport const _selectDateList = createSelector(_selectDateRange, dateRange => {\n  return eachDay(dateRange.startDay, dateRange.endDay);\n});\nexport const _selectRangeType = createSelector(_selectDateRange, dateRange => dateRange.type);\n\nconst dashboardSelectors = {\n  dateList: _selectDateList,\n  rangeType: _selectRangeType\n};\n\nexport default dashboardSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-12.html":{"url":"interfaces/State-12.html","title":"interface - State-12","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/add-playing.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/add-playing.actions';\n\nexport interface State {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nconst initialState: State = {\n  game: '',\n  platform: '',\n  startTime: 0\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_GAME: {\n      return {\n        ...state,\n        game: action.game,\n        platform: '',\n        startTime: 0\n      };\n    }\n    case actions.SET_PLATFORM: {\n      return {\n        ...state,\n        platform: action.platform,\n        startTime: 0\n      };\n    }\n    case actions.SET_STARTTIME: {\n      return {\n        ...state,\n        startTime: action.startTime\n      };\n    }\n    case actions.RESET: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-13.html":{"url":"interfaces/State-13.html","title":"interface - State-13","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/mark-complete.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/mark-complete.actions';\n\nexport interface MarkCompleteEntity {\n  id: string;\n  showExtra: boolean;\n  endTime: number;\n}\n\nexport interface State extends EntityState { }\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState();\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_SHOW_EXTRA: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          showExtra: action.showExtra\n        }\n      }, state);\n    }\n    case actions.SET_ENDTIME: {\n      return adapter.updateOne({\n        id: action.itemId,\n        changes: {\n          endTime: action.endTime\n        }\n      }, state);\n    }\n    case actions.REMOVE: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.ADD_NEW_ITEM: {\n      return adapter.addOne(getMarkCompleteEntity(action.itemId), state);\n    }\n    case actions.LOAD_ITEMS: {\n      const items = action.itemIds.map(itemId => getMarkCompleteEntity(itemId));\n      return adapter.addAll(items, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getMarkCompleteEntity = (itemId: string): MarkCompleteEntity => {\n  return {\n    id: itemId,\n    showExtra: false,\n    endTime: 0\n  };\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-14.html":{"url":"interfaces/State-14.html","title":"interface - State-14","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        completion\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completion\n                                    \n                                \n                                \n                                    \n                                        completion:     CompletionState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CompletionState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromPlaying from './add-playing.reducer';\nimport * as fromMarkComplete from './mark-complete.reducer';\nimport * as fromTab from './tab.reducer';\n\nimport { AddPlayingInfo } from '../models';\n\nexport interface CompletionState {\n  addPlaying: fromPlaying.State;\n  markComplete: fromMarkComplete.State;\n  tab: fromTab.State;\n}\n\nexport interface State {\n  completion: CompletionState;\n}\n\nexport const reducers: ActionReducerMap = {\n  addPlaying: fromPlaying.reducer,\n  markComplete: fromMarkComplete.reducer,\n  tab: fromTab.reducer\n};\n\nexport const _selectCompletionState = createFeatureSelector('completion');\nexport const _selectPlaying = createSelector(_selectCompletionState, state => state.addPlaying);\nexport const _selectMarkComplete = createSelector(_selectCompletionState, state => state.markComplete);\nexport const _selectTab = createSelector(_selectCompletionState, state => state.tab);\n\nexport const _selectAddPlayingInfo = createSelector(_selectPlaying, playing => playing as AddPlayingInfo);\n\nexport const { selectEntities: _selectMarkCompleteEntities } = fromMarkComplete.adapter.getSelectors(_selectMarkComplete);\n\nexport const _selectVisibleTab = createSelector(_selectTab, tab => tab.tab);\n\nconst completionSelectors = {\n  addPlayingInfo: _selectAddPlayingInfo,\n  markCompleteEntities: _selectMarkCompleteEntities,\n  visibleTab: _selectVisibleTab\n};\n\nexport default completionSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-15.html":{"url":"interfaces/State-15.html","title":"interface - State-15","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/completion/reducers/tab.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tab\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tab\n                                    \n                                \n                                \n                                    \n                                        tab:     TabType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TabType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/tab.actions';\n\nimport { TabType } from '../models';\n\nexport interface State {\n  tab: TabType;\n}\n\nconst initialState: State = {\n  tab: 'PLAYING'\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_VISIBLE_TAB: {\n      return {\n        ...state,\n        tab: action.tab\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-16.html":{"url":"interfaces/State-16.html","title":"interface - State-16","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/profile.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/profile.actions';\n\nexport interface State {\n  displayName: string;\n}\n\nconst initialState: State = {\n  displayName: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.LOAD_PROFILE_SUCCEEDED: {\n      return {\n        ...state,\n        ...action.profile\n      };\n    }\n    case actions.SET_PROFILE_DISPLAYNAME_SUCCEEDED: {\n      return {\n        ...state,\n        displayName: action.displayName\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-17.html":{"url":"interfaces/State-17.html","title":"interface - State-17","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/profile/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:     ProfileState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProfileState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromProfile from './profile.reducer';\n\nimport { Profile } from '../models';\n\nexport interface ProfileState {\n  info: fromProfile.State;\n}\n\nexport interface State {\n  profile: ProfileState;\n}\n\nexport const reducers: ActionReducerMap = {\n  info: fromProfile.reducer\n};\n\nexport const _selectProfileState = createFeatureSelector('profile');\nexport const _selectInfo = createSelector(_selectProfileState, state => state.info as Profile);\n\nconst profileSelectors = {\n  info: _selectInfo\n};\n\nexport default profileSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-18.html":{"url":"interfaces/State-18.html","title":"interface - State-18","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/display.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entriesToShow\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entriesToShow\n                                    \n                                \n                                \n                                    \n                                        entriesToShow:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/display.actions';\n\nexport interface State {\n  entriesToShow: number;\n}\n\nconst initialState: State = {\n  entriesToShow: 4\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.INCREMENT_DAYS_TO_SHOW: {\n      return {\n        ...state,\n        entriesToShow: state.entriesToShow + action.amount\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-19.html":{"url":"interfaces/State-19.html","title":"interface - State-19","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tracker\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tracker\n                                    \n                                \n                                \n                                    \n                                        tracker:     TrackerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TrackerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromDisplay from './display.reducer';\n\nexport interface TrackerState {\n  display: fromDisplay.State;\n}\n\nexport interface State {\n  tracker: TrackerState;\n}\n\nexport const reducers: ActionReducerMap = {\n  display: fromDisplay.reducer\n};\n\nexport const _selectTrackerState = createFeatureSelector('tracker');\nexport const _selectDisplay = createSelector(_selectTrackerState, state => state.display);\n\nexport const _selectEntriesToShow = createSelector(_selectDisplay, display => display.entriesToShow);\n\nconst trackerSelectors = {\n  entriesToShow: _selectEntriesToShow\n};\n\nexport default trackerSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-2.html":{"url":"interfaces/State-2.html","title":"interface - State-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/history.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/history.actions';\n\nimport { UpdatePayload } from '../models';\n\nexport interface HistoryEntity {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_HISTORY_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_HISTORY_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_HISTORY_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_HISTORY_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.UPDATE_GAME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_PLATFORM_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    case actions.UPDATE_ELAPSED_TIME_SUCCEEDED: {\n      return getUpdatedState(action.payload, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst getUpdatedState = (payload: UpdatePayload, currentState: State): State => {\n  const { itemId: id, ...changes } = payload;\n  return adapter.updateOne({\n    id,\n    changes\n  }, currentState);\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-3.html":{"url":"interfaces/State-3.html","title":"interface - State-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/platforms.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/platforms.actions';\n\nexport interface State {\n  options: string[];\n}\n\nconst initialState: State = {\n  options: []\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.LOAD_OPTIONS_SUCCEEDED: {\n      return {\n        ...state,\n        options: action.platforms\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-4.html":{"url":"interfaces/State-4.html","title":"interface - State-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/progress.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\n\nimport * as actions from '../actions/progress.actions';\n\nexport interface ProgressEntity {\n  id: string;\n  startEntryId: string;\n  endEntryId: string;\n}\n\nexport interface State extends EntityState {\n  loading: boolean;\n}\n\nexport const adapter: EntityAdapter = createEntityAdapter();\nconst initialState: State = adapter.getInitialState({\n  loading: false\n});\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.ADD_NEW_PROGRESS_ITEM: {\n      return adapter.addOne(action.item, state);\n    }\n    case actions.LOAD_PROGRESS_ITEMS: {\n      return {\n        ...state,\n        loading: true\n      };\n    }\n    case actions.LOAD_PROGRESS_ITEMS_SUCCEEDED: {\n      const newState = adapter.addAll(action.items, state);\n      return {\n        ...newState,\n        loading: false\n      };\n    }\n    case actions.REMOVE_PROGRESS_ITEM_SUCCEEDED: {\n      return adapter.removeOne(action.itemId, state);\n    }\n    case actions.MARK_COMPLETE_SUCCEEDED: {\n      const { itemId: id, ...changes } = action.payload;\n      return adapter.updateOne({\n        id,\n        changes\n      }, state);\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-5.html":{"url":"interfaces/State-5.html","title":"interface - State-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        shared\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        shared\n                                    \n                                \n                                \n                                    \n                                        shared:     SharedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SharedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromHistory from './history.reducer';\nimport * as fromPlatforms from './platforms.reducer';\nimport * as fromProgress from './progress.reducer';\nimport * as fromTimer from './timer.reducer';\n\nimport { HistoryListItem, ProgressItem, TimerInfo } from '../models';\n\nimport { formatDate } from '../utils/date.utils';\nimport { getUniqueFrom } from '../utils/history-filter.utils';\nimport { getHistoryGroupingList, getHistoryListItemsMap } from '../utils/history.utils';\n\nexport interface SharedState {\n  history: fromHistory.State;\n  platforms: fromPlatforms.State;\n  progress: fromProgress.State;\n  timer: fromTimer.State;\n}\n\nexport interface State {\n  shared: SharedState;\n}\n\nexport const reducers: ActionReducerMap = {\n  history: fromHistory.reducer,\n  platforms: fromPlatforms.reducer,\n  progress: fromProgress.reducer,\n  timer: fromTimer.reducer\n};\n\nexport const _selectSharedState = createFeatureSelector('shared');\nexport const _selectHistory = createSelector(_selectSharedState, state => state.history);\nexport const _selectPlatforms = createSelector(_selectSharedState, state => state.platforms);\nexport const _selectProgress = createSelector(_selectSharedState, state => state.progress);\nexport const _selectTimer = createSelector(_selectSharedState, state => state.timer);\n\nexport const { selectAll: _selectAllProgress } = fromProgress.adapter.getSelectors(_selectProgress);\nexport const _selectPlayingProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId === '')\n    .map(entity => entity as ProgressItem));\nexport const _selectCompletedProgress = createSelector(_selectAllProgress,\n  entities => entities.filter(entity => entity.endEntryId !== '')\n    .map(entity => entity as ProgressItem));\n\nexport const { selectAll: _selectAllHistory } = fromHistory.adapter.getSelectors(_selectHistory);\nexport const _selectHistoryItems = createSelector(_selectAllHistory, _selectAllProgress,\n  (historyEntries, progress) => historyEntries.map(\n    historyEntry => {\n      ...historyEntry,\n      dateRange: [\n        new Date(historyEntry.startTime),\n        new Date(historyEntry.endTime),\n      ],\n      locked: progress.some(x => x.startEntryId === historyEntry.id || x.endEntryId === historyEntry.id)\n    }));\nexport const _selectSortedHistoryItems = createSelector(_selectHistoryItems, items => items.sort((a, b) => b.startTime - a.startTime));\nexport const _selectHistoryGroupingsByDate = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => formatDate(item.dateRange[0]));\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByPlatform = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.platform);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryGroupingsByGame = createSelector(_selectSortedHistoryItems, items => {\n  const historyListItemsMap = getHistoryListItemsMap(items, item => item.game);\n  return getHistoryGroupingList(historyListItemsMap);\n});\nexport const _selectHistoryLoading = createSelector(_selectHistory, history => history.loading);\nexport const _selectTrackedGames = createSelector(_selectSortedHistoryItems, items => getUniqueFrom(items, item => item.game));\n\nexport const _selectPlatformsOptions = createSelector(_selectPlatforms, platforms => platforms.options);\nexport const _selectPlatformsLoaded = createSelector(_selectPlatformsOptions, platformOptions => platformOptions.length !== 0);\n\nexport const _selectTimerInfo = createSelector(_selectTimer, timer => timer as TimerInfo);\n\nexport const _selectUserDataLoaded = createSelector(_selectHistory, _selectProgress, _selectPlatformsLoaded,\n  (history, progress, platformsLoaded) => !history.loading && !progress.loading && platformsLoaded);\n\nconst sharedSelectors = {\n  historyGroupingsByDate: _selectHistoryGroupingsByDate,\n  historyGroupingsByPlatform: _selectHistoryGroupingsByPlatform,\n  historyGroupingsByGame: _selectHistoryGroupingsByGame,\n  historyLoading: _selectHistoryLoading,\n  historyTrackedGames: _selectTrackedGames,\n  platformsOptions: _selectPlatformsOptions,\n  progressPlaying: _selectPlayingProgress,\n  progressCompleted: _selectCompletedProgress,\n  timerInfo: _selectTimerInfo,\n  userDataLoaded: _selectUserDataLoaded\n};\n\nexport default sharedSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-6.html":{"url":"interfaces/State-6.html","title":"interface - State-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/reducers/timer.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/timer.actions';\n\nexport interface State {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nconst initialState: State = {\n  game: '',\n  platform: '',\n  startTime: 0\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.RESET_TIMER: {\n      return initialState;\n    }\n    case actions.SET_GAME: {\n      return {\n        ...state,\n        game: action.game\n      };\n    }\n    case actions.SET_PLATFORM: {\n      return {\n        ...state,\n        platform: action.platform\n      };\n    }\n    case actions.SET_START_TIME: {\n      return {\n        ...state,\n        startTime: action.startTime\n      };\n    }\n    case actions.SET_TIMER_INFO: {\n      return {\n        ...state,\n        ...action.info\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-7.html":{"url":"interfaces/State-7.html","title":"interface - State-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromStatus from './status.reducer';\nimport * as fromUser from './user.reducer';\n\nimport { User } from '../models';\n\nexport interface AuthState {\n  user: fromUser.State;\n  status: fromStatus.State;\n}\n\nexport interface State {\n  auth: AuthState;\n}\n\nexport const reducers: ActionReducerMap = {\n  user: fromUser.reducer,\n  status: fromStatus.reducer\n};\n\nexport const _selectAuthState = createFeatureSelector('auth');\nexport const _selectUser = createSelector(_selectAuthState, state => state.user);\nexport const _selectStatus = createSelector(_selectAuthState, state => state.status);\n\nexport const _selectUserLoggedIn = createSelector(_selectUser, user => user.uid !== '');\nexport const _selectUserData = createSelector(_selectUser, user => user as User);\n\nexport const _selectStatusLoggingIn = createSelector(_selectStatus, status => status.attemptingLogin);\nexport const _selectStatusValidationMessage = createSelector(_selectStatus, status => status.validationMessage);\n\nconst authComponentSelectors = {\n  isUserLoggedIn: _selectUserLoggedIn,\n  user: _selectUserData,\n  loggingIn: _selectStatusLoggingIn,\n  validationMessage: _selectStatusValidationMessage\n};\n\nexport default authComponentSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-8.html":{"url":"interfaces/State-8.html","title":"interface - State-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/status.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attemptingLogin\n                                \n                                \n                                        validationMessage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attemptingLogin\n                                    \n                                \n                                \n                                    \n                                        attemptingLogin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationMessage\n                                    \n                                \n                                \n                                    \n                                        validationMessage:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/status.actions';\n\nexport interface State {\n  attemptingLogin: boolean;\n  validationMessage: string;\n}\n\nconst initialState: State = {\n  attemptingLogin: false,\n  validationMessage: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.SET_ATTEMPTING_LOGIN: {\n      return {\n        ...state,\n        attemptingLogin: action.attemptingLogin\n      };\n    }\n    case actions.SET_VALIDATION_MESSAGE: {\n      return {\n        ...state,\n        validationMessage: action.validationMessage\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State-9.html":{"url":"interfaces/State-9.html","title":"interface - State-9","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/reducers/user.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        providerId\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerId\n                                    \n                                \n                                \n                                    \n                                        providerId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as actions from '../actions/user.actions';\n\nexport interface State {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nconst initialState: State = {\n  uid: '',\n  displayName: '',\n  email: '',\n  photoURL: '',\n  providerId: ''\n};\n\nexport function reducer(state: State = initialState, action: actions.All): State {\n  switch (action.type) {\n    case actions.AUTHENTICATED: {\n      return {\n        ...state,\n        ...action.user\n      };\n    }\n    case actions.NOT_AUTHENTICATED: {\n      return initialState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusEffects.html":{"url":"injectables/StatusEffects.html","title":"injectable - StatusEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatusEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/status.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error$\n                            \n                            \n                                login$\n                            \n                            \n                                postLogin$\n                            \n                            \n                                routeNavigate$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/status.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(appActions.APP_ERROR)\n      .pipe(\n        map(action => action as appActions.Error),\n        mergeMap(action => {\n          const validationMessage = getValidationMessage(action as Error);\n          return [\n            new statusActions.SetAttemptingLogin(false),\n            new statusActions.SetValidationMessage(validationMessage)\n          ];\n        })\n      )\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.EMAIL_LOGIN,\n        userActions.SIGNUP,\n        userActions.GOOGLE_LOGIN,\n        userActions.FACEBOOK_LOGIN,\n        userActions.TWITTER_LOGIN)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(true)\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.AUTHENTICATED, userActions.NOT_AUTHENTICATED)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(false)\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routeNavigate$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routeNavigate$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(fromRouter.ROUTER_NAVIGATION)\n      .pipe(mergeMap(() => [\n        new statusActions.SetValidationMessage('')\n      ]))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/status.effects.ts:35\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\nimport * as fromRouter from '@ngrx/router-store';\n\nimport { map, mergeMap } from 'rxjs/operators';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as statusActions from '../actions/status.actions';\nimport * as userActions from '../actions/user.actions';\n\nimport { Error } from '../../../models';\n\nimport { getValidationMessage } from '../utils/validation.utils';\n\n@Injectable()\nexport class StatusEffects {\n\n  constructor(private actions$: Actions) { }\n\n  @Effect() error$ =\n    this.actions$\n      .ofType(appActions.APP_ERROR)\n      .pipe(\n        map(action => action as appActions.Error),\n        mergeMap(action => {\n          const validationMessage = getValidationMessage(action as Error);\n          return [\n            new statusActions.SetAttemptingLogin(false),\n            new statusActions.SetValidationMessage(validationMessage)\n          ];\n        })\n      );\n\n  @Effect() routeNavigate$ =\n    this.actions$\n      .ofType(fromRouter.ROUTER_NAVIGATION)\n      .pipe(mergeMap(() => [\n        new statusActions.SetValidationMessage('')\n      ]));\n\n  @Effect() login$ =\n    this.actions$\n      .ofType(userActions.EMAIL_LOGIN,\n        userActions.SIGNUP,\n        userActions.GOOGLE_LOGIN,\n        userActions.FACEBOOK_LOGIN,\n        userActions.TWITTER_LOGIN)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(true)\n      ]));\n\n  @Effect() postLogin$ =\n    this.actions$\n      .ofType(userActions.AUTHENTICATED, userActions.NOT_AUTHENTICATED)\n      .pipe(mergeMap(() => [\n        new statusActions.SetAttemptingLogin(false)\n      ]));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/completion/components/tabs/tabs.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-completion-tabs\n            \n\n            \n                styleUrls\n                tabs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setVisibleTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                completedCount\n                            \n                            \n                                playingCount\n                            \n                            \n                                visibleTab\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/completion/components/tabs/tabs.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        completedCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playingCount\n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        visibleTab\n                    \n                    \n                            \n                            Type :    TabType\n\n                            \n                        \n                            Default value : 'PLAYING'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setVisibleTab\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetVisibleTab(tab: TabType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/completion/components/tabs/tabs.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabType\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport * as actions from '../../actions/tab.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { TabType } from '../../models';\n\n@Component({\n  selector: 'app-completion-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TabsComponent implements OnInit {\n\n  @Input() visibleTab: TabType = 'PLAYING';\n  @Input() playingCount = 0;\n  @Input() completedCount = 0;\n  constructor(private store: Store) { }\n\n  ngOnInit() { }\n\n  setVisibleTab(tab: TabType) {\n    this.store.dispatch(new actions.SetVisibleTab(tab));\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ playingCount }} in Progress\n    \n  \n\n  \n    \n      {{ completedCount }} Completed\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ playingCount }} in Progress                  {{ completedCount }} Completed      '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeDateGraphComponent.html":{"url":"components/TimeDateGraphComponent.html","title":"component - TimeDateGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeDateGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-date-graph\n            \n\n            \n                styleUrls\n                time-date-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-date-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    BarGraphConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-date-graph/time-date-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { BarGraphConfig, GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-date-graph',\n  templateUrl: './time-date-graph.component.html',\n  styleUrls: ['./time-date-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeDateGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: BarGraphConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeDateGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeGameGraphComponent.html":{"url":"components/TimeGameGraphComponent.html","title":"component - TimeGameGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeGameGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-game-graph\n            \n\n            \n                styleUrls\n                time-game-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-game-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    BarGraphConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-game-graph/time-game-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { BarGraphConfig, GraphDataItem } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-game-graph',\n  templateUrl: './time-game-graph.component.html',\n  styleUrls: ['./time-game-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimeGameGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: BarGraphConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimeGameGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/time.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(timeInSeconds: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/time.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timeInSeconds\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { formatTime } from '../../shared/utils/date.utils';\n\n@Pipe({ name: 'time' })\nexport class TimePipe implements PipeTransform {\n\n  transform(timeInSeconds: number): string {\n    return formatTime(timeInSeconds);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimePlatformGraphComponent.html":{"url":"components/TimePlatformGraphComponent.html","title":"component - TimePlatformGraphComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimePlatformGraphComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-time-platform-graph\n            \n\n            \n                styleUrls\n                time-platform-graph.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./time-platform-graph.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type :    PieChartConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type :    GraphDataItem[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/dashboard/components/time-platform-graph/time-platform-graph.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { GraphDataItem, PieChartConfig } from '../../models';\n\n@Component({\n  selector: 'app-dashboard-time-platform-graph',\n  templateUrl: './time-platform-graph.component.html',\n  styleUrls: ['./time-platform-graph.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimePlatformGraphComponent implements OnInit {\n\n  @Input() data: GraphDataItem[];\n  @Input() config: PieChartConfig;\n  constructor() { }\n\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimePlatformGraphComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/components/timer/timer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker-timer\n            \n\n            \n                styleUrls\n                timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icons\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimer\n                            \n                            \n                                getCurrentTimeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDateTimePicker\n                            \n                            \n                                resetGame\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                            \n                                startTimer\n                            \n                            \n                                stopTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                elapsedTime\n                            \n                            \n                                game\n                            \n                            \n                                info\n                            \n                            \n                                platformsOptions\n                            \n                            \n                                trackedGames\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, userService: UserService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/components/timer/timer.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        elapsedTime\n                    \n                    \n                        \n                            Default value : '00:00:00'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        game\n                    \n                    \n                            \n                            Type :    string | NgSelectValue | null\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        info\n                    \n                    \n                            \n                            Type :    TimerInfo\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        platformsOptions\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        trackedGames\n                    \n                    \n                            \n                            Type :    string[]\n\n                            \n                        \n                            Default value : []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentTimeDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentTimeDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Date\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDateTimePicker\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenDateTimePicker(el: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(platformEl: HTMLSelectElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformEl\n                                                        \n                                                                    HTMLSelectElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(startTimeEl: HTMLInputElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startTimeEl\n                                                        \n                                                                    HTMLInputElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stopTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nstopTimer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    start: faPlayCircle,\n    stop: faStopCircle,\n    cancel: faBan\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/components/timer/timer.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { faBan, faPlayCircle, faStopCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Store } from '@ngrx/store';\n\nimport { UserService } from '../../../auth/services/user.service';\nimport { TimerService } from '../../services/timer.service';\n\nimport * as actions from '../../../../shared/actions/timer.actions';\n\nimport { State } from '../../reducers/root.reducer';\n\nimport { AddTimerInfo, NgSelectValue, TimerInfo } from '../../../../shared/models';\n\nimport { getValueFromNgSelect } from '../../../../shared/utils/ng-select.utils';\n\n@Component({\n  selector: 'app-tracker-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TimerComponent implements OnInit {\n\n  @Input() info: TimerInfo;\n  @Input() elapsedTime = '00:00:00';\n  @Input() platformsOptions: string[] = [];\n  @Input() trackedGames: string[] = [];\n  @Input() game: string | NgSelectValue | null = null;\n  userId = '';\n  icons = {\n    start: faPlayCircle,\n    stop: faStopCircle,\n    cancel: faBan\n  };\n  constructor(private store: Store, private userService: UserService, private timerService: TimerService) { }\n\n  ngOnInit() {\n    this.userService.getUser().subscribe(user => this.userId = user.uid);\n  }\n\n  startTimer() {\n    const now = this.timerService.getNowTime();\n    this.store.dispatch(new actions.SetStartTime(now));\n    this.timerService.setTimer(this.userId, {\n      ...this.info,\n      startTime: now\n    });\n  }\n\n  stopTimer() {\n    const info = {\n      userId: this.userId,\n      game: this.info.game,\n      platform: this.info.platform,\n      startTime: this.info.startTime,\n      endTime: this.timerService.getNowTime()\n    };\n    this.store.dispatch(new actions.SaveTimerInfo(info));\n    this.timerService.resetTimer(this.userId);\n  }\n\n  cancelTimer() {\n    this.store.dispatch(new actions.CancelTimer());\n    this.timerService.resetTimer(this.userId);\n  }\n\n  setGame() {\n    if (this.game) {\n      const game = getValueFromNgSelect(this.game);\n      this.store.dispatch(new actions.SetGame(game));\n      if (this.info.startTime !== 0) {\n        this.timerService.setGame(this.userId, game);\n      }\n    }\n  }\n\n  resetGame() {\n    this.store.dispatch(new actions.SetGame(''));\n    if (this.info.startTime !== 0) {\n      this.timerService.setGame(this.userId, '');\n    }\n  }\n\n  setPlatform(platformEl: HTMLSelectElement) {\n    const platform = platformEl.value;\n    this.store.dispatch(new actions.SetPlatform(platform));\n    if (this.info.startTime !== 0) {\n      this.timerService.setPlatform(this.userId, platform);\n    }\n  }\n\n  setStartTime(startTimeEl: HTMLInputElement) {\n    if (startTimeEl.value) {\n      const startTime = new Date(startTimeEl.value).getTime();\n      this.store.dispatch(new actions.SetStartTime(startTime));\n      if (this.info.startTime !== 0) {\n        this.timerService.setStartTime(this.userId, startTime);\n      }\n    }\n  }\n\n  openDateTimePicker(el: HTMLInputElement) {\n    if (this.info.startTime !== 0) {\n      el.click();\n    }\n  }\n\n  getCurrentTimeDate(): Date {\n    const now = this.timerService.getNowTime();\n    return new Date(now);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      Platform\n      {{ option }}\n    \n  \n\n  \n    {{ elapsedTime }}\n\n    \n      \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n\n    \n      \n        \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Platform      {{ option }}            {{ elapsedTime }}                                                                                                                  '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerEffects.html":{"url":"injectables/TimerEffects.html","title":"injectable - TimerEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/effects/timer.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimer$\n                            \n                            \n                                loadTimerInfo$\n                            \n                            \n                                saveTimerInfo$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, historyService: HistoryService, timerService: TimerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/effects/timer.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyService\n                                                  \n                                                        \n                                                                    HistoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timerService\n                                                  \n                                                        \n                                                                    TimerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimer$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cancelTimer$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.CANCEL_TIMER)\n      .pipe(map(() => new timerActions.ResetTimer()))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTimerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadTimerInfo$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.LOAD_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.LoadTimerInfo),\n        map(action => action.userId),\n        switchMap(userId => this.timerService.getTimerInfo(userId)\n          .pipe(\n            map(data => new timerActions.SetTimerInfo(data)),\n            catchError(err => of(new appActions.Error(timerActions.LOAD_TIMER_INFO, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveTimerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        saveTimerInfo$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfo),\n        map(action => action.info),\n        switchMap(addTimerInfo => this.historyService.saveTimerInfo(addTimerInfo)\n          .pipe(\n            mergeMap(item => [\n              new timerActions.SaveTimerInfoSucceeded(item),\n              new timerActions.ResetTimer()\n            ]),\n            catchError(err => of(new appActions.Error(timerActions.SAVE_TIMER_INFO, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/effects/timer.effects.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { HistoryService } from '../services/history.service';\nimport { TimerService } from '../services/timer.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as timerActions from '../../../shared/actions/timer.actions';\n\n@Injectable()\nexport class TimerEffects {\n\n  constructor(private actions$: Actions, private historyService: HistoryService, private timerService: TimerService) { }\n\n  @Effect() saveTimerInfo$ =\n    this.actions$\n      .ofType(timerActions.SAVE_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.SaveTimerInfo),\n        map(action => action.info),\n        switchMap(addTimerInfo => this.historyService.saveTimerInfo(addTimerInfo)\n          .pipe(\n            mergeMap(item => [\n              new timerActions.SaveTimerInfoSucceeded(item),\n              new timerActions.ResetTimer()\n            ]),\n            catchError(err => of(new appActions.Error(timerActions.SAVE_TIMER_INFO, err.message))))));\n\n  @Effect() cancelTimer$ =\n    this.actions$\n      .ofType(timerActions.CANCEL_TIMER)\n      .pipe(map(() => new timerActions.ResetTimer()));\n\n  @Effect() loadTimerInfo$ =\n    this.actions$\n      .ofType(timerActions.LOAD_TIMER_INFO)\n      .pipe(\n        map(action => action as timerActions.LoadTimerInfo),\n        map(action => action.userId),\n        switchMap(userId => this.timerService.getTimerInfo(userId)\n          .pipe(\n            map(data => new timerActions.SetTimerInfo(data)),\n            catchError(err => of(new appActions.Error(timerActions.LOAD_TIMER_INFO, err.message))))));\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimerInfo.html":{"url":"interfaces/TimerInfo.html","title":"interface - TimerInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimerInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/timer.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        platform\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimerInfo {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\nexport interface AddTimerInfo {\n  userId: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimerService.html":{"url":"injectables/TimerService.html","title":"injectable - TimerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/services/timer.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                timerCollection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNowTime\n                            \n                            \n                                getTimerInfo\n                            \n                            \n                                resetTimer\n                            \n                            \n                                setGame\n                            \n                            \n                                setPlatform\n                            \n                            \n                                setStartTime\n                            \n                            \n                                setTimer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/services/timer.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getNowTime\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetNowTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTimerInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTimerInfo(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetTimer(userId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGame\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGame(userId: string, game: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        game\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPlatform\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPlatform(userId: string, platform: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        platform\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetStartTime(userId: string, startTime: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        startTime\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTimer\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTimer(userId: string, info: TimerInfo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        info\n                                                        \n                                                                    TimerInfo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timerCollection\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerCollection:     AngularFirestoreCollection\n\n                    \n                \n                    \n                        \n                            Type :     AngularFirestoreCollection\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/services/timer.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\nimport { TimerInfo } from '../../../shared/models';\n\n@Injectable()\nexport class TimerService {\n\n  private timerCollection: AngularFirestoreCollection;\n  constructor(private afs: AngularFirestore) {\n    this.timerCollection = this.afs.collection('timer');\n  }\n\n  setTimer(userId: string, info: TimerInfo) {\n    this.timerCollection.doc(userId).set({\n      game: info.game,\n      platform: info.platform,\n      startTime: info.startTime\n    });\n  }\n\n  setGame(userId: string, game: string) {\n    this.timerCollection.doc(userId).set({ game }, { merge: true });\n  }\n\n  setPlatform(userId: string, platform: string) {\n    this.timerCollection.doc(userId).set({ platform }, { merge: true });\n  }\n\n  setStartTime(userId: string, startTime: number) {\n    this.timerCollection.doc(userId).set({ startTime }, { merge: true });\n  }\n\n  resetTimer(userId: string) {\n    this.timerCollection.doc(userId).set({\n      game: '',\n      platform: '',\n      startTime: 0\n    });\n  }\n\n  getTimerInfo(userId: string): Observable {\n    const timerDoc = this.timerCollection.doc(userId).valueChanges().pipe(first());\n    return timerDoc.pipe(map(timer => {\n      ...timer\n    }));\n  }\n\n  getNowTime(): number {\n    return new Date().getTime();\n  }\n}\n\nexport interface FirestoreTimerItem {\n  game: string;\n  platform: string;\n  startTime: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackerComponent.html":{"url":"components/TrackerComponent.html","title":"component - TrackerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrackerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/tracker/tracker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tracker\n            \n\n            \n                styleUrls\n                tracker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                elapsedTime$\n                            \n                            \n                                game$\n                            \n                            \n                                historyGroupings$\n                            \n                            \n                                platformsOptions$\n                            \n                            \n                                showLoadMoreButton$\n                            \n                            \n                                timerInfo$\n                            \n                            \n                                trackedGames$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(trackerStore: Store, sharedStore: Store, elapsedTimeService: ElapsedTimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/tracker/tracker.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackerStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedTimeService\n                                                  \n                                                        \n                                                                    ElapsedTimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elapsedTime$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elapsedTime$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            game$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        game$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            historyGroupings$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        historyGroupings$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            platformsOptions$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        platformsOptions$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLoadMoreButton$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showLoadMoreButton$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timerInfo$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timerInfo$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackedGames$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackedGames$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/tracker/tracker.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ElapsedTimeService } from '../../shared/services/elapsed-time.service';\n\nimport sharedSelectors, { State as SharedState } from '../../shared/reducers/root.reducer';\nimport trackerSelectors, { State as TrackerState } from './reducers/root.reducer';\n\nimport { HistoryGrouping, NgSelectValue, TimerInfo } from '../../shared/models';\n\nimport { hasMoreToDisplay, takeFrom } from './utils/display.utils';\n\n@Component({\n  selector: 'app-tracker',\n  templateUrl: './tracker.component.html',\n  styleUrls: ['./tracker.component.scss']\n})\nexport class TrackerComponent implements OnInit {\n\n  timerInfo$: Observable;\n  platformsOptions$: Observable;\n  game$: Observable;\n  elapsedTime$: Observable;\n\n  historyGroupings$: Observable;\n  showLoadMoreButton$: Observable;\n\n  trackedGames$: Observable;\n  constructor(private trackerStore: Store,\n    private sharedStore: Store,\n    private elapsedTimeService: ElapsedTimeService) { }\n\n  ngOnInit() {\n    this.timerInfo$ = this.sharedStore.select(sharedSelectors.timerInfo);\n    this.game$ = this.timerInfo$.pipe(map(info => info.game ? info.game : null));\n    this.elapsedTime$ = this.elapsedTimeService.getElapsedTime('00:00:00');\n\n    const historyGroupings = this.sharedStore.select(sharedSelectors.historyGroupingsByDate);\n    const entriesToShow = this.trackerStore.select(trackerSelectors.entriesToShow);\n    const filteredGroupings = takeFrom(historyGroupings, entriesToShow);\n\n    this.historyGroupings$ = filteredGroupings;\n    this.showLoadMoreButton$ = hasMoreToDisplay(historyGroupings, filteredGroupings);\n\n    this.trackedGames$ = this.sharedStore.select(sharedSelectors.historyTrackedGames);\n    this.platformsOptions$ = this.sharedStore.select(sharedSelectors.platformsOptions);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n  \n\n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AddPlayingComponent', 'selector': 'app-completion-add-playing'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthFormComponent', 'selector': 'app-auth-auth-form'},{'name': 'CompletedItemComponent', 'selector': 'app-completion-completed-item'},{'name': 'CompletionComponent', 'selector': 'app-completion'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'EditDisplayNameComponent', 'selector': 'app-profile-edit-display-name'},{'name': 'ForgotPasswordComponent', 'selector': 'app-auth-forgot-password'},{'name': 'GraphTooltipComponent', 'selector': 'app-dashboard-graph-tooltip'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderComponent', 'selector': 'app-dashboard-header'},{'name': 'HeaderComponent', 'selector': 'app-library-header'},{'name': 'HistoryComponent', 'selector': 'app-tracker-history'},{'name': 'HistoryEntryComponent', 'selector': 'app-tracker-history-entry'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LibraryComponent', 'selector': 'app-library'},{'name': 'LoadMoreComponent', 'selector': 'app-tracker-load-more'},{'name': 'LockedHistoryEntryComponent', 'selector': 'app-tracker-locked-history-entry'},{'name': 'LoginComponent', 'selector': 'app-auth-login'},{'name': 'NavComponent', 'selector': 'app-nav'},{'name': 'PlayingItemComponent', 'selector': 'app-completion-playing-item'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-auth-register'},{'name': 'SpinnerComponent', 'selector': 'app-shared-spinner'},{'name': 'TabsComponent', 'selector': 'app-completion-tabs'},{'name': 'TimeDateGraphComponent', 'selector': 'app-dashboard-time-date-graph'},{'name': 'TimeGameGraphComponent', 'selector': 'app-dashboard-time-game-graph'},{'name': 'TimePlatformGraphComponent', 'selector': 'app-dashboard-time-platform-graph'},{'name': 'TimerComponent', 'selector': 'app-tracker-timer'},{'name': 'TrackerComponent', 'selector': 'app-tracker'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackerModule.html":{"url":"modules/TrackerModule.html","title":"module - TrackerModule","body":"\n                   \n\n\n\n\n  Modules\n  TrackerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrackerModule\n\n\n\ncluster_TrackerModule_declarations\n\n\n\ncluster_TrackerModule_imports\n\n\n\ncluster_TrackerModule_providers\n\n\n\n\nHistoryComponent\n\nHistoryComponent\n\n\n\nTrackerModule\n\nTrackerModule\n\nTrackerModule -->\n\nHistoryComponent->TrackerModule\n\n\n\n\n\nHistoryEntryComponent\n\nHistoryEntryComponent\n\nTrackerModule -->\n\nHistoryEntryComponent->TrackerModule\n\n\n\n\n\nLoadMoreComponent\n\nLoadMoreComponent\n\nTrackerModule -->\n\nLoadMoreComponent->TrackerModule\n\n\n\n\n\nLockedHistoryEntryComponent\n\nLockedHistoryEntryComponent\n\nTrackerModule -->\n\nLockedHistoryEntryComponent->TrackerModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nTrackerModule -->\n\nTimerComponent->TrackerModule\n\n\n\n\n\nTrackerComponent\n\nTrackerComponent\n\nTrackerModule -->\n\nTrackerComponent->TrackerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTrackerModule -->\n\nSharedModule->TrackerModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nTrackerModule -->\n\nElapsedTimeService->TrackerModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nTrackerModule -->\n\nHistoryService->TrackerModule\n\n\n\n\n\nPlatformsService\n\nPlatformsService\n\nTrackerModule -->\n\nPlatformsService->TrackerModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nTrackerModule -->\n\nTimerService->TrackerModule\n\n\n\n\n\nUserService\n\nUserService\n\nTrackerModule -->\n\nUserService->TrackerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/tracker/tracker.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HistoryComponent\n                            \n                            \n                                HistoryEntryComponent\n                            \n                            \n                                LoadMoreComponent\n                            \n                            \n                                LockedHistoryEntryComponent\n                            \n                            \n                                TimerComponent\n                            \n                            \n                                TrackerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ElapsedTimeService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     PlatformsService\n                            \n                            \n                                     TimerService\n                            \n                            \n                                     UserService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { HistoryEntryComponent } from './components/history-entry/history-entry.component';\nimport { HistoryComponent } from './components/history/history.component';\nimport { LoadMoreComponent } from './components/load-more/load-more.component';\nimport {\n    LockedHistoryEntryComponent\n} from './components/locked-history-entry/locked-history-entry.component';\nimport { TimerComponent } from './components/timer/timer.component';\nimport { TrackerComponent } from './tracker.component';\n\nimport { HistoryEffects } from './effects/history.effects';\nimport { PlatformsEffects } from './effects/platforms.effects';\nimport { TimerEffects } from './effects/timer.effects';\n\nimport { ElapsedTimeService } from '../../shared/services/elapsed-time.service';\nimport { UserService } from '../auth/services/user.service';\nimport { HistoryService } from './services/history.service';\nimport { PlatformsService } from './services/platforms.service';\nimport { TimerService } from './services/timer.service';\n\nimport { reducers } from './reducers/root.reducer';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    NgSelectModule,\n    FormsModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    SharedModule,\n    StoreModule.forFeature('tracker', reducers),\n    EffectsModule.forFeature([\n      TimerEffects,\n      HistoryEffects,\n      PlatformsEffects\n    ]),\n  ],\n  declarations: [\n    TrackerComponent,\n    TimerComponent,\n    HistoryComponent,\n    HistoryEntryComponent,\n    LoadMoreComponent,\n    LockedHistoryEntryComponent\n  ],\n  providers: [\n    HistoryService,\n    PlatformsService,\n    UserService,\n    TimerService,\n    ElapsedTimeService\n  ]\n})\nexport class TrackerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackerState.html":{"url":"interfaces/TrackerState.html","title":"interface - TrackerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrackerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/tracker/reducers/root.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        display\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     fromDisplay.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDisplay.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as fromDisplay from './display.reducer';\n\nexport interface TrackerState {\n  display: fromDisplay.State;\n}\n\nexport interface State {\n  tracker: TrackerState;\n}\n\nexport const reducers: ActionReducerMap = {\n  display: fromDisplay.reducer\n};\n\nexport const _selectTrackerState = createFeatureSelector('tracker');\nexport const _selectDisplay = createSelector(_selectTrackerState, state => state.display);\n\nexport const _selectEntriesToShow = createSelector(_selectDisplay, display => display.entriesToShow);\n\nconst trackerSelectors = {\n  entriesToShow: _selectEntriesToShow\n};\n\nexport default trackerSelectors;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwitterLogin.html":{"url":"classes/TwitterLogin.html","title":"class - TwitterLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwitterLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/actions/user.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/actions/user.actions.ts:37\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : TWITTER_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/actions/user.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { User } from '../models';\n\nexport const GET_USER = '[Auth] Get User';\nexport class GetUser implements Action {\n  readonly type = GET_USER;\n  constructor() { }\n}\n\nexport const AUTHENTICATED = '[Auth] Authenticated';\nexport class Authenticated implements Action {\n  readonly type = AUTHENTICATED;\n  constructor(public user: User) { }\n}\n\nexport const NOT_AUTHENTICATED = '[Auth] Not Authenticated';\nexport class NotAuthenticated implements Action {\n  readonly type = NOT_AUTHENTICATED;\n  constructor() { }\n}\n\nexport const GOOGLE_LOGIN = '[Auth] Google Login Attempt';\nexport class GoogleLogin implements Action {\n  readonly type = GOOGLE_LOGIN;\n  constructor() { }\n}\n\nexport const FACEBOOK_LOGIN = '[Auth] Facebook Login Attempt';\nexport class FacebookLogin implements Action {\n  readonly type = FACEBOOK_LOGIN;\n  constructor() { }\n}\n\nexport const TWITTER_LOGIN = '[Auth] Twitter Login Attempt';\nexport class TwitterLogin implements Action {\n  readonly type = TWITTER_LOGIN;\n  constructor() { }\n}\n\nexport const LOGOUT = '[Auth] Logout';\nexport class Logout implements Action {\n  readonly type = LOGOUT;\n  constructor() { }\n}\n\nexport const SIGNUP = '[Auth] Signup';\nexport class SignUp implements Action {\n  readonly type = SIGNUP;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const EMAIL_LOGIN = '[Auth] Email Login Attempt';\nexport class EmailLogin implements Action {\n  readonly type = EMAIL_LOGIN;\n  constructor(public email: string, public password: string) { }\n}\n\nexport const RESET_PASSWORD = '[Auth] Reset Password';\nexport class ResetPassword implements Action {\n  readonly type = RESET_PASSWORD;\n  constructor(public email: string) { }\n}\n\nexport type All = GetUser |\n  Authenticated |\n  NotAuthenticated |\n  GoogleLogin |\n  FacebookLogin |\n  TwitterLogin |\n  Logout |\n  SignUp |\n  EmailLogin |\n  ResetPassword;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElapsedTime.html":{"url":"classes/UpdateElapsedTime.html","title":"class - UpdateElapsedTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElapsedTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemTimesPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemTimesPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemTimesPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_ELAPSED_TIME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateElapsedTimeSucceeded.html":{"url":"classes/UpdateElapsedTimeSucceeded.html","title":"class - UpdateElapsedTimeSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateElapsedTimeSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemTimesPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemTimesPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemTimesPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemTimesPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_ELAPSED_TIME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGame.html":{"url":"classes/UpdateGame.html","title":"class - UpdateGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemGamePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemGamePayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemGamePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_GAME\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameSucceeded.html":{"url":"classes/UpdateGameSucceeded.html","title":"class - UpdateGameSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemGamePayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemGamePayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemGamePayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemGamePayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_GAME_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemGamePayload.html":{"url":"interfaces/UpdateHistoryItemGamePayload.html","title":"interface - UpdateHistoryItemGamePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemGamePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        itemId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemPlatformPayload.html":{"url":"interfaces/UpdateHistoryItemPlatformPayload.html","title":"interface - UpdateHistoryItemPlatformPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemPlatformPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        itemId\n                                \n                                \n                                        platform\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                    \n                                \n                                \n                                    \n                                        platform:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateHistoryItemTimesPayload.html":{"url":"interfaces/UpdateHistoryItemTimesPayload.html","title":"interface - UpdateHistoryItemTimesPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateHistoryItemTimesPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/history.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endTime\n                                \n                                \n                                        itemId\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                    \n                                \n                                \n                                    \n                                        endTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemId\n                                    \n                                \n                                \n                                    \n                                        itemId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HistoryListItem {\n  id: string;\n  game: string;\n  platform: string;\n  startTime: number;\n  endTime: number;\n  dateRange: [Date, Date];\n  locked: boolean;\n}\n\nexport interface HistoryGrouping {\n  key: string;\n  totalTime: number;\n  historyItems: HistoryListItem[];\n}\n\nexport interface UpdateHistoryItemGamePayload {\n  itemId: string;\n  game: string;\n}\n\nexport interface UpdateHistoryItemPlatformPayload {\n  itemId: string;\n  platform: string;\n}\n\nexport interface UpdateHistoryItemTimesPayload {\n  itemId: string;\n  startTime: number;\n  endTime: number;\n}\n\nexport type UpdatePayload = UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlatform.html":{"url":"classes/UpdatePlatform.html","title":"class - UpdatePlatform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlatform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemPlatformPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemPlatformPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_PLATFORM\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePlatformSucceeded.html":{"url":"classes/UpdatePlatformSucceeded.html","title":"class - UpdatePlatformSucceeded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePlatformSucceeded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/history.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: UpdateHistoryItemPlatformPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/history.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    UpdateHistoryItemPlatformPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     UpdateHistoryItemPlatformPayload\n\n                    \n                \n                    \n                        \n                            Type :     UpdateHistoryItemPlatformPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : UPDATE_PLATFORM_SUCCEEDED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/actions/history.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { HistoryEntity } from '../reducers/history.reducer';\n\nimport {\n    UpdateHistoryItemGamePayload, UpdateHistoryItemPlatformPayload, UpdateHistoryItemTimesPayload\n} from '../models';\n\nexport const ADD_NEW_HISTORY_ITEM = '[History] Add New History Item';\nexport class AddNewHistoryItem implements Action {\n  readonly type = ADD_NEW_HISTORY_ITEM;\n  constructor(public item: HistoryEntity) { }\n}\n\nexport const LOAD_HISTORY_ITEMS = '[History] Load Items';\nexport class LoadHistoryItems implements Action {\n  readonly type = LOAD_HISTORY_ITEMS;\n  constructor(public userId: string) { }\n}\n\nexport const LOAD_HISTORY_ITEMS_SUCCEEDED = '[History] Load Items Succeeded';\nexport class LoadHistoryItemsSucceeded implements Action {\n  readonly type = LOAD_HISTORY_ITEMS_SUCCEEDED;\n  constructor(public items: HistoryEntity[]) { }\n}\n\nexport const REMOVE_HISTORY_ITEM = '[History] Remove Item';\nexport class RemoveHistoryItem implements Action {\n  readonly type = REMOVE_HISTORY_ITEM;\n  constructor(public userId: string, public itemId: string) { }\n}\n\nexport const REMOVE_HISTORY_ITEM_SUCCEEDED = '[History] Remove Item Succeeded';\nexport class RemoveHistoryItemSucceeded implements Action {\n  readonly type = REMOVE_HISTORY_ITEM_SUCCEEDED;\n  constructor(public itemId: string) { }\n}\n\nexport const UPDATE_GAME = '[History] Update Game';\nexport class UpdateGame implements Action {\n  readonly type = UPDATE_GAME;\n  constructor(public userId: string, public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_GAME_SUCCEEDED = '[History] Update Game Succeeded';\nexport class UpdateGameSucceeded implements Action {\n  readonly type = UPDATE_GAME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemGamePayload) { }\n}\n\nexport const UPDATE_PLATFORM = '[History] Update Platform';\nexport class UpdatePlatform implements Action {\n  readonly type = UPDATE_PLATFORM;\n  constructor(public userId: string, public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_PLATFORM_SUCCEEDED = '[History] Update Platform Succeeded';\nexport class UpdatePlatformSucceeded implements Action {\n  readonly type = UPDATE_PLATFORM_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemPlatformPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME = '[History] Update Elapsed Time';\nexport class UpdateElapsedTime implements Action {\n  readonly type = UPDATE_ELAPSED_TIME;\n  constructor(public userId: string, public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport const UPDATE_ELAPSED_TIME_SUCCEEDED = '[History] Update Elapsed Time Succeeded';\nexport class UpdateElapsedTimeSucceeded implements Action {\n  readonly type = UPDATE_ELAPSED_TIME_SUCCEEDED;\n  constructor(public payload: UpdateHistoryItemTimesPayload) { }\n}\n\nexport type All = AddNewHistoryItem |\n  LoadHistoryItems |\n  LoadHistoryItemsSucceeded |\n  RemoveHistoryItem |\n  RemoveHistoryItemSucceeded |\n  UpdateGame |\n  UpdateGameSucceeded |\n  UpdatePlatform |\n  UpdatePlatformSucceeded |\n  UpdateElapsedTime |\n  UpdateElapsedTimeSucceeded;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        photoURL\n                                \n                                \n                                        providerId\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoURL\n                                    \n                                \n                                \n                                    \n                                        photoURL:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerId\n                                    \n                                \n                                \n                                    \n                                        providerId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nexport interface UserInfo {\n  displayName: string;\n  email: string;\n  imgSrc: string;\n  provider: Provider;\n}\n\nexport type Provider = '' | 'PASSWORD' | 'GOOGLE' | 'FACEBOOK' | 'TWITTER';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/effects/user.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailLogin$\n                            \n                            \n                                facebookLogin$\n                            \n                            \n                                getUser$\n                            \n                            \n                                googleLogin$\n                            \n                            \n                                logout$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signUp$\n                            \n                            \n                                twitterLogin$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthenticatedAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authService: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/effects/user.effects.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAuthenticatedAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAuthenticatedAction(authData: AuthUser)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authData\n                                                        \n                                                                    AuthUser\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     userActions.Authenticated\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.EMAIL_LOGIN)\n      .pipe(\n        map(action => action as userActions.EmailLogin),\n        switchMap(action => this.authService.signInWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.EMAIL_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebookLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        facebookLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.FACEBOOK_LOGIN)\n      .pipe(\n        map(action => action as userActions.FacebookLogin),\n        switchMap(() => this.authService.signInWithFacebook()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.FACEBOOK_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getUser$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.GET_USER)\n      .pipe(\n        map(action => action as userActions.GetUser),\n        switchMap(() => this.authService.getAuthState()\n          .pipe(\n            map(authData => {\n              if (authData) {\n                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'app';\n                this.router.navigate([returnUrl]);\n                return this.getAuthenticatedAction(authData);\n              }\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.GET_USER, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            googleLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        googleLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.GOOGLE_LOGIN)\n      .pipe(\n        map(action => action as userActions.GoogleLogin),\n        switchMap(() => this.authService.signInWithGoogle()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.GOOGLE_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logout$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.LOGOUT)\n      .pipe(\n        map(action => action as userActions.Logout),\n        switchMap(() => this.authService.signOut()\n          .pipe(\n            map(() => {\n              this.router.navigate(['login']);\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.LOGOUT, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resetPassword$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.RESET_PASSWORD)\n      .pipe(\n        map(action => action as userActions.ResetPassword),\n        switchMap(action => this.authService.resetPassword(action.email)\n          .pipe(catchError(err => of(new appActions.Error(userActions.RESET_PASSWORD, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:102\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signUp$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        signUp$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.SIGNUP)\n      .pipe(\n        map(action => action as userActions.SignUp),\n        switchMap(action => this.authService.signUpWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.SIGNUP, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitterLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        twitterLogin$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.actions$\n      .ofType(userActions.TWITTER_LOGIN)\n      .pipe(\n        map(action => action as userActions.TwitterLogin),\n        switchMap(() => this.authService.signInWithTwitter()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.TWITTER_LOGIN, err.message))))))\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/auth/effects/user.effects.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { User as AuthUser } from '@firebase/auth-types';\nimport { Actions, Effect } from '@ngrx/effects';\n\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { AuthService } from '../services/auth.service';\n\nimport * as appActions from '../../../actions/app.actions';\nimport * as userActions from '../actions/user.actions';\n\nimport { User } from '../models';\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(private actions$: Actions, private authService: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  @Effect() getUser$ =\n    this.actions$\n      .ofType(userActions.GET_USER)\n      .pipe(\n        map(action => action as userActions.GetUser),\n        switchMap(() => this.authService.getAuthState()\n          .pipe(\n            map(authData => {\n              if (authData) {\n                const returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'app';\n                this.router.navigate([returnUrl]);\n                return this.getAuthenticatedAction(authData);\n              }\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.GET_USER, err.message))))));\n\n  @Effect() googleLogin$ =\n    this.actions$\n      .ofType(userActions.GOOGLE_LOGIN)\n      .pipe(\n        map(action => action as userActions.GoogleLogin),\n        switchMap(() => this.authService.signInWithGoogle()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.GOOGLE_LOGIN, err.message))))));\n\n  @Effect() facebookLogin$ =\n    this.actions$\n      .ofType(userActions.FACEBOOK_LOGIN)\n      .pipe(\n        map(action => action as userActions.FacebookLogin),\n        switchMap(() => this.authService.signInWithFacebook()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.FACEBOOK_LOGIN, err.message))))));\n\n  @Effect() twitterLogin$ =\n    this.actions$\n      .ofType(userActions.TWITTER_LOGIN)\n      .pipe(\n        map(action => action as userActions.TwitterLogin),\n        switchMap(() => this.authService.signInWithTwitter()\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.TWITTER_LOGIN, err.message))))));\n\n  @Effect() logout$ =\n    this.actions$\n      .ofType(userActions.LOGOUT)\n      .pipe(\n        map(action => action as userActions.Logout),\n        switchMap(() => this.authService.signOut()\n          .pipe(\n            map(() => {\n              this.router.navigate(['login']);\n              return new userActions.NotAuthenticated();\n            }),\n            catchError(err => of(new appActions.Error(userActions.LOGOUT, err.message))))));\n\n  @Effect() signUp$ =\n    this.actions$\n      .ofType(userActions.SIGNUP)\n      .pipe(\n        map(action => action as userActions.SignUp),\n        switchMap(action => this.authService.signUpWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.SIGNUP, err.message))))));\n\n  @Effect() emailLogin$ =\n    this.actions$\n      .ofType(userActions.EMAIL_LOGIN)\n      .pipe(\n        map(action => action as userActions.EmailLogin),\n        switchMap(action => this.authService.signInWithEmail(action.email, action.password)\n          .pipe(\n            map(() => new userActions.GetUser()),\n            catchError(err => of(new appActions.Error(userActions.EMAIL_LOGIN, err.message))))));\n\n  @Effect() resetPassword$ =\n    this.actions$\n      .ofType(userActions.RESET_PASSWORD)\n      .pipe(\n        map(action => action as userActions.ResetPassword),\n        switchMap(action => this.authService.resetPassword(action.email)\n          .pipe(catchError(err => of(new appActions.Error(userActions.RESET_PASSWORD, err.message))))));\n\n  private getAuthenticatedAction(authData: AuthUser): userActions.Authenticated {\n    const providerData = authData.providerData[0];\n    const user = {\n      uid: authData.uid,\n      displayName: authData.displayName,\n      email: authData.email,\n      photoURL: authData.photoURL,\n      providerId: providerData ? providerData.providerId : ''\n    };\n    return new userActions.Authenticated(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/models/user.models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        displayName\n                                \n                                \n                                        email\n                                \n                                \n                                        imgSrc\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                    \n                                \n                                \n                                    \n                                        displayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                    \n                                \n                                \n                                    \n                                        imgSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:     Provider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Provider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  uid: string;\n  displayName: string;\n  email: string;\n  photoURL: string;\n  providerId: string;\n}\n\nexport interface UserInfo {\n  displayName: string;\n  email: string;\n  imgSrc: string;\n  provider: Provider;\n}\n\nexport type Provider = '' | 'PASSWORD' | 'GOOGLE' | 'FACEBOOK' | 'TWITTER';\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/auth/services/user.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserInfo\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, profileStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/services/user.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileStore\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/features/auth/services/user.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\n\nimport { combineLatest, Observable } from 'rxjs';\n\nimport * as userActions from '../actions/user.actions';\n\nimport profileComponentSelectors, {\n    State as ProfileState\n} from '../../profile/reducers/root.reducer';\nimport authComponentSelectors, { State } from '../reducers/root.reducer';\n\nimport { Profile } from '../../profile/models';\nimport { User, UserInfo } from '../models';\n\nimport {\n    getDisplayName, getEmail, getImgSrc, getProviderFrom\n} from '../../profile/utils/userinfo.utils';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private store: Store, private profileStore: Store) { }\n\n  getUser(): Observable {\n    return this.store.select(authComponentSelectors.user);\n  }\n\n  getUserInfo(): Observable {\n    const user$ = this.getUser();\n    const profile$ = this.profileStore.select(profileComponentSelectors.info);\n\n    return combineLatest(user$, profile$, (user: User, profile: Profile) => {\n      return {\n        displayName: getDisplayName(user, profile),\n        email: getEmail(user),\n        imgSrc: getImgSrc(user),\n        provider: getProviderFrom(user.providerId)\n      };\n    });\n  }\n\n  logout(): void {\n    this.store.dispatch(new userActions.Logout());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.1.7\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : 6.1.7\n        \n            @angular/compiler : 6.1.7\n        \n            @angular/core : 6.1.7\n        \n            @angular/forms : 6.1.7\n        \n            @angular/http : 6.1.7\n        \n            @angular/platform-browser : 6.1.7\n        \n            @angular/platform-browser-dynamic : 6.1.7\n        \n            @angular/router : 6.1.7\n        \n            @fortawesome/angular-fontawesome : ^0.1.1\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.4\n        \n            @fortawesome/free-brands-svg-icons : ^5.3.1\n        \n            @fortawesome/free-regular-svg-icons : ^5.3.1\n        \n            @fortawesome/free-solid-svg-icons : ^5.3.1\n        \n            @ng-select/ng-select : ^2.7.1\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/entity : ^6.1.0\n        \n            @ngrx/router-store : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            @ngrx/store-devtools : ^6.1.0\n        \n            @swimlane/ngx-charts : ^9.0.0\n        \n            @swimlane/ngx-datatable : ^13.1.0\n        \n            angularfire2 : ^5.0.0-rc.12\n        \n            angulartics2 : ^6.3.0\n        \n            core-js : ^2.5.7\n        \n            date-fns : ^1.29.0\n        \n            firebase : ^5.4.2\n        \n            insert-analytics-elements : ^0.0.4\n        \n            ng-pick-datetime : ^6.0.16\n        \n            ng2-adsense : ^5.3.2\n        \n            rxjs : ^6.3.2\n        \n            uuid : ^3.3.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clearState   (src/.../clear.meta.reducer.ts)\n                        \n                        \n                            reducer   (src/.../display.reducer.ts)\n                        \n                        \n                            reducer   (src/.../history.reducer.ts)\n                        \n                        \n                            reducer   (src/.../platforms.reducer.ts)\n                        \n                        \n                            reducer   (src/.../progress.reducer.ts)\n                        \n                        \n                            reducer   (src/.../timer.reducer.ts)\n                        \n                        \n                            reducer   (src/.../status.reducer.ts)\n                        \n                        \n                            reducer   (src/.../error.reducer.ts)\n                        \n                        \n                            reducer   (src/.../date-range.reducer.ts)\n                        \n                        \n                            reducer   (src/.../add-playing.reducer.ts)\n                        \n                        \n                            reducer   (src/.../mark-complete.reducer.ts)\n                        \n                        \n                            reducer   (src/.../tab.reducer.ts)\n                        \n                        \n                            reducer   (src/.../profile.reducer.ts)\n                        \n                        \n                            reducer   (src/.../user.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/reducers/clear.meta.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clearState\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearState(reducer: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/tracker/reducers/display.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/history.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/platforms.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/progress.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/shared/reducers/timer.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/auth/reducers/status.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/reducers/error.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/dashboard/reducers/date-range.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/add-playing.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/mark-complete.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/completion/reducers/tab.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/profile/reducers/profile.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/features/auth/reducers/user.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            reducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nreducer(state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTrackMyPlaytime\n\n\n\nA time tracker app specific to video games.\nTechnologies\n\nAngular (via angular-cli)\nRxJS\nRedux (via NGRX)\nFirebase (via AngularFire2)\nTravisCI\nFontAwesome (via angular-fontawesome)\nGoogle Analytics (via Angulartics2)\nD3 (via ngx-charts)\nAdsense via (ng2-adsense)\n\nDevelopment\n\nStart the dev server: ng serve\nRun karma tests: ng test\nRun karma tests in headless mode: npm run test:mocha\nRun karma tests in headless mode the fun way: npm run test:nyan\n\nContributors\n\nssnjrthegr8 - Made the awesome logo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 Mike Zrimsek\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompletionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompletionModule\n\n\n\ncluster_CompletionModule_declarations\n\n\n\ncluster_CompletionModule_providers\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_LibraryModule\n\n\n\ncluster_LibraryModule_declarations\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_TrackerModule\n\n\n\ncluster_TrackerModule_declarations\n\n\n\ncluster_TrackerModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nNavComponent\n\nNavComponent\n\nAppModule -->\n\nNavComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n!environment\n\n!environment\n\nAppModule -->\n\n!environment->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompletionModule\n\nCompletionModule\n\nAppModule -->\n\nCompletionModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nLibraryModule\n\nLibraryModule\n\nAppModule -->\n\nLibraryModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\nCompletionModule -->\n\nSharedModule->CompletionModule\n\n\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\nLibraryModule -->\n\nSharedModule->LibraryModule\n\n\n\n\n\nTrackerModule\n\nTrackerModule\n\nTrackerModule -->\n\nSharedModule->TrackerModule\n\n\n\n\n\nElapsedTimePipe \n\nElapsedTimePipe \n\nElapsedTimePipe  -->\n\nSharedModule->ElapsedTimePipe \n\n\n\n\n\nPluralizePipe \n\nPluralizePipe \n\nPluralizePipe  -->\n\nSharedModule->PluralizePipe \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nTimePipe \n\nTimePipe \n\nTimePipe  -->\n\nSharedModule->TimePipe \n\n\n\nAppModule -->\n\nTrackerModule->AppModule\n\n\n\n\n\nElapsedTimeService\n\nElapsedTimeService\n\nAppModule -->\n\nElapsedTimeService->AppModule\n\n\n\nTrackerModule -->\n\nElapsedTimeService->TrackerModule\n\n\n\n\n\nAuthFormComponent\n\nAuthFormComponent\n\nAuthModule -->\n\nAuthFormComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAddPlayingComponent\n\nAddPlayingComponent\n\nCompletionModule -->\n\nAddPlayingComponent->CompletionModule\n\n\n\n\n\nCompletedItemComponent\n\nCompletedItemComponent\n\nCompletionModule -->\n\nCompletedItemComponent->CompletionModule\n\n\n\n\n\nCompletionComponent\n\nCompletionComponent\n\nCompletionModule -->\n\nCompletionComponent->CompletionModule\n\n\n\n\n\nPlayingItemComponent\n\nPlayingItemComponent\n\nCompletionModule -->\n\nPlayingItemComponent->CompletionModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nCompletionModule -->\n\nTabsComponent->CompletionModule\n\n\n\n\n\nProgressService\n\nProgressService\n\nCompletionModule -->\n\nProgressService->CompletionModule\n\n\n\n\n\nUserService\n\nUserService\n\nCompletionModule -->\n\nUserService->CompletionModule\n\n\n\nTrackerModule -->\n\nUserService->TrackerModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nGraphTooltipComponent\n\nGraphTooltipComponent\n\nDashboardModule -->\n\nGraphTooltipComponent->DashboardModule\n\n\n\n\n\nTimeDateGraphComponent\n\nTimeDateGraphComponent\n\nDashboardModule -->\n\nTimeDateGraphComponent->DashboardModule\n\n\n\n\n\nTimeGameGraphComponent\n\nTimeGameGraphComponent\n\nDashboardModule -->\n\nTimeGameGraphComponent->DashboardModule\n\n\n\n\n\nTimePlatformGraphComponent\n\nTimePlatformGraphComponent\n\nDashboardModule -->\n\nTimePlatformGraphComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nLibraryComponent\n\nLibraryComponent\n\nLibraryModule -->\n\nLibraryComponent->LibraryModule\n\n\n\n\n\nEditDisplayNameComponent\n\nEditDisplayNameComponent\n\nProfileModule -->\n\nEditDisplayNameComponent->ProfileModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nProfileModule -->\n\nProfileComponent->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nElapsedTimePipe\n\nElapsedTimePipe\n\nSharedModule -->\n\nElapsedTimePipe->SharedModule\n\n\n\n\n\nPluralizePipe\n\nPluralizePipe\n\nSharedModule -->\n\nPluralizePipe->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nTimePipe\n\nTimePipe\n\nSharedModule -->\n\nTimePipe->SharedModule\n\n\n\n\n\nHistoryComponent\n\nHistoryComponent\n\nTrackerModule -->\n\nHistoryComponent->TrackerModule\n\n\n\n\n\nHistoryEntryComponent\n\nHistoryEntryComponent\n\nTrackerModule -->\n\nHistoryEntryComponent->TrackerModule\n\n\n\n\n\nLoadMoreComponent\n\nLoadMoreComponent\n\nTrackerModule -->\n\nLoadMoreComponent->TrackerModule\n\n\n\n\n\nLockedHistoryEntryComponent\n\nLockedHistoryEntryComponent\n\nTrackerModule -->\n\nLockedHistoryEntryComponent->TrackerModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nTrackerModule -->\n\nTimerComponent->TrackerModule\n\n\n\n\n\nTrackerComponent\n\nTrackerComponent\n\nTrackerModule -->\n\nTrackerComponent->TrackerModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nTrackerModule -->\n\nHistoryService->TrackerModule\n\n\n\n\n\nPlatformsService\n\nPlatformsService\n\nTrackerModule -->\n\nPlatformsService->TrackerModule\n\n\n\n\n\nTimerService\n\nTimerService\n\nTrackerModule -->\n\nTimerService->TrackerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    64 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    68 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            All   (src/.../app.actions.ts)\n                        \n                        \n                            All   (src/.../display.actions.ts)\n                        \n                        \n                            All   (src/.../platforms.actions.ts)\n                        \n                        \n                            All   (src/.../progress.actions.ts)\n                        \n                        \n                            All   (src/.../timer.actions.ts)\n                        \n                        \n                            All   (src/.../profile.actions.ts)\n                        \n                        \n                            All   (src/.../tab.actions.ts)\n                        \n                        \n                            All   (src/.../mark-complete.actions.ts)\n                        \n                        \n                            All   (src/.../add-playing.actions.ts)\n                        \n                        \n                            All   (src/.../status.actions.ts)\n                        \n                        \n                            All   (src/.../user.actions.ts)\n                        \n                        \n                            All   (src/.../history.actions.ts)\n                        \n                        \n                            All   (src/.../date-range.actions.ts)\n                        \n                        \n                            ColorSetName   (src/.../colorScheme.utils.ts)\n                        \n                        \n                            DateRangeType   (src/.../date-range.models.ts)\n                        \n                        \n                            GraphDataModifier   (src/.../graph-data.utils.ts)\n                        \n                        \n                            HistoryListItemKeyFunction   (src/.../history.utils.ts)\n                        \n                        \n                            HistoryListItemMap   (src/.../history.utils.ts)\n                        \n                        \n                            HistoryListItemsMap   (src/.../history.utils.ts)\n                        \n                        \n                            Provider   (src/.../user.models.ts)\n                        \n                        \n                            TabType   (src/.../tabs.models.ts)\n                        \n                        \n                            UpdatePayload   (src/.../history.models.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/actions/app.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     Error\n\n                    \n                \n            \n        \n\n    src/app/features/tracker/actions/display.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     IncrementDaysToShow\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/platforms.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     LoadOptions | LoadOptionsSucceeded\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/progress.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     AddNewProgressItem | LoadProgressItems | LoadProgressItemsSucceeded | RemoveProgressItem | RemoveProgressItemSucceeded | MarkComplete | MarkCompleteSucceeded\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/timer.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     ResetTimer | SetGame | SetPlatform | SetStartTime | SaveTimerInfo | SaveTimerInfoSucceeded | CancelTimer | LoadTimerInfo | SetTimerInfo\n\n                    \n                \n            \n        \n\n    src/app/features/profile/actions/profile.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     LoadProfile | LoadProfileSucceeded | SetProfileDisplayName | SetProfileDisplayNameSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/tab.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetVisibleTab\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/mark-complete.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetShowExtra | SetEndTime | Remove | LoadItems | AddNewItem\n\n                    \n                \n            \n        \n\n    src/app/features/completion/actions/add-playing.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetGame | SetPlatform | SetStartTime | Reset | Save | SaveSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/auth/actions/status.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetAttemptingLogin | SetValidationMessage\n\n                    \n                \n            \n        \n\n    src/app/features/auth/actions/user.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     GetUser | Authenticated | NotAuthenticated | GoogleLogin | FacebookLogin | TwitterLogin | Logout | SignUp | EmailLogin | ResetPassword\n\n                    \n                \n            \n        \n\n    src/app/shared/actions/history.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     AddNewHistoryItem | LoadHistoryItems | LoadHistoryItemsSucceeded | RemoveHistoryItem | RemoveHistoryItemSucceeded | UpdateGame | UpdateGameSucceeded | UpdatePlatform | UpdatePlatformSucceeded | UpdateElapsedTime | UpdateElapsedTimeSucceeded\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/actions/date-range.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        All\n                    \n                \n                \n                    \n                        All:     SetThisWeek | SetLastWeek | SetThisMonth | SetLastMonth\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/utils/colorScheme.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        ColorSetName\n                    \n                \n                \n                    \n                        ColorSetName:     \"vivid\" | \"natural\" | \"cool\" | \"fire\" | \"solar\" | \"air\" | \"aqua\" | \"flame\" | \"ocean\" | \"forest\" | \"horizon\" | \"neons\" | \"picnic\" | \"night\" | \"nightLights\" | \"default\"\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/models/date-range.models.ts\n    \n        \n            \n                \n                    \n                        \n                        DateRangeType\n                    \n                \n                \n                    \n                        DateRangeType:     \"THIS_WEEK\" | \"LAST_WEEK\" | \"THIS_MONTH\" | \"LAST_MONTH\"\n\n                    \n                \n            \n        \n\n    src/app/features/dashboard/utils/graph-data.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        GraphDataModifier\n                    \n                \n                \n                    \n                        GraphDataModifier:     function\n\n                    \n                \n            \n        \n\n    src/app/shared/utils/history.utils.ts\n    \n        \n            \n                \n                    \n                        \n                        HistoryListItemKeyFunction\n                    \n                \n                \n                    \n                        HistoryListItemKeyFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HistoryListItemMap\n                    \n                \n                \n                    \n                        HistoryListItemMap:     Map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HistoryListItemsMap\n                    \n                \n                \n                    \n                        HistoryListItemsMap:     Map\n\n                    \n                \n            \n        \n\n    src/app/features/auth/models/user.models.ts\n    \n        \n            \n                \n                    \n                        \n                        Provider\n                    \n                \n                \n                    \n                        Provider:     \"\" | \"PASSWORD\" | \"GOOGLE\" | \"FACEBOOK\" | \"TWITTER\"\n\n                    \n                \n            \n        \n\n    src/app/features/completion/models/tabs.models.ts\n    \n        \n            \n                \n                    \n                        \n                        TabType\n                    \n                \n                \n                    \n                        TabType:     \"PLAYING\" | \"COMPLETED\"\n\n                    \n                \n            \n        \n\n    src/app/shared/models/history.models.ts\n    \n        \n            \n                \n                    \n                        \n                        UpdatePayload\n                    \n                \n                \n                    \n                        UpdatePayload:     UpdateHistoryItemGamePayload | UpdateHistoryItemPlatformPayload | UpdateHistoryItemTimesPayload\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
